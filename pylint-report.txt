************* Module manage
manage.py:1: [C0111(missing-docstring), ] Missing module docstring
manage.py:8: [E0401(import-error), ] Unable to import 'django.core.management'
************* Module settings.tests
settings/tests.py:2: [W0511(fixme), ] TODO: until settings structure refactor, implementing a `local` settings required for all environments,
settings/tests.py:42: [W0511(fixme), ] TODO: for a more realistic tests this should be True,
settings/tests.py:2: [C0301(line-too-long), ] Line too long (105/100)
settings/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
settings/tests.py:5: [W0401(wildcard-import), ] Wildcard import dev
settings/tests.py:7: [W0401(wildcard-import), ] Wildcard import prod
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import MEDIA_ROOT from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import queue_name from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SECRET_KEY from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import ENV_KEY from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_SECURE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_NAME from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_SECURE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_NAME from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import TIME_ZONE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import ROOT_URLCONF from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import TEMPLATE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import FIRE_EMAIL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_APPS_SETTINGS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import INSTALLED_APPS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import AUTH_USER_MODEL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import MIDDLEWARE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import REQUEST_TRACKING from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import FILE_UPLOAD_HANDLERS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_INITIAL_APP from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_DYNAMICREPORTS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_PRO from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import BLOCKED_JOB_MILESTONE_ID from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import DEBUG from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import ALLOWED_HOSTS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import WSGI_APPLICATION from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import DATABASE_ROUTERS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import AUTHENTICATION_BACKENDS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import AUTH_PASSWORD_VALIDATORS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import LANGUAGE_CODE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import USE_I18N from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import USE_L10N from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import USE_TZ from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import DATE_FORMAT from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import DATE_TIME_FORMAT from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import STATIC_URL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import STATIC_ROOT from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import STATICFILES_DIRS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import MEDIA_URL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import MAX_UPLOAD_SIZE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import MAX_DOWNLOAD_FILE_SIZE from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import DATA_UPLOAD_MAX_NUMBER_FIELDS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import TEMPLATES from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import LOGGING from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import ADMINS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import MANAGERS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_BACKEND from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import DEFAULT_FROM_EMAIL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SERVER_EMAIL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_USER from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_PASSWORD from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ORIGIN_ALLOW_ALL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_URLS_REGEX from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_HEADERS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_CREDENTIALS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import BASE_API_VERSION from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_SERIALIZERS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import OLD_PASSWORD_FIELD_ENABLED from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import REST_SESSION_LOGIN from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_CREATOR from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_MODEL from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import EXPIRING_TOKEN_LIFESPAN from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SWAGGER_SETTINGS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import RQ from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import RQ_EXCEPTION_HANDLERS from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_SYSTEM_USER from wildcard import
settings/tests.py:7: [W0614(unused-wildcard-import), ] Unused import timedelta from wildcard import
************* Module settings.common
settings/common.py:134: [W0511(fixme), ] TODO: check if disabling timezones awareness as we do not need it for now, drf is not aware itself
settings/common.py:140: [W0511(fixme), ] TODO: find best solution for date formatting.
settings/common.py:422: [W0511(fixme), ] TODO: check if convenient:
settings/common.py:44: [C0301(line-too-long), ] Line too long (111/100)
settings/common.py:173: [C0301(line-too-long), ] Line too long (111/100)
settings/common.py:211: [C0330(bad-continuation), ] Wrong hanging indentation (remove 1 space).
             '()': 'django.utils.log.RequireDebugFalse',
            |^
settings/common.py:361: [C0301(line-too-long), ] Line too long (126/100)
settings/common.py:365: [C0301(line-too-long), ] Line too long (113/100)
settings/common.py:423: [C0301(line-too-long), ] Line too long (113/100)
settings/common.py:430: [C0301(line-too-long), ] Line too long (106/100)
************* Module settings.dev_template
settings/dev_template.py:7: [W0401(wildcard-import), ] Wildcard import prod
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DEBUG from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_SECURE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_SECURE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import MEDIA_ROOT from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DATABASES from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import AUTH_PASSWORD_VALIDATORS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import ADMINS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import MANAGERS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REDIS_PASSWORD from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import queue_name from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import FIRE_EMAIL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_APPS_SETTINGS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SECRET_KEY from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import ENV_KEY from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_NAME from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_NAME from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import TIME_ZONE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import ROOT_URLCONF from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import TEMPLATE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import AUTH_USER_MODEL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REQUEST_TRACKING from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import FILE_UPLOAD_HANDLERS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_INITIAL_APP from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_DYNAMICREPORTS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_PRO from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import BLOCKED_JOB_MILESTONE_ID from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import ALLOWED_HOSTS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import WSGI_APPLICATION from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DATABASE_ROUTERS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import AUTHENTICATION_BACKENDS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import LANGUAGE_CODE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import USE_I18N from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import USE_L10N from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import USE_TZ from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DATE_FORMAT from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DATE_TIME_FORMAT from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import STATIC_URL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import STATIC_ROOT from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import STATICFILES_DIRS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import MEDIA_URL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import MAX_UPLOAD_SIZE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import MAX_DOWNLOAD_FILE_SIZE from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DATA_UPLOAD_MAX_NUMBER_FIELDS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_BACKEND from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import DEFAULT_FROM_EMAIL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SERVER_EMAIL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_USER from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_PASSWORD from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ORIGIN_ALLOW_ALL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_URLS_REGEX from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_HEADERS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_CREDENTIALS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REST_FRAMEWORK from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import BASE_API_VERSION from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_SERIALIZERS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import OLD_PASSWORD_FIELD_ENABLED from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REST_SESSION_LOGIN from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_CREATOR from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_MODEL from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import EXPIRING_TOKEN_LIFESPAN from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SWAGGER_SETTINGS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import RQ from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import RQ_EXCEPTION_HANDLERS from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_SYSTEM_USER from wildcard import
settings/dev_template.py:7: [W0614(unused-wildcard-import), ] Unused import timedelta from wildcard import
************* Module settings.prod
settings/prod.py:168: [W0511(fixme), ] TODO: Temporary for O&A which uses a single user and performs a login for every call.
settings/prod.py:182: [W0511(fixme), ] TODO: move this under SOL_APPS_SETTINGS['projects']
settings/prod.py:66: [C0301(line-too-long), ] Line too long (116/100)
settings/prod.py:72: [C0301(line-too-long), ] Line too long (107/100)
settings/prod.py:199: [C0301(line-too-long), ] Line too long (107/100)
settings/prod.py:6: [W0401(wildcard-import), ] Wildcard import common
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import SECRET_KEY from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_NAME from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_NAME from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import TIME_ZONE from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import FIRE_EMAIL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import AUTH_USER_MODEL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DATABASES from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import CACHES from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import SOL_INITIAL_APP from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DEBUG from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import ALLOWED_HOSTS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import WSGI_APPLICATION from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DATABASE_ROUTERS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import AUTHENTICATION_BACKENDS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import AUTH_PASSWORD_VALIDATORS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import LANGUAGE_CODE from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import USE_I18N from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import USE_L10N from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import USE_TZ from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DATE_FORMAT from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DATE_TIME_FORMAT from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import STATIC_URL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import STATIC_ROOT from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import MEDIA_URL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import MAX_UPLOAD_SIZE from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import MAX_DOWNLOAD_FILE_SIZE from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DATA_UPLOAD_MAX_NUMBER_FIELDS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import ADMINS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import MANAGERS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import EMAIL_BACKEND from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import DEFAULT_FROM_EMAIL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import SERVER_EMAIL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_USER from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_PASSWORD from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import CORS_ORIGIN_ALLOW_ALL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import CORS_URLS_REGEX from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_HEADERS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_CREDENTIALS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import BASE_API_VERSION from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_SERIALIZERS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import OLD_PASSWORD_FIELD_ENABLED from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import REST_SESSION_LOGIN from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_CREATOR from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_MODEL from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import EXPIRING_TOKEN_LIFESPAN from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import SWAGGER_SETTINGS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import RQ from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import RQ_EXCEPTION_HANDLERS from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import SOL_SYSTEM_USER from wildcard import
settings/prod.py:6: [W0614(unused-wildcard-import), ] Unused import timedelta from wildcard import
************* Module settings.__init__
settings/__init__.py:7: [C0301(line-too-long), ] Line too long (105/100)
************* Module settings.dev_template_noredis
settings/dev_template_noredis.py:128: [C0301(line-too-long), ] Line too long (109/100)
settings/dev_template_noredis.py:7: [W0401(wildcard-import), ] Wildcard import prod
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DEBUG from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_SECURE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_SECURE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import MEDIA_ROOT from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DATABASES from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import AUTH_PASSWORD_VALIDATORS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import ADMINS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import MANAGERS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import FIRE_EMAIL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_APPS_SETTINGS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import RQ_QUEUES from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CACHES from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import AUTHENTICATION_BACKENDS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SECRET_KEY from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import ENV_KEY from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_NAME from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_NAME from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import TIME_ZONE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import ROOT_URLCONF from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import TEMPLATE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import AUTH_USER_MODEL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REQUEST_TRACKING from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REDIS_HOST from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REDIS_PORT from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REDIS_PASSWORD from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import queue_name from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import queue_config from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import FILE_UPLOAD_HANDLERS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_INITIAL_APP from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_DYNAMICREPORTS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_PRO from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import BLOCKED_JOB_MILESTONE_ID from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import ALLOWED_HOSTS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import WSGI_APPLICATION from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DATABASE_ROUTERS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import LANGUAGE_CODE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import USE_I18N from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import USE_L10N from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import USE_TZ from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DATE_FORMAT from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DATE_TIME_FORMAT from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import STATIC_URL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import STATIC_ROOT from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import STATICFILES_DIRS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import MEDIA_URL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import MAX_UPLOAD_SIZE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import MAX_DOWNLOAD_FILE_SIZE from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DATA_UPLOAD_MAX_NUMBER_FIELDS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_BACKEND from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import DEFAULT_FROM_EMAIL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SERVER_EMAIL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_USER from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_PASSWORD from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ORIGIN_ALLOW_ALL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_URLS_REGEX from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_HEADERS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_CREDENTIALS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REST_FRAMEWORK from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import BASE_API_VERSION from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_SERIALIZERS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import OLD_PASSWORD_FIELD_ENABLED from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REST_SESSION_LOGIN from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_CREATOR from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_MODEL from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import EXPIRING_TOKEN_LIFESPAN from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SWAGGER_SETTINGS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import RQ from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import RQ_EXCEPTION_HANDLERS from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import SOL_SYSTEM_USER from wildcard import
settings/dev_template_noredis.py:7: [W0614(unused-wildcard-import), ] Unused import timedelta from wildcard import
************* Module orange_sharing.tests
orange_sharing/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_sharing/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_sharing.urls
orange_sharing/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_sharing/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_sharing/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_sharing/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_sharing/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_sharing.apps
orange_sharing/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_sharing/apps.py:6: [C0111(missing-docstring), OrangeSharingConfig] Missing class docstring
orange_sharing/apps.py:6: [R0903(too-few-public-methods), OrangeSharingConfig] Too few public methods (0/2)
************* Module orange_sharing.views
orange_sharing/views.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_sharing/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_sharing/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_sharing.serializers
orange_sharing/serializers.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_sharing/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_sharing
orange_sharing/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_sharing.models_api
orange_sharing/models_api.py:143: [C0305(trailing-newlines), ] Trailing newlines
orange_sharing/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_sharing/models_api.py:7: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_sharing.models
orange_sharing/models.py:16: [C0301(line-too-long), ] Line too long (108/100)
orange_sharing/models.py:19: [C0301(line-too-long), ] Line too long (112/100)
orange_sharing/models.py:21: [C0301(line-too-long), ] Line too long (107/100)
orange_sharing/models.py:24: [C0301(line-too-long), ] Line too long (119/100)
orange_sharing/models.py:27: [C0301(line-too-long), ] Line too long (120/100)
orange_sharing/models.py:29: [C0301(line-too-long), ] Line too long (104/100)
orange_sharing/models.py:53: [C0301(line-too-long), ] Line too long (101/100)
orange_sharing/models.py:116: [C0301(line-too-long), ] Line too long (103/100)
orange_sharing/models.py:131: [C0301(line-too-long), ] Line too long (103/100)
orange_sharing/models.py:133: [C0301(line-too-long), ] Line too long (102/100)
orange_sharing/models.py:150: [C0301(line-too-long), ] Line too long (113/100)
orange_sharing/models.py:190: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/models.py:337: [C0301(line-too-long), ] Line too long (117/100)
orange_sharing/models.py:358: [C0301(line-too-long), ] Line too long (117/100)
orange_sharing/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange_sharing/models.py:4: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_sharing/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_sharing/models.py:10: [C0111(missing-docstring), Task] Missing class docstring
orange_sharing/models.py:36: [C0111(missing-docstring), Task.from_string] Missing method docstring
orange_sharing/models.py:36: [W0613(unused-argument), Task.from_string] Unused argument 'kwargs'
orange_sharing/models.py:40: [C0111(missing-docstring), Task.get_external_url_template] Missing method docstring
orange_sharing/models.py:44: [C0103(invalid-name), Task.get_external_url] Argument name "id" doesn't conform to snake_case naming style
orange_sharing/models.py:44: [C0111(missing-docstring), Task.get_external_url] Missing method docstring
orange_sharing/models.py:44: [W0622(redefined-builtin), Task.get_external_url] Redefining built-in 'id'
orange_sharing/models.py:48: [C0111(missing-docstring), Task.external_url] Missing method docstring
orange_sharing/models.py:52: [C0111(missing-docstring), Task.get_new_external_instance_url] Missing method docstring
orange_sharing/models.py:57: [C0111(missing-docstring), Task.new_external_instance_url] Missing method docstring
orange_sharing/models.py:60: [C0111(missing-docstring), Task.Meta] Missing class docstring
orange_sharing/models.py:60: [R0903(too-few-public-methods), Task.Meta] Too few public methods (0/2)
orange_sharing/models.py:67: [C0111(missing-docstring), Company] Missing class docstring
orange_sharing/models.py:85: [C0111(missing-docstring), Company.Meta] Missing class docstring
orange_sharing/models.py:85: [R0903(too-few-public-methods), Company.Meta] Too few public methods (0/2)
orange_sharing/models.py:67: [R0903(too-few-public-methods), Company] Too few public methods (1/2)
orange_sharing/models.py:92: [C0111(missing-docstring), StateCondition] Missing class docstring
orange_sharing/models.py:104: [C0111(missing-docstring), StateCondition.Meta] Missing class docstring
orange_sharing/models.py:104: [R0903(too-few-public-methods), StateCondition.Meta] Too few public methods (0/2)
orange_sharing/models.py:92: [R0903(too-few-public-methods), StateCondition] Too few public methods (1/2)
orange_sharing/models.py:111: [C0111(missing-docstring), SupervisionContract] Missing class docstring
orange_sharing/models.py:121: [C0111(missing-docstring), SupervisionContract.Meta] Missing class docstring
orange_sharing/models.py:121: [R0903(too-few-public-methods), SupervisionContract.Meta] Too few public methods (0/2)
orange_sharing/models.py:111: [R0903(too-few-public-methods), SupervisionContract] Too few public methods (1/2)
orange_sharing/models.py:128: [C0111(missing-docstring), Counterpart] Missing class docstring
orange_sharing/models.py:139: [C0111(missing-docstring), Counterpart.Meta] Missing class docstring
orange_sharing/models.py:139: [R0903(too-few-public-methods), Counterpart.Meta] Too few public methods (0/2)
orange_sharing/models.py:128: [R0903(too-few-public-methods), Counterpart] Too few public methods (1/2)
orange_sharing/models.py:146: [C0111(missing-docstring), Work] Missing class docstring
orange_sharing/models.py:160: [C0111(missing-docstring), Work.Meta] Missing class docstring
orange_sharing/models.py:160: [R0903(too-few-public-methods), Work.Meta] Too few public methods (0/2)
orange_sharing/models.py:146: [R0903(too-few-public-methods), Work] Too few public methods (1/2)
orange_sharing/models.py:167: [C0111(missing-docstring), Supervision] Missing class docstring
orange_sharing/models.py:283: [C0111(missing-docstring), Supervision.Meta] Missing class docstring
orange_sharing/models.py:283: [R0903(too-few-public-methods), Supervision.Meta] Too few public methods (0/2)
orange_sharing/models.py:167: [R0903(too-few-public-methods), Supervision] Too few public methods (1/2)
orange_sharing/models.py:290: [C0111(missing-docstring), State] Missing class docstring
orange_sharing/models.py:304: [C0111(missing-docstring), State.Meta] Missing class docstring
orange_sharing/models.py:304: [R0903(too-few-public-methods), State.Meta] Too few public methods (0/2)
orange_sharing/models.py:290: [R0903(too-few-public-methods), State] Too few public methods (1/2)
orange_sharing/models.py:311: [C0111(missing-docstring), WorkType] Missing class docstring
orange_sharing/models.py:322: [C0111(missing-docstring), WorkType.Meta] Missing class docstring
orange_sharing/models.py:322: [R0903(too-few-public-methods), WorkType.Meta] Too few public methods (0/2)
orange_sharing/models.py:311: [R0903(too-few-public-methods), WorkType] Too few public methods (1/2)
orange_sharing/models.py:329: [C0111(missing-docstring), Visit] Missing class docstring
orange_sharing/models.py:342: [C0111(missing-docstring), Visit.Meta] Missing class docstring
orange_sharing/models.py:342: [R0903(too-few-public-methods), Visit.Meta] Too few public methods (0/2)
orange_sharing/models.py:329: [R0903(too-few-public-methods), Visit] Too few public methods (1/2)
orange_sharing/models.py:350: [C0111(missing-docstring), LastVisit] Missing class docstring
orange_sharing/models.py:363: [C0111(missing-docstring), LastVisit.Meta] Missing class docstring
orange_sharing/models.py:363: [R0903(too-few-public-methods), LastVisit.Meta] Too few public methods (0/2)
orange_sharing/models.py:350: [R0903(too-few-public-methods), LastVisit] Too few public methods (1/2)
************* Module orange_sharing.migrations.0004_auto_20160901_1238
orange_sharing/migrations/0004_auto_20160901_1238.py:1: [C0103(invalid-name), ] Module name "0004_auto_20160901_1238" doesn't conform to snake_case naming style
orange_sharing/migrations/0004_auto_20160901_1238.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/migrations/0004_auto_20160901_1238.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sharing/migrations/0004_auto_20160901_1238.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sharing/migrations/0004_auto_20160901_1238.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sharing.migrations.0003_auto_20160826_1451
orange_sharing/migrations/0003_auto_20160826_1451.py:11: [C0301(line-too-long), ] Line too long (136/100)
orange_sharing/migrations/0003_auto_20160826_1451.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160826_1451" doesn't conform to snake_case naming style
orange_sharing/migrations/0003_auto_20160826_1451.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/migrations/0003_auto_20160826_1451.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sharing/migrations/0003_auto_20160826_1451.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sharing/migrations/0003_auto_20160826_1451.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:116: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:118: [C0301(line-too-long), ] Line too long (107/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:123: [C0301(line-too-long), ] Line too long (101/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:133: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:134: [C0301(line-too-long), ] Line too long (114/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:135: [C0301(line-too-long), ] Line too long (125/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:136: [C0301(line-too-long), ] Line too long (105/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:138: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:173: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:174: [C0301(line-too-long), ] Line too long (114/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:175: [C0301(line-too-long), ] Line too long (112/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:181: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:182: [C0301(line-too-long), ] Line too long (105/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:185: [C0301(line-too-long), ] Line too long (101/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:188: [C0301(line-too-long), ] Line too long (105/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:189: [C0301(line-too-long), ] Line too long (101/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:190: [C0301(line-too-long), ] Line too long (103/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:200: [C0301(line-too-long), ] Line too long (111/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:202: [C0301(line-too-long), ] Line too long (104/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:203: [C0301(line-too-long), ] Line too long (107/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:204: [C0301(line-too-long), ] Line too long (103/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:205: [C0301(line-too-long), ] Line too long (102/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:206: [C0301(line-too-long), ] Line too long (111/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:207: [C0301(line-too-long), ] Line too long (107/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:208: [C0301(line-too-long), ] Line too long (109/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:210: [C0301(line-too-long), ] Line too long (106/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:211: [C0301(line-too-long), ] Line too long (104/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:212: [C0301(line-too-long), ] Line too long (106/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:213: [C0301(line-too-long), ] Line too long (106/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:251: [C0301(line-too-long), ] Line too long (105/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:255: [C0301(line-too-long), ] Line too long (105/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:256: [C0301(line-too-long), ] Line too long (103/100)
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:1: [C0103(invalid-name), ] Module name "0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w" doesn't conform to snake_case naming style
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sharing/migrations/0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sharing.migrations.0005_auto_20160901_1549
orange_sharing/migrations/0005_auto_20160901_1549.py:1: [C0103(invalid-name), ] Module name "0005_auto_20160901_1549" doesn't conform to snake_case naming style
orange_sharing/migrations/0005_auto_20160901_1549.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/migrations/0005_auto_20160901_1549.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sharing/migrations/0005_auto_20160901_1549.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sharing/migrations/0005_auto_20160901_1549.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sharing.migrations.0001_initial
orange_sharing/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_sharing/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sharing/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sharing/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sharing/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_bqa.tests
orange_bqa/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_bqa/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_bqa.urls
orange_bqa/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_bqa/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_bqa/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_bqa/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_bqa/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_bqa.apps
orange_bqa/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_bqa/apps.py:6: [C0111(missing-docstring), OrangeBqaConfig] Missing class docstring
orange_bqa/apps.py:6: [R0903(too-few-public-methods), OrangeBqaConfig] Too few public methods (0/2)
************* Module orange_bqa.views
orange_bqa/views.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_bqa/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_bqa/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_bqa.serializers
orange_bqa/serializers.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_bqa/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_bqa
orange_bqa/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_bqa.models_api
orange_bqa/models_api.py:11: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'zone',
        |   ^
orange_bqa/models_api.py:12: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'work_type',
        |   ^
orange_bqa/models_api.py:13: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'device',
        |   ^
orange_bqa/models_api.py:14: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'device__site',
        |   ^
orange_bqa/models_api.py:15: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'vendor',
        |   ^
orange_bqa/models_api.py:16: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'deployment_type',
        |   ^
orange_bqa/models_api.py:17: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'deployment_type__deployment_type_group',
        |   ^
orange_bqa/models_api.py:18: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'project_type',
        |   ^
orange_bqa/models_api.py:19: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'project_type__project_type_group',
        |   ^
orange_bqa/models_api.py:20: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'equipment_type',
        |   ^
orange_bqa/models_api.py:21: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'equipment_type__equipment_type_group',
        |   ^
orange_bqa/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_bqa/models_api.py:9: [C0103(invalid-name), get_queryset_self_acceptance] Argument name "qs" doesn't conform to snake_case naming style
orange_bqa/models_api.py:9: [C0111(missing-docstring), get_queryset_self_acceptance] Missing function docstring
orange_bqa/models_api.py:27: [C0111(missing-docstring), get_queryset_self_acceptance_viewset] Missing function docstring
orange_bqa/models_api.py:31: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_bqa.models
orange_bqa/models.py:19: [C0301(line-too-long), ] Line too long (120/100)
orange_bqa/models.py:22: [C0301(line-too-long), ] Line too long (112/100)
orange_bqa/models.py:24: [C0301(line-too-long), ] Line too long (107/100)
orange_bqa/models.py:30: [C0301(line-too-long), ] Line too long (111/100)
orange_bqa/models.py:49: [C0301(line-too-long), ] Line too long (103/100)
orange_bqa/models.py:118: [C0301(line-too-long), ] Line too long (117/100)
orange_bqa/models.py:135: [C0301(line-too-long), ] Line too long (103/100)
orange_bqa/models.py:136: [C0301(line-too-long), ] Line too long (105/100)
orange_bqa/models.py:140: [C0301(line-too-long), ] Line too long (101/100)
orange_bqa/models.py:149: [C0301(line-too-long), ] Line too long (113/100)
orange_bqa/models.py:151: [C0301(line-too-long), ] Line too long (112/100)
orange_bqa/models.py:235: [C0301(line-too-long), ] Line too long (106/100)
orange_bqa/models.py:252: [C0301(line-too-long), ] Line too long (103/100)
orange_bqa/models.py:285: [C0301(line-too-long), ] Line too long (118/100)
orange_bqa/models.py:301: [C0301(line-too-long), ] Line too long (113/100)
orange_bqa/models.py:336: [C0301(line-too-long), ] Line too long (103/100)
orange_bqa/models.py:354: [C0301(line-too-long), ] Line too long (118/100)
orange_bqa/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange_bqa/models.py:4: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_bqa/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_bqa/models.py:12: [C0111(missing-docstring), Task] Missing class docstring
orange_bqa/models.py:35: [C0111(missing-docstring), Task.Meta] Missing class docstring
orange_bqa/models.py:35: [R0903(too-few-public-methods), Task.Meta] Too few public methods (0/2)
orange_bqa/models.py:12: [R0903(too-few-public-methods), Task] Too few public methods (1/2)
orange_bqa/models.py:43: [C0111(missing-docstring), SelfAcceptanceTaskManager] Missing class docstring
orange_bqa/models.py:44: [C0111(missing-docstring), SelfAcceptanceTaskManager.get_queryset] Missing method docstring
orange_bqa/models.py:43: [R0903(too-few-public-methods), SelfAcceptanceTaskManager] Too few public methods (1/2)
orange_bqa/models.py:48: [C0111(missing-docstring), SelfAcceptanceTask] Missing class docstring
orange_bqa/models.py:54: [C0111(missing-docstring), SelfAcceptanceTask.Meta] Missing class docstring
orange_bqa/models.py:54: [R0903(too-few-public-methods), SelfAcceptanceTask.Meta] Too few public methods (0/2)
orange_bqa/models.py:48: [R0903(too-few-public-methods), SelfAcceptanceTask] Too few public methods (0/2)
orange_bqa/models.py:61: [C0111(missing-docstring), AuditTaskManager] Missing class docstring
orange_bqa/models.py:62: [C0111(missing-docstring), AuditTaskManager.get_queryset] Missing method docstring
orange_bqa/models.py:61: [R0903(too-few-public-methods), AuditTaskManager] Too few public methods (1/2)
orange_bqa/models.py:66: [C0111(missing-docstring), AuditTask] Missing class docstring
orange_bqa/models.py:72: [C0111(missing-docstring), AuditTask.Meta] Missing class docstring
orange_bqa/models.py:72: [R0903(too-few-public-methods), AuditTask.Meta] Too few public methods (0/2)
orange_bqa/models.py:66: [R0903(too-few-public-methods), AuditTask] Too few public methods (0/2)
orange_bqa/models.py:79: [C0111(missing-docstring), SiteTaskManager] Missing class docstring
orange_bqa/models.py:80: [C0111(missing-docstring), SiteTaskManager.get_queryset] Missing method docstring
orange_bqa/models.py:79: [R0903(too-few-public-methods), SiteTaskManager] Too few public methods (1/2)
orange_bqa/models.py:84: [C0111(missing-docstring), SiteTask] Missing class docstring
orange_bqa/models.py:90: [C0111(missing-docstring), SiteTask.Meta] Missing class docstring
orange_bqa/models.py:90: [R0903(too-few-public-methods), SiteTask.Meta] Too few public methods (0/2)
orange_bqa/models.py:84: [R0903(too-few-public-methods), SiteTask] Too few public methods (0/2)
orange_bqa/models.py:97: [C0111(missing-docstring), EquipmentType] Missing class docstring
orange_bqa/models.py:108: [C0111(missing-docstring), EquipmentType.Meta] Missing class docstring
orange_bqa/models.py:108: [R0903(too-few-public-methods), EquipmentType.Meta] Too few public methods (0/2)
orange_bqa/models.py:97: [R0903(too-few-public-methods), EquipmentType] Too few public methods (1/2)
orange_bqa/models.py:115: [C0111(missing-docstring), EquipmentTypeGroup] Missing class docstring
orange_bqa/models.py:123: [C0111(missing-docstring), EquipmentTypeGroup.Meta] Missing class docstring
orange_bqa/models.py:123: [R0903(too-few-public-methods), EquipmentTypeGroup.Meta] Too few public methods (0/2)
orange_bqa/models.py:115: [R0903(too-few-public-methods), EquipmentTypeGroup] Too few public methods (1/2)
orange_bqa/models.py:130: [C0111(missing-docstring), SelfAcceptance] Missing class docstring
orange_bqa/models.py:166: [C0111(missing-docstring), SelfAcceptance.from_string] Missing method docstring
orange_bqa/models.py:166: [W0613(unused-argument), SelfAcceptance.from_string] Unused argument 'kwargs'
orange_bqa/models.py:170: [C0111(missing-docstring), SelfAcceptance.get_external_url_template] Missing method docstring
orange_bqa/models.py:174: [C0103(invalid-name), SelfAcceptance.get_external_url] Argument name "id" doesn't conform to snake_case naming style
orange_bqa/models.py:174: [C0111(missing-docstring), SelfAcceptance.get_external_url] Missing method docstring
orange_bqa/models.py:174: [W0622(redefined-builtin), SelfAcceptance.get_external_url] Redefining built-in 'id'
orange_bqa/models.py:178: [C0111(missing-docstring), SelfAcceptance.external_url] Missing method docstring
orange_bqa/models.py:182: [C0111(missing-docstring), SelfAcceptance.get_new_external_instance_url] Missing method docstring
orange_bqa/models.py:186: [C0111(missing-docstring), SelfAcceptance.new_external_instance_url] Missing method docstring
orange_bqa/models.py:190: [C0111(missing-docstring), SelfAcceptance.audit_task_count] Missing method docstring
orange_bqa/models.py:193: [C0111(missing-docstring), SelfAcceptance.Meta] Missing class docstring
orange_bqa/models.py:193: [R0903(too-few-public-methods), SelfAcceptance.Meta] Too few public methods (0/2)
orange_bqa/models.py:200: [C0111(missing-docstring), Company] Missing class docstring
orange_bqa/models.py:223: [C0111(missing-docstring), Company.Meta] Missing class docstring
orange_bqa/models.py:223: [R0903(too-few-public-methods), Company.Meta] Too few public methods (0/2)
orange_bqa/models.py:200: [R0903(too-few-public-methods), Company] Too few public methods (1/2)
orange_bqa/models.py:231: [C0111(missing-docstring), Checklist] Missing class docstring
orange_bqa/models.py:240: [C0111(missing-docstring), Checklist.Meta] Missing class docstring
orange_bqa/models.py:240: [R0903(too-few-public-methods), Checklist.Meta] Too few public methods (0/2)
orange_bqa/models.py:231: [R0903(too-few-public-methods), Checklist] Too few public methods (1/2)
orange_bqa/models.py:247: [C0111(missing-docstring), SupervisionContract] Missing class docstring
orange_bqa/models.py:257: [C0111(missing-docstring), SupervisionContract.Meta] Missing class docstring
orange_bqa/models.py:257: [R0903(too-few-public-methods), SupervisionContract.Meta] Too few public methods (0/2)
orange_bqa/models.py:247: [R0903(too-few-public-methods), SupervisionContract] Too few public methods (1/2)
orange_bqa/models.py:264: [C0111(missing-docstring), DeploymentType] Missing class docstring
orange_bqa/models.py:275: [C0111(missing-docstring), DeploymentType.Meta] Missing class docstring
orange_bqa/models.py:275: [R0903(too-few-public-methods), DeploymentType.Meta] Too few public methods (0/2)
orange_bqa/models.py:264: [R0903(too-few-public-methods), DeploymentType] Too few public methods (1/2)
orange_bqa/models.py:282: [C0111(missing-docstring), DeploymentTypeGroup] Missing class docstring
orange_bqa/models.py:290: [C0111(missing-docstring), DeploymentTypeGroup.Meta] Missing class docstring
orange_bqa/models.py:290: [R0903(too-few-public-methods), DeploymentTypeGroup.Meta] Too few public methods (0/2)
orange_bqa/models.py:282: [R0903(too-few-public-methods), DeploymentTypeGroup] Too few public methods (1/2)
orange_bqa/models.py:297: [C0111(missing-docstring), Work] Missing class docstring
orange_bqa/models.py:309: [C0111(missing-docstring), Work.Meta] Missing class docstring
orange_bqa/models.py:309: [R0903(too-few-public-methods), Work.Meta] Too few public methods (0/2)
orange_bqa/models.py:297: [R0903(too-few-public-methods), Work] Too few public methods (1/2)
orange_bqa/models.py:316: [C0111(missing-docstring), WorkType] Missing class docstring
orange_bqa/models.py:326: [C0111(missing-docstring), WorkType.Meta] Missing class docstring
orange_bqa/models.py:326: [R0903(too-few-public-methods), WorkType.Meta] Too few public methods (0/2)
orange_bqa/models.py:316: [R0903(too-few-public-methods), WorkType] Too few public methods (1/2)
orange_bqa/models.py:333: [C0111(missing-docstring), ProjectType] Missing class docstring
orange_bqa/models.py:344: [C0111(missing-docstring), ProjectType.Meta] Missing class docstring
orange_bqa/models.py:344: [R0903(too-few-public-methods), ProjectType.Meta] Too few public methods (0/2)
orange_bqa/models.py:333: [R0903(too-few-public-methods), ProjectType] Too few public methods (1/2)
orange_bqa/models.py:351: [C0111(missing-docstring), ProjectTypeGroup] Missing class docstring
orange_bqa/models.py:359: [C0111(missing-docstring), ProjectTypeGroup.Meta] Missing class docstring
orange_bqa/models.py:359: [R0903(too-few-public-methods), ProjectTypeGroup.Meta] Too few public methods (0/2)
orange_bqa/models.py:351: [R0903(too-few-public-methods), ProjectTypeGroup] Too few public methods (1/2)
orange_bqa/models.py:9: [W0611(unused-import), ] Unused CharVirtualField imported from sol.fields.virtual
************* Module orange_bqa.migrations.0005_auto_20180622_1802
orange_bqa/migrations/0005_auto_20180622_1802.py:17: [C0301(line-too-long), ] Line too long (132/100)
orange_bqa/migrations/0005_auto_20180622_1802.py:1: [C0103(invalid-name), ] Module name "0005_auto_20180622_1802" doesn't conform to snake_case naming style
orange_bqa/migrations/0005_auto_20180622_1802.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/migrations/0005_auto_20180622_1802.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_bqa/migrations/0005_auto_20180622_1802.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_bqa/migrations/0005_auto_20180622_1802.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:24: [C0301(line-too-long), ] Line too long (105/100)
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:96: [C0301(line-too-long), ] Line too long (116/100)
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:122: [C0301(line-too-long), ] Line too long (115/100)
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:148: [C0301(line-too-long), ] Line too long (116/100)
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:190: [C0301(line-too-long), ] Line too long (105/100)
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:210: [C0301(line-too-long), ] Line too long (105/100)
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:1: [C0103(invalid-name), ] Module name "0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj" doesn't conform to snake_case naming style
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_bqa/migrations/0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_bqa.migrations.0004_auto_20160901_1549
orange_bqa/migrations/0004_auto_20160901_1549.py:1: [C0103(invalid-name), ] Module name "0004_auto_20160901_1549" doesn't conform to snake_case naming style
orange_bqa/migrations/0004_auto_20160901_1549.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/migrations/0004_auto_20160901_1549.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_bqa/migrations/0004_auto_20160901_1549.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_bqa/migrations/0004_auto_20160901_1549.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_bqa.migrations.0001_initial
orange_bqa/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_bqa/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_bqa/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_bqa/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_bqa.migrations.0003_auto_20160901_1238
orange_bqa/migrations/0003_auto_20160901_1238.py:11: [C0301(line-too-long), ] Line too long (132/100)
orange_bqa/migrations/0003_auto_20160901_1238.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160901_1238" doesn't conform to snake_case naming style
orange_bqa/migrations/0003_auto_20160901_1238.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_bqa/migrations/0003_auto_20160901_1238.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_bqa/migrations/0003_auto_20160901_1238.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_bqa/migrations/0003_auto_20160901_1238.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module docs.sphinx.source.conf
docs/sphinx/source/conf.py:163: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
   '**': ['globaltoc.html', 'searchbox.html'],
   ^|
docs/sphinx/source/conf.py:237: [C0301(line-too-long), ] Line too long (108/100)
docs/sphinx/source/conf.py:239: [C0301(line-too-long), ] Line too long (136/100)
docs/sphinx/source/conf.py:252: [C0305(trailing-newlines), ] Trailing newlines
docs/sphinx/source/conf.py:1: [C0111(missing-docstring), ] Missing module docstring
docs/sphinx/source/conf.py:54: [W0622(redefined-builtin), ] Redefining built-in 'copyright'
docs/sphinx/source/conf.py:24: [E0401(import-error), ] Unable to import 'django'
docs/sphinx/source/conf.py:24: [C0413(wrong-import-position), ] Import "import django" should be placed at the top of the module
docs/sphinx/source/conf.py:38: [C0103(invalid-name), ] Constant name "extensions" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:41: [C0103(invalid-name), ] Constant name "templates_path" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:47: [C0103(invalid-name), ] Constant name "source_suffix" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:50: [C0103(invalid-name), ] Constant name "master_doc" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:53: [C0103(invalid-name), ] Constant name "project" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:54: [C0103(invalid-name), ] Constant name "copyright" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:55: [C0103(invalid-name), ] Constant name "author" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:62: [C0103(invalid-name), ] Constant name "version" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:64: [C0103(invalid-name), ] Constant name "release" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:71: [C0103(invalid-name), ] Constant name "language" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:76: [C0103(invalid-name), ] Constant name "exclude_patterns" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:79: [C0103(invalid-name), ] Constant name "pygments_style" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:82: [C0103(invalid-name), ] Constant name "todo_include_todos" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:90: [C0103(invalid-name), ] Constant name "html_theme" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:101: [C0103(invalid-name), ] Constant name "html_static_path" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:107: [C0103(invalid-name), ] Constant name "htmlhelp_basename" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:112: [C0103(invalid-name), ] Constant name "latex_elements" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:133: [C0103(invalid-name), ] Constant name "latex_documents" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:143: [C0103(invalid-name), ] Constant name "man_pages" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:154: [C0103(invalid-name), ] Constant name "texinfo_documents" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:162: [C0103(invalid-name), ] Constant name "html_sidebars" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:165: [C0103(invalid-name), ] Constant name "html_show_sourcelink" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:166: [C0103(invalid-name), ] Constant name "html_show_sphinx" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:167: [C0103(invalid-name), ] Constant name "html_logo" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:168: [C0103(invalid-name), ] Constant name "html_domain_indices" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:172: [C0103(invalid-name), ] Constant name "latex_logo" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:173: [C0103(invalid-name), ] Constant name "latex_domain_indices" doesn't conform to UPPER_CASE naming style
docs/sphinx/source/conf.py:177: [C0413(wrong-import-position), ] Import "import inspect" should be placed at the top of the module
docs/sphinx/source/conf.py:178: [E0401(import-error), ] Unable to import 'django.utils.html'
docs/sphinx/source/conf.py:178: [C0413(wrong-import-position), ] Import "from django.utils.html import strip_tags" should be placed at the top of the module
docs/sphinx/source/conf.py:179: [E0401(import-error), ] Unable to import 'django.utils.encoding'
docs/sphinx/source/conf.py:179: [C0413(wrong-import-position), ] Import "from django.utils.encoding import force_text" should be placed at the top of the module
docs/sphinx/source/conf.py:182: [C0111(missing-docstring), process_signature] Missing function docstring
docs/sphinx/source/conf.py:182: [R0913(too-many-arguments), process_signature] Too many arguments (7/5)
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'app'
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'what'
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'name'
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'obj'
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'options'
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'signature'
docs/sphinx/source/conf.py:182: [W0613(unused-argument), process_signature] Unused argument 'return_annotation'
docs/sphinx/source/conf.py:186: [C0111(missing-docstring), process_skip_member] Missing function docstring
docs/sphinx/source/conf.py:186: [R0913(too-many-arguments), process_skip_member] Too many arguments (6/5)
docs/sphinx/source/conf.py:188: [E0401(import-error), process_skip_member] Unable to import 'django.db'
docs/sphinx/source/conf.py:193: [W0212(protected-access), process_skip_member] Access to a protected member _meta of a client class
docs/sphinx/source/conf.py:186: [W0613(unused-argument), process_skip_member] Unused argument 'app'
docs/sphinx/source/conf.py:186: [W0613(unused-argument), process_skip_member] Unused argument 'what'
docs/sphinx/source/conf.py:186: [W0613(unused-argument), process_skip_member] Unused argument 'name'
docs/sphinx/source/conf.py:186: [W0613(unused-argument), process_skip_member] Unused argument 'skip'
docs/sphinx/source/conf.py:186: [W0613(unused-argument), process_skip_member] Unused argument 'options'
docs/sphinx/source/conf.py:199: [C0111(missing-docstring), process_docstring] Missing function docstring
docs/sphinx/source/conf.py:199: [R0913(too-many-arguments), process_docstring] Too many arguments (6/5)
docs/sphinx/source/conf.py:201: [E0401(import-error), process_docstring] Unable to import 'django.db'
docs/sphinx/source/conf.py:206: [W0212(protected-access), process_docstring] Access to a protected member _meta of a client class
docs/sphinx/source/conf.py:210: [W0212(protected-access), process_docstring] Access to a protected member _meta of a client class
docs/sphinx/source/conf.py:235: [C0103(invalid-name), process_docstring] Variable name "to" doesn't conform to snake_case naming style
docs/sphinx/source/conf.py:199: [W0613(unused-argument), process_docstring] Unused argument 'app'
docs/sphinx/source/conf.py:199: [W0613(unused-argument), process_docstring] Unused argument 'what'
docs/sphinx/source/conf.py:199: [W0613(unused-argument), process_docstring] Unused argument 'name'
docs/sphinx/source/conf.py:199: [W0613(unused-argument), process_docstring] Unused argument 'options'
docs/sphinx/source/conf.py:247: [C0111(missing-docstring), setup] Missing function docstring
docs/sphinx/source/conf.py:177: [C0411(wrong-import-order), ] standard import "import inspect" should be placed before "import django"
************* Module workflows.urls
workflows/urls.py:15: [C0304(missing-final-newline), ] Final newline missing
workflows/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
workflows/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
workflows/urls.py:7: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
workflows/urls.py:12: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
workflows/urls.py:13: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module workflows.apps
workflows/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
workflows/apps.py:6: [C0111(missing-docstring), WorkflowsConfig] Missing class docstring
workflows/apps.py:6: [R0903(too-few-public-methods), WorkflowsConfig] Too few public methods (0/2)
************* Module workflows.views
workflows/views.py:20: [C0301(line-too-long), ] Line too long (117/100)
workflows/views.py:34: [C0301(line-too-long), ] Line too long (119/100)
workflows/views.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/views.py:4: [W0401(wildcard-import), ] Wildcard import serializers
workflows/views.py:14: [C0111(missing-docstring), WorkflowHistoryFilterSet] Missing class docstring
workflows/views.py:18: [C0111(missing-docstring), WorkflowHistoryFilterSet.Meta] Missing class docstring
workflows/views.py:19: [E0601(used-before-assignment), WorkflowHistoryFilterSet.Meta] Using variable 'WorkflowHistoryViewSet' before assignment
workflows/views.py:18: [R0903(too-few-public-methods), WorkflowHistoryFilterSet.Meta] Too few public methods (0/2)
workflows/views.py:14: [R0903(too-few-public-methods), WorkflowHistoryFilterSet] Too few public methods (0/2)
workflows/views.py:23: [R0903(too-few-public-methods), WorkflowHistoryViewSet] Too few public methods (0/2)
workflows/views.py:29: [C0111(missing-docstring), WorkflowMilestoneFilterSet] Missing class docstring
workflows/views.py:32: [C0111(missing-docstring), WorkflowMilestoneFilterSet.Meta] Missing class docstring
workflows/views.py:33: [E0601(used-before-assignment), WorkflowMilestoneFilterSet.Meta] Using variable 'WorkflowMilestoneViewSet' before assignment
workflows/views.py:32: [R0903(too-few-public-methods), WorkflowMilestoneFilterSet.Meta] Too few public methods (0/2)
workflows/views.py:29: [R0903(too-few-public-methods), WorkflowMilestoneFilterSet] Too few public methods (0/2)
workflows/views.py:37: [R0903(too-few-public-methods), WorkflowMilestoneViewSet] Too few public methods (0/2)
workflows/views.py:4: [W0614(unused-wildcard-import), ] Unused import WorkflowHistorySerializer from wildcard import
workflows/views.py:4: [W0614(unused-wildcard-import), ] Unused import serializers from wildcard import
workflows/views.py:4: [W0614(unused-wildcard-import), ] Unused import ValidationError from wildcard import
workflows/views.py:4: [W0614(unused-wildcard-import), ] Unused import api_settings from wildcard import
workflows/views.py:4: [W0614(unused-wildcard-import), ] Unused import WorkflowPathJob from wildcard import
workflows/views.py:6: [C0411(wrong-import-order), ] first party import "from projects.views import JobFilterSet" should be placed before "from .serializers import *"
workflows/views.py:7: [C0411(wrong-import-order), ] first party import "from sol.api.url_filter import ModelFilterSet" should be placed before "from .serializers import *"
workflows/views.py:8: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module workflows.serializers
workflows/serializers.py:71: [W0511(fixme), ] TODO: this call perform more times the same query
workflows/serializers.py:21: [C0301(line-too-long), ] Line too long (104/100)
workflows/serializers.py:24: [C0301(line-too-long), ] Line too long (106/100)
workflows/serializers.py:32: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    workflow_milestone=current_milestone,
                |   ^
workflows/serializers.py:33: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    real_date_end=None,
                |   ^
workflows/serializers.py:34: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    mandatory=True,
                |   ^
workflows/serializers.py:39: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    source_milestone=current_milestone,
                |   ^
workflows/serializers.py:40: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    target_milestone=data['workflow_milestone']
                |   ^
workflows/serializers.py:79: [C0301(line-too-long), ] Line too long (107/100)
workflows/serializers.py:81: [C0301(line-too-long), ] Line too long (104/100)
workflows/serializers.py:83: [C0301(line-too-long), ] Line too long (105/100)
workflows/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/serializers.py:4: [E0401(import-error), ] Unable to import 'django.utils.translation'
workflows/serializers.py:6: [E0401(import-error), ] Unable to import 'rest_framework'
workflows/serializers.py:7: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
workflows/serializers.py:8: [E0401(import-error), ] Unable to import 'rest_framework.settings'
workflows/serializers.py:17: [C0111(missing-docstring), WorkflowHistorySerializer] Missing class docstring
workflows/serializers.py:17: [E0602(undefined-variable), WorkflowHistorySerializer] Undefined variable 'WorkflowHistorySerializer'
workflows/serializers.py:24: [W0105(pointless-string-statement), WorkflowHistorySerializer.validate] String statement has no effect
workflows/serializers.py:54: [C0111(missing-docstring), WorkflowHistorySerializer.get_workflow] Missing method docstring
workflows/serializers.py:54: [R0201(no-self-use), WorkflowHistorySerializer.get_workflow] Method could be a function
************* Module workflows.permissions
workflows/permissions.py:27: [W0511(fixme), ] TODO: useless since now the API ViewSet is ReadOnly.
workflows/permissions.py:38: [C0305(trailing-newlines), ] Trailing newlines
workflows/permissions.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/permissions.py:5: [C0111(missing-docstring), WorkflowHistoryPermissionMixin] Missing class docstring
workflows/permissions.py:15: [C0111(missing-docstring), WorkflowHistoryPermissionMixin.has_read_permission] Missing method docstring
workflows/permissions.py:15: [W0613(unused-argument), WorkflowHistoryPermissionMixin.has_read_permission] Unused argument 'request'
workflows/permissions.py:26: [C0111(missing-docstring), WorkflowHistoryPermissionMixin.has_create_permission] Missing method docstring
************* Module workflows.admin
workflows/admin.py:4: [C0301(line-too-long), ] Line too long (104/100)
workflows/admin.py:57: [C0301(line-too-long), ] Line too long (109/100)
workflows/admin.py:70: [C0301(line-too-long), ] Line too long (113/100)
workflows/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/admin.py:1: [E0401(import-error), ] Unable to import 'django.contrib'
workflows/admin.py:2: [E0401(import-error), ] Unable to import 'django.utils.translation'
workflows/admin.py:7: [C0111(missing-docstring), SourceWorkflowPath] Missing class docstring
workflows/admin.py:7: [R0903(too-few-public-methods), SourceWorkflowPath] Too few public methods (0/2)
workflows/admin.py:13: [C0111(missing-docstring), clone_workflow] Missing function docstring
workflows/admin.py:13: [W0613(unused-argument), clone_workflow] Unused argument 'modeladmin'
workflows/admin.py:13: [W0613(unused-argument), clone_workflow] Unused argument 'request'
workflows/admin.py:27: [C0111(missing-docstring), WorkflowAdmin] Missing class docstring
workflows/admin.py:27: [R0903(too-few-public-methods), WorkflowAdmin] Too few public methods (0/2)
workflows/admin.py:35: [C0111(missing-docstring), WorkflowMilestoneAdmin] Missing class docstring
workflows/admin.py:35: [R0903(too-few-public-methods), WorkflowMilestoneAdmin] Too few public methods (0/2)
workflows/admin.py:41: [C0111(missing-docstring), WorkflowHistoryAdmin] Missing class docstring
workflows/admin.py:41: [R0903(too-few-public-methods), WorkflowHistoryAdmin] Too few public methods (0/2)
workflows/admin.py:47: [C0111(missing-docstring), WorkflowPathAdmin] Missing class docstring
workflows/admin.py:47: [R0903(too-few-public-methods), WorkflowPathAdmin] Too few public methods (0/2)
workflows/admin.py:61: [C0111(missing-docstring), WorkflowPathJobAdmin] Missing class docstring
workflows/admin.py:61: [R0903(too-few-public-methods), WorkflowPathJobAdmin] Too few public methods (0/2)
************* Module workflows
workflows/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module workflows.validators
workflows/validators.py:17: [C0301(line-too-long), ] Line too long (111/100)
workflows/validators.py:22: [C0301(line-too-long), ] Line too long (113/100)
workflows/validators.py:23: [C0301(line-too-long), ] Line too long (120/100)
workflows/validators.py:24: [C0301(line-too-long), ] Line too long (117/100)
workflows/validators.py:25: [C0301(line-too-long), ] Line too long (103/100)
workflows/validators.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/validators.py:4: [E0401(import-error), ] Unable to import 'django.core.exceptions'
workflows/validators.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
workflows/validators.py:8: [C0111(missing-docstring), WorkflowPathValidator] Missing class docstring
workflows/validators.py:8: [R0205(useless-object-inheritance), WorkflowPathValidator] Class 'WorkflowPathValidator' inherits from object, can be safely removed from bases in python3
workflows/validators.py:8: [R0903(too-few-public-methods), WorkflowPathValidator] Too few public methods (1/2)
************* Module workflows.models_api
workflows/models_api.py:149: [C0330(bad-continuation), ] Wrong continued indentation (remove 4 spaces).
                            .select_related(
                        |   ^
workflows/models_api.py:269: [C0304(missing-final-newline), ] Final newline missing
workflows/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
workflows/models_api.py:7: [W0401(wildcard-import), ] Wildcard import models
workflows/models_api.py:9: [E0401(import-error), ] Unable to import 'rest_framework.settings'
workflows/models_api.py:10: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
workflows/models_api.py:13: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import WORKFLOW_PATH_TYPE_CHOICES from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import ValidationError from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import models from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import Q from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import pre_save from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import receiver from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import python_2_unicode_compatible from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import BaseSolModel from wildcard import
workflows/models_api.py:7: [W0614(unused-wildcard-import), ] Unused import WorkflowHistoryPermissionMixin from wildcard import
workflows/models_api.py:9: [C0411(wrong-import-order), ] third party import "from rest_framework.settings import api_settings" should be placed before "from sol.api.mixins import CreateListRetrieveModelViewSet"
workflows/models_api.py:10: [C0411(wrong-import-order), ] third party import "from dry_rest_permissions.generics import DRYPermissions" should be placed before "from sol.api.mixins import CreateListRetrieveModelViewSet"
workflows/models_api.py:9: [C0412(ungrouped-imports), ] Imports from package rest_framework are not grouped
************* Module workflows.models
workflows/models.py:22: [C0301(line-too-long), ] Line too long (118/100)
workflows/models.py:45: [C0301(line-too-long), ] Line too long (117/100)
workflows/models.py:76: [C0301(line-too-long), ] Line too long (116/100)
workflows/models.py:103: [C0301(line-too-long), ] Line too long (107/100)
workflows/models.py:104: [C0301(line-too-long), ] Line too long (101/100)
workflows/models.py:105: [C0301(line-too-long), ] Line too long (113/100)
workflows/models.py:106: [C0301(line-too-long), ] Line too long (114/100)
workflows/models.py:141: [C0301(line-too-long), ] Line too long (118/100)
workflows/models.py:142: [C0301(line-too-long), ] Line too long (113/100)
workflows/models.py:154: [C0301(line-too-long), ] Line too long (113/100)
workflows/models.py:180: [C0301(line-too-long), ] Line too long (118/100)
workflows/models.py:182: [C0301(line-too-long), ] Line too long (106/100)
workflows/models.py:185: [C0301(line-too-long), ] Line too long (113/100)
workflows/models.py:186: [C0301(line-too-long), ] Line too long (119/100)
workflows/models.py:187: [C0301(line-too-long), ] Line too long (105/100)
workflows/models.py:192: [C0301(line-too-long), ] Line too long (121/100)
workflows/models.py:223: [C0301(line-too-long), ] Line too long (116/100)
workflows/models.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/models.py:3: [E0401(import-error), ] Unable to import 'django.core.exceptions'
workflows/models.py:4: [E0401(import-error), ] Unable to import 'django.db'
workflows/models.py:5: [E0401(import-error), ] Unable to import 'django.db.models'
workflows/models.py:6: [E0401(import-error), ] Unable to import 'django.db.models.signals'
workflows/models.py:7: [E0401(import-error), ] Unable to import 'django.dispatch'
workflows/models.py:8: [E0401(import-error), ] Unable to import 'django.utils.encoding'
workflows/models.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
workflows/models.py:36: [C0111(missing-docstring), Workflow.Meta] Missing class docstring
workflows/models.py:36: [R0903(too-few-public-methods), Workflow.Meta] Too few public methods (0/2)
workflows/models.py:84: [C0111(missing-docstring), WorkflowPath.Meta] Missing class docstring
workflows/models.py:84: [R0903(too-few-public-methods), WorkflowPath.Meta] Too few public methods (0/2)
workflows/models.py:112: [C0111(missing-docstring), WorkflowMilestone.from_string] Missing method docstring
workflows/models.py:112: [W0613(unused-argument), WorkflowMilestone.from_string] Unused argument 'kwargs'
workflows/models.py:115: [C0111(missing-docstring), WorkflowMilestone.Meta] Missing class docstring
workflows/models.py:115: [R0903(too-few-public-methods), WorkflowMilestone.Meta] Too few public methods (0/2)
workflows/models.py:161: [C0111(missing-docstring), WorkflowHistory.from_string] Missing method docstring
workflows/models.py:161: [W0613(unused-argument), WorkflowHistory.from_string] Unused argument 'name'
workflows/models.py:166: [C0111(missing-docstring), WorkflowHistory.Meta] Missing class docstring
workflows/models.py:166: [R0903(too-few-public-methods), WorkflowHistory.Meta] Too few public methods (0/2)
workflows/models.py:174: [W0613(unused-argument), _update_current_history] Unused argument 'raw'
workflows/models.py:174: [W0613(unused-argument), _update_current_history] Unused argument 'using'
workflows/models.py:174: [W0613(unused-argument), _update_current_history] Unused argument 'update_fields'
workflows/models.py:174: [W0613(unused-argument), _update_current_history] Unused argument 'args'
workflows/models.py:174: [W0613(unused-argument), _update_current_history] Unused argument 'kwargs'
workflows/models.py:231: [C0111(missing-docstring), WorkflowPathJob.Meta] Missing class docstring
workflows/models.py:231: [R0903(too-few-public-methods), WorkflowPathJob.Meta] Too few public methods (0/2)
workflows/models.py:237: [C0111(missing-docstring), WorkflowPathJob.get_workflow] Missing method docstring
workflows/models.py:3: [W0611(unused-import), ] Unused ValidationError imported from django.core.exceptions
workflows/models.py:5: [W0611(unused-import), ] Unused Q imported from django.db.models
************* Module workflows.migrations.0009_merge_20170223_1417
workflows/migrations/0009_merge_20170223_1417.py:1: [C0103(invalid-name), ] Module name "0009_merge_20170223_1417" doesn't conform to snake_case naming style
workflows/migrations/0009_merge_20170223_1417.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0009_merge_20170223_1417.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0009_merge_20170223_1417.py:8: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0009_merge_20170223_1417.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0012_auto_20170629_1018
workflows/migrations/0012_auto_20170629_1018.py:20: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0012_auto_20170629_1018.py:25: [C0301(line-too-long), ] Line too long (221/100)
workflows/migrations/0012_auto_20170629_1018.py:30: [C0301(line-too-long), ] Line too long (136/100)
workflows/migrations/0012_auto_20170629_1018.py:35: [C0301(line-too-long), ] Line too long (120/100)
workflows/migrations/0012_auto_20170629_1018.py:40: [C0301(line-too-long), ] Line too long (232/100)
workflows/migrations/0012_auto_20170629_1018.py:45: [C0301(line-too-long), ] Line too long (123/100)
workflows/migrations/0012_auto_20170629_1018.py:50: [C0301(line-too-long), ] Line too long (157/100)
workflows/migrations/0012_auto_20170629_1018.py:55: [C0301(line-too-long), ] Line too long (134/100)
workflows/migrations/0012_auto_20170629_1018.py:60: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0012_auto_20170629_1018.py:65: [C0301(line-too-long), ] Line too long (228/100)
workflows/migrations/0012_auto_20170629_1018.py:70: [C0301(line-too-long), ] Line too long (184/100)
workflows/migrations/0012_auto_20170629_1018.py:75: [C0301(line-too-long), ] Line too long (324/100)
workflows/migrations/0012_auto_20170629_1018.py:80: [C0301(line-too-long), ] Line too long (120/100)
workflows/migrations/0012_auto_20170629_1018.py:85: [C0301(line-too-long), ] Line too long (239/100)
workflows/migrations/0012_auto_20170629_1018.py:90: [C0301(line-too-long), ] Line too long (208/100)
workflows/migrations/0012_auto_20170629_1018.py:95: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0012_auto_20170629_1018.py:100: [C0301(line-too-long), ] Line too long (230/100)
workflows/migrations/0012_auto_20170629_1018.py:105: [C0301(line-too-long), ] Line too long (137/100)
workflows/migrations/0012_auto_20170629_1018.py:110: [C0301(line-too-long), ] Line too long (118/100)
workflows/migrations/0012_auto_20170629_1018.py:115: [C0301(line-too-long), ] Line too long (138/100)
workflows/migrations/0012_auto_20170629_1018.py:120: [C0301(line-too-long), ] Line too long (122/100)
workflows/migrations/0012_auto_20170629_1018.py:125: [C0301(line-too-long), ] Line too long (120/100)
workflows/migrations/0012_auto_20170629_1018.py:130: [C0301(line-too-long), ] Line too long (241/100)
workflows/migrations/0012_auto_20170629_1018.py:135: [C0301(line-too-long), ] Line too long (124/100)
workflows/migrations/0012_auto_20170629_1018.py:140: [C0301(line-too-long), ] Line too long (161/100)
workflows/migrations/0012_auto_20170629_1018.py:145: [C0301(line-too-long), ] Line too long (208/100)
workflows/migrations/0012_auto_20170629_1018.py:150: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0012_auto_20170629_1018.py:155: [C0301(line-too-long), ] Line too long (225/100)
workflows/migrations/0012_auto_20170629_1018.py:160: [C0301(line-too-long), ] Line too long (133/100)
workflows/migrations/0012_auto_20170629_1018.py:165: [C0301(line-too-long), ] Line too long (120/100)
workflows/migrations/0012_auto_20170629_1018.py:170: [C0301(line-too-long), ] Line too long (236/100)
workflows/migrations/0012_auto_20170629_1018.py:175: [C0301(line-too-long), ] Line too long (195/100)
workflows/migrations/0012_auto_20170629_1018.py:180: [C0301(line-too-long), ] Line too long (200/100)
workflows/migrations/0012_auto_20170629_1018.py:185: [C0301(line-too-long), ] Line too long (201/100)
workflows/migrations/0012_auto_20170629_1018.py:190: [C0301(line-too-long), ] Line too long (210/100)
workflows/migrations/0012_auto_20170629_1018.py:195: [C0301(line-too-long), ] Line too long (208/100)
workflows/migrations/0012_auto_20170629_1018.py:200: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0012_auto_20170629_1018.py:205: [C0301(line-too-long), ] Line too long (228/100)
workflows/migrations/0012_auto_20170629_1018.py:210: [C0301(line-too-long), ] Line too long (133/100)
workflows/migrations/0012_auto_20170629_1018.py:215: [C0301(line-too-long), ] Line too long (196/100)
workflows/migrations/0012_auto_20170629_1018.py:220: [C0301(line-too-long), ] Line too long (120/100)
workflows/migrations/0012_auto_20170629_1018.py:225: [C0301(line-too-long), ] Line too long (239/100)
workflows/migrations/0012_auto_20170629_1018.py:230: [C0301(line-too-long), ] Line too long (199/100)
workflows/migrations/0012_auto_20170629_1018.py:235: [C0301(line-too-long), ] Line too long (204/100)
workflows/migrations/0012_auto_20170629_1018.py:240: [C0301(line-too-long), ] Line too long (201/100)
workflows/migrations/0012_auto_20170629_1018.py:1: [C0103(invalid-name), ] Module name "0012_auto_20170629_1018" doesn't conform to snake_case naming style
workflows/migrations/0012_auto_20170629_1018.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0012_auto_20170629_1018.py:5: [E0401(import-error), ] Unable to import 'django.conf'
workflows/migrations/0012_auto_20170629_1018.py:6: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0012_auto_20170629_1018.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0012_auto_20170629_1018.py:10: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0012_auto_20170629_1018.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0013_set_blocking_true_to_all_existing_abort_type_workflow_paths
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:7: [C0326(bad-whitespace), ] Exactly one space required after comma
def forwards(apps,schema_editor):
                 ^
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:8: [C0326(bad-whitespace), ] Exactly one space required after comma
    WorkflowPathJob = apps.get_model('workflows','WorkflowPathJob')
                                                ^
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:25: [C0305(trailing-newlines), ] Trailing newlines
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:1: [C0103(invalid-name), ] Module name "0013_set_blocking_true_to_all_existing_abort_type_workflow_paths" doesn't conform to snake_case naming style
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:7: [C0111(missing-docstring), forwards] Missing function docstring
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:8: [C0103(invalid-name), forwards] Variable name "WorkflowPathJob" doesn't conform to snake_case naming style
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:7: [W0613(unused-argument), forwards] Unused argument 'schema_editor'
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:12: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0013_set_blocking_true_to_all_existing_abort_type_workflow_paths.py:12: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0005_auto_20161110_1019
workflows/migrations/0005_auto_20161110_1019.py:19: [C0301(line-too-long), ] Line too long (198/100)
workflows/migrations/0005_auto_20161110_1019.py:1: [C0103(invalid-name), ] Module name "0005_auto_20161110_1019" doesn't conform to snake_case naming style
workflows/migrations/0005_auto_20161110_1019.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0005_auto_20161110_1019.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0005_auto_20161110_1019.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0005_auto_20161110_1019.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0005_auto_20161110_1019.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0015_auto_20181203_1732
workflows/migrations/0015_auto_20181203_1732.py:17: [C0301(line-too-long), ] Line too long (108/100)
workflows/migrations/0015_auto_20181203_1732.py:1: [C0103(invalid-name), ] Module name "0015_auto_20181203_1732" doesn't conform to snake_case naming style
workflows/migrations/0015_auto_20181203_1732.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0015_auto_20181203_1732.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0015_auto_20181203_1732.py:8: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0015_auto_20181203_1732.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0008_auto_20170216_1605
workflows/migrations/0008_auto_20170216_1605.py:19: [C0301(line-too-long), ] Line too long (140/100)
workflows/migrations/0008_auto_20170216_1605.py:24: [C0301(line-too-long), ] Line too long (158/100)
workflows/migrations/0008_auto_20170216_1605.py:1: [C0103(invalid-name), ] Module name "0008_auto_20170216_1605" doesn't conform to snake_case naming style
workflows/migrations/0008_auto_20170216_1605.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0008_auto_20170216_1605.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0008_auto_20170216_1605.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0008_auto_20170216_1605.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0008_auto_20170216_1605.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0004_auto_20160926_0749
workflows/migrations/0004_auto_20160926_0749.py:19: [C0301(line-too-long), ] Line too long (197/100)
workflows/migrations/0004_auto_20160926_0749.py:1: [C0103(invalid-name), ] Module name "0004_auto_20160926_0749" doesn't conform to snake_case naming style
workflows/migrations/0004_auto_20160926_0749.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0004_auto_20160926_0749.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0004_auto_20160926_0749.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0004_auto_20160926_0749.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0004_auto_20160926_0749.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0008_auto_20170220_0921
workflows/migrations/0008_auto_20170220_0921.py:19: [C0301(line-too-long), ] Line too long (161/100)
workflows/migrations/0008_auto_20170220_0921.py:24: [C0301(line-too-long), ] Line too long (147/100)
workflows/migrations/0008_auto_20170220_0921.py:29: [C0301(line-too-long), ] Line too long (147/100)
workflows/migrations/0008_auto_20170220_0921.py:34: [C0301(line-too-long), ] Line too long (142/100)
workflows/migrations/0008_auto_20170220_0921.py:39: [C0301(line-too-long), ] Line too long (151/100)
workflows/migrations/0008_auto_20170220_0921.py:44: [C0301(line-too-long), ] Line too long (151/100)
workflows/migrations/0008_auto_20170220_0921.py:1: [C0103(invalid-name), ] Module name "0008_auto_20170220_0921" doesn't conform to snake_case naming style
workflows/migrations/0008_auto_20170220_0921.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0008_auto_20170220_0921.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0008_auto_20170220_0921.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0008_auto_20170220_0921.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0008_auto_20170220_0921.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0003_auto_20160920_1657
workflows/migrations/0003_auto_20160920_1657.py:19: [C0301(line-too-long), ] Line too long (197/100)
workflows/migrations/0003_auto_20160920_1657.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160920_1657" doesn't conform to snake_case naming style
workflows/migrations/0003_auto_20160920_1657.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0003_auto_20160920_1657.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0003_auto_20160920_1657.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0003_auto_20160920_1657.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0003_auto_20160920_1657.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0014_auto_20181112_1213
workflows/migrations/0014_auto_20181112_1213.py:19: [C0301(line-too-long), ] Line too long (324/100)
workflows/migrations/0014_auto_20181112_1213.py:1: [C0103(invalid-name), ] Module name "0014_auto_20181112_1213" doesn't conform to snake_case naming style
workflows/migrations/0014_auto_20181112_1213.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0014_auto_20181112_1213.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0014_auto_20181112_1213.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0014_auto_20181112_1213.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0014_auto_20181112_1213.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0011_auto_20170328_1437
workflows/migrations/0011_auto_20170328_1437.py:20: [C0301(line-too-long), ] Line too long (195/100)
workflows/migrations/0011_auto_20170328_1437.py:25: [C0301(line-too-long), ] Line too long (196/100)
workflows/migrations/0011_auto_20170328_1437.py:30: [C0301(line-too-long), ] Line too long (202/100)
workflows/migrations/0011_auto_20170328_1437.py:35: [C0301(line-too-long), ] Line too long (203/100)
workflows/migrations/0011_auto_20170328_1437.py:40: [C0301(line-too-long), ] Line too long (204/100)
workflows/migrations/0011_auto_20170328_1437.py:45: [C0301(line-too-long), ] Line too long (205/100)
workflows/migrations/0011_auto_20170328_1437.py:50: [C0301(line-too-long), ] Line too long (199/100)
workflows/migrations/0011_auto_20170328_1437.py:55: [C0301(line-too-long), ] Line too long (200/100)
workflows/migrations/0011_auto_20170328_1437.py:60: [C0301(line-too-long), ] Line too long (202/100)
workflows/migrations/0011_auto_20170328_1437.py:65: [C0301(line-too-long), ] Line too long (203/100)
workflows/migrations/0011_auto_20170328_1437.py:1: [C0103(invalid-name), ] Module name "0011_auto_20170328_1437" doesn't conform to snake_case naming style
workflows/migrations/0011_auto_20170328_1437.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0011_auto_20170328_1437.py:5: [E0401(import-error), ] Unable to import 'django.conf'
workflows/migrations/0011_auto_20170328_1437.py:6: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0011_auto_20170328_1437.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0011_auto_20170328_1437.py:10: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0011_auto_20170328_1437.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0010_auto_20170223_1417
workflows/migrations/0010_auto_20170223_1417.py:19: [C0301(line-too-long), ] Line too long (155/100)
workflows/migrations/0010_auto_20170223_1417.py:1: [C0103(invalid-name), ] Module name "0010_auto_20170223_1417" doesn't conform to snake_case naming style
workflows/migrations/0010_auto_20170223_1417.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0010_auto_20170223_1417.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0010_auto_20170223_1417.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0010_auto_20170223_1417.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0010_auto_20170223_1417.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0001_initial
workflows/migrations/0001_initial.py:23: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0001_initial.py:27: [C0301(line-too-long), ] Line too long (101/100)
workflows/migrations/0001_initial.py:28: [C0301(line-too-long), ] Line too long (212/100)
workflows/migrations/0001_initial.py:29: [C0301(line-too-long), ] Line too long (214/100)
workflows/migrations/0001_initial.py:40: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0001_initial.py:44: [C0301(line-too-long), ] Line too long (219/100)
workflows/migrations/0001_initial.py:45: [C0301(line-too-long), ] Line too long (153/100)
workflows/migrations/0001_initial.py:46: [C0301(line-too-long), ] Line too long (181/100)
workflows/migrations/0001_initial.py:47: [C0301(line-too-long), ] Line too long (221/100)
workflows/migrations/0001_initial.py:59: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0001_initial.py:63: [C0301(line-too-long), ] Line too long (101/100)
workflows/migrations/0001_initial.py:68: [C0301(line-too-long), ] Line too long (221/100)
workflows/migrations/0001_initial.py:69: [C0301(line-too-long), ] Line too long (223/100)
workflows/migrations/0001_initial.py:80: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0001_initial.py:84: [C0301(line-too-long), ] Line too long (140/100)
workflows/migrations/0001_initial.py:85: [C0301(line-too-long), ] Line too long (216/100)
workflows/migrations/0001_initial.py:86: [C0301(line-too-long), ] Line too long (218/100)
workflows/migrations/0001_initial.py:87: [C0301(line-too-long), ] Line too long (170/100)
workflows/migrations/0001_initial.py:88: [C0301(line-too-long), ] Line too long (170/100)
workflows/migrations/0001_initial.py:89: [C0301(line-too-long), ] Line too long (164/100)
workflows/migrations/0001_initial.py:100: [C0301(line-too-long), ] Line too long (114/100)
workflows/migrations/0001_initial.py:104: [C0301(line-too-long), ] Line too long (140/100)
workflows/migrations/0001_initial.py:105: [C0301(line-too-long), ] Line too long (219/100)
workflows/migrations/0001_initial.py:106: [C0301(line-too-long), ] Line too long (153/100)
workflows/migrations/0001_initial.py:107: [C0301(line-too-long), ] Line too long (221/100)
workflows/migrations/0001_initial.py:108: [C0301(line-too-long), ] Line too long (174/100)
workflows/migrations/0001_initial.py:109: [C0301(line-too-long), ] Line too long (174/100)
workflows/migrations/0001_initial.py:120: [C0301(line-too-long), ] Line too long (164/100)
workflows/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
workflows/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.conf'
workflows/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0001_initial.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0001_initial.py:10: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0001_initial.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0007_auto_20170213_1500
workflows/migrations/0007_auto_20170213_1500.py:19: [C0301(line-too-long), ] Line too long (145/100)
workflows/migrations/0007_auto_20170213_1500.py:24: [C0301(line-too-long), ] Line too long (136/100)
workflows/migrations/0007_auto_20170213_1500.py:1: [C0103(invalid-name), ] Module name "0007_auto_20170213_1500" doesn't conform to snake_case naming style
workflows/migrations/0007_auto_20170213_1500.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0007_auto_20170213_1500.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0007_auto_20170213_1500.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0007_auto_20170213_1500.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0007_auto_20170213_1500.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0002_auto_20160913_1515
workflows/migrations/0002_auto_20160913_1515.py:17: [C0301(line-too-long), ] Line too long (128/100)
workflows/migrations/0002_auto_20160913_1515.py:1: [C0103(invalid-name), ] Module name "0002_auto_20160913_1515" doesn't conform to snake_case naming style
workflows/migrations/0002_auto_20160913_1515.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0002_auto_20160913_1515.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0002_auto_20160913_1515.py:8: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0002_auto_20160913_1515.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module workflows.migrations.0006_auto_20170127_1712
workflows/migrations/0006_auto_20170127_1712.py:34: [C0301(line-too-long), ] Line too long (144/100)
workflows/migrations/0006_auto_20170127_1712.py:39: [C0301(line-too-long), ] Line too long (135/100)
workflows/migrations/0006_auto_20170127_1712.py:1: [C0103(invalid-name), ] Module name "0006_auto_20170127_1712" doesn't conform to snake_case naming style
workflows/migrations/0006_auto_20170127_1712.py:1: [C0111(missing-docstring), ] Missing module docstring
workflows/migrations/0006_auto_20170127_1712.py:5: [E0401(import-error), ] Unable to import 'django.db'
workflows/migrations/0006_auto_20170127_1712.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
workflows/migrations/0006_auto_20170127_1712.py:9: [C0111(missing-docstring), Migration] Missing class docstring
workflows/migrations/0006_auto_20170127_1712.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol.tests
sol/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
sol/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module sol.urls
sol/urls.py:100: [W0511(fixme), ] TODO JWT check if convenient
sol/urls.py:87: [C0301(line-too-long), ] Line too long (102/100)
sol/urls.py:19: [E0401(import-error), ] Unable to import 'django.conf'
sol/urls.py:20: [E0401(import-error), ] Unable to import 'django.conf.urls'
sol/urls.py:21: [E0401(import-error), ] Unable to import 'django.contrib'
sol/urls.py:22: [E0401(import-error), ] Unable to import 'rest_framework'
sol/urls.py:24: [E0401(import-error), ] Unable to import 'ajax_select'
sol/urls.py:39: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
sol/urls.py:79: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
sol/urls.py:84: [C0103(invalid-name), ] Constant name "base_api" doesn't conform to UPPER_CASE naming style
sol/urls.py:93: [E0401(import-error), ] Unable to import 'debug_toolbar'
************* Module sol.apps
sol/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol/apps.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol/apps.py:5: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol/apps.py:8: [C0111(missing-docstring), SolConfig] Missing class docstring
sol/apps.py:11: [C0111(missing-docstring), SolConfig.ready] Missing method docstring
sol/apps.py:11: [R0201(no-self-use), SolConfig.ready] Method could be a function
sol/apps.py:8: [R0903(too-few-public-methods), SolConfig] Too few public methods (1/2)
************* Module sol.views
sol/views.py:20: [C0301(line-too-long), ] Line too long (108/100)
sol/views.py:50: [C0301(line-too-long), ] Line too long (113/100)
sol/views.py:51: [C0301(line-too-long), ] Line too long (114/100)
sol/views.py:60: [C0301(line-too-long), ] Line too long (112/100)
sol/views.py:70: [C0301(line-too-long), ] Line too long (103/100)
sol/views.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/views.py:6: [E0401(import-error), ] Unable to import 'django.utils.text'
sol/views.py:7: [E0401(import-error), ] Unable to import 'django.contrib.auth.password_validation'
sol/views.py:11: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/views.py:16: [W0401(wildcard-import), ] Wildcard import serializers
sol/views.py:18: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/views.py:19: [E0401(import-error), ] Unable to import 'rest_framework_swagger.renderers'
sol/views.py:20: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol/views.py:21: [E0401(import-error), ] Unable to import 'rest_framework'
sol/views.py:22: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol/views.py:23: [E0401(import-error), ] Unable to import 'rest_framework.permissions'
sol/views.py:24: [E0401(import-error), ] Unable to import 'rest_framework.authentication'
sol/views.py:25: [E0401(import-error), ] Unable to import 'rest_framework.fields'
sol/views.py:26: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/views.py:27: [E0401(import-error), ] Unable to import 'rest_auth.views'
sol/views.py:49: [C0111(missing-docstring), LoginViewNoSession] Missing class docstring
sol/views.py:49: [R0903(too-few-public-methods), LoginViewNoSession] Too few public methods (0/2)
sol/views.py:62: [C0111(missing-docstring), LoginViewNoAuthentication] Missing class docstring
sol/views.py:62: [R0903(too-few-public-methods), LoginViewNoAuthentication] Too few public methods (0/2)
sol/views.py:125: [C0111(missing-docstring), validate_password] Missing function docstring
sol/views.py:125: [W0613(unused-argument), validate_password] Unused argument 'args'
sol/views.py:125: [W0613(unused-argument), validate_password] Unused argument 'kwargs'
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import SolLoginSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import SolTokenSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import SolUserDetailsSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import SolPasswordResetSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import datetime from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import import_module from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import render_to_string from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import authenticate from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import settings from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import serializers from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import TokenModel from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import PasswordResetSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import TokenSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import UserDetailsSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import LoginSerializer from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import get_permissions_action_name_from_method from wildcard import
sol/views.py:16: [W0614(unused-wildcard-import), ] Unused import roles_field_to_name from wildcard import
sol/views.py:18: [C0411(wrong-import-order), ] third party import "from rest_framework.settings import api_settings" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:19: [C0411(wrong-import-order), ] third party import "from rest_framework_swagger.renderers import OpenAPIRenderer, SwaggerUIRenderer" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:20: [C0411(wrong-import-order), ] third party import "from rest_framework.decorators import api_view, renderer_classes, permission_classes, authentication_classes" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:21: [C0411(wrong-import-order), ] third party import "from rest_framework import schemas, status" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:22: [C0411(wrong-import-order), ] third party import "from rest_framework.response import Response" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:23: [C0411(wrong-import-order), ] third party import "from rest_framework.permissions import IsAuthenticated" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:24: [C0411(wrong-import-order), ] third party import "from rest_framework.authentication import SessionAuthentication" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:25: [C0411(wrong-import-order), ] third party import "from rest_framework.fields import get_error_detail" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:26: [C0411(wrong-import-order), ] third party import "from rest_framework.exceptions import ValidationError" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:27: [C0411(wrong-import-order), ] third party import "from rest_auth.views import LoginView" should be placed before "from sol.utils import set_throttle_scope"
sol/views.py:28: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
sol/views.py:29: [C0411(wrong-import-order), ] first party import "from sol.api.permissions import IsSuperUser" should be placed before "from .serializers import *"
sol/views.py:20: [C0412(ungrouped-imports), ] Imports from package rest_framework are not grouped
sol/views.py:28: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module sol.routers
sol/routers.py:8: [C0301(line-too-long), ] Line too long (124/100)
sol/routers.py:11: [C0301(line-too-long), ] Line too long (122/100)
sol/routers.py:17: [C0301(line-too-long), ] Line too long (120/100)
sol/routers.py:6: [R0205(useless-object-inheritance), SolLegacyRouter] Class 'SolLegacyRouter' inherits from object, can be safely removed from bases in python3
sol/routers.py:26: [W0212(protected-access), SolLegacyRouter.db_for_read] Access to a protected member _meta of a client class
sol/routers.py:23: [W0613(unused-argument), SolLegacyRouter.db_for_read] Unused argument 'hints'
sol/routers.py:31: [W0212(protected-access), SolLegacyRouter.db_for_write] Access to a protected member _meta of a client class
sol/routers.py:28: [W0613(unused-argument), SolLegacyRouter.db_for_write] Unused argument 'hints'
sol/routers.py:36: [W0212(protected-access), SolLegacyRouter.allow_relation] Access to a protected member _meta of a client class
sol/routers.py:37: [W0212(protected-access), SolLegacyRouter.allow_relation] Access to a protected member _meta of a client class
sol/routers.py:33: [W0613(unused-argument), SolLegacyRouter.allow_relation] Unused argument 'hints'
sol/routers.py:40: [C0103(invalid-name), SolLegacyRouter.allow_migrate] Argument name "db" doesn't conform to snake_case naming style
sol/routers.py:45: [W0212(protected-access), SolLegacyRouter.allow_migrate] Access to a protected member _meta of a client class
sol/routers.py:40: [W0613(unused-argument), SolLegacyRouter.allow_migrate] Unused argument 'db'
sol/routers.py:40: [W0613(unused-argument), SolLegacyRouter.allow_migrate] Unused argument 'app_label'
sol/routers.py:40: [W0613(unused-argument), SolLegacyRouter.allow_migrate] Unused argument 'model_name'
************* Module sol.serializers
sol/serializers.py:110: [W0511(fixme), ] TODO: roles are not strictly needed and couple sol with sol_users!
sol/serializers.py:50: [C0301(line-too-long), ] Line too long (113/100)
sol/serializers.py:130: [C0301(line-too-long), ] Line too long (115/100)
sol/serializers.py:134: [C0301(line-too-long), ] Line too long (118/100)
sol/serializers.py:136: [C0301(line-too-long), ] Line too long (122/100)
sol/serializers.py:144: [C0301(line-too-long), ] Line too long (112/100)
sol/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/serializers.py:7: [E0401(import-error), ] Unable to import 'django.template.loader'
sol/serializers.py:8: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/serializers.py:9: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol/serializers.py:10: [E0401(import-error), ] Unable to import 'django.conf'
sol/serializers.py:11: [E0401(import-error), ] Unable to import 'rest_framework'
sol/serializers.py:12: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/serializers.py:13: [E0401(import-error), ] Unable to import 'rest_auth.models'
sol/serializers.py:14: [E0401(import-error), ] Unable to import 'rest_auth.serializers'
sol/serializers.py:36: [W0212(protected-access), SolLoginSerializer._validate_username_email] Access to a protected member _request of a client class
sol/serializers.py:29: [R0903(too-few-public-methods), SolLoginSerializer] Too few public methods (0/2)
sol/serializers.py:54: [C0111(missing-docstring), SolTokenSerializer.Meta] Missing class docstring
sol/serializers.py:54: [R0903(too-few-public-methods), SolTokenSerializer.Meta] Too few public methods (0/2)
sol/serializers.py:49: [R0903(too-few-public-methods), SolTokenSerializer] Too few public methods (0/2)
sol/serializers.py:67: [C0111(missing-docstring), SolUserDetailsSerializer.validate_accepted_agreement_date] Missing method docstring
sol/serializers.py:72: [W0613(unused-argument), SolUserDetailsSerializer.is_accepted_agreement] Unused argument 'user'
sol/serializers.py:72: [R0201(no-self-use), SolUserDetailsSerializer.is_accepted_agreement] Method could be a function
sol/serializers.py:81: [C0111(missing-docstring), SolUserDetailsSerializer.get_agreement_content] Missing method docstring
sol/serializers.py:87: [C0111(missing-docstring), SolUserDetailsSerializer.get_solapplications_for_user] Missing method docstring
sol/serializers.py:94: [C0111(missing-docstring), SolUserDetailsSerializer.get_apps] Missing method docstring
sol/serializers.py:134: [W0640(cell-var-from-loop), SolUserDetailsSerializer.get_apps.<lambda>] Cell variable app_permissions_class defined in loop
sol/serializers.py:148: [C0111(missing-docstring), SolUserDetailsSerializer.Meta] Missing class docstring
sol/serializers.py:148: [R0903(too-few-public-methods), SolUserDetailsSerializer.Meta] Too few public methods (0/2)
sol/serializers.py:168: [C0111(missing-docstring), SolPasswordResetSerializer] Missing class docstring
sol/serializers.py:169: [C0111(missing-docstring), SolPasswordResetSerializer.get_email_options] Missing method docstring
sol/serializers.py:168: [R0903(too-few-public-methods), SolPasswordResetSerializer] Too few public methods (1/2)
************* Module sol.wsgi
sol/wsgi.py:12: [E0401(import-error), ] Unable to import 'django.core.wsgi'
sol/wsgi.py:16: [C0103(invalid-name), ] Constant name "application" doesn't conform to UPPER_CASE naming style
************* Module sol
sol/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/__init__.py:3: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module sol.validators
sol/validators.py:151: [W0511(fixme), ] TODO: check this. Code taken from this same method of UniqueValidator, file rest_framework/validation.py
sol/validators.py:21: [C0301(line-too-long), ] Line too long (116/100)
sol/validators.py:39: [C0301(line-too-long), ] Line too long (116/100)
sol/validators.py:151: [C0301(line-too-long), ] Line too long (114/100)
sol/validators.py:173: [C0326(bad-whitespace), ] Exactly one space required after comma
    def __init__(self,instance=None, field_names=None, ):
                     ^
sol/validators.py:176: [C0326(bad-whitespace), ] Exactly one space required around assignment
        self.field_names=field_names
                        ^
sol/validators.py:180: [C0326(bad-whitespace), ] Exactly one space required after comma
        self.instance = getattr(serializer,'instance',None)
                                          ^
sol/validators.py:180: [C0326(bad-whitespace), ] Exactly one space required after comma
        self.instance = getattr(serializer,'instance',None)
                                                     ^
sol/validators.py:220: [C0301(line-too-long), ] Line too long (145/100)
sol/validators.py:223: [C0301(line-too-long), ] Line too long (115/100)
sol/validators.py:233: [C0301(line-too-long), ] Line too long (108/100)
sol/validators.py:234: [C0301(line-too-long), ] Line too long (103/100)
sol/validators.py:236: [C0301(line-too-long), ] Line too long (119/100)
sol/validators.py:238: [C0301(line-too-long), ] Line too long (114/100)
sol/validators.py:239: [C0301(line-too-long), ] Line too long (114/100)
sol/validators.py:256: [C0301(line-too-long), ] Line too long (119/100)
sol/validators.py:294: [C0301(line-too-long), ] Line too long (103/100)
sol/validators.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/validators.py:3: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/validators.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
sol/validators.py:5: [E0401(import-error), ] Unable to import 'django.db.models.functions'
sol/validators.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/validators.py:7: [E0401(import-error), ] Unable to import 'rest_framework'
sol/validators.py:8: [E0401(import-error), ] Unable to import 'rest_framework.validators'
sol/validators.py:13: [C0111(missing-docstring), RequiredTogetherValidator] Missing class docstring
sol/validators.py:13: [R0205(useless-object-inheritance), RequiredTogetherValidator] Class 'RequiredTogetherValidator' inherits from object, can be safely removed from bases in python3
sol/validators.py:52: [R1720(no-else-raise), RequiredTogetherValidator.__call__] Unnecessary "else" after "raise"
sol/validators.py:58: [C0111(missing-docstring), DependentRequiredValidator] Missing class docstring
sol/validators.py:58: [R0205(useless-object-inheritance), DependentRequiredValidator] Class 'DependentRequiredValidator' inherits from object, can be safely removed from bases in python3
sol/validators.py:91: [R1720(no-else-raise), DependentRequiredValidator.__call__] Unnecessary "else" after "raise"
sol/validators.py:97: [C0111(missing-docstring), RequiredOnCreationValidator] Missing class docstring
sol/validators.py:97: [R0205(useless-object-inheritance), RequiredOnCreationValidator] Class 'RequiredOnCreationValidator' inherits from object, can be safely removed from bases in python3
sol/validators.py:127: [R1720(no-else-raise), RequiredOnCreationValidator.__call__] Unnecessary "else" after "raise"
sol/validators.py:133: [C0111(missing-docstring), WriteOnceValidator] Missing class docstring
sol/validators.py:133: [R0205(useless-object-inheritance), WriteOnceValidator] Class 'WriteOnceValidator' inherits from object, can be safely removed from bases in python3
sol/validators.py:164: [R1720(no-else-raise), WriteOnceValidator.__call__] Unnecessary "else" after "raise"
sol/validators.py:170: [C0111(missing-docstring), UpdateForceRequiredFieldsValidator] Missing class docstring
sol/validators.py:170: [R0205(useless-object-inheritance), UpdateForceRequiredFieldsValidator] Class 'UpdateForceRequiredFieldsValidator' inherits from object, can be safely removed from bases in python3
sol/validators.py:178: [C0111(missing-docstring), UpdateForceRequiredFieldsValidator.set_context] Missing method docstring
sol/validators.py:185: [C1801(len-as-condition), UpdateForceRequiredFieldsValidator.__call__] Do not use `len(SEQUENCE)` to determine if a sequence is empty
sol/validators.py:189: [R1720(no-else-raise), UpdateForceRequiredFieldsValidator.__call__] Unnecessary "else" after "raise"
sol/validators.py:195: [C0111(missing-docstring), UniqueTogetherValidatorRelated] Missing class docstring
sol/validators.py:202: [C0111(missing-docstring), UniqueTogetherValidatorRelated.set_context] Missing method docstring
sol/validators.py:206: [C0111(missing-docstring), UniqueTogetherValidatorRelated.filter_queryset] Missing method docstring
sol/validators.py:208: [W0212(protected-access), UniqueTogetherValidatorRelated.filter_queryset] Access to a protected member _meta of a client class
sol/validators.py:214: [C0103(invalid-name), UniqueTogetherValidatorRelated.filter_queryset] Variable name "qs" doesn't conform to snake_case naming style
sol/validators.py:225: [C0103(invalid-name), UniqueTogetherValidatorRelated.filter_queryset] Variable name "qs" doesn't conform to snake_case naming style
sol/validators.py:212: [W0201(attribute-defined-outside-init), UniqueTogetherValidatorRelated.filter_queryset] Attribute 'fields' defined outside __init__
sol/validators.py:227: [W0201(attribute-defined-outside-init), UniqueTogetherValidatorRelated.filter_queryset] Attribute 'fields' defined outside __init__
sol/validators.py:232: [R0205(useless-object-inheritance), PermissionsBasedValidators] Class 'PermissionsBasedValidators' inherits from object, can be safely removed from bases in python3
************* Module sol.async_jobs
sol/async_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/async_jobs.py:3: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol/async_jobs.py:4: [E0401(import-error), ] Unable to import 'django_rq'
sol/async_jobs.py:15: [C0111(missing-docstring), export_queryset_async] Missing function docstring
sol/async_jobs.py:15: [R0913(too-many-arguments), export_queryset_async] Too many arguments (9/5)
sol/async_jobs.py:15: [R0914(too-many-locals), export_queryset_async] Too many local variables (21/15)
sol/async_jobs.py:27: [E0401(import-error), export_queryset_async] Unable to import 'django.utils.module_loading'
sol/async_jobs.py:32: [W0212(protected-access), export_queryset_async] Access to a protected member _meta of a client class
sol/async_jobs.py:33: [W0212(protected-access), export_queryset_async] Access to a protected member _meta of a client class
************* Module sol.models
sol/models.py:53: [C0301(line-too-long), ] Line too long (107/100)
sol/models.py:54: [C0301(line-too-long), ] Line too long (112/100)
sol/models.py:80: [C0301(line-too-long), ] Line too long (104/100)
sol/models.py:93: [C0301(line-too-long), ] Line too long (105/100)
sol/models.py:94: [C0301(line-too-long), ] Line too long (103/100)
sol/models.py:95: [C0301(line-too-long), ] Line too long (106/100)
sol/models.py:127: [C0301(line-too-long), ] Line too long (101/100)
sol/models.py:133: [C0301(line-too-long), ] Line too long (115/100)
sol/models.py:144: [C0301(line-too-long), ] Line too long (112/100)
sol/models.py:145: [C0301(line-too-long), ] Line too long (114/100)
sol/models.py:150: [C0301(line-too-long), ] Line too long (113/100)
sol/models.py:159: [C0301(line-too-long), ] Line too long (115/100)
sol/models.py:181: [C0301(line-too-long), ] Line too long (102/100)
sol/models.py:187: [C0330(bad-continuation), ] Wrong continued indentation (remove 3 spaces).
                       and isinstance(r.get('permissions_filter_foreign_field'), str)
                    |  ^
sol/models.py:209: [C0301(line-too-long), ] Line too long (116/100)
sol/models.py:230: [C0301(line-too-long), ] Line too long (117/100)
sol/models.py:272: [C0301(line-too-long), ] Line too long (118/100)
sol/models.py:273: [C0301(line-too-long), ] Line too long (106/100)
sol/models.py:306: [C0301(line-too-long), ] Line too long (106/100)
sol/models.py:358: [C0301(line-too-long), ] Line too long (104/100)
sol/models.py:404: [C0301(line-too-long), ] Line too long (102/100)
sol/models.py:428: [C0305(trailing-newlines), ] Trailing newlines
sol/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/models.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol/models.py:6: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.fields'
sol/models.py:7: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol/models.py:8: [E0401(import-error), ] Unable to import 'django.db'
sol/models.py:9: [E0401(import-error), ] Unable to import 'django.db'
sol/models.py:10: [E0401(import-error), ] Unable to import 'django.conf'
sol/models.py:11: [E0401(import-error), ] Unable to import 'django.db.models'
sol/models.py:12: [E0401(import-error), ] Unable to import 'django.db.models'
sol/models.py:13: [E0401(import-error), ] Unable to import 'django.db.models'
sol/models.py:14: [E0401(import-error), ] Unable to import 'django.db.models.expressions'
sol/models.py:15: [E0401(import-error), ] Unable to import 'django.db.models.sql.query'
sol/models.py:16: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/models.py:17: [E0401(import-error), ] Unable to import 'django.apps'
sol/models.py:18: [E0401(import-error), ] Unable to import 'django.utils.timezone'
sol/models.py:19: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol/models.py:33: [C0111(missing-docstring), OrderByChoiceLabelQuerySetMixin] Missing class docstring
sol/models.py:33: [R0205(useless-object-inheritance), OrderByChoiceLabelQuerySetMixin] Class 'OrderByChoiceLabelQuerySetMixin' inherits from object, can be safely removed from bases in python3
sol/models.py:41: [W0212(protected-access), OrderByChoiceLabelQuerySetMixin._clone] Access to a protected member _order_by_using_choices_keys of a client class
sol/models.py:44: [C0111(missing-docstring), OrderByChoiceLabelQuerySetMixin.order_by_using_choices_keys] Missing method docstring
sol/models.py:44: [W0613(unused-argument), OrderByChoiceLabelQuerySetMixin.order_by_using_choices_keys] Unused argument 'kwargs'
sol/models.py:48: [C0111(missing-docstring), OrderByChoiceLabelQuerySetMixin.order_by] Missing method docstring
sol/models.py:56: [R1719(simplifiable-if-expression), OrderByChoiceLabelQuerySetMixin.order_by] The if expression can be replaced with 'test'
sol/models.py:66: [W0702(bare-except), OrderByChoiceLabelQuerySetMixin.order_by] No exception type(s) specified
sol/models.py:74: [C0111(missing-docstring), OrderByChoiceLabelQuerySet] Missing class docstring
sol/models.py:78: [C0111(missing-docstring), PermissionsSolQuerySet] Missing class docstring
sol/models.py:87: [W0212(protected-access), PermissionsSolQuerySet._clone] Access to a protected member _permissions_filter_annotations of a client class
sol/models.py:88: [W0212(protected-access), PermissionsSolQuerySet._clone] Access to a protected member _permissions_filter_annotations_applied of a client class
sol/models.py:91: [C0111(missing-docstring), PermissionsSolQuerySet.get_permissions_filter_annotations] Missing method docstring
sol/models.py:98: [C0111(missing-docstring), PermissionsSolQuerySet.apply_permissions_filter_annotations] Missing method docstring
sol/models.py:102: [C0103(invalid-name), PermissionsSolQuerySet.apply_permissions_filter_annotations] Variable name "qs" doesn't conform to snake_case naming style
sol/models.py:103: [W0212(protected-access), PermissionsSolQuerySet.apply_permissions_filter_annotations] Access to a protected member _permissions_filter_annotations_applied of a client class
sol/models.py:106: [C0111(missing-docstring), PermissionsSolQuerySet.permissions_filter] Missing method docstring
sol/models.py:172: [C0111(missing-docstring), PermissionsSolModel.get_permissions_filter_annotations] Missing method docstring
sol/models.py:172: [R0914(too-many-locals), PermissionsSolModel.get_permissions_filter_annotations] Too many local variables (29/15)
sol/models.py:243: [C0103(invalid-name), PermissionsSolModel.get_permissions_filter_annotations] Variable name "p" doesn't conform to snake_case naming style
sol/models.py:172: [W0613(unused-argument), PermissionsSolModel.get_permissions_filter_annotations] Unused argument 'args'
sol/models.py:272: [C0111(missing-docstring), PermissionsSolModel.apply_permissions_filter_annotations] Missing method docstring
sol/models.py:272: [W1113(keyword-arg-before-vararg), PermissionsSolModel.apply_permissions_filter_annotations] Keyword argument before variable positional arguments list in the definition of apply_permissions_filter_annotations function
sol/models.py:279: [C0103(invalid-name), PermissionsSolModel.apply_permissions_filter_annotations] Variable name "f" doesn't conform to snake_case naming style
sol/models.py:285: [C0103(invalid-name), PermissionsSolModel.apply_permissions_filter_annotations] Variable name "f" doesn't conform to snake_case naming style
sol/models.py:273: [W0612(unused-variable), PermissionsSolModel.apply_permissions_filter_annotations] Unused variable 'exclude_apply'
sol/models.py:313: [C0111(missing-docstring), PermissionsSolModel.Meta] Missing class docstring
sol/models.py:313: [R0903(too-few-public-methods), PermissionsSolModel.Meta] Too few public methods (0/2)
sol/models.py:317: [C0111(missing-docstring), TrackedSolModel] Missing class docstring
sol/models.py:337: [C0111(missing-docstring), TrackedSolModel.save] Missing method docstring
sol/models.py:347: [C0111(missing-docstring), TrackedSolModel.Meta] Missing class docstring
sol/models.py:347: [R0903(too-few-public-methods), TrackedSolModel.Meta] Too few public methods (0/2)
sol/models.py:317: [R0903(too-few-public-methods), TrackedSolModel] Too few public methods (1/2)
sol/models.py:351: [C0111(missing-docstring), BaseSolModel] Missing class docstring
sol/models.py:352: [C0111(missing-docstring), BaseSolModel.Meta] Missing class docstring
sol/models.py:352: [R0903(too-few-public-methods), BaseSolModel.Meta] Too few public methods (0/2)
sol/models.py:356: [C0111(missing-docstring), BaseSolModelLogicalDeleteManager] Missing class docstring
sol/models.py:357: [C0111(missing-docstring), BaseSolModelLogicalDeleteManager.get_queryset] Missing method docstring
sol/models.py:356: [R0903(too-few-public-methods), BaseSolModelLogicalDeleteManager] Too few public methods (1/2)
sol/models.py:361: [C0111(missing-docstring), BaseSolModelLogicalDelete] Missing class docstring
sol/models.py:370: [C0111(missing-docstring), BaseSolModelLogicalDelete.Meta] Missing class docstring
sol/models.py:370: [R0903(too-few-public-methods), BaseSolModelLogicalDelete.Meta] Too few public methods (0/2)
sol/models.py:374: [C0111(missing-docstring), BaseSolModelLogicalDelete.delete] Missing method docstring
sol/models.py:374: [W0613(unused-argument), BaseSolModelLogicalDelete.delete] Unused argument 'keep_parents'
sol/models.py:389: [C0111(missing-docstring), HistoryItem] Missing class docstring
sol/models.py:413: [C0111(missing-docstring), HistoryItem.permissions_filter] Missing method docstring
sol/models.py:413: [W0613(unused-argument), HistoryItem.permissions_filter] Unused argument 'args'
sol/models.py:413: [W0613(unused-argument), HistoryItem.permissions_filter] Unused argument 'kwargs'
sol/models.py:416: [C0111(missing-docstring), HistoryItem.Meta] Missing class docstring
sol/models.py:416: [R0903(too-few-public-methods), HistoryItem.Meta] Too few public methods (0/2)
************* Module sol.management.commands.clean_old_job_results
sol/management/commands/clean_old_job_results.py:52: [C0305(trailing-newlines), ] Trailing newlines
sol/management/commands/clean_old_job_results.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/management/commands/clean_old_job_results.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol/management/commands/clean_old_job_results.py:5: [E0401(import-error), ] Unable to import 'django.core.management.base'
sol/management/commands/clean_old_job_results.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/management/commands/clean_old_job_results.py:7: [E0401(import-error), ] Unable to import 'rq.exceptions'
sol/management/commands/clean_old_job_results.py:8: [E0401(import-error), ] Unable to import 'rq.registry'
sol/management/commands/clean_old_job_results.py:9: [E0401(import-error), ] Unable to import 'rq.job'
sol/management/commands/clean_old_job_results.py:10: [E0401(import-error), ] Unable to import 'django_rq'
sol/management/commands/clean_old_job_results.py:14: [C0103(invalid-name), ] Constant name "connection" doesn't conform to UPPER_CASE naming style
sol/management/commands/clean_old_job_results.py:17: [C0111(missing-docstring), Command] Missing class docstring
sol/management/commands/clean_old_job_results.py:21: [C0111(missing-docstring), Command.add_arguments] Missing method docstring
sol/management/commands/clean_old_job_results.py:21: [R0201(no-self-use), Command.add_arguments] Method could be a function
sol/management/commands/clean_old_job_results.py:27: [C0111(missing-docstring), Command.handle] Missing method docstring
sol/management/commands/clean_old_job_results.py:38: [C0103(invalid-name), Command.handle] Variable name "e" doesn't conform to snake_case naming style
sol/management/commands/clean_old_job_results.py:27: [W0613(unused-argument), Command.handle] Unused argument 'args'
************* Module sol.fields.json_dynamic
sol/fields/json_dynamic.py:128: [W0511(fixme), ] TODO: find a better approach, to me the only one alternative seems to invert from whitelist to a blacklist,
sol/fields/json_dynamic.py:265: [W0511(fixme), ] TODO: hardcoded 'dynamic_data' make this object non reusable.
sol/fields/json_dynamic.py:271: [W0511(fixme), ] TODO: this is a bad error, manage it somehow, maybe log it?
sol/fields/json_dynamic.py:274: [W0511(fixme), ] TODO: this indicates bad formulas, manage it somehow, maybe log it?
sol/fields/json_dynamic.py:353: [W0511(fixme), ] TODO: consider make this configurable also by a constructor argument (and a 'ruling' instance property?)
sol/fields/json_dynamic.py:490: [W0511(fixme), ] TODO: Investigate different scenarios, when in creation of an object, parent_instance is None.
sol/fields/json_dynamic.py:492: [W0511(fixme), ] TODO: needed to set self.fields, for more explicit code, decouple it from field definitions maybe.
sol/fields/json_dynamic.py:501: [W0511(fixme), ] TODO: passing 'from_internal' kwarg is not very elegant, but it seems necessary to me to distinguish
sol/fields/json_dynamic.py:128: [C0301(line-too-long), ] Line too long (109/100)
sol/fields/json_dynamic.py:129: [C0301(line-too-long), ] Line too long (109/100)
sol/fields/json_dynamic.py:134: [C0301(line-too-long), ] Line too long (102/100)
sol/fields/json_dynamic.py:198: [C0301(line-too-long), ] Line too long (120/100)
sol/fields/json_dynamic.py:235: [C0301(line-too-long), ] Line too long (109/100)
sol/fields/json_dynamic.py:275: [C0301(line-too-long), ] Line too long (120/100)
sol/fields/json_dynamic.py:291: [C0301(line-too-long), ] Line too long (112/100)
sol/fields/json_dynamic.py:292: [C0301(line-too-long), ] Line too long (110/100)
sol/fields/json_dynamic.py:293: [C0301(line-too-long), ] Line too long (118/100)
sol/fields/json_dynamic.py:353: [C0301(line-too-long), ] Line too long (114/100)
sol/fields/json_dynamic.py:354: [C0301(line-too-long), ] Line too long (101/100)
sol/fields/json_dynamic.py:407: [C0301(line-too-long), ] Line too long (105/100)
sol/fields/json_dynamic.py:408: [C0301(line-too-long), ] Line too long (105/100)
sol/fields/json_dynamic.py:443: [C0301(line-too-long), ] Line too long (102/100)
sol/fields/json_dynamic.py:444: [C0301(line-too-long), ] Line too long (165/100)
sol/fields/json_dynamic.py:482: [C0301(line-too-long), ] Line too long (118/100)
sol/fields/json_dynamic.py:490: [C0301(line-too-long), ] Line too long (104/100)
sol/fields/json_dynamic.py:492: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/json_dynamic.py:501: [C0301(line-too-long), ] Line too long (114/100)
sol/fields/json_dynamic.py:503: [C0301(line-too-long), ] Line too long (116/100)
sol/fields/json_dynamic.py:520: [C0301(line-too-long), ] Line too long (147/100)
sol/fields/json_dynamic.py:558: [C0301(line-too-long), ] Line too long (109/100)
sol/fields/json_dynamic.py:570: [C0301(line-too-long), ] Line too long (113/100)
sol/fields/json_dynamic.py:583: [C0301(line-too-long), ] Line too long (114/100)
sol/fields/json_dynamic.py:587: [C0301(line-too-long), ] Line too long (120/100)
sol/fields/json_dynamic.py:615: [C0301(line-too-long), ] Line too long (120/100)
sol/fields/json_dynamic.py:647: [C0301(line-too-long), ] Line too long (116/100)
sol/fields/json_dynamic.py:668: [C0301(line-too-long), ] Line too long (106/100)
sol/fields/json_dynamic.py:670: [C0301(line-too-long), ] Line too long (113/100)
sol/fields/json_dynamic.py:685: [C0301(line-too-long), ] Line too long (110/100)
sol/fields/json_dynamic.py:689: [C0301(line-too-long), ] Line too long (107/100)
sol/fields/json_dynamic.py:690: [C0301(line-too-long), ] Line too long (112/100)
sol/fields/json_dynamic.py:778: [C0301(line-too-long), ] Line too long (102/100)
sol/fields/json_dynamic.py:779: [C0301(line-too-long), ] Line too long (104/100)
sol/fields/json_dynamic.py:780: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/json_dynamic.py:781: [C0301(line-too-long), ] Line too long (110/100)
sol/fields/json_dynamic.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/fields/json_dynamic.py:6: [E0401(import-error), ] Unable to import 'django.contrib.postgres'
sol/fields/json_dynamic.py:7: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
sol/fields/json_dynamic.py:8: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/fields/json_dynamic.py:9: [E0401(import-error), ] Unable to import 'django.db.models'
sol/fields/json_dynamic.py:10: [E0401(import-error), ] Unable to import 'django.db.models.lookups'
sol/fields/json_dynamic.py:11: [E0401(import-error), ] Unable to import 'django.utils'
sol/fields/json_dynamic.py:12: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol/fields/json_dynamic.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/fields/json_dynamic.py:14: [E0401(import-error), ] Unable to import 'rest_framework'
sol/fields/json_dynamic.py:15: [E0401(import-error), ] Unable to import 'rest_framework'
sol/fields/json_dynamic.py:16: [E0401(import-error), ] Unable to import 'rest_framework.fields'
sol/fields/json_dynamic.py:32: [C0111(missing-docstring), MultipleChoiceFieldList.to_internal_value] Missing method docstring
sol/fields/json_dynamic.py:36: [C0111(missing-docstring), MultipleChoiceFieldList.to_representation] Missing method docstring
sol/fields/json_dynamic.py:41: [R0903(too-few-public-methods), TextareaField] Too few public methods (0/2)
sol/fields/json_dynamic.py:46: [C0103(invalid-name), ] Constant name "base_field_defaults" doesn't conform to UPPER_CASE naming style
sol/fields/json_dynamic.py:59: [C0103(invalid-name), ] Constant name "field_defaults" doesn't conform to UPPER_CASE naming style
sol/fields/json_dynamic.py:135: [C0103(invalid-name), ] Constant name "field_parameters" doesn't conform to UPPER_CASE naming style
sol/fields/json_dynamic.py:221: [C0111(missing-docstring), Struct] Missing class docstring
sol/fields/json_dynamic.py:221: [R0903(too-few-public-methods), Struct] Too few public methods (1/2)
sol/fields/json_dynamic.py:229: [C0111(missing-docstring), Mixer] Missing class docstring
sol/fields/json_dynamic.py:229: [R0205(useless-object-inheritance), Mixer] Class 'Mixer' inherits from object, can be safely removed from bases in python3
sol/fields/json_dynamic.py:234: [R0201(no-self-use), Mixer._parse_string] Method could be a function
sol/fields/json_dynamic.py:251: [R1705(no-else-return), Mixer.__getattr__.get_related_record] Unnecessary "else" after "return"
sol/fields/json_dynamic.py:229: [R0903(too-few-public-methods), Mixer] Too few public methods (1/2)
sol/fields/json_dynamic.py:314: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.Meta] Missing class docstring
sol/fields/json_dynamic.py:314: [R0903(too-few-public-methods), BaseJSONDynamicFieldsSerializer.Meta] Too few public methods (0/2)
sol/fields/json_dynamic.py:341: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.update] Missing method docstring
sol/fields/json_dynamic.py:344: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.create] Missing method docstring
sol/fields/json_dynamic.py:347: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_attribute] Missing method docstring
sol/fields/json_dynamic.py:347: [R0201(no-self-use), BaseJSONDynamicFieldsSerializer.get_attribute] Method could be a function
sol/fields/json_dynamic.py:352: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.clean_field_defs] Missing method docstring
sol/fields/json_dynamic.py:369: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_dynamic_field_defs] Missing method docstring
sol/fields/json_dynamic.py:379: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.finalize_dynamic_field_defs] Missing method docstring
sol/fields/json_dynamic.py:401: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_composite_fields] Missing method docstring
sol/fields/json_dynamic.py:416: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.apply_default_field_defs] Missing method docstring
sol/fields/json_dynamic.py:424: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.load_dynamic_field_defs] Missing method docstring
sol/fields/json_dynamic.py:428: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.add_field_class] Missing method docstring
sol/fields/json_dynamic.py:459: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_dynamic_fields_class_name] Missing method docstring
sol/fields/json_dynamic.py:464: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_dynamic_fields_type] Missing method docstring
sol/fields/json_dynamic.py:471: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_dynamic_fields_class] Missing method docstring
sol/fields/json_dynamic.py:477: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.get_dynamic_fields_instance] Missing method docstring
sol/fields/json_dynamic.py:487: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.to_internal_value] Missing method docstring
sol/fields/json_dynamic.py:534: [C0111(missing-docstring), BaseJSONDynamicFieldsSerializer.to_representation] Missing method docstring
sol/fields/json_dynamic.py:569: [R0201(no-self-use), BaseJSONDynamicFieldsSerializer.get_field_default] Method could be a function
sol/fields/json_dynamic.py:604: [C0111(missing-docstring), JSONDynamicFieldsField.get_attribute] Missing method docstring
sol/fields/json_dynamic.py:604: [R0201(no-self-use), JSONDynamicFieldsField.get_attribute] Method could be a function
sol/fields/json_dynamic.py:609: [C0111(missing-docstring), JSONDynamicFieldsField.load_serializer] Missing method docstring
sol/fields/json_dynamic.py:624: [C0111(missing-docstring), JSONDynamicFieldsField.inject_info_into_instance] Missing method docstring
sol/fields/json_dynamic.py:628: [W0212(protected-access), JSONDynamicFieldsField.inject_info_into_instance] Access to a protected member _sol_dynamic_fields_info of a client class
sol/fields/json_dynamic.py:630: [W0212(protected-access), JSONDynamicFieldsField.inject_info_into_instance] Access to a protected member _sol_dynamic_fields_info of a client class
sol/fields/json_dynamic.py:635: [C0111(missing-docstring), JSONDynamicFieldsField.to_internal_value] Missing method docstring
sol/fields/json_dynamic.py:646: [C0111(missing-docstring), JSONDynamicFieldsField.to_representation] Missing method docstring
sol/fields/json_dynamic.py:660: [C0111(missing-docstring), JSONDynamicFieldsField.get_dynamic_field_defs] Missing method docstring
sol/fields/json_dynamic.py:666: [R0205(useless-object-inheritance), JSONDynamicFieldsValueLookupMixin] Class 'JSONDynamicFieldsValueLookupMixin' inherits from object, can be safely removed from bases in python3
sol/fields/json_dynamic.py:676: [C0111(missing-docstring), JSONDynamicFieldsValueLookupMixin.process_lhs] Missing method docstring
sol/fields/json_dynamic.py:678: [W0212(protected-access), JSONDynamicFieldsValueLookupMixin.process_lhs] Access to a protected member _meta of a client class
sol/fields/json_dynamic.py:676: [W0613(unused-argument), JSONDynamicFieldsValueLookupMixin.process_lhs] Unused argument 'connection'
sol/fields/json_dynamic.py:681: [C0111(missing-docstring), JSONDynamicFieldsValueLookupMixin.process_rhs] Missing method docstring
sol/fields/json_dynamic.py:694: [C0111(missing-docstring), JSONDynamicFieldsValueLookupMixin.cast_lhs] Missing method docstring
sol/fields/json_dynamic.py:694: [W0613(unused-argument), JSONDynamicFieldsValueLookupMixin.cast_lhs] Unused argument 'compiler'
sol/fields/json_dynamic.py:703: [C0103(invalid-name), JSONDynamicFieldsValueLookupMixin._build_rhs_subquery] Variable name "qn" doesn't conform to snake_case naming style
sol/fields/json_dynamic.py:711: [W0212(protected-access), JSONDynamicFieldsValueLookupMixin._build_rhs_subquery] Access to a protected member _meta of a client class
sol/fields/json_dynamic.py:712: [W0212(protected-access), JSONDynamicFieldsValueLookupMixin._build_rhs_subquery] Access to a protected member _meta of a client class
sol/fields/json_dynamic.py:717: [C0111(missing-docstring), JSONDynamicFieldsValueLookupMixin.get_rhs_op] Missing method docstring
sol/fields/json_dynamic.py:725: [C0111(missing-docstring), JSONDynamicFieldsValueUnaccentLookupMixin] Missing class docstring
sol/fields/json_dynamic.py:730: [C0111(missing-docstring), JSONDynamicFieldsValueUnaccentLookupMixin.get_db_prep_lookup] Missing method docstring
sol/fields/json_dynamic.py:730: [W0613(unused-argument), JSONDynamicFieldsValueUnaccentLookupMixin.get_db_prep_lookup] Unused argument 'connection'
sol/fields/json_dynamic.py:730: [R0201(no-self-use), JSONDynamicFieldsValueUnaccentLookupMixin.get_db_prep_lookup] Method could be a function
sol/fields/json_dynamic.py:734: [C0111(missing-docstring), JSONDynamicFieldsValueExact] Missing class docstring
sol/fields/json_dynamic.py:739: [C0111(missing-docstring), JSONDynamicFieldsValueIExact] Missing class docstring
sol/fields/json_dynamic.py:744: [C0111(missing-docstring), JSONDynamicFieldsValueContains] Missing class docstring
sol/fields/json_dynamic.py:749: [C0111(missing-docstring), JSONDynamicFieldsValueIContains] Missing class docstring
sol/fields/json_dynamic.py:754: [C0111(missing-docstring), JSONDynamicFieldsValueUnaccentExact] Missing class docstring
sol/fields/json_dynamic.py:759: [C0111(missing-docstring), JSONDynamicFieldsValueUnaccentIExact] Missing class docstring
sol/fields/json_dynamic.py:764: [C0111(missing-docstring), JSONDynamicFieldsValueUnaccentContains] Missing class docstring
sol/fields/json_dynamic.py:769: [C0111(missing-docstring), JSONDynamicFieldsValueUnaccentIContains] Missing class docstring
************* Module sol.fields.related
sol/fields/related.py:16: [C0301(line-too-long), ] Line too long (115/100)
sol/fields/related.py:17: [C0301(line-too-long), ] Line too long (112/100)
sol/fields/related.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/fields/related.py:1: [E0401(import-error), ] Unable to import 'rest_framework.relations'
sol/fields/related.py:4: [C0111(missing-docstring), ToStringPrimaryKeyRelatedField] Missing class docstring
sol/fields/related.py:6: [C0111(missing-docstring), ToStringPrimaryKeyRelatedField.use_pk_only_optimization] Missing method docstring
sol/fields/related.py:6: [R0201(no-self-use), ToStringPrimaryKeyRelatedField.use_pk_only_optimization] Method could be a function
sol/fields/related.py:9: [C0111(missing-docstring), ToStringPrimaryKeyRelatedField.to_representation] Missing method docstring
sol/fields/related.py:9: [R0201(no-self-use), ToStringPrimaryKeyRelatedField.to_representation] Method could be a function
sol/fields/related.py:27: [C0111(missing-docstring), NoDbConstraintPrimaryKeyRelatedField.to_internal_value] Missing method docstring
sol/fields/related.py:13: [R0903(too-few-public-methods), NoDbConstraintPrimaryKeyRelatedField] Too few public methods (1/2)
************* Module sol.fields.__init__
sol/fields/__init__.py:116: [C0301(line-too-long), ] Line too long (196/100)
************* Module sol.fields
sol/fields/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module sol.fields.mime_type_and_size_restricted
sol/fields/mime_type_and_size_restricted.py:67: [C0301(line-too-long), ] Line too long (103/100)
sol/fields/mime_type_and_size_restricted.py:76: [C0301(line-too-long), ] Line too long (102/100)
sol/fields/mime_type_and_size_restricted.py:129: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/mime_type_and_size_restricted.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/fields/mime_type_and_size_restricted.py:4: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol/fields/mime_type_and_size_restricted.py:5: [E0401(import-error), ] Unable to import 'django.db.models'
sol/fields/mime_type_and_size_restricted.py:6: [E0401(import-error), ] Unable to import 'django.db.models.fields.files'
sol/fields/mime_type_and_size_restricted.py:7: [E0401(import-error), ] Unable to import 'django.core'
sol/fields/mime_type_and_size_restricted.py:8: [E0401(import-error), ] Unable to import 'django.template.defaultfilters'
sol/fields/mime_type_and_size_restricted.py:9: [E0401(import-error), ] Unable to import 'django.core.files.storage'
sol/fields/mime_type_and_size_restricted.py:10: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/fields/mime_type_and_size_restricted.py:27: [W0101(unreachable), AlwaysOverwriteFileSystemStorage.get_available_name] Unreachable code
sol/fields/mime_type_and_size_restricted.py:14: [R0903(too-few-public-methods), AlwaysOverwriteFileSystemStorage] Too few public methods (1/2)
sol/fields/mime_type_and_size_restricted.py:52: [C0111(missing-docstring), ConflictFileSystemStorage.get_available_name] Missing method docstring
sol/fields/mime_type_and_size_restricted.py:48: [R0903(too-few-public-methods), ConflictFileSystemStorage] Too few public methods (1/2)
sol/fields/mime_type_and_size_restricted.py:60: [R0205(useless-object-inheritance), MimeTypeFieldFileMixin] Class 'MimeTypeFieldFileMixin' inherits from object, can be safely removed from bases in python3
sol/fields/mime_type_and_size_restricted.py:70: [W0702(bare-except), MimeTypeFieldFileMixin._mimetype] No exception type(s) specified
sol/fields/mime_type_and_size_restricted.py:60: [R0903(too-few-public-methods), MimeTypeFieldFileMixin] Too few public methods (0/2)
sol/fields/mime_type_and_size_restricted.py:75: [R0205(useless-object-inheritance), ExistsFieldFileMixin] Class 'ExistsFieldFileMixin' inherits from object, can be safely removed from bases in python3
sol/fields/mime_type_and_size_restricted.py:78: [C0111(missing-docstring), ExistsFieldFileMixin.exists] Missing method docstring
sol/fields/mime_type_and_size_restricted.py:75: [R0903(too-few-public-methods), ExistsFieldFileMixin] Too few public methods (1/2)
sol/fields/mime_type_and_size_restricted.py:83: [C0111(missing-docstring), SolFieldFile] Missing class docstring
sol/fields/mime_type_and_size_restricted.py:83: [R0903(too-few-public-methods), SolFieldFile] Too few public methods (1/2)
sol/fields/mime_type_and_size_restricted.py:112: [C0111(missing-docstring), MimeTypeAndSizeRestrictedFileField.deconstruct] Missing method docstring
sol/fields/mime_type_and_size_restricted.py:122: [C0111(missing-docstring), MimeTypeAndSizeRestrictedFileField.clean] Missing method docstring
sol/fields/mime_type_and_size_restricted.py:125: [R1720(no-else-raise), MimeTypeAndSizeRestrictedFileField.clean] Unnecessary "elif" after "raise"
sol/fields/mime_type_and_size_restricted.py:125: [W0212(protected-access), MimeTypeAndSizeRestrictedFileField.clean] Access to a protected member _mime_type of a client class
sol/fields/mime_type_and_size_restricted.py:126: [W0212(protected-access), MimeTypeAndSizeRestrictedFileField.clean] Access to a protected member _mime_type of a client class
sol/fields/mime_type_and_size_restricted.py:128: [W0212(protected-access), MimeTypeAndSizeRestrictedFileField.clean] Access to a protected member _size of a client class
sol/fields/mime_type_and_size_restricted.py:131: [W0212(protected-access), MimeTypeAndSizeRestrictedFileField.clean] Access to a protected member _size of a client class
************* Module sol.fields.virtual
sol/fields/virtual.py:99: [W0511(fixme), ] TODO: add type checking/enforcing in to_python method?
sol/fields/virtual.py:18: [C0301(line-too-long), ] Line too long (104/100)
sol/fields/virtual.py:20: [C0301(line-too-long), ] Line too long (120/100)
sol/fields/virtual.py:30: [C0301(line-too-long), ] Line too long (116/100)
sol/fields/virtual.py:32: [C0301(line-too-long), ] Line too long (113/100)
sol/fields/virtual.py:34: [C0301(line-too-long), ] Line too long (118/100)
sol/fields/virtual.py:37: [C0301(line-too-long), ] Line too long (103/100)
sol/fields/virtual.py:74: [C0301(line-too-long), ] Line too long (116/100)
sol/fields/virtual.py:80: [C0301(line-too-long), ] Line too long (111/100)
sol/fields/virtual.py:81: [C0301(line-too-long), ] Line too long (110/100)
sol/fields/virtual.py:83: [C0301(line-too-long), ] Line too long (104/100)
sol/fields/virtual.py:125: [C0301(line-too-long), ] Line too long (105/100)
sol/fields/virtual.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/fields/virtual.py:4: [E0401(import-error), ] Unable to import 'django.db'
sol/fields/virtual.py:5: [E0401(import-error), ] Unable to import 'django.db.models.expressions'
sol/fields/virtual.py:6: [E0401(import-error), ] Unable to import 'django.db.models.signals'
sol/fields/virtual.py:7: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol/fields/virtual.py:13: [C0111(missing-docstring), ExpressionCol] Missing class docstring
sol/fields/virtual.py:17: [W0613(unused-argument), ExpressionCol.as_sql] Unused argument 'compiler'
sol/fields/virtual.py:17: [W0613(unused-argument), ExpressionCol.as_sql] Unused argument 'connection'
sol/fields/virtual.py:46: [W0613(unused-argument), BaseVirtualField.db_type] Unused argument 'connection'
sol/fields/virtual.py:46: [R0201(no-self-use), BaseVirtualField.db_type] Method could be a function
sol/fields/virtual.py:51: [C0111(missing-docstring), BaseVirtualField.get_col] Missing method docstring
sol/fields/virtual.py:54: [R1705(no-else-return), BaseVirtualField.get_col] Unnecessary "else" after "return"
sol/fields/virtual.py:54: [W0212(protected-access), BaseVirtualField.get_col] Access to a protected member _meta of a client class
sol/fields/virtual.py:60: [C0111(missing-docstring), BaseVirtualField.cached_col] Missing method docstring
sol/fields/virtual.py:61: [W0212(protected-access), BaseVirtualField.cached_col] Access to a protected member _meta of a client class
sol/fields/virtual.py:70: [W0613(unused-argument), BaseVirtualField._reset_field_value] Unused argument 'sender'
sol/fields/virtual.py:70: [W0613(unused-argument), BaseVirtualField._reset_field_value] Unused argument 'kwargs'
sol/fields/virtual.py:100: [C0111(missing-docstring), CharVirtualField] Missing class docstring
sol/fields/virtual.py:104: [C0111(missing-docstring), DecimalVirtualField] Missing class docstring
sol/fields/virtual.py:108: [C0111(missing-docstring), FloatVirtualField] Missing class docstring
sol/fields/virtual.py:112: [C0111(missing-docstring), IntegerVirtualField] Missing class docstring
sol/fields/virtual.py:116: [C0111(missing-docstring), BooleanVirtualField] Missing class docstring
sol/fields/virtual.py:136: [W0702(bare-except), ] No exception type(s) specified
sol/fields/virtual.py:128: [C0103(invalid-name), ] Constant name "virtual_field_mapping" doesn't conform to UPPER_CASE naming style
************* Module sol.fields.calculated
sol/fields/calculated.py:55: [C0301(line-too-long), ] Line too long (120/100)
sol/fields/calculated.py:68: [C0301(line-too-long), ] Line too long (111/100)
sol/fields/calculated.py:82: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/calculated.py:90: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/calculated.py:102: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/calculated.py:114: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/calculated.py:131: [C0301(line-too-long), ] Line too long (108/100)
sol/fields/calculated.py:150: [C0301(line-too-long), ] Line too long (107/100)
sol/fields/calculated.py:169: [C0301(line-too-long), ] Line too long (107/100)
sol/fields/calculated.py:189: [C0301(line-too-long), ] Line too long (107/100)
sol/fields/calculated.py:19: [E0401(import-error), ] Unable to import 'business_calendar'
sol/fields/calculated.py:28: [C0111(missing-docstring), SOLPROUnknownFunctionError] Missing class docstring
sol/fields/calculated.py:32: [C0111(missing-docstring), SOLPROAttributeError] Missing class docstring
sol/fields/calculated.py:36: [C0111(missing-docstring), SOLPROArgumentTypeError] Missing class docstring
sol/fields/calculated.py:40: [C0111(missing-docstring), Calculator] Missing class docstring
sol/fields/calculated.py:40: [R0205(useless-object-inheritance), Calculator] Class 'Calculator' inherits from object, can be safely removed from bases in python3
sol/fields/calculated.py:42: [C0111(missing-docstring), Calculator.parser] Missing method docstring
sol/fields/calculated.py:43: [C0103(invalid-name), Calculator.parser] Variable name "LPAR" doesn't conform to snake_case naming style
sol/fields/calculated.py:44: [C0103(invalid-name), Calculator.parser] Variable name "RPAR" doesn't conform to snake_case naming style
sol/fields/calculated.py:45: [C0103(invalid-name), Calculator.parser] Variable name "SCOL" doesn't conform to snake_case naming style
sol/fields/calculated.py:59: [C0111(missing-docstring), Calculator.process] Missing method docstring
sol/fields/calculated.py:69: [R1705(no-else-return), Calculator.process] Unnecessary "else" after "return"
sol/fields/calculated.py:59: [W0613(unused-argument), Calculator.process] Unused argument 'kwargs'
sol/fields/calculated.py:75: [C0103(invalid-name), Calculator._float_or_zero] Argument name "n" doesn't conform to snake_case naming style
sol/fields/calculated.py:76: [R1706(consider-using-ternary), Calculator._float_or_zero] Consider using ternary (float(n) if n != 'None' else float(0))
sol/fields/calculated.py:79: [C0111(missing-docstring), Calculator.sum] Missing method docstring
sol/fields/calculated.py:87: [C0111(missing-docstring), Calculator.diff] Missing method docstring
sol/fields/calculated.py:99: [C0111(missing-docstring), Calculator.product] Missing method docstring
sol/fields/calculated.py:111: [C0111(missing-docstring), Calculator.division] Missing method docstring
sol/fields/calculated.py:128: [C0111(missing-docstring), Calculator.date_diff] Missing method docstring
sol/fields/calculated.py:147: [C0111(missing-docstring), Calculator.date_add_days] Missing method docstring
sol/fields/calculated.py:166: [C0111(missing-docstring), Calculator.date_add_work_days] Missing method docstring
sol/fields/calculated.py:186: [C0111(missing-docstring), Calculator.mirror] Missing method docstring
sol/fields/calculated.py:191: [R1706(consider-using-ternary), Calculator.mirror] Consider using ternary (argslist[0] if argslist[0] != 'None' else None)
sol/fields/calculated.py:193: [C0111(missing-docstring), Calculator.calculate] Missing method docstring
sol/fields/calculated.py:17: [C0411(wrong-import-order), ] standard import "import inspect" should be placed before "from pyparsing import alphanums"
sol/fields/calculated.py:18: [C0411(wrong-import-order), ] standard import "from functools import reduce" should be placed before "from pyparsing import alphanums"
sol/fields/calculated.py:20: [C0411(wrong-import-order), ] standard import "import datetime" should be placed before "from pyparsing import alphanums"
sol/fields/calculated.py:21: [C0411(wrong-import-order), ] standard import "import time" should be placed before "from pyparsing import alphanums"
************* Module sol.middleware.errors
sol/middleware/errors.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/middleware/errors.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol/middleware/errors.py:35: [W0702(bare-except), ExceptionUserInfoMiddleware.process_exception] No exception type(s) specified
sol/middleware/errors.py:21: [W0613(unused-argument), ExceptionUserInfoMiddleware.process_exception] Unused argument 'exception'
sol/middleware/errors.py:21: [R0201(no-self-use), ExceptionUserInfoMiddleware.process_exception] Method could be a function
sol/middleware/errors.py:12: [R0903(too-few-public-methods), ExceptionUserInfoMiddleware] Too few public methods (1/2)
************* Module sol.middleware.negotiation
sol/middleware/negotiation.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/middleware/negotiation.py:7: [C0111(missing-docstring), QueryStringAcceptMimeTypeMiddleware] Missing class docstring
sol/middleware/negotiation.py:12: [W0212(protected-access), QueryStringAcceptMimeTypeMiddleware.process_request] Access to a protected member _mutable of a client class
sol/middleware/negotiation.py:17: [W0212(protected-access), QueryStringAcceptMimeTypeMiddleware.process_request] Access to a protected member _mutable of a client class
sol/middleware/negotiation.py:7: [R0903(too-few-public-methods), QueryStringAcceptMimeTypeMiddleware] Too few public methods (1/2)
************* Module sol.auth_backends.__init__
sol/auth_backends/__init__.py:83: [C0301(line-too-long), ] Line too long (120/100)
sol/auth_backends/__init__.py:84: [C0301(line-too-long), ] Line too long (109/100)
************* Module sol.auth_backends
sol/auth_backends/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/auth_backends/__init__.py:2: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol/auth_backends/__init__.py:3: [E0401(import-error), ] Unable to import 'django.contrib.auth.backends'
sol/auth_backends/__init__.py:4: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/auth_backends/__init__.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/auth_backends/__init__.py:6: [E0401(import-error), ] Unable to import 'django_rq'
sol/auth_backends/__init__.py:10: [C0111(missing-docstring), SolBruteForceMitigationExceptionMixin] Missing class docstring
sol/auth_backends/__init__.py:10: [R0205(useless-object-inheritance), SolBruteForceMitigationExceptionMixin] Class 'SolBruteForceMitigationExceptionMixin' inherits from object, can be safely removed from bases in python3
sol/auth_backends/__init__.py:10: [R0903(too-few-public-methods), SolBruteForceMitigationExceptionMixin] Too few public methods (1/2)
sol/auth_backends/__init__.py:32: [C0111(missing-docstring), SolBruteForceMitigationException] Missing class docstring
sol/auth_backends/__init__.py:36: [C0111(missing-docstring), SolBruteForceMitigationMixin] Missing class docstring
sol/auth_backends/__init__.py:36: [R0205(useless-object-inheritance), SolBruteForceMitigationMixin] Class 'SolBruteForceMitigationMixin' inherits from object, can be safely removed from bases in python3
sol/auth_backends/__init__.py:47: [C0111(missing-docstring), SolBruteForceMitigationMixin.authenticate] Missing method docstring
sol/auth_backends/__init__.py:74: [C0111(missing-docstring), SolBruteForceMitigationMixin.check_username] Missing method docstring
sol/auth_backends/__init__.py:74: [W0613(unused-argument), SolBruteForceMitigationMixin.check_username] Unused argument 'request'
sol/auth_backends/__init__.py:77: [W0612(unused-variable), SolBruteForceMitigationMixin.check_username] Unused variable 'username'
sol/auth_backends/__init__.py:81: [C0111(missing-docstring), SolBruteForceMitigationMixin.get_counter_cache_key] Missing method docstring
sol/auth_backends/__init__.py:87: [C0111(missing-docstring), SolBruteForceMitigationModelBackend] Missing class docstring
************* Module sol.api.tests
sol/api/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/tests.py:2: [E0401(import-error), ] Unable to import 'rest_framework.test'
sol/api/tests.py:3: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol/api/tests.py:10: [C0111(missing-docstring), SolAPIClient.force_authenticate] Missing method docstring
sol/api/tests.py:20: [C0111(missing-docstring), SolAPIClient.logout] Missing method docstring
************* Module sol.api.mixins
sol/api/mixins.py:30: [W0511(fixme), ] TODO: move views and viewSet in dedicated python module!!!
sol/api/mixins.py:135: [W0511(fixme), ] TODO: remove the 'view_name' patch one day, maybe in drf 3.4? ..not yet, 3.5.3
sol/api/mixins.py:225: [W0511(fixme), ] TODO: decide whether to keep the original drf behaviour for relational field that are not configured:
sol/api/mixins.py:392: [W0511(fixme), ] TODO: This could represent a security issue, quickly tried to find an alternative without success because
sol/api/mixins.py:35: [C0301(line-too-long), ] Line too long (103/100)
sol/api/mixins.py:68: [C0301(line-too-long), ] Line too long (105/100)
sol/api/mixins.py:120: [C0301(line-too-long), ] Line too long (104/100)
sol/api/mixins.py:132: [C0301(line-too-long), ] Line too long (119/100)
sol/api/mixins.py:137: [C0301(line-too-long), ] Line too long (117/100)
sol/api/mixins.py:138: [C0301(line-too-long), ] Line too long (119/100)
sol/api/mixins.py:146: [C0301(line-too-long), ] Line too long (118/100)
sol/api/mixins.py:147: [C0301(line-too-long), ] Line too long (101/100)
sol/api/mixins.py:149: [C0301(line-too-long), ] Line too long (112/100)
sol/api/mixins.py:167: [C0301(line-too-long), ] Line too long (112/100)
sol/api/mixins.py:179: [C0301(line-too-long), ] Line too long (117/100)
sol/api/mixins.py:182: [C0301(line-too-long), ] Line too long (118/100)
sol/api/mixins.py:190: [C0301(line-too-long), ] Line too long (105/100)
sol/api/mixins.py:200: [C0301(line-too-long), ] Line too long (102/100)
sol/api/mixins.py:208: [C0301(line-too-long), ] Line too long (107/100)
sol/api/mixins.py:209: [C0301(line-too-long), ] Line too long (105/100)
sol/api/mixins.py:218: [C0301(line-too-long), ] Line too long (115/100)
sol/api/mixins.py:225: [C0301(line-too-long), ] Line too long (111/100)
sol/api/mixins.py:232: [C0301(line-too-long), ] Line too long (104/100)
sol/api/mixins.py:236: [C0301(line-too-long), ] Line too long (117/100)
sol/api/mixins.py:246: [C0301(line-too-long), ] Line too long (101/100)
sol/api/mixins.py:269: [C0301(line-too-long), ] Line too long (108/100)
sol/api/mixins.py:293: [C0301(line-too-long), ] Line too long (118/100)
sol/api/mixins.py:298: [C0301(line-too-long), ] Line too long (120/100)
sol/api/mixins.py:301: [C0301(line-too-long), ] Line too long (103/100)
sol/api/mixins.py:302: [C0301(line-too-long), ] Line too long (117/100)
sol/api/mixins.py:310: [C0301(line-too-long), ] Line too long (102/100)
sol/api/mixins.py:329: [C0301(line-too-long), ] Line too long (110/100)
sol/api/mixins.py:353: [C0301(line-too-long), ] Line too long (118/100)
sol/api/mixins.py:354: [C0301(line-too-long), ] Line too long (107/100)
sol/api/mixins.py:384: [C0301(line-too-long), ] Line too long (118/100)
sol/api/mixins.py:392: [C0301(line-too-long), ] Line too long (115/100)
sol/api/mixins.py:396: [C0301(line-too-long), ] Line too long (102/100)
sol/api/mixins.py:398: [C0301(line-too-long), ] Line too long (109/100)
sol/api/mixins.py:414: [C0301(line-too-long), ] Line too long (112/100)
sol/api/mixins.py:452: [C0301(line-too-long), ] Line too long (108/100)
sol/api/mixins.py:494: [C0301(line-too-long), ] Line too long (114/100)
sol/api/mixins.py:496: [C0301(line-too-long), ] Line too long (105/100)
sol/api/mixins.py:534: [C0301(line-too-long), ] Line too long (116/100)
sol/api/mixins.py:547: [C0301(line-too-long), ] Line too long (115/100)
sol/api/mixins.py:603: [C0301(line-too-long), ] Line too long (118/100)
sol/api/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/mixins.py:7: [E0401(import-error), ] Unable to import 'django.conf'
sol/api/mixins.py:8: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/api/mixins.py:9: [E0401(import-error), ] Unable to import 'rest_framework'
sol/api/mixins.py:10: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol/api/mixins.py:11: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/api/mixins.py:12: [E0401(import-error), ] Unable to import 'rest_framework.mixins'
sol/api/mixins.py:13: [E0401(import-error), ] Unable to import 'rest_framework.relations'
sol/api/mixins.py:14: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol/api/mixins.py:15: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/api/mixins.py:16: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
sol/api/mixins.py:17: [E0401(import-error), ] Unable to import 'rest_framework_bulk.generics'
sol/api/mixins.py:33: [C0111(missing-docstring), ScopedThrottledViewSetMixin] Missing class docstring
sol/api/mixins.py:33: [R0205(useless-object-inheritance), ScopedThrottledViewSetMixin] Class 'ScopedThrottledViewSetMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:34: [C0111(missing-docstring), ScopedThrottledViewSetMixin.initialize_request] Missing method docstring
sol/api/mixins.py:33: [R0903(too-few-public-methods), ScopedThrottledViewSetMixin] Too few public methods (1/2)
sol/api/mixins.py:47: [C0111(missing-docstring), DestroySerializerMixin] Missing class docstring
sol/api/mixins.py:47: [R0205(useless-object-inheritance), DestroySerializerMixin] Class 'DestroySerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:48: [C0111(missing-docstring), DestroySerializerMixin.destroy] Missing method docstring
sol/api/mixins.py:48: [W0613(unused-argument), DestroySerializerMixin.destroy] Unused argument 'args'
sol/api/mixins.py:48: [W0613(unused-argument), DestroySerializerMixin.destroy] Unused argument 'kwargs'
sol/api/mixins.py:47: [R0903(too-few-public-methods), DestroySerializerMixin] Too few public methods (1/2)
sol/api/mixins.py:52: [C0112(empty-docstring), SerializerDestroyModelViewSetMixin] Empty class docstring
sol/api/mixins.py:52: [R0205(useless-object-inheritance), SerializerDestroyModelViewSetMixin] Class 'SerializerDestroyModelViewSetMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:55: [C0111(missing-docstring), SerializerDestroyModelViewSetMixin.perform_destroy] Missing method docstring
sol/api/mixins.py:52: [R0903(too-few-public-methods), SerializerDestroyModelViewSetMixin] Too few public methods (1/2)
sol/api/mixins.py:70: [W0107(unnecessary-pass), SolModelViewSet] Unnecessary pass statement
sol/api/mixins.py:64: [R0903(too-few-public-methods), SolModelViewSet] Too few public methods (1/2)
sol/api/mixins.py:78: [W0107(unnecessary-pass), ReadOnlyListOnlyModelViewSet] Unnecessary pass statement
sol/api/mixins.py:73: [R0903(too-few-public-methods), ReadOnlyListOnlyModelViewSet] Too few public methods (0/2)
sol/api/mixins.py:89: [W0107(unnecessary-pass), NoDestroyModelViewSet] Unnecessary pass statement
sol/api/mixins.py:81: [R0903(too-few-public-methods), NoDestroyModelViewSet] Too few public methods (0/2)
sol/api/mixins.py:100: [W0107(unnecessary-pass), ReadAndDestroyModelViewSet] Unnecessary pass statement
sol/api/mixins.py:92: [R0903(too-few-public-methods), ReadAndDestroyModelViewSet] Too few public methods (1/2)
sol/api/mixins.py:110: [W0107(unnecessary-pass), CreateListRetrieveModelViewSet] Unnecessary pass statement
sol/api/mixins.py:103: [R0903(too-few-public-methods), CreateListRetrieveModelViewSet] Too few public methods (0/2)
sol/api/mixins.py:116: [R0205(useless-object-inheritance), IncludeReverseToDefaultFieldsSerializerMixin] Class 'IncludeReverseToDefaultFieldsSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:119: [C0111(missing-docstring), IncludeReverseToDefaultFieldsSerializerMixin.get_default_field_names] Missing method docstring
sol/api/mixins.py:116: [R0903(too-few-public-methods), IncludeReverseToDefaultFieldsSerializerMixin] Too few public methods (1/2)
sol/api/mixins.py:131: [R0205(useless-object-inheritance), ApiLibUrlFieldPatchSerializerMixin] Class 'ApiLibUrlFieldPatchSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:170: [W0212(protected-access), ApiLibUrlFieldPatchSerializerMixin.build_url_field] Access to a protected member _meta of a client class
sol/api/mixins.py:131: [R0903(too-few-public-methods), ApiLibUrlFieldPatchSerializerMixin] Too few public methods (1/2)
sol/api/mixins.py:178: [R0205(useless-object-inheritance), ApiLibNestedSerializerMixin] Class 'ApiLibNestedSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:182: [R0913(too-many-arguments), ApiLibNestedSerializerMixin.build_configured_field] Too many arguments (6/5)
sol/api/mixins.py:207: [W0212(protected-access), ApiLibNestedSerializerMixin.build_configured_field] Access to a protected member _meta of a client class
sol/api/mixins.py:215: [W0212(protected-access), ApiLibNestedSerializerMixin.build_configured_field] Access to a protected member _meta of a client class
sol/api/mixins.py:292: [R0205(useless-object-inheritance), DynamicFieldsSerializerMixin] Class 'DynamicFieldsSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:343: [C0103(invalid-name), DynamicFieldsSerializerMixin.get_fields] Variable name "f" doesn't conform to snake_case naming style
sol/api/mixins.py:292: [R0903(too-few-public-methods), DynamicFieldsSerializerMixin] Too few public methods (1/2)
sol/api/mixins.py:356: [C0111(missing-docstring), RefreshAnnotationsUpdateModelMixin.update] Missing method docstring
sol/api/mixins.py:361: [C0103(invalid-name), RefreshAnnotationsUpdateModelMixin.update] Variable name "qs" doesn't conform to snake_case naming style
sol/api/mixins.py:349: [R0903(too-few-public-methods), RefreshAnnotationsUpdateModelMixin] Too few public methods (1/2)
sol/api/mixins.py:370: [C0111(missing-docstring), ExportModelViewSetMixin] Missing class docstring
sol/api/mixins.py:370: [R0205(useless-object-inheritance), ExportModelViewSetMixin] Class 'ExportModelViewSetMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:405: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_queryset] Missing method docstring
sol/api/mixins.py:406: [C0103(invalid-name), ExportModelViewSetMixin.get_export_queryset] Variable name "qs" doesn't conform to snake_case naming style
sol/api/mixins.py:409: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_fields] Missing method docstring
sol/api/mixins.py:413: [C0111(missing-docstring), ExportModelViewSetMixin.export_serializer_mixin] Missing method docstring
sol/api/mixins.py:416: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_serializer_class] Missing method docstring
sol/api/mixins.py:426: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_serializer] Missing method docstring
sol/api/mixins.py:437: [C0111(missing-docstring), ExportModelViewSetMixin.add_length_to_response] Missing method docstring
sol/api/mixins.py:437: [R0201(no-self-use), ExportModelViewSetMixin.add_length_to_response] Method could be a function
sol/api/mixins.py:440: [C0111(missing-docstring), ExportModelViewSetMixin.get_renderer_context] Missing method docstring
sol/api/mixins.py:447: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_settings] Missing method docstring
sol/api/mixins.py:448: [W0212(protected-access), ExportModelViewSetMixin.get_export_settings] Access to a protected member _meta of a client class
sol/api/mixins.py:454: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_filename] Missing method docstring
sol/api/mixins.py:457: [W0212(protected-access), ExportModelViewSetMixin.get_export_filename] Access to a protected member _meta of a client class
sol/api/mixins.py:468: [C0111(missing-docstring), ExportModelViewSetMixin.get_export_response] Missing method docstring
sol/api/mixins.py:468: [W0613(unused-argument), ExportModelViewSetMixin.get_export_response] Unused argument 'request'
sol/api/mixins.py:468: [W0613(unused-argument), ExportModelViewSetMixin.get_export_response] Unused argument 'args'
sol/api/mixins.py:468: [W0613(unused-argument), ExportModelViewSetMixin.get_export_response] Unused argument 'kwargs'
sol/api/mixins.py:495: [W0613(unused-argument), ExportModelViewSetMixin.export_async] Unused argument 'args'
sol/api/mixins.py:520: [C0111(missing-docstring), FieldChoicesViewSetMixin] Missing class docstring
sol/api/mixins.py:520: [R0205(useless-object-inheritance), FieldChoicesViewSetMixin] Class 'FieldChoicesViewSetMixin' inherits from object, can be safely removed from bases in python3
sol/api/mixins.py:524: [C0111(missing-docstring), FieldChoicesViewSetMixin.get_field_choices] Missing method docstring
sol/api/mixins.py:538: [C0111(missing-docstring), FieldChoicesViewSetMixin.filter_field_choices] Missing method docstring
sol/api/mixins.py:546: [W0613(unused-argument), FieldChoicesViewSetMixin.field_choices] Unused argument 'args'
sol/api/mixins.py:546: [W0613(unused-argument), FieldChoicesViewSetMixin.field_choices] Unused argument 'kwargs'
sol/api/mixins.py:561: [C0111(missing-docstring), ForgivingBulkCreateModelMixin] Missing class docstring
sol/api/mixins.py:562: [C0111(missing-docstring), ForgivingBulkCreateModelMixin.create] Missing method docstring
sol/api/mixins.py:565: [R1705(no-else-return), ForgivingBulkCreateModelMixin.create] Unnecessary "else" after "return"
sol/api/mixins.py:561: [R0903(too-few-public-methods), ForgivingBulkCreateModelMixin] Too few public methods (1/2)
sol/api/mixins.py:587: [C0111(missing-docstring), ForgivingBulkUpdateModelMixin] Missing class docstring
sol/api/mixins.py:589: [C0111(missing-docstring), ForgivingBulkUpdateModelMixin.bulk_update] Missing method docstring
sol/api/mixins.py:596: [C0103(invalid-name), ForgivingBulkUpdateModelMixin.bulk_update] Variable name "qs" doesn't conform to snake_case naming style
sol/api/mixins.py:589: [W0613(unused-argument), ForgivingBulkUpdateModelMixin.bulk_update] Unused argument 'args'
sol/api/mixins.py:587: [R0903(too-few-public-methods), ForgivingBulkUpdateModelMixin] Too few public methods (1/2)
sol/api/mixins.py:629: [W0107(unnecessary-pass), ForgivingBulkModelViewSet] Unnecessary pass statement
sol/api/mixins.py:638: [W0107(unnecessary-pass), NoDestroyForgivingBulkModelViewSet] Unnecessary pass statement
sol/api/mixins.py:641: [C0111(missing-docstring), NoDestroyBulkModelViewSet] Missing class docstring
sol/api/mixins.py:641: [R0903(too-few-public-methods), NoDestroyBulkModelViewSet] Too few public methods (0/2)
sol/api/mixins.py:652: [W0107(unnecessary-pass), SolBulkModelViewSet] Unnecessary pass statement
sol/api/mixins.py:647: [R0903(too-few-public-methods), SolBulkModelViewSet] Too few public methods (1/2)
************* Module sol.api.contenttypes
sol/api/contenttypes.py:127: [W1401(anomalous-backslash-in-string), ] Anomalous backslash in string: '\w'. String constant might be missing an r prefix.
sol/api/contenttypes.py:127: [W1401(anomalous-backslash-in-string), ] Anomalous backslash in string: '\w'. String constant might be missing an r prefix.
sol/api/contenttypes.py:127: [W1401(anomalous-backslash-in-string), ] Anomalous backslash in string: '\w'. String constant might be missing an r prefix.
sol/api/contenttypes.py:167: [W0511(fixme), ] TODO: choose the less worst solution, not proud of this. Maybe also a 'real' django view should be used above?
sol/api/contenttypes.py:197: [W0511(fixme), ] TODO: manage empty values, at the moment filter is applied showing only note linked to the filter model.
sol/api/contenttypes.py:214: [W0511(fixme), ] TODO: improve performances adding select_related and prefetch_related, dynamically detected from lookups?
sol/api/contenttypes.py:28: [C0301(line-too-long), ] Line too long (120/100)
sol/api/contenttypes.py:55: [C0301(line-too-long), ] Line too long (106/100)
sol/api/contenttypes.py:85: [C0301(line-too-long), ] Line too long (113/100)
sol/api/contenttypes.py:86: [C0301(line-too-long), ] Line too long (113/100)
sol/api/contenttypes.py:96: [C0301(line-too-long), ] Line too long (107/100)
sol/api/contenttypes.py:97: [C0301(line-too-long), ] Line too long (111/100)
sol/api/contenttypes.py:109: [C0301(line-too-long), ] Line too long (108/100)
sol/api/contenttypes.py:113: [C0301(line-too-long), ] Line too long (115/100)
sol/api/contenttypes.py:130: [C0301(line-too-long), ] Line too long (108/100)
sol/api/contenttypes.py:165: [C0301(line-too-long), ] Line too long (101/100)
sol/api/contenttypes.py:167: [C0301(line-too-long), ] Line too long (120/100)
sol/api/contenttypes.py:190: [C0301(line-too-long), ] Line too long (103/100)
sol/api/contenttypes.py:197: [C0301(line-too-long), ] Line too long (114/100)
sol/api/contenttypes.py:203: [C0301(line-too-long), ] Line too long (102/100)
sol/api/contenttypes.py:214: [C0301(line-too-long), ] Line too long (119/100)
sol/api/contenttypes.py:225: [C0301(line-too-long), ] Line too long (107/100)
sol/api/contenttypes.py:234: [C0301(line-too-long), ] Line too long (125/100)
sol/api/contenttypes.py:235: [C0301(line-too-long), ] Line too long (120/100)
sol/api/contenttypes.py:236: [C0301(line-too-long), ] Line too long (109/100)
sol/api/contenttypes.py:269: [C0301(line-too-long), ] Line too long (123/100)
sol/api/contenttypes.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/contenttypes.py:7: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/api/contenttypes.py:8: [E0401(import-error), ] Unable to import 'django.db.models.constants'
sol/api/contenttypes.py:9: [E0401(import-error), ] Unable to import 'django'
sol/api/contenttypes.py:11: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/api/contenttypes.py:12: [E0401(import-error), ] Unable to import 'django.utils'
sol/api/contenttypes.py:13: [E0401(import-error), ] Unable to import 'django.apps'
sol/api/contenttypes.py:14: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol/api/contenttypes.py:15: [E0401(import-error), ] Unable to import 'django.db.models'
sol/api/contenttypes.py:16: [E0401(import-error), ] Unable to import 'django.http'
sol/api/contenttypes.py:17: [E0401(import-error), ] Unable to import 'rest_framework'
sol/api/contenttypes.py:20: [E0611(no-name-in-module), ] No name 'filters' in module 'url_filter'
sol/api/contenttypes.py:20: [E0401(import-error), ] Unable to import 'url_filter.filters'
sol/api/contenttypes.py:25: [R0205(useless-object-inheritance), SolContentTypeSerializerMixin] Class 'SolContentTypeSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/contenttypes.py:39: [C0111(missing-docstring), SolContentTypeSerializerMixin.get_model_name] Missing method docstring
sol/api/contenttypes.py:40: [C0103(invalid-name), SolContentTypeSerializerMixin.get_model_name] Variable name "ct" doesn't conform to snake_case naming style
sol/api/contenttypes.py:44: [C0111(missing-docstring), SolContentTypeSerializerMixin.get_model_repr] Missing method docstring
sol/api/contenttypes.py:49: [C0111(missing-docstring), SolContentTypeSerializerMixin.to_internal_value] Missing method docstring
sol/api/contenttypes.py:62: [W0212(protected-access), SolContentTypeSerializerMixin.to_internal_value] Access to a protected member _meta of a client class
sol/api/contenttypes.py:64: [C0103(invalid-name), SolContentTypeSerializerMixin.to_internal_value] Variable name "ct" doesn't conform to snake_case naming style
sol/api/contenttypes.py:71: [C0111(missing-docstring), CtProxiedFilter] Missing class docstring
sol/api/contenttypes.py:77: [C0111(missing-docstring), CtProxiedFilter.filter_eq_for_django] Missing method docstring
sol/api/contenttypes.py:78: [C0103(invalid-name), CtProxiedFilter.filter_eq_for_django] Variable name "f" doesn't conform to snake_case naming style
sol/api/contenttypes.py:85: [W0212(protected-access), CtProxiedFilter.filter_eq_for_django] Access to a protected member _meta of a client class
sol/api/contenttypes.py:86: [W0212(protected-access), CtProxiedFilter.filter_eq_for_django] Access to a protected member _meta of a client class
sol/api/contenttypes.py:71: [R0903(too-few-public-methods), CtProxiedFilter] Too few public methods (1/2)
sol/api/contenttypes.py:91: [C0111(missing-docstring), ContentTypeModelFilterSet] Missing class docstring
sol/api/contenttypes.py:91: [R0903(too-few-public-methods), ContentTypeModelFilterSet] Too few public methods (0/2)
sol/api/contenttypes.py:107: [C0111(missing-docstring), ContentTypeDjangoFilterBackend.get_filter_class] Missing method docstring
sol/api/contenttypes.py:113: [W0212(protected-access), ContentTypeDjangoFilterBackend.get_filter_class] Access to a protected member _declared_filters of a client class
sol/api/contenttypes.py:116: [C0111(missing-docstring), ContentTypeDjangoFilterBackend.parse_query_string] Missing method docstring
sol/api/contenttypes.py:125: [C0111(missing-docstring), ContentTypeDjangoFilterBackend.parse_ct_field] Missing method docstring
sol/api/contenttypes.py:133: [C0111(missing-docstring), ContentTypeDjangoFilterBackend.load_model_ct_fields] Missing method docstring
sol/api/contenttypes.py:134: [C0103(invalid-name), ContentTypeDjangoFilterBackend.load_model_ct_fields] Variable name "f" doesn't conform to snake_case naming style
sol/api/contenttypes.py:134: [W0212(protected-access), ContentTypeDjangoFilterBackend.load_model_ct_fields] Access to a protected member _meta of a client class
sol/api/contenttypes.py:160: [W0212(protected-access), ContentTypeDjangoFilterBackend._filter_model_queryset] Access to a protected member _meta of a client class
sol/api/contenttypes.py:157: [W0613(unused-argument), ContentTypeDjangoFilterBackend._filter_model_queryset] Unused argument 'request'
sol/api/contenttypes.py:184: [R0914(too-many-locals), ContentTypeDjangoFilterBackend.filter_queryset] Too many local variables (18/15)
sol/api/contenttypes.py:193: [W0212(protected-access), ContentTypeDjangoFilterBackend.filter_queryset] Access to a protected member _meta of a client class
sol/api/contenttypes.py:207: [W0703(broad-except), ContentTypeDjangoFilterBackend.filter_queryset] Catching too general exception Exception
sol/api/contenttypes.py:257: [C0111(missing-docstring), get_generic_serializer_config] Missing function docstring
sol/api/contenttypes.py:267: [R0205(useless-object-inheritance), GenericSerializerMixin] Class 'GenericSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/contenttypes.py:275: [W0621(redefined-outer-name), GenericSerializerMixin.__init__] Redefining name 'serializers' from outer scope (line 17)
sol/api/contenttypes.py:285: [C0111(missing-docstring), GenericSerializerMixin.to_internal_value] Missing method docstring
sol/api/contenttypes.py:288: [C0103(invalid-name), GenericSerializerMixin.to_internal_value] Variable name "e" doesn't conform to snake_case naming style
sol/api/contenttypes.py:292: [C0111(missing-docstring), GenericSerializerMixin.to_representation] Missing method docstring
sol/api/contenttypes.py:296: [C0111(missing-docstring), GenericSerializerMixin.get_serializer_for_instance] Missing method docstring
sol/api/contenttypes.py:306: [C0111(missing-docstring), GenericSerializerMixin.get_deserializer_for_data] Missing method docstring
sol/api/contenttypes.py:311: [W0621(redefined-outer-name), GenericSerializerMixin.get_deserializer_for_data] Redefining name 'serializers' from outer scope (line 17)
sol/api/contenttypes.py:317: [W0702(bare-except), GenericSerializerMixin.get_deserializer_for_data] No exception type(s) specified
sol/api/contenttypes.py:320: [C0103(invalid-name), GenericSerializerMixin.get_deserializer_for_data] Variable name "l" doesn't conform to snake_case naming style
sol/api/contenttypes.py:321: [R1720(no-else-raise), GenericSerializerMixin.get_deserializer_for_data] Unnecessary "elif" after "raise"
sol/api/contenttypes.py:340: [W0107(unnecessary-pass), GenericRelatedField] Unnecessary pass statement
sol/api/contenttypes.py:348: [W0107(unnecessary-pass), GenericModelSerializer] Unnecessary pass statement
sol/api/contenttypes.py:4: [W0611(unused-import), ] Unused OrderedDict imported from collections
sol/api/contenttypes.py:6: [W0611(unused-import), ] Unused import copy
sol/api/contenttypes.py:8: [W0611(unused-import), ] Unused LOOKUP_SEP imported from django.db.models.constants
************* Module sol.api.lib.no-related-mixin
sol/api/lib.no-related-mixin.py:34: [W0511(fixme), ] TODO remove the 'view_name' patch one day, maybe in drf 3.4?
sol/api/lib.no-related-mixin.py:501: [W0511(fixme), ] TODO: add create/update support? If so, dynamic create() and update() methods has be implemented..
sol/api/lib.no-related-mixin.py:687: [W0511(fixme), ] TODO maybe remove the 'view_name' patch one day, maybe in drf 3.4?
sol/api/lib.no-related-mixin.py:30: [C0301(line-too-long), ] Line too long (117/100)
sol/api/lib.no-related-mixin.py:36: [C0301(line-too-long), ] Line too long (117/100)
sol/api/lib.no-related-mixin.py:37: [C0301(line-too-long), ] Line too long (119/100)
sol/api/lib.no-related-mixin.py:41: [C0301(line-too-long), ] Line too long (118/100)
sol/api/lib.no-related-mixin.py:42: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.no-related-mixin.py:44: [C0301(line-too-long), ] Line too long (112/100)
sol/api/lib.no-related-mixin.py:65: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.no-related-mixin.py:137: [C0301(line-too-long), ] Line too long (119/100)
sol/api/lib.no-related-mixin.py:138: [C0301(line-too-long), ] Line too long (102/100)
sol/api/lib.no-related-mixin.py:139: [C0301(line-too-long), ] Line too long (118/100)
sol/api/lib.no-related-mixin.py:155: [C0301(line-too-long), ] Line too long (117/100)
sol/api/lib.no-related-mixin.py:201: [C0301(line-too-long), ] Line too long (121/100)
sol/api/lib.no-related-mixin.py:205: [C0301(line-too-long), ] Line too long (109/100)
sol/api/lib.no-related-mixin.py:206: [C0301(line-too-long), ] Line too long (111/100)
sol/api/lib.no-related-mixin.py:215: [C0301(line-too-long), ] Line too long (111/100)
sol/api/lib.no-related-mixin.py:227: [C0301(line-too-long), ] Line too long (115/100)
sol/api/lib.no-related-mixin.py:242: [C0301(line-too-long), ] Line too long (107/100)
sol/api/lib.no-related-mixin.py:250: [C0301(line-too-long), ] Line too long (105/100)
sol/api/lib.no-related-mixin.py:251: [C0301(line-too-long), ] Line too long (121/100)
sol/api/lib.no-related-mixin.py:253: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.no-related-mixin.py:265: [C0301(line-too-long), ] Line too long (111/100)
sol/api/lib.no-related-mixin.py:292: [C0301(line-too-long), ] Line too long (105/100)
sol/api/lib.no-related-mixin.py:293: [C0301(line-too-long), ] Line too long (116/100)
sol/api/lib.no-related-mixin.py:311: [C0301(line-too-long), ] Line too long (114/100)
sol/api/lib.no-related-mixin.py:322: [C0301(line-too-long), ] Line too long (107/100)
sol/api/lib.no-related-mixin.py:343: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.no-related-mixin.py:347: [C0301(line-too-long), ] Line too long (116/100)
sol/api/lib.no-related-mixin.py:354: [C0301(line-too-long), ] Line too long (102/100)
sol/api/lib.no-related-mixin.py:379: [C0301(line-too-long), ] Line too long (112/100)
sol/api/lib.no-related-mixin.py:387: [C0301(line-too-long), ] Line too long (104/100)
sol/api/lib.no-related-mixin.py:410: [C0301(line-too-long), ] Line too long (119/100)
sol/api/lib.no-related-mixin.py:417: [C0301(line-too-long), ] Line too long (110/100)
sol/api/lib.no-related-mixin.py:430: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.no-related-mixin.py:431: [C0301(line-too-long), ] Line too long (110/100)
sol/api/lib.no-related-mixin.py:438: [C0301(line-too-long), ] Line too long (122/100)
sol/api/lib.no-related-mixin.py:459: [C0301(line-too-long), ] Line too long (115/100)
sol/api/lib.no-related-mixin.py:470: [C0301(line-too-long), ] Line too long (112/100)
sol/api/lib.no-related-mixin.py:473: [C0301(line-too-long), ] Line too long (118/100)
sol/api/lib.no-related-mixin.py:477: [C0301(line-too-long), ] Line too long (106/100)
sol/api/lib.no-related-mixin.py:478: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.no-related-mixin.py:501: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.no-related-mixin.py:528: [C0301(line-too-long), ] Line too long (107/100)
sol/api/lib.no-related-mixin.py:550: [C0301(line-too-long), ] Line too long (113/100)
sol/api/lib.no-related-mixin.py:561: [C0301(line-too-long), ] Line too long (108/100)
sol/api/lib.no-related-mixin.py:582: [C0301(line-too-long), ] Line too long (106/100)
sol/api/lib.no-related-mixin.py:587: [C0301(line-too-long), ] Line too long (121/100)
sol/api/lib.no-related-mixin.py:600: [C0301(line-too-long), ] Line too long (109/100)
sol/api/lib.no-related-mixin.py:612: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.no-related-mixin.py:651: [C0301(line-too-long), ] Line too long (108/100)
sol/api/lib.no-related-mixin.py:677: [C0301(line-too-long), ] Line too long (115/100)
sol/api/lib.no-related-mixin.py:1: [C0103(invalid-name), ] Module name "no-related-mixin" doesn't conform to snake_case naming style
sol/api/lib.no-related-mixin.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/lib.no-related-mixin.py:9: [E0401(import-error), ] Unable to import 'django.apps'
sol/api/lib.no-related-mixin.py:10: [E0401(import-error), ] Unable to import 'django.utils'
sol/api/lib.no-related-mixin.py:11: [E0401(import-error), ] Unable to import 'rest_framework'
sol/api/lib.no-related-mixin.py:12: [E0401(import-error), ] Unable to import 'rest_framework'
sol/api/lib.no-related-mixin.py:13: [E0401(import-error), ] Unable to import 'rest_framework.utils'
sol/api/lib.no-related-mixin.py:14: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/api/lib.no-related-mixin.py:26: [C0103(invalid-name), ] Constant name "drf_filters" doesn't conform to UPPER_CASE naming style
sol/api/lib.no-related-mixin.py:29: [R0205(useless-object-inheritance), ConfiguredNestedSerializerMixin] Class 'ConfiguredNestedSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/lib.no-related-mixin.py:54: [W0212(protected-access), ConfiguredNestedSerializerMixin.build_url_field] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:58: [W0212(protected-access), ConfiguredNestedSerializerMixin.build_url_field] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:29: [R0903(too-few-public-methods), ConfiguredNestedSerializerMixin] Too few public methods (1/2)
sol/api/lib.no-related-mixin.py:64: [R0205(useless-object-inheritance), RestifyModels] Class 'RestifyModels' inherits from object, can be safely removed from bases in python3
sol/api/lib.no-related-mixin.py:241: [R1720(no-else-raise), RestifyModels.getattr_from_iterable] Unnecessary "else" after "raise"
sol/api/lib.no-related-mixin.py:263: [W0212(protected-access), RestifyModels._normalize_field_names] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:327: [W0212(protected-access), RestifyModels._cache_model] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:334: [E1101(no-member), RestifyModels._cache_model] Class 'RestifyModels' has no 'model_property' member
sol/api/lib.no-related-mixin.py:359: [W0706(try-except-raise), RestifyModels.get_rest_models] The except handler raises immediately
sol/api/lib.no-related-mixin.py:428: [R0913(too-many-arguments), RestifyModels.get_serializer] Too many arguments (6/5)
sol/api/lib.no-related-mixin.py:428: [R0914(too-many-locals), RestifyModels.get_serializer] Too many local variables (27/15)
sol/api/lib.no-related-mixin.py:461: [C0200(consider-using-enumerate), RestifyModels.get_serializer] Consider using enumerate instead of iterating with range and len
sol/api/lib.no-related-mixin.py:484: [W0212(protected-access), RestifyModels.get_serializer] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:485: [W0212(protected-access), RestifyModels.get_serializer] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:530: [W0212(protected-access), RestifyModels.get_serializer] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:561: [W0212(protected-access), RestifyModels.get_filter_class] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:566: [R0914(too-many-locals), RestifyModels.get_viewsets] Too many local variables (21/15)
sol/api/lib.no-related-mixin.py:584: [W0212(protected-access), RestifyModels.get_viewsets] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:585: [C0103(invalid-name), RestifyModels.get_viewsets] Variable name "e" doesn't conform to snake_case naming style
sol/api/lib.no-related-mixin.py:635: [W0212(protected-access), RestifyModels.get_viewsets] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:640: [E1101(no-member), RestifyModels.get_viewsets] Class 'RestifyModels' has no 'restify_viewset_attr' member
sol/api/lib.no-related-mixin.py:580: [W0612(unused-variable), RestifyModels.get_viewsets] Unused variable 'drf_rel_info'
sol/api/lib.no-related-mixin.py:667: [W0706(try-except-raise), RestifyModels.register_urls] The except handler raises immediately
sol/api/lib.no-related-mixin.py:673: [E1101(no-member), RestifyModels.register_urls] Class 'RestifyModels' has no 'restify_viewset_attr' member
sol/api/lib.no-related-mixin.py:679: [W0212(protected-access), RestifyModels.register_urls] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:691: [W0212(protected-access), RestifyModels.register_urls] Access to a protected member _meta of a client class
sol/api/lib.no-related-mixin.py:672: [W0612(unused-variable), RestifyModels.register_urls] Unused variable 'key'
sol/api/lib.no-related-mixin.py:6: [W0611(unused-import), ] Unused namedtuple imported from collections
sol/api/lib.no-related-mixin.py:9: [W0611(unused-import), ] Unused apps imported from django.apps as django_apps
************* Module sol.api.serializers
sol/api/serializers.py:57: [C0301(line-too-long), ] Line too long (115/100)
sol/api/serializers.py:58: [C0301(line-too-long), ] Line too long (111/100)
sol/api/serializers.py:241: [C0301(line-too-long), ] Line too long (119/100)
sol/api/serializers.py:242: [C0301(line-too-long), ] Line too long (118/100)
sol/api/serializers.py:243: [C0301(line-too-long), ] Line too long (113/100)
sol/api/serializers.py:244: [C0301(line-too-long), ] Line too long (113/100)
sol/api/serializers.py:245: [C0301(line-too-long), ] Line too long (115/100)
sol/api/serializers.py:249: [C0301(line-too-long), ] Line too long (119/100)
sol/api/serializers.py:250: [C0301(line-too-long), ] Line too long (113/100)
sol/api/serializers.py:251: [C0301(line-too-long), ] Line too long (113/100)
sol/api/serializers.py:252: [C0301(line-too-long), ] Line too long (115/100)
sol/api/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/serializers.py:6: [E0401(import-error), ] Unable to import 'django.db.models'
sol/api/serializers.py:11: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/api/serializers.py:12: [E0401(import-error), ] Unable to import 'django.utils'
sol/api/serializers.py:13: [E0401(import-error), ] Unable to import 'rest_framework.fields'
sol/api/serializers.py:14: [E0401(import-error), ] Unable to import 'rest_framework.serializers'
sol/api/serializers.py:15: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/api/serializers.py:16: [E0401(import-error), ] Unable to import 'rest_framework'
sol/api/serializers.py:17: [E0401(import-error), ] Unable to import 'rest_framework.utils'
sol/api/serializers.py:18: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/api/serializers.py:19: [E0401(import-error), ] Unable to import 'rest_framework_bulk.serializers'
sol/api/serializers.py:24: [C0111(missing-docstring), PatchedBulkSerializerMixin] Missing class docstring
sol/api/serializers.py:24: [R0205(useless-object-inheritance), PatchedBulkSerializerMixin] Class 'PatchedBulkSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/serializers.py:25: [C0111(missing-docstring), PatchedBulkSerializerMixin.to_internal_value] Missing method docstring
sol/api/serializers.py:24: [R0903(too-few-public-methods), PatchedBulkSerializerMixin] Too few public methods (1/2)
sol/api/serializers.py:47: [C0111(missing-docstring), PatchedBulkListSerializer] Missing class docstring
sol/api/serializers.py:54: [E1003(bad-super-call), PatchedBulkListSerializer.__init__] Bad first argument 'BulkListSerializer' given to super()
sol/api/serializers.py:60: [C0111(missing-docstring), PatchedBulkListSerializer.retrieve_all_object_to_update] Missing method docstring
sol/api/serializers.py:96: [C1801(len-as-condition), PatchedBulkListSerializer.to_internal_value] Do not use `len(SEQUENCE)` to determine if a sequence is empty
sol/api/serializers.py:109: [C0103(invalid-name), PatchedBulkListSerializer.to_internal_value] Variable name "pk" doesn't conform to snake_case naming style
sol/api/serializers.py:115: [C0103(invalid-name), PatchedBulkListSerializer.to_internal_value] Variable name "e" doesn't conform to snake_case naming style
sol/api/serializers.py:137: [C0111(missing-docstring), PatchedBulkListSerializer.update] Missing method docstring
sol/api/serializers.py:177: [C0111(missing-docstring), SolBulkListSerializer] Missing class docstring
sol/api/serializers.py:183: [C0111(missing-docstring), ChoiceFieldLabel] Missing class docstring
sol/api/serializers.py:191: [C0111(missing-docstring), ChoiceFieldLabel.to_representation] Missing method docstring
sol/api/serializers.py:183: [R0903(too-few-public-methods), ChoiceFieldLabel] Too few public methods (1/2)
sol/api/serializers.py:197: [C0111(missing-docstring), BaseExportModelSerializerMixin] Missing class docstring
sol/api/serializers.py:197: [R0205(useless-object-inheritance), BaseExportModelSerializerMixin] Class 'BaseExportModelSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/serializers.py:202: [C0111(missing-docstring), BaseExportModelSerializerMixin.get_extra_kwargs_for_field] Missing method docstring
sol/api/serializers.py:216: [C0111(missing-docstring), BaseExportModelSerializerMixin.get_fields] Missing method docstring
sol/api/serializers.py:220: [W0212(protected-access), BaseExportModelSerializerMixin.get_fields] Access to a protected member _meta of a client class
sol/api/serializers.py:228: [C0111(missing-docstring), BaseExportModelSerializerMixin.permissions_filter_export_related_fields] Missing method docstring
sol/api/serializers.py:228: [W0621(redefined-outer-name), BaseExportModelSerializerMixin.permissions_filter_export_related_fields] Redefining name 'fields' from outer scope (line 16)
sol/api/serializers.py:229: [C0103(invalid-name), BaseExportModelSerializerMixin.permissions_filter_export_related_fields] Variable name "f" doesn't conform to snake_case naming style
sol/api/serializers.py:228: [R0201(no-self-use), BaseExportModelSerializerMixin.permissions_filter_export_related_fields] Method could be a function
sol/api/serializers.py:240: [C0111(missing-docstring), BaseExportModelSerializerMixin.permissions_writable_fields] Missing method docstring
sol/api/serializers.py:248: [C0111(missing-docstring), BaseExportModelSerializerMixin.permissions_readable_fields] Missing method docstring
sol/api/serializers.py:256: [C0111(missing-docstring), DateFieldExtended] Missing class docstring
sol/api/serializers.py:257: [C0111(missing-docstring), DateFieldExtended.to_representation] Missing method docstring
sol/api/serializers.py:257: [R0201(no-self-use), DateFieldExtended.to_representation] Method could be a function
sol/api/serializers.py:256: [R0903(too-few-public-methods), DateFieldExtended] Too few public methods (1/2)
sol/api/serializers.py:261: [C0111(missing-docstring), DateTimeFieldExtended] Missing class docstring
sol/api/serializers.py:262: [C0111(missing-docstring), DateTimeFieldExtended.to_representation] Missing method docstring
sol/api/serializers.py:262: [R0201(no-self-use), DateTimeFieldExtended.to_representation] Method could be a function
sol/api/serializers.py:261: [R0903(too-few-public-methods), DateTimeFieldExtended] Too few public methods (1/2)
sol/api/serializers.py:266: [C0103(invalid-name), ] Constant name "excel_serializer_field_mapping" doesn't conform to UPPER_CASE naming style
sol/api/serializers.py:271: [C0111(missing-docstring), ExcelExportModelSerializerMixin] Missing class docstring
************* Module sol.api.permissions
sol/api/permissions.py:27: [C0301(line-too-long), ] Line too long (103/100)
sol/api/permissions.py:118: [C0301(line-too-long), ] Line too long (101/100)
sol/api/permissions.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/permissions.py:5: [E0401(import-error), ] Unable to import 'django.apps'
sol/api/permissions.py:6: [E0401(import-error), ] Unable to import 'django.conf'
sol/api/permissions.py:7: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/api/permissions.py:8: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol/api/permissions.py:9: [E0401(import-error), ] Unable to import 'rest_framework'
sol/api/permissions.py:10: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/api/permissions.py:11: [E0401(import-error), ] Unable to import 'rest_framework.permissions'
sol/api/permissions.py:12: [E0401(import-error), ] Unable to import 'rest_framework.renderers'
sol/api/permissions.py:20: [C0111(missing-docstring), IsAuthorizedToApp.has_permission] Missing method docstring
sol/api/permissions.py:20: [R0201(no-self-use), IsAuthorizedToApp.has_permission] Method could be a function
sol/api/permissions.py:15: [R0903(too-few-public-methods), IsAuthorizedToApp] Too few public methods (1/2)
sol/api/permissions.py:46: [C0123(unidiomatic-typecheck), BrowsableAPIForSuperUser._browsable_api_requested] Using type() instead of isinstance() for a typecheck.
sol/api/permissions.py:45: [R0201(no-self-use), BrowsableAPIForSuperUser._browsable_api_requested] Method could be a function
sol/api/permissions.py:48: [C0111(missing-docstring), BrowsableAPIForSuperUser.has_permission] Missing method docstring
sol/api/permissions.py:48: [W0613(unused-argument), BrowsableAPIForSuperUser.has_permission] Unused argument 'view'
sol/api/permissions.py:41: [R0903(too-few-public-methods), BrowsableAPIForSuperUser] Too few public methods (1/2)
sol/api/permissions.py:62: [C0111(missing-docstring), UserCheckActionForCurrentApp.has_permission] Missing method docstring
sol/api/permissions.py:56: [R0903(too-few-public-methods), UserCheckActionForCurrentApp] Too few public methods (1/2)
sol/api/permissions.py:81: [C0111(missing-docstring), IsSuperUser.has_permission] Missing method docstring
sol/api/permissions.py:81: [W0613(unused-argument), IsSuperUser.has_permission] Unused argument 'view'
sol/api/permissions.py:81: [R0201(no-self-use), IsSuperUser.has_permission] Method could be a function
sol/api/permissions.py:78: [R0903(too-few-public-methods), IsSuperUser] Too few public methods (1/2)
sol/api/permissions.py:88: [R0201(no-self-use), WriteForSuperUserOnly._check_write_and_superuser] Method could be a function
sol/api/permissions.py:92: [C0111(missing-docstring), WriteForSuperUserOnly.has_permission] Missing method docstring
sol/api/permissions.py:92: [W0613(unused-argument), WriteForSuperUserOnly.has_permission] Unused argument 'view'
sol/api/permissions.py:95: [C0111(missing-docstring), WriteForSuperUserOnly.has_object_permission] Missing method docstring
sol/api/permissions.py:95: [W0613(unused-argument), WriteForSuperUserOnly.has_object_permission] Unused argument 'view'
sol/api/permissions.py:95: [W0613(unused-argument), WriteForSuperUserOnly.has_object_permission] Unused argument 'obj'
sol/api/permissions.py:99: [C0111(missing-docstring), BasePermissionsSolModelSerializerMixin] Missing class docstring
sol/api/permissions.py:99: [R0205(useless-object-inheritance), BasePermissionsSolModelSerializerMixin] Class 'BasePermissionsSolModelSerializerMixin' inherits from object, can be safely removed from bases in python3
sol/api/permissions.py:102: [C0111(missing-docstring), BasePermissionsSolModelSerializerMixin.permission_fields_apply] Missing method docstring
sol/api/permissions.py:102: [R0201(no-self-use), BasePermissionsSolModelSerializerMixin.permission_fields_apply] Method could be a function
sol/api/permissions.py:111: [C0111(missing-docstring), BasePermissionsSolModelSerializerMixin.permissions_writable_fields] Missing method docstring
sol/api/permissions.py:111: [W0613(unused-argument), BasePermissionsSolModelSerializerMixin.permissions_writable_fields] Unused argument 'writable_fields'
sol/api/permissions.py:111: [W0613(unused-argument), BasePermissionsSolModelSerializerMixin.permissions_writable_fields] Unused argument 'validated_data'
sol/api/permissions.py:111: [R0201(no-self-use), BasePermissionsSolModelSerializerMixin.permissions_writable_fields] Method could be a function
sol/api/permissions.py:114: [C0111(missing-docstring), BasePermissionsSolModelSerializerMixin.permissions_readable_fields] Missing method docstring
sol/api/permissions.py:114: [W0613(unused-argument), BasePermissionsSolModelSerializerMixin.permissions_readable_fields] Unused argument 'readable_fields'
sol/api/permissions.py:114: [R0201(no-self-use), BasePermissionsSolModelSerializerMixin.permissions_readable_fields] Method could be a function
sol/api/permissions.py:117: [C0111(missing-docstring), BasePermissionsSolModelSerializerMixin.validate_permission_writable_fields] Missing method docstring
sol/api/permissions.py:136: [C0111(missing-docstring), BasePermissionsSolModelSerializerMixin.validate] Missing method docstring
sol/api/permissions.py:155: [C0111(missing-docstring), PermissionsSolModelSerializer] Missing class docstring
sol/api/permissions.py:160: [C0111(missing-docstring), PermissionsSolHyperlinkedModelSerializer] Missing class docstring
************* Module sol.api.pagination
sol/api/pagination.py:5: [W0511(fixme), ] TODO: pending deprecation for rest_framework_extensions: as it was used only here.
sol/api/pagination.py:10: [C0301(line-too-long), ] Line too long (120/100)
sol/api/pagination.py:11: [C0301(line-too-long), ] Line too long (105/100)
sol/api/pagination.py:17: [C0301(line-too-long), ] Line too long (112/100)
sol/api/pagination.py:18: [C0301(line-too-long), ] Line too long (127/100)
sol/api/pagination.py:19: [C0301(line-too-long), ] Line too long (103/100)
sol/api/pagination.py:26: [C0301(line-too-long), ] Line too long (107/100)
sol/api/pagination.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/pagination.py:3: [E0401(import-error), ] Unable to import 'rest_framework.pagination'
sol/api/pagination.py:4: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/api/pagination.py:23: [C0111(missing-docstring), PageNumberWithMaxPagination.get_page_size] Missing method docstring
sol/api/pagination.py:9: [R0903(too-few-public-methods), PageNumberWithMaxPagination] Too few public methods (1/2)
sol/api/pagination.py:31: [R0903(too-few-public-methods), PageNumberMaxAllResultsPagination] Too few public methods (1/2)
************* Module sol.api.request
sol/api/request.py:13: [C0301(line-too-long), ] Line too long (120/100)
sol/api/request.py:14: [C0301(line-too-long), ] Line too long (102/100)
sol/api/request.py:15: [C0301(line-too-long), ] Line too long (107/100)
sol/api/request.py:16: [C0301(line-too-long), ] Line too long (115/100)
sol/api/request.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/request.py:3: [E0401(import-error), ] Unable to import 'django.conf'
sol/api/request.py:4: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/api/request.py:5: [E0401(import-error), ] Unable to import 'rest_framework.test'
sol/api/request.py:29: [C0103(invalid-name), mock_api_request] Variable name "v" doesn't conform to snake_case naming style
************* Module sol.api.url_filter
sol/api/url_filter.py:10: [E0401(import-error), ] Unable to import 'django.utils'
sol/api/url_filter.py:11: [E0401(import-error), ] Unable to import 'django.db.models'
sol/api/url_filter.py:12: [E0401(import-error), ] Unable to import 'django.contrib.postgres'
sol/api/url_filter.py:13: [E0401(import-error), ] Unable to import 'django.contrib.postgres'
sol/api/url_filter.py:14: [E0611(no-name-in-module), ] No name 'backends' in module 'url_filter'
sol/api/url_filter.py:14: [E0401(import-error), ] Unable to import 'url_filter.backends.django'
sol/api/url_filter.py:15: [E0611(no-name-in-module), ] No name 'constants' in module 'url_filter'
sol/api/url_filter.py:15: [E0401(import-error), ] Unable to import 'url_filter.constants'
sol/api/url_filter.py:16: [E0611(no-name-in-module), ] No name 'exceptions' in module 'url_filter'
sol/api/url_filter.py:16: [E0401(import-error), ] Unable to import 'url_filter.exceptions'
sol/api/url_filter.py:17: [E0611(no-name-in-module), ] No name 'filtersets' in module 'url_filter'
sol/api/url_filter.py:17: [E0401(import-error), ] Unable to import 'url_filter.filtersets'
sol/api/url_filter.py:18: [E0611(no-name-in-module), ] No name 'integrations' in module 'url_filter'
sol/api/url_filter.py:18: [E0401(import-error), ] Unable to import 'url_filter.integrations.drf'
sol/api/url_filter.py:23: [C0103(invalid-name), formJSONFieldAcceptString] Class name "formJSONFieldAcceptString" doesn't conform to PascalCase naming style
sol/api/url_filter.py:23: [C0111(missing-docstring), formJSONFieldAcceptString] Missing class docstring
sol/api/url_filter.py:24: [C0111(missing-docstring), formJSONFieldAcceptString.to_python] Missing method docstring
sol/api/url_filter.py:23: [R0903(too-few-public-methods), formJSONFieldAcceptString] Too few public methods (1/2)
sol/api/url_filter.py:38: [C0111(missing-docstring), get_lookups_from_fields] Missing function docstring
sol/api/url_filter.py:39: [W0621(redefined-outer-name), get_lookups_from_fields] Redefining name 'lookups' from outer scope (line 49)
sol/api/url_filter.py:40: [W0612(unused-variable), get_lookups_from_fields] Unused variable 'name'
sol/api/url_filter.py:47: [C0103(invalid-name), ] Constant name "_supported_lookups" doesn't conform to UPPER_CASE naming style
sol/api/url_filter.py:53: [C0111(missing-docstring), CustomDjangoFilterBackend] Missing class docstring
sol/api/url_filter.py:53: [R0903(too-few-public-methods), CustomDjangoFilterBackend] Too few public methods (0/2)
sol/api/url_filter.py:57: [C0111(missing-docstring), ModelFilterSet] Missing class docstring
sol/api/url_filter.py:77: [C0103(invalid-name), ModelFilterSet._build_django_filterset] Variable name "m" doesn't conform to snake_case naming style
sol/api/url_filter.py:57: [R0903(too-few-public-methods), ModelFilterSet] Too few public methods (0/2)
sol/api/url_filter.py:89: [C0111(missing-docstring), DjangoFilterBackend] Missing class docstring
sol/api/url_filter.py:89: [R0903(too-few-public-methods), DjangoFilterBackend] Too few public methods (0/2)
************* Module sol.api.lib
sol/api/lib.py:710: [W0511(fixme), ] TODO: remove the 'view_name' patch one day, maybe in drf 3.4? ..not yet, 3.5.3
sol/api/lib.py:45: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.py:84: [C0301(line-too-long), ] Line too long (104/100)
sol/api/lib.py:133: [C0301(line-too-long), ] Line too long (119/100)
sol/api/lib.py:134: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.py:135: [C0301(line-too-long), ] Line too long (118/100)
sol/api/lib.py:173: [C0301(line-too-long), ] Line too long (117/100)
sol/api/lib.py:229: [C0301(line-too-long), ] Line too long (115/100)
sol/api/lib.py:235: [C0301(line-too-long), ] Line too long (119/100)
sol/api/lib.py:236: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.py:241: [C0301(line-too-long), ] Line too long (109/100)
sol/api/lib.py:242: [C0301(line-too-long), ] Line too long (118/100)
sol/api/lib.py:264: [C0301(line-too-long), ] Line too long (111/100)
sol/api/lib.py:276: [C0301(line-too-long), ] Line too long (115/100)
sol/api/lib.py:291: [C0301(line-too-long), ] Line too long (107/100)
sol/api/lib.py:299: [C0301(line-too-long), ] Line too long (105/100)
sol/api/lib.py:300: [C0301(line-too-long), ] Line too long (121/100)
sol/api/lib.py:302: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.py:314: [C0301(line-too-long), ] Line too long (111/100)
sol/api/lib.py:341: [C0301(line-too-long), ] Line too long (105/100)
sol/api/lib.py:342: [C0301(line-too-long), ] Line too long (116/100)
sol/api/lib.py:360: [C0301(line-too-long), ] Line too long (101/100)
sol/api/lib.py:369: [C0301(line-too-long), ] Line too long (102/100)
sol/api/lib.py:400: [C0301(line-too-long), ] Line too long (104/100)
sol/api/lib.py:418: [C0301(line-too-long), ] Line too long (112/100)
sol/api/lib.py:426: [C0301(line-too-long), ] Line too long (104/100)
sol/api/lib.py:449: [C0301(line-too-long), ] Line too long (119/100)
sol/api/lib.py:463: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.py:464: [C0301(line-too-long), ] Line too long (110/100)
sol/api/lib.py:485: [C0301(line-too-long), ] Line too long (114/100)
sol/api/lib.py:514: [C0301(line-too-long), ] Line too long (107/100)
sol/api/lib.py:534: [C0301(line-too-long), ] Line too long (113/100)
sol/api/lib.py:551: [C0301(line-too-long), ] Line too long (116/100)
sol/api/lib.py:552: [C0301(line-too-long), ] Line too long (112/100)
sol/api/lib.py:555: [C0301(line-too-long), ] Line too long (118/100)
sol/api/lib.py:562: [C0301(line-too-long), ] Line too long (113/100)
sol/api/lib.py:605: [C0301(line-too-long), ] Line too long (106/100)
sol/api/lib.py:607: [C0301(line-too-long), ] Line too long (102/100)
sol/api/lib.py:610: [C0301(line-too-long), ] Line too long (121/100)
sol/api/lib.py:623: [C0301(line-too-long), ] Line too long (109/100)
sol/api/lib.py:635: [C0301(line-too-long), ] Line too long (120/100)
sol/api/lib.py:675: [C0301(line-too-long), ] Line too long (108/100)
sol/api/lib.py:705: [C0301(line-too-long), ] Line too long (121/100)
sol/api/lib.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/api/lib.py:9: [E0401(import-error), ] Unable to import 'django.apps'
sol/api/lib.py:10: [E0401(import-error), ] Unable to import 'django.utils'
sol/api/lib.py:11: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/api/lib.py:34: [C0103(invalid-name), ] Constant name "drf_filters" doesn't conform to UPPER_CASE naming style
sol/api/lib.py:44: [R0205(useless-object-inheritance), RestifyModels] Class 'RestifyModels' inherits from object, can be safely removed from bases in python3
sol/api/lib.py:257: [W0212(protected-access), RestifyModels.get_class_name] Access to a protected member _meta of a client class
sol/api/lib.py:290: [R1720(no-else-raise), RestifyModels.getattr_from_iterable] Unnecessary "else" after "raise"
sol/api/lib.py:312: [W0212(protected-access), RestifyModels._normalize_field_names] Access to a protected member _meta of a client class
sol/api/lib.py:385: [W0706(try-except-raise), RestifyModels.get_rest_models] The except handler raises immediately
sol/api/lib.py:400: [W0212(protected-access), RestifyModels.get_rest_models] Access to a protected member _meta of a client class
sol/api/lib.py:407: [W0212(protected-access), RestifyModels.get_rest_models] Access to a protected member _meta of a client class
sol/api/lib.py:461: [R0914(too-many-locals), RestifyModels.get_serializer] Too many local variables (16/15)
sol/api/lib.py:567: [W0212(protected-access), RestifyModels.get_view_name_for_reverse_url] Access to a protected member _meta of a client class
sol/api/lib.py:567: [W0212(protected-access), RestifyModels.get_view_name_for_reverse_url] Access to a protected member _meta of a client class
sol/api/lib.py:576: [W0212(protected-access), RestifyModels.get_view_name_for_reverse_url] Access to a protected member _meta of a client class
sol/api/lib.py:588: [R0914(too-many-locals), RestifyModels.get_viewsets] Too many local variables (20/15)
sol/api/lib.py:608: [C0103(invalid-name), RestifyModels.get_viewsets] Variable name "e" doesn't conform to snake_case naming style
sol/api/lib.py:693: [W0706(try-except-raise), RestifyModels.register_urls] The except handler raises immediately
sol/api/lib.py:708: [W0212(protected-access), RestifyModels.register_urls] Access to a protected member _meta of a client class
sol/api/lib.py:700: [W0612(unused-variable), RestifyModels.register_urls] Unused variable 'key'
************* Module sol.migrations.0002_auto_20181114_1631
sol/migrations/0002_auto_20181114_1631.py:17: [C0301(line-too-long), ] Line too long (105/100)
sol/migrations/0002_auto_20181114_1631.py:1: [C0103(invalid-name), ] Module name "0002_auto_20181114_1631" doesn't conform to snake_case naming style
sol/migrations/0002_auto_20181114_1631.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/migrations/0002_auto_20181114_1631.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol/migrations/0002_auto_20181114_1631.py:6: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol/migrations/0002_auto_20181114_1631.py:7: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/migrations/0002_auto_20181114_1631.py:8: [E0401(import-error), ] Unable to import 'django.db.models'
sol/migrations/0002_auto_20181114_1631.py:11: [C0111(missing-docstring), fix_model_repr] Missing function docstring
sol/migrations/0002_auto_20181114_1631.py:19: [C0103(invalid-name), fix_model_repr] Variable name "ct" doesn't conform to snake_case naming style
sol/migrations/0002_auto_20181114_1631.py:11: [W0613(unused-argument), fix_model_repr] Unused argument 'schema_editor'
sol/migrations/0002_auto_20181114_1631.py:29: [C0111(missing-docstring), Migration] Missing class docstring
sol/migrations/0002_auto_20181114_1631.py:29: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
sol/migrations/0002_auto_20181114_1631.py:6: [W0611(unused-import), ] Unused ContentType imported from django.contrib.contenttypes.models
************* Module sol.migrations.0001_unaccent
sol/migrations/0001_unaccent.py:1: [C0103(invalid-name), ] Module name "0001_unaccent" doesn't conform to snake_case naming style
sol/migrations/0001_unaccent.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/migrations/0001_unaccent.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol/migrations/0001_unaccent.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol/migrations/0001_unaccent.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol.utils.db
sol/utils/db.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/db.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol/utils/db.py:6: [C0111(missing-docstring), get_pg_advisory_xact_lock] Missing function docstring
************* Module sol.utils.mptt
sol/utils/mptt.py:9: [C0301(line-too-long), ] Line too long (130/100)
sol/utils/mptt.py:13: [C0301(line-too-long), ] Line too long (118/100)
sol/utils/mptt.py:14: [C0301(line-too-long), ] Line too long (112/100)
sol/utils/mptt.py:36: [C0301(line-too-long), ] Line too long (101/100)
sol/utils/mptt.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/mptt.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/mptt.py:4: [E0611(no-name-in-module), ] No name 'templatetags' in module 'mptt'
sol/utils/mptt.py:4: [E0401(import-error), ] Unable to import 'mptt.templatetags.mptt_tags'
sol/utils/mptt.py:7: [C0103(invalid-name), get_tree_repr] Argument name "cb" doesn't conform to snake_case naming style
sol/utils/mptt.py:20: [C0103(invalid-name), get_tree_repr.recursive_node_to_dict] Argument name "cb" doesn't conform to snake_case naming style
sol/utils/mptt.py:36: [W0212(protected-access), get_tree_repr.recursive_node_to_dict] Access to a protected member _cached_children of a client class
************* Module sol.utils.files
sol/utils/files.py:30: [C0301(line-too-long), ] Line too long (120/100)
sol/utils/files.py:67: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/files.py:69: [C0301(line-too-long), ] Line too long (117/100)
sol/utils/files.py:70: [C0301(line-too-long), ] Line too long (121/100)
sol/utils/files.py:107: [C0301(line-too-long), ] Line too long (101/100)
sol/utils/files.py:122: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/files.py:130: [C0301(line-too-long), ] Line too long (109/100)
sol/utils/files.py:147: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/files.py:148: [C0301(line-too-long), ] Line too long (109/100)
sol/utils/files.py:150: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/files.py:179: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/files.py:198: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/files.py:221: [C0301(line-too-long), ] Line too long (116/100)
sol/utils/files.py:224: [C0301(line-too-long), ] Line too long (115/100)
sol/utils/files.py:225: [C0301(line-too-long), ] Line too long (115/100)
sol/utils/files.py:226: [C0301(line-too-long), ] Line too long (120/100)
sol/utils/files.py:227: [C0301(line-too-long), ] Line too long (119/100)
sol/utils/files.py:272: [C0301(line-too-long), ] Line too long (116/100)
sol/utils/files.py:274: [C0301(line-too-long), ] Line too long (115/100)
sol/utils/files.py:275: [C0301(line-too-long), ] Line too long (115/100)
sol/utils/files.py:288: [C0301(line-too-long), ] Line too long (121/100)
sol/utils/files.py:289: [C0301(line-too-long), ] Line too long (119/100)
sol/utils/files.py:319: [C0301(line-too-long), ] Line too long (112/100)
sol/utils/files.py:326: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/files.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/files.py:9: [E0401(import-error), ] Unable to import 'magic'
sol/utils/files.py:10: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/files.py:11: [E0401(import-error), ] Unable to import 'wand.image'
sol/utils/files.py:14: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/files.py:15: [E0401(import-error), ] Unable to import 'django.core.files.base'
sol/utils/files.py:16: [E0401(import-error), ] Unable to import 'django.http'
sol/utils/files.py:17: [E0401(import-error), ] Unable to import 'django.utils.crypto'
sol/utils/files.py:18: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol/utils/files.py:19: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/files.py:20: [E0401(import-error), ] Unable to import 'django.utils.six'
sol/utils/files.py:22: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/utils/files.py:60: [R0913(too-many-arguments), get_file_response] Too many arguments (6/5)
sol/utils/files.py:78: [C0103(invalid-name), get_file_response] Variable name "e" doesn't conform to snake_case naming style
sol/utils/files.py:87: [C0103(invalid-name), get_file_response] Variable name "e" doesn't conform to snake_case naming style
sol/utils/files.py:128: [W0212(protected-access), serve_file_from_django_field] Access to a protected member _mimetype of a client class
sol/utils/files.py:135: [R0913(too-many-arguments), serve_file_from_queryset] Too many arguments (7/5)
sol/utils/files.py:135: [R0914(too-many-locals), serve_file_from_queryset] Too many local variables (17/15)
sol/utils/files.py:187: [C0103(invalid-name), serve_file_from_queryset] Variable name "zf" doesn't conform to snake_case naming style
sol/utils/files.py:198: [W0212(protected-access), serve_file_from_queryset] Access to a protected member _meta of a client class
sol/utils/files.py:207: [C0111(missing-docstring), do_normalize_filename] Missing function docstring
sol/utils/files.py:211: [R0913(too-many-arguments), store_private_file] Too many arguments (7/5)
sol/utils/files.py:287: [W0613(unused-argument), download_client_file] Unused argument 'args'
sol/utils/files.py:287: [W0613(unused-argument), download_client_file] Unused argument 'kwargs'
sol/utils/files.py:316: [C0111(missing-docstring), get_in_memory_thumbnail_from_image_or_pdf] Missing function docstring
sol/utils/files.py:316: [W0622(redefined-builtin), get_in_memory_thumbnail_from_image_or_pdf] Redefining built-in 'format'
sol/utils/files.py:344: [C0111(missing-docstring), rename_clashing_files] Missing function docstring
sol/utils/files.py:16: [W0611(unused-import), ] Unused HttpResponse imported from django.http
sol/utils/files.py:12: [C0411(wrong-import-order), ] standard import "from datetime import datetime" should be placed before "import magic"
sol/utils/files.py:14: [C0412(ungrouped-imports), ] Imports from package django are not grouped
************* Module sol.utils.expressions
sol/utils/expressions.py:24: [C0305(trailing-newlines), ] Trailing newlines
sol/utils/expressions.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/expressions.py:2: [E0401(import-error), ] Unable to import 'django.db.models.expressions'
sol/utils/expressions.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/expressions.py:6: [C0111(missing-docstring), ReplaceChoiceKeyWithLabel] Missing class docstring
sol/utils/expressions.py:13: [C0111(missing-docstring), ReplaceChoiceKeyWithLabel.as_sql] Missing method docstring
sol/utils/expressions.py:13: [W0613(unused-argument), ReplaceChoiceKeyWithLabel.as_sql] Unused argument 'connection'
sol/utils/expressions.py:13: [W0613(unused-argument), ReplaceChoiceKeyWithLabel.as_sql] Unused argument 'template'
sol/utils/expressions.py:13: [W0613(unused-argument), ReplaceChoiceKeyWithLabel.as_sql] Unused argument 'extra_context'
sol/utils/expressions.py:6: [R0903(too-few-public-methods), ReplaceChoiceKeyWithLabel] Too few public methods (1/2)
************* Module sol.utils.filters
sol/utils/filters.py:29: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/filters.py:39: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/filters.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/filters.py:2: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol/utils/filters.py:29: [C0111(missing-docstring), django_filters_dict_objects_list] Missing function docstring
sol/utils/filters.py:38: [C0103(invalid-name), django_filters_dict_objects_list.predicate] Argument name "c" doesn't conform to snake_case naming style
sol/utils/filters.py:39: [W0640(cell-var-from-loop), django_filters_dict_objects_list.predicate] Cell variable filter_value defined in loop
sol/utils/filters.py:39: [W0640(cell-var-from-loop), django_filters_dict_objects_list.predicate] Cell variable filter_attr defined in loop
sol/utils/filters.py:39: [W0640(cell-var-from-loop), django_filters_dict_objects_list.predicate] Cell variable lookup defined in loop
************* Module sol.utils.fields
sol/utils/fields.py:12: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/fields.py:33: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/fields.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/fields.py:2: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/fields.py:3: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/utils/fields.py:3: [W0404(reimported), ] Reimport 'FieldDoesNotExist' (imported line 2)
sol/utils/fields.py:4: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/fields.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/fields.py:8: [C0111(missing-docstring), validate_required_fields] Missing function docstring
sol/utils/fields.py:16: [C0111(missing-docstring), get_required_kwargs_for_drf_field] Missing function docstring
sol/utils/fields.py:19: [C0123(unidiomatic-typecheck), get_required_kwargs_for_drf_field] Using type() instead of isinstance() for a typecheck.
sol/utils/fields.py:31: [C0111(missing-docstring), get_model_field_from_queryset] Missing function docstring
sol/utils/fields.py:35: [R1705(no-else-return), get_model_field_from_queryset] Unnecessary "else" after "return"
sol/utils/fields.py:39: [W0212(protected-access), get_model_field_from_queryset] Access to a protected member _meta of a client class
sol/utils/fields.py:44: [W0212(protected-access), get_model_field_from_queryset] Access to a protected member _meta of a client class
sol/utils/fields.py:45: [C0103(invalid-name), get_model_field_from_queryset] Variable name "e" doesn't conform to snake_case naming style
sol/utils/fields.py:53: [C0111(missing-docstring), get_field_choices_objects_list] Missing function docstring
sol/utils/fields.py:57: [W0706(try-except-raise), get_field_choices_objects_list] The except handler raises immediately
sol/utils/fields.py:55: [W0212(protected-access), get_field_choices_objects_list] Access to a protected member _meta of a client class
************* Module sol.utils.renderers
sol/utils/renderers.py:19: [C0301(line-too-long), ] Line too long (110/100)
sol/utils/renderers.py:219: [C0301(line-too-long), ] Line too long (112/100)
sol/utils/renderers.py:245: [C0301(line-too-long), ] Line too long (109/100)
sol/utils/renderers.py:247: [C0301(line-too-long), ] Line too long (118/100)
sol/utils/renderers.py:249: [C0301(line-too-long), ] Line too long (106/100)
sol/utils/renderers.py:266: [C0301(line-too-long), ] Line too long (105/100)
sol/utils/renderers.py:274: [C0301(line-too-long), ] Line too long (106/100)
sol/utils/renderers.py:289: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/renderers.py:292: [C0301(line-too-long), ] Line too long (120/100)
sol/utils/renderers.py:295: [C0301(line-too-long), ] Line too long (112/100)
sol/utils/renderers.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/renderers.py:8: [E0401(import-error), ] Unable to import 'rest_framework'
sol/utils/renderers.py:9: [E0401(import-error), ] Unable to import 'rest_framework.renderers'
sol/utils/renderers.py:9: [W0401(wildcard-import), ] Wildcard import rest_framework.renderers
sol/utils/renderers.py:13: [C0111(missing-docstring), SolExportBaseRenderer] Missing class docstring
sol/utils/renderers.py:13: [E0602(undefined-variable), SolExportBaseRenderer] Undefined variable 'BaseRenderer'
sol/utils/renderers.py:18: [C0111(missing-docstring), SolExportBaseRenderer.write_table_to_output_format] Missing method docstring
sol/utils/renderers.py:21: [C0111(missing-docstring), SolExportBaseRenderer.render] Missing method docstring
sol/utils/renderers.py:21: [W0613(unused-argument), SolExportBaseRenderer.render] Unused argument 'accepted_media_type'
sol/utils/renderers.py:65: [E0602(undefined-variable), SolExportBaseRenderer.tablize] Undefined variable 'OrderedDict'
sol/utils/renderers.py:67: [E0602(undefined-variable), SolExportBaseRenderer.tablize] Undefined variable 'OrderedDict'
sol/utils/renderers.py:90: [C0111(missing-docstring), SolExportBaseRenderer.prepare_header_with_labels] Missing method docstring
sol/utils/renderers.py:109: [C0111(missing-docstring), SolExportBaseRenderer.flatten_item] Missing method docstring
sol/utils/renderers.py:137: [C0103(invalid-name), SolExportBaseRenderer.flatten_list] Argument name "l" doesn't conform to snake_case naming style
sol/utils/renderers.py:137: [C0111(missing-docstring), SolExportBaseRenderer.flatten_list] Missing method docstring
sol/utils/renderers.py:138: [E0602(undefined-variable), SolExportBaseRenderer.flatten_list] Undefined variable 'OrderedDict'
sol/utils/renderers.py:146: [C0103(invalid-name), SolExportBaseRenderer.flatten_dict] Argument name "d" doesn't conform to snake_case naming style
sol/utils/renderers.py:146: [C0111(missing-docstring), SolExportBaseRenderer.flatten_dict] Missing method docstring
sol/utils/renderers.py:147: [E0602(undefined-variable), SolExportBaseRenderer.flatten_dict] Undefined variable 'OrderedDict'
sol/utils/renderers.py:156: [C0111(missing-docstring), SolExportCSVRenderer] Missing class docstring
sol/utils/renderers.py:162: [E0602(undefined-variable), SolExportCSVRenderer.write_table_to_output_format] Undefined variable 'settings'
sol/utils/renderers.py:282: [C0103(invalid-name), SolExportExcelRenderer.write_table_to_output_format] Attribute name "wb" doesn't conform to snake_case naming style
sol/utils/renderers.py:172: [C0111(missing-docstring), SolExportExcelRenderer] Missing class docstring
sol/utils/renderers.py:195: [C0103(invalid-name), SolExportExcelRenderer.set_worksheets_zoom] Argument name "wb" doesn't conform to snake_case naming style
sol/utils/renderers.py:195: [C0111(missing-docstring), SolExportExcelRenderer.set_worksheets_zoom] Missing method docstring
sol/utils/renderers.py:196: [C0103(invalid-name), SolExportExcelRenderer.set_worksheets_zoom] Variable name "ws" doesn't conform to snake_case naming style
sol/utils/renderers.py:200: [C0103(invalid-name), SolExportExcelRenderer.set_worksheet_zoom] Argument name "ws" doesn't conform to snake_case naming style
sol/utils/renderers.py:200: [C0111(missing-docstring), SolExportExcelRenderer.set_worksheet_zoom] Missing method docstring
sol/utils/renderers.py:204: [C0103(invalid-name), SolExportExcelRenderer.fit_columns_width] Argument name "wb" doesn't conform to snake_case naming style
sol/utils/renderers.py:204: [C0111(missing-docstring), SolExportExcelRenderer.fit_columns_width] Missing method docstring
sol/utils/renderers.py:205: [C0103(invalid-name), SolExportExcelRenderer.fit_columns_width] Variable name "ws" doesn't conform to snake_case naming style
sol/utils/renderers.py:209: [C0103(invalid-name), SolExportExcelRenderer.fit_columns_width_ws] Argument name "ws" doesn't conform to snake_case naming style
sol/utils/renderers.py:209: [C0111(missing-docstring), SolExportExcelRenderer.fit_columns_width_ws] Missing method docstring
sol/utils/renderers.py:214: [W0621(redefined-outer-name), SolExportExcelRenderer.fit_columns_width_ws] Redefining name 'cell' from outer scope (line 5)
sol/utils/renderers.py:220: [E0602(undefined-variable), SolExportExcelRenderer.fit_columns_width_ws] Undefined variable 'six'
sol/utils/renderers.py:233: [C0111(missing-docstring), SolExportExcelRenderer.apply_cell_styles] Missing method docstring
sol/utils/renderers.py:233: [W0621(redefined-outer-name), SolExportExcelRenderer.apply_cell_styles] Redefining name 'cell' from outer scope (line 5)
sol/utils/renderers.py:238: [C0111(missing-docstring), SolExportExcelRenderer.apply_default_cell_attributes] Missing method docstring
sol/utils/renderers.py:249: [E1101(no-member), SolExportExcelRenderer.apply_default_cell_attributes] Class 'Cell' has no 'TYPE_NUMERIC' member
sol/utils/renderers.py:256: [C0103(invalid-name), SolExportExcelRenderer.export_table_to_ws] Argument name "ws" doesn't conform to snake_case naming style
sol/utils/renderers.py:256: [C0111(missing-docstring), SolExportExcelRenderer.export_table_to_ws] Missing method docstring
sol/utils/renderers.py:263: [W0621(redefined-outer-name), SolExportExcelRenderer.export_table_to_ws] Redefining name 'cell' from outer scope (line 5)
sol/utils/renderers.py:256: [R0913(too-many-arguments), SolExportExcelRenderer.export_table_to_ws] Too many arguments (6/5)
sol/utils/renderers.py:256: [R0914(too-many-locals), SolExportExcelRenderer.export_table_to_ws] Too many local variables (16/15)
sol/utils/renderers.py:283: [C0103(invalid-name), SolExportExcelRenderer.write_table_to_output_format] Variable name "ws" doesn't conform to snake_case naming style
sol/utils/renderers.py:282: [W0201(attribute-defined-outside-init), SolExportExcelRenderer.write_table_to_output_format] Attribute 'wb' defined outside __init__
************* Module sol.utils.importer
sol/utils/importer.py:198: [W0511(fixme), ] TODO: check for timezone
sol/utils/importer.py:41: [C0301(line-too-long), ] Line too long (109/100)
sol/utils/importer.py:112: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/importer.py:130: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/importer.py:133: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/importer.py:203: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/importer.py:216: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/importer.py:227: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/importer.py:256: [C0301(line-too-long), ] Line too long (116/100)
sol/utils/importer.py:268: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/importer.py:273: [C0301(line-too-long), ] Line too long (118/100)
sol/utils/importer.py:278: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/importer.py:283: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/importer.py:285: [C0301(line-too-long), ] Line too long (105/100)
sol/utils/importer.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/importer.py:9: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/importer.py:10: [E0401(import-error), ] Unable to import 'django.db.models.constants'
sol/utils/importer.py:11: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/importer.py:12: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/utils/importer.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/importer.py:15: [E0401(import-error), ] Unable to import 'rest_framework'
sol/utils/importer.py:44: [C0103(invalid-name), BaseImporterExcel.__init__] Attribute name "wb" doesn't conform to snake_case naming style
sol/utils/importer.py:49: [C0103(invalid-name), BaseImporterExcel.__init__] Attribute name "ws" doesn't conform to snake_case naming style
sol/utils/importer.py:18: [C0111(missing-docstring), BaseImporterExcel] Missing class docstring
sol/utils/importer.py:18: [R0902(too-many-instance-attributes), BaseImporterExcel] Too many instance attributes (14/7)
sol/utils/importer.py:18: [R0205(useless-object-inheritance), BaseImporterExcel] Class 'BaseImporterExcel' inherits from object, can be safely removed from bases in python3
sol/utils/importer.py:28: [R0913(too-many-arguments), BaseImporterExcel.__init__] Too many arguments (10/5)
sol/utils/importer.py:28: [W0613(unused-argument), BaseImporterExcel.__init__] Unused argument 'kwargs'
sol/utils/importer.py:86: [C0111(missing-docstring), BaseImporterExcel.model] Missing method docstring
sol/utils/importer.py:90: [C0111(missing-docstring), BaseImporterExcel.get_field_name_parts] Missing method docstring
sol/utils/importer.py:93: [C0111(missing-docstring), BaseImporterExcel.get_info_field] Missing method docstring
sol/utils/importer.py:98: [W0212(protected-access), BaseImporterExcel.get_info_field] Access to a protected member _meta of a client class
sol/utils/importer.py:107: [C0111(missing-docstring), BaseImporterExcel.process_headers] Missing method docstring
sol/utils/importer.py:109: [E1102(not-callable), BaseImporterExcel.process_headers] self.serializer_class is not callable
sol/utils/importer.py:112: [W0212(protected-access), BaseImporterExcel.process_headers] Access to a protected member _meta of a client class
sol/utils/importer.py:145: [C0111(missing-docstring), BaseImporterExcel.validate] Missing method docstring
sol/utils/importer.py:173: [C0111(missing-docstring), BaseImporterExcel.get_instance] Missing method docstring
sol/utils/importer.py:174: [C0103(invalid-name), BaseImporterExcel.get_instance] Variable name "pk" doesn't conform to snake_case naming style
sol/utils/importer.py:175: [W0212(protected-access), BaseImporterExcel.get_instance] Access to a protected member _meta of a client class
sol/utils/importer.py:177: [C0103(invalid-name), BaseImporterExcel.get_instance] Variable name "pk" doesn't conform to snake_case naming style
sol/utils/importer.py:183: [C0111(missing-docstring), BaseImporterExcel.process_field_value] Missing method docstring
sol/utils/importer.py:192: [C1801(len-as-condition), BaseImporterExcel.process_field_value] Do not use `len(SEQUENCE)` to determine if a sequence is empty
sol/utils/importer.py:219: [W0703(broad-except), BaseImporterExcel.process_field_value] Catching too general exception Exception
sol/utils/importer.py:212: [W0212(protected-access), BaseImporterExcel.process_field_value] Access to a protected member _meta of a client class
sol/utils/importer.py:219: [C0103(invalid-name), BaseImporterExcel.process_field_value] Variable name "e" doesn't conform to snake_case naming style
sol/utils/importer.py:183: [W0613(unused-argument), BaseImporterExcel.process_field_value] Unused argument 'kwargs'
sol/utils/importer.py:219: [W0612(unused-variable), BaseImporterExcel.process_field_value] Unused variable 'e'
sol/utils/importer.py:225: [C0111(missing-docstring), BaseImporterExcel.get_process_row_fields] Missing method docstring
sol/utils/importer.py:225: [W0613(unused-argument), BaseImporterExcel.get_process_row_fields] Unused argument 'row_index'
sol/utils/importer.py:225: [W0613(unused-argument), BaseImporterExcel.get_process_row_fields] Unused argument 'row'
sol/utils/importer.py:225: [W0613(unused-argument), BaseImporterExcel.get_process_row_fields] Unused argument 'instance'
sol/utils/importer.py:230: [C0111(missing-docstring), BaseImporterExcel.process_row_data] Missing method docstring
sol/utils/importer.py:241: [W0212(protected-access), BaseImporterExcel.process_row_data] Access to a protected member _meta of a client class
sol/utils/importer.py:257: [W0703(broad-except), BaseImporterExcel.process_row_data] Catching too general exception Exception
sol/utils/importer.py:257: [C0103(invalid-name), BaseImporterExcel.process_row_data] Variable name "e" doesn't conform to snake_case naming style
sol/utils/importer.py:266: [C0111(missing-docstring), BaseImporterExcel.save_row] Missing method docstring
sol/utils/importer.py:268: [E1102(not-callable), BaseImporterExcel.save_row] self.serializer_class is not callable
sol/utils/importer.py:266: [W0613(unused-argument), BaseImporterExcel.save_row] Unused argument 'row'
sol/utils/importer.py:282: [C0111(missing-docstring), BaseImporterExcel.process_row] Missing method docstring
sol/utils/importer.py:282: [R1710(inconsistent-return-statements), BaseImporterExcel.process_row] Either all return statements in a function should return an expression, or none of them should.
sol/utils/importer.py:287: [C0111(missing-docstring), BaseImporterExcel.process] Missing method docstring
sol/utils/importer.py:310: [W0703(broad-except), BaseImporterExcel.process] Catching too general exception Exception
sol/utils/importer.py:310: [C0103(invalid-name), BaseImporterExcel.process] Variable name "e" doesn't conform to snake_case naming style
************* Module sol.utils.export
sol/utils/export.py:104: [W0511(fixme), ] TODO: avoid mixing export_serializer_mixin if already in base_serializer_class mro. This enhance flexibilty.
sol/utils/export.py:11: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/export.py:35: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/export.py:42: [C0301(line-too-long), ] Line too long (110/100)
sol/utils/export.py:45: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/export.py:92: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/export.py:104: [C0301(line-too-long), ] Line too long (114/100)
sol/utils/export.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/export.py:2: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/export.py:3: [E0401(import-error), ] Unable to import 'django.core.files.base'
sol/utils/export.py:4: [E0401(import-error), ] Unable to import 'django.http'
sol/utils/export.py:5: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/export.py:6: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol/utils/export.py:11: [C0111(missing-docstring), export_file_from_viewset_class] Missing function docstring
sol/utils/export.py:16: [W0212(protected-access), export_file_from_viewset_class] Access to a protected member _request of a client class
sol/utils/export.py:20: [W0212(protected-access), export_file_from_viewset_class] Access to a protected member _meta of a client class
sol/utils/export.py:42: [R0913(too-many-arguments), export_file_from_queryset] Too many arguments (6/5)
sol/utils/export.py:84: [R0913(too-many-arguments), get_export_serializer_class] Too many arguments (7/5)
sol/utils/export.py:84: [R0914(too-many-locals), get_export_serializer_class] Too many local variables (19/15)
************* Module sol.utils.permissions
sol/utils/permissions.py:91: [W1401(anomalous-backslash-in-string), ] Anomalous backslash in string: '\w'. String constant might be missing an r prefix.
sol/utils/permissions.py:285: [W0511(fixme), ] TODO: improve this performance bottleneck when there are many records in queryset model table.
sol/utils/permissions.py:286: [W0511(fixme), ] TODO: update: performances improved in history by adding a db index for 'content_type'.
sol/utils/permissions.py:48: [C0301(line-too-long), ] Line too long (109/100)
sol/utils/permissions.py:50: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/permissions.py:65: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/permissions.py:120: [C0301(line-too-long), ] Line too long (153/100)
sol/utils/permissions.py:121: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/permissions.py:128: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/permissions.py:142: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/permissions.py:159: [C0301(line-too-long), ] Line too long (114/100)
sol/utils/permissions.py:253: [C0301(line-too-long), ] Line too long (114/100)
sol/utils/permissions.py:254: [C0301(line-too-long), ] Line too long (106/100)
sol/utils/permissions.py:255: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/permissions.py:287: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/permissions.py:294: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/permissions.py:341: [C0301(line-too-long), ] Line too long (106/100)
sol/utils/permissions.py:413: [C0301(line-too-long), ] Line too long (115/100)
sol/utils/permissions.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/permissions.py:8: [E0401(import-error), ] Unable to import 'django.apps'
sol/utils/permissions.py:9: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol/utils/permissions.py:10: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/permissions.py:11: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/permissions.py:12: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/permissions.py:17: [C0103(invalid-name), ] Constant name "base_action_attributes" doesn't conform to UPPER_CASE naming style
sol/utils/permissions.py:26: [C0103(invalid-name), ] Constant name "base_revoke_attributes" doesn't conform to UPPER_CASE naming style
sol/utils/permissions.py:36: [C0111(missing-docstring), GetUserPermissionsMixin] Missing class docstring
sol/utils/permissions.py:36: [R0205(useless-object-inheritance), GetUserPermissionsMixin] Class 'GetUserPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol/utils/permissions.py:38: [C0111(missing-docstring), GetUserPermissionsMixin.get_user_permission_for_method] Missing method docstring
sol/utils/permissions.py:72: [R1705(no-else-return), GetUserPermissionsMixin.get_user_permission_for_method] Unnecessary "else" after "return"
sol/utils/permissions.py:64: [R1702(too-many-nested-blocks), GetUserPermissionsMixin.get_user_permission_for_method] Too many nested blocks (6/5)
sol/utils/permissions.py:38: [R0912(too-many-branches), GetUserPermissionsMixin.get_user_permission_for_method] Too many branches (14/12)
sol/utils/permissions.py:36: [R0903(too-few-public-methods), GetUserPermissionsMixin] Too few public methods (1/2)
sol/utils/permissions.py:85: [C0111(missing-docstring), BaseAppPermissions] Missing class docstring
sol/utils/permissions.py:87: [C0111(missing-docstring), BaseAppPermissions.as_dict] Missing method docstring
sol/utils/permissions.py:98: [C0111(missing-docstring), get_permissions_action_name_from_method] Missing function docstring
sol/utils/permissions.py:110: [C0111(missing-docstring), get_permissions_method_from_action_name] Missing function docstring
sol/utils/permissions.py:114: [C0111(missing-docstring), get_permissions_actions_from_class] Missing function docstring
sol/utils/permissions.py:121: [W0612(unused-variable), get_permissions_actions_from_class] Unused variable 'method_object'
sol/utils/permissions.py:135: [C0111(missing-docstring), get_app_actions] Missing function docstring
sol/utils/permissions.py:147: [W0612(unused-variable), get_app_actions] Unused variable 'class_name'
sol/utils/permissions.py:175: [C0111(missing-docstring), get_app_resources] Missing function docstring
sol/utils/permissions.py:190: [C0111(missing-docstring), get_app_resource] Missing function docstring
sol/utils/permissions.py:197: [C0111(missing-docstring), get_app_resource_by_model_class] Missing function docstring
sol/utils/permissions.py:198: [W0212(protected-access), get_app_resource_by_model_class] Access to a protected member _meta of a client class
sol/utils/permissions.py:208: [C0111(missing-docstring), get_app_resource_by_model] Missing function docstring
sol/utils/permissions.py:214: [C0111(missing-docstring), get_or_set_app_actions_roles] Missing function docstring
sol/utils/permissions.py:214: [R0914(too-many-locals), get_or_set_app_actions_roles] Too many local variables (19/15)
sol/utils/permissions.py:219: [W0212(protected-access), get_or_set_app_actions_roles] Access to a protected member _app_actions_roles_cache of a client class
sol/utils/permissions.py:220: [W0212(protected-access), get_or_set_app_actions_roles] Access to a protected member _app_actions_roles_cache of a client class
sol/utils/permissions.py:270: [W0212(protected-access), get_or_set_app_actions_roles] Access to a protected member _app_actions_roles_cache of a client class
sol/utils/permissions.py:228: [W0612(unused-variable), get_or_set_app_actions_roles] Unused variable 'action_details'
sol/utils/permissions.py:214: [R0912(too-many-branches), get_or_set_app_actions_roles] Too many branches (13/12)
sol/utils/permissions.py:275: [C0111(missing-docstring), permissions_filter_on_related_objects] Missing function docstring
sol/utils/permissions.py:315: [C0103(invalid-name), permissions_filter_on_related_objects] Variable name "qs" doesn't conform to snake_case naming style
sol/utils/permissions.py:332: [C0111(missing-docstring), check_permissions_for_content_type] Missing function docstring
sol/utils/permissions.py:341: [C0111(missing-docstring), check_permissions_model_from_request] Missing function docstring
sol/utils/permissions.py:346: [W0212(protected-access), check_permissions_model_from_request] Access to a protected member _meta of a client class
sol/utils/permissions.py:353: [C0111(missing-docstring), get_content_object] Missing function docstring
sol/utils/permissions.py:362: [W0702(bare-except), get_content_object] No exception type(s) specified
sol/utils/permissions.py:368: [C0111(missing-docstring), get_content_object_from_request] Missing function docstring
sol/utils/permissions.py:392: [C0111(missing-docstring), ParentRelatedPermissionsMixin] Missing class docstring
sol/utils/permissions.py:392: [R0205(useless-object-inheritance), ParentRelatedPermissionsMixin] Class 'ParentRelatedPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol/utils/permissions.py:400: [C0111(missing-docstring), ParentRelatedPermissionsMixin.get_permission_related_model] Missing method docstring
sol/utils/permissions.py:406: [C0111(missing-docstring), ParentRelatedPermissionsMixin.get_permission_related_qs] Missing method docstring
sol/utils/permissions.py:412: [C0111(missing-docstring), ParentRelatedPermissionsMixin.permissions_filter] Missing method docstring
sol/utils/permissions.py:425: [C0111(missing-docstring), ParentRelatedPermissionsMixin.has_read_permission] Missing method docstring
sol/utils/permissions.py:432: [C0111(missing-docstring), ParentRelatedPermissionsMixin.has_write_permission] Missing method docstring
sol/utils/permissions.py:438: [C0111(missing-docstring), ParentRelatedPermissionsMixin.has_object_read_permission] Missing method docstring
sol/utils/permissions.py:448: [C0111(missing-docstring), ParentRelatedPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol.utils.mail
sol/utils/mail.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/mail.py:1: [E0401(import-error), ] Unable to import 'django.core.mail.backends.smtp'
sol/utils/mail.py:4: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
sol/utils/mail.py:7: [C0111(missing-docstring), LoggingBackend] Missing class docstring
sol/utils/mail.py:8: [C0111(missing-docstring), LoggingBackend.send_messages] Missing method docstring
sol/utils/mail.py:12: [W0703(broad-except), LoggingBackend.send_messages] Catching too general exception Exception
sol/utils/mail.py:11: [W1202(logging-format-interpolation), LoggingBackend.send_messages] Use % formatting in logging functions and pass the % parameters as arguments
sol/utils/mail.py:12: [C0103(invalid-name), LoggingBackend.send_messages] Variable name "e" doesn't conform to snake_case naming style
sol/utils/mail.py:13: [W1202(logging-format-interpolation), LoggingBackend.send_messages] Use % formatting in logging functions and pass the % parameters as arguments
sol/utils/mail.py:19: [C0103(invalid-name), LoggingBackend.send_messages] Variable name "e" doesn't conform to snake_case naming style
sol/utils/mail.py:20: [W1202(logging-format-interpolation), LoggingBackend.send_messages] Use % formatting in logging functions and pass the % parameters as arguments
sol/utils/mail.py:7: [R0903(too-few-public-methods), LoggingBackend] Too few public methods (1/2)
sol/utils/mail.py:2: [C0411(wrong-import-order), ] standard import "import logging" should be placed before "import django.core.mail.backends.smtp"
************* Module sol.utils.template_tags
sol/utils/template_tags.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/template_tags.py:2: [E0401(import-error), ] Unable to import 'django'
sol/utils/template_tags.py:5: [C0103(invalid-name), ] Constant name "register" doesn't conform to UPPER_CASE naming style
sol/utils/template_tags.py:9: [C0111(missing-docstring), abs_url] Missing function docstring
************* Module sol.utils.registries
sol/utils/registries.py:3: [W0511(fixme), ] TODO: remove also time_zone patch in JobRegistry.enqueue
sol/utils/registries.py:115: [W0511(fixme), ] TODO: remove time_zone patch together with sol.utils.sol_rq_scheduler_patch
sol/utils/registries.py:4: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/registries.py:46: [C0301(line-too-long), ] Line too long (113/100)
sol/utils/registries.py:72: [C0301(line-too-long), ] Line too long (115/100)
sol/utils/registries.py:80: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/registries.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/registries.py:9: [C0111(missing-docstring), AlreadyRegistered] Missing class docstring
sol/utils/registries.py:13: [C0111(missing-docstring), NotRegistered] Missing class docstring
sol/utils/registries.py:43: [C0111(missing-docstring), Registry.register] Missing method docstring
sol/utils/registries.py:52: [C0111(missing-docstring), Registry.unregister] Missing method docstring
sol/utils/registries.py:70: [C0111(missing-docstring), Registry.get_registered_class] Missing method docstring
sol/utils/registries.py:78: [C0111(missing-docstring), Registry.classes] Missing method docstring
sol/utils/registries.py:86: [C0111(missing-docstring), JobRegistry] Missing class docstring
sol/utils/registries.py:92: [C0111(missing-docstring), JobRegistry.cancel_by_key] Missing method docstring
sol/utils/registries.py:98: [C0111(missing-docstring), JobRegistry.restart_by_key] Missing method docstring
sol/utils/registries.py:104: [C0111(missing-docstring), JobRegistry.enqueue_job] Missing method docstring
sol/utils/registries.py:113: [C0111(missing-docstring), JobRegistry.enqueue] Missing method docstring
sol/utils/registries.py:127: [C0103(invalid-name), ] Constant name "job_registry" doesn't conform to UPPER_CASE naming style
************* Module sol.utils.__init__
sol/utils/__init__.py:34: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/__init__.py:37: [C0301(line-too-long), ] Line too long (112/100)
sol/utils/__init__.py:38: [C0301(line-too-long), ] Line too long (164/100)
sol/utils/__init__.py:39: [C0301(line-too-long), ] Line too long (135/100)
sol/utils/__init__.py:40: [C0301(line-too-long), ] Line too long (138/100)
sol/utils/__init__.py:91: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/__init__.py:96: [C0301(line-too-long), ] Line too long (119/100)
sol/utils/__init__.py:107: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/__init__.py:108: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/__init__.py:138: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/__init__.py:139: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/__init__.py:140: [C0301(line-too-long), ] Line too long (117/100)
************* Module sol.utils
sol/utils/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/__init__.py:9: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/__init__.py:10: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol/utils/__init__.py:11: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/__init__.py:12: [E0401(import-error), ] Unable to import 'django.apps'
sol/utils/__init__.py:13: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol/utils/__init__.py:14: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/__init__.py:15: [E0401(import-error), ] Unable to import 'django.db.models.constants'
sol/utils/__init__.py:17: [E0401(import-error), ] Unable to import 'django.db'
sol/utils/__init__.py:23: [C0103(invalid-name), ] Constant name "sol_primitives" doesn't conform to UPPER_CASE naming style
sol/utils/__init__.py:26: [R0913(too-many-arguments), sol_model_to_dict] Too many arguments (7/5)
sol/utils/__init__.py:46: [C0103(invalid-name), sol_model_to_dict] Variable name "f" doesn't conform to snake_case naming style
sol/utils/__init__.py:46: [W0212(protected-access), sol_model_to_dict] Access to a protected member _meta of a client class
sol/utils/__init__.py:47: [R0916(too-many-boolean-expressions), sol_model_to_dict] Too many boolean expressions in if statement (8/5)
sol/utils/__init__.py:56: [C0103(invalid-name), sol_model_to_dict] Variable name "e" doesn't conform to snake_case naming style
sol/utils/__init__.py:67: [C0123(unidiomatic-typecheck), sol_model_to_dict] Using type() instead of isinstance() for a typecheck.
sol/utils/__init__.py:56: [W0612(unused-variable), sol_model_to_dict] Unused variable 'e'
sol/utils/__init__.py:72: [C0111(missing-docstring), get_model_field_from_string] Missing function docstring
sol/utils/__init__.py:77: [W0212(protected-access), get_model_field_from_string] Access to a protected member _meta of a client class
sol/utils/__init__.py:100: [E0401(import-error), contribute_fields_to_model] Unable to import 'django.contrib.contenttypes.fields'
sol/utils/__init__.py:108: [W0212(protected-access), contribute_fields_to_model] Access to a protected member _meta of a client class
sol/utils/__init__.py:153: [C0103(invalid-name), inject_models] Variable name "m" doesn't conform to snake_case naming style
sol/utils/__init__.py:156: [R0916(too-many-boolean-expressions), inject_models] Too many boolean expressions in if statement (6/5)
sol/utils/__init__.py:161: [W0212(protected-access), inject_models] Access to a protected member _meta of a client class
sol/utils/__init__.py:187: [E1102(not-callable), inject_models] after_model_injected is not callable
sol/utils/__init__.py:203: [C0111(missing-docstring), fix_table_alias_for_schemas] Missing function docstring
sol/utils/__init__.py:207: [C0103(invalid-name), date_to_utc] Argument name "d" doesn't conform to snake_case naming style
sol/utils/__init__.py:207: [C0111(missing-docstring), date_to_utc] Missing function docstring
sol/utils/__init__.py:208: [C0103(invalid-name), date_to_utc] Variable name "tz" doesn't conform to snake_case naming style
sol/utils/__init__.py:215: [W0212(protected-access), get_function_name] Access to a protected member _getframe of a client class
sol/utils/__init__.py:232: [C0111(missing-docstring), set_throttle_scope] Missing function docstring
sol/utils/__init__.py:255: [C0103(invalid-name), get_client_ip] Variable name "ip" doesn't conform to snake_case naming style
sol/utils/__init__.py:257: [C0103(invalid-name), get_client_ip] Variable name "ip" doesn't conform to snake_case naming style
sol/utils/__init__.py:261: [C0103(invalid-name), is_topological_sorted] Argument name "g" doesn't conform to snake_case naming style
sol/utils/__init__.py:261: [C0103(invalid-name), is_topological_sorted] Argument name "l" doesn't conform to snake_case naming style
sol/utils/__init__.py:5: [C0411(wrong-import-order), ] standard import "import sys" should be placed before "import pytz"
sol/utils/__init__.py:6: [C0411(wrong-import-order), ] standard import "from functools import wraps" should be placed before "import pytz"
sol/utils/__init__.py:8: [C0411(wrong-import-order), ] standard import "import re" should be placed before "import pytz"
sol/utils/__init__.py:16: [C0411(wrong-import-order), ] standard import "from importlib import import_module" should be placed before "import pytz"
sol/utils/__init__.py:18: [C0411(wrong-import-order), ] standard import "import inspect" should be placed before "import pytz"
sol/utils/__init__.py:20: [C0411(wrong-import-order), ] standard import "import copy" should be placed before "import pytz"
************* Module sol.utils.lookups
sol/utils/lookups.py:11: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/lookups.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/lookups.py:1: [E0401(import-error), ] Unable to import 'django.db.models'
sol/utils/lookups.py:4: [C0111(missing-docstring), UnaccentIContains] Missing class docstring
sol/utils/lookups.py:7: [C0103(invalid-name), UnaccentIContains.as_sql] Argument name "qn" doesn't conform to snake_case naming style
sol/utils/lookups.py:7: [C0111(missing-docstring), UnaccentIContains.as_sql] Missing method docstring
sol/utils/lookups.py:4: [R0903(too-few-public-methods), UnaccentIContains] Too few public methods (1/2)
************* Module sol.utils.logging
sol/utils/logging.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/logging.py:6: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/logging.py:7: [E0401(import-error), ] Unable to import 'django.core'
sol/utils/logging.py:8: [E0401(import-error), ] Unable to import 'django.utils.html'
sol/utils/logging.py:9: [E0401(import-error), ] Unable to import 'django.utils.log'
sol/utils/logging.py:17: [C0111(missing-docstring), ManagerEmailHandler.send_mail] Missing method docstring
sol/utils/logging.py:12: [R0903(too-few-public-methods), ManagerEmailHandler] Too few public methods (1/2)
sol/utils/logging.py:21: [C0111(missing-docstring), ClientErrorsEmailHandler] Missing class docstring
sol/utils/logging.py:23: [C0111(missing-docstring), ClientErrorsEmailHandler.emit] Missing method docstring
sol/utils/logging.py:21: [R0903(too-few-public-methods), ClientErrorsEmailHandler] Too few public methods (1/2)
sol/utils/logging.py:43: [C0111(missing-docstring), ClientErrorsFileHandler] Missing class docstring
sol/utils/logging.py:52: [C0111(missing-docstring), RequireFireEmailTrue] Missing class docstring
sol/utils/logging.py:52: [R0903(too-few-public-methods), RequireFireEmailTrue] Too few public methods (1/2)
************* Module sol.utils.aggregates
sol/utils/aggregates.py:8: [C0301(line-too-long), ] Line too long (109/100)
sol/utils/aggregates.py:14: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/aggregates.py:20: [C0301(line-too-long), ] Line too long (128/100)
sol/utils/aggregates.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/aggregates.py:2: [E0401(import-error), ] Unable to import 'django.contrib.postgres.aggregates'
sol/utils/aggregates.py:3: [E0401(import-error), ] Unable to import 'django.db.models.expressions'
sol/utils/aggregates.py:16: [E1101(no-member), StringAggOrderBy.__init__] Instance of 'StringAggOrderBy' has no 'source_expressions' member
sol/utils/aggregates.py:6: [R0903(too-few-public-methods), StringAggOrderBy] Too few public methods (0/2)
sol/utils/aggregates.py:34: [C0111(missing-docstring), OrderableAggMixin.resolve_expression] Missing method docstring
sol/utils/aggregates.py:38: [C0111(missing-docstring), OrderableAggMixin.as_sql] Missing method docstring
sol/utils/aggregates.py:56: [C0111(missing-docstring), OrderableAggMixin.get_source_expressions] Missing method docstring
sol/utils/aggregates.py:59: [C0111(missing-docstring), OrderableAggMixin.get_source_fields] Missing method docstring
sol/utils/aggregates.py:64: [W0212(protected-access), OrderableAggMixin.get_source_fields] Access to a protected member _output_field_or_none of a client class
sol/utils/aggregates.py:74: [C0111(missing-docstring), ArrayAggTakenFromDjango] Missing class docstring
************* Module sol.utils.request_tracking.tests
sol/utils/request_tracking/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/tests.py:2: [E0401(import-error), ] Unable to import 'django.test'
sol/utils/request_tracking/tests.py:2: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module sol.utils.request_tracking.utils
sol/utils/request_tracking/utils.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module sol.utils.request_tracking.apps
sol/utils/request_tracking/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/apps.py:2: [E0401(import-error), ] Unable to import 'django.apps'
sol/utils/request_tracking/apps.py:5: [C0111(missing-docstring), RequestTrackingConfig] Missing class docstring
sol/utils/request_tracking/apps.py:5: [R0903(too-few-public-methods), RequestTrackingConfig] Too few public methods (0/2)
************* Module sol.utils.request_tracking.views
sol/utils/request_tracking/views.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/views.py:2: [E0401(import-error), ] Unable to import 'django.shortcuts'
sol/utils/request_tracking/views.py:2: [W0611(unused-import), ] Unused render imported from django.shortcuts
************* Module sol.utils.request_tracking.admin
sol/utils/request_tracking/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/admin.py:2: [E0401(import-error), ] Unable to import 'django.contrib'
sol/utils/request_tracking/admin.py:6: [C0111(missing-docstring), RequestTrackingAdmin] Missing class docstring
sol/utils/request_tracking/admin.py:37: [C0111(missing-docstring), RequestTrackingAdmin.get_readonly_fields] Missing method docstring
sol/utils/request_tracking/admin.py:38: [W0212(protected-access), RequestTrackingAdmin.get_readonly_fields] Access to a protected member _meta of a client class
sol/utils/request_tracking/admin.py:37: [W0613(unused-argument), RequestTrackingAdmin.get_readonly_fields] Unused argument 'request'
sol/utils/request_tracking/admin.py:37: [W0613(unused-argument), RequestTrackingAdmin.get_readonly_fields] Unused argument 'obj'
sol/utils/request_tracking/admin.py:40: [C0111(missing-docstring), RequestTrackingAdmin.has_add_permission] Missing method docstring
sol/utils/request_tracking/admin.py:40: [W0613(unused-argument), RequestTrackingAdmin.has_add_permission] Unused argument 'request'
sol/utils/request_tracking/admin.py:40: [R0201(no-self-use), RequestTrackingAdmin.has_add_permission] Method could be a function
sol/utils/request_tracking/admin.py:44: [C0111(missing-docstring), RequestTrackingAdmin.has_change_permission] Missing method docstring
sol/utils/request_tracking/admin.py:48: [C0111(missing-docstring), RequestTrackingAdmin.has_delete_permission] Missing method docstring
sol/utils/request_tracking/admin.py:48: [W0613(unused-argument), RequestTrackingAdmin.has_delete_permission] Unused argument 'request'
sol/utils/request_tracking/admin.py:48: [W0613(unused-argument), RequestTrackingAdmin.has_delete_permission] Unused argument 'obj'
sol/utils/request_tracking/admin.py:48: [R0201(no-self-use), RequestTrackingAdmin.has_delete_permission] Method could be a function
************* Module sol.utils.request_tracking
sol/utils/request_tracking/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/__init__.py:3: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/request_tracking/__init__.py:6: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
sol/utils/request_tracking/__init__.py:44: [R0205(useless-object-inheritance), Settings] Class 'Settings' inherits from object, can be safely removed from bases in python3
sol/utils/request_tracking/__init__.py:44: [R0903(too-few-public-methods), Settings] Too few public methods (1/2)
sol/utils/request_tracking/__init__.py:65: [C0103(invalid-name), ] Constant name "settings" doesn't conform to UPPER_CASE naming style
************* Module sol.utils.request_tracking.middleware
sol/utils/request_tracking/middleware.py:43: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/request_tracking/middleware.py:100: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/request_tracking/middleware.py:101: [C0301(line-too-long), ] Line too long (114/100)
sol/utils/request_tracking/middleware.py:114: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/request_tracking/middleware.py:164: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/request_tracking/middleware.py:165: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/request_tracking/middleware.py:167: [C0301(line-too-long), ] Line too long (101/100)
sol/utils/request_tracking/middleware.py:270: [C0301(line-too-long), ] Line too long (118/100)
sol/utils/request_tracking/middleware.py:274: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/request_tracking/middleware.py:278: [C0301(line-too-long), ] Line too long (106/100)
sol/utils/request_tracking/middleware.py:294: [C0301(line-too-long), ] Line too long (101/100)
sol/utils/request_tracking/middleware.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/middleware.py:6: [E0401(import-error), ] Unable to import 'django.apps'
sol/utils/request_tracking/middleware.py:7: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/request_tracking/middleware.py:8: [E0401(import-error), ] Unable to import 'django.utils.timezone'
sol/utils/request_tracking/middleware.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/request_tracking/middleware.py:28: [C0111(missing-docstring), APIView] Missing class docstring
sol/utils/request_tracking/middleware.py:28: [R0205(useless-object-inheritance), APIView] Class 'APIView' inherits from object, can be safely removed from bases in python3
sol/utils/request_tracking/middleware.py:28: [R0903(too-few-public-methods), APIView] Too few public methods (0/2)
sol/utils/request_tracking/middleware.py:38: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
sol/utils/request_tracking/middleware.py:45: [C0111(missing-docstring), RequestTrackingMiddleware.process_request] Missing method docstring
sol/utils/request_tracking/middleware.py:58: [C0111(missing-docstring), RequestTrackingMiddleware.process_view] Missing method docstring
sol/utils/request_tracking/middleware.py:58: [W0613(unused-argument), RequestTrackingMiddleware.process_view] Unused argument 'view_args'
sol/utils/request_tracking/middleware.py:58: [W0613(unused-argument), RequestTrackingMiddleware.process_view] Unused argument 'view_kwargs'
sol/utils/request_tracking/middleware.py:58: [R0201(no-self-use), RequestTrackingMiddleware.process_view] Method could be a function
sol/utils/request_tracking/middleware.py:65: [C0111(missing-docstring), RequestTrackingMiddleware.process_exception] Missing method docstring
sol/utils/request_tracking/middleware.py:65: [W0613(unused-argument), RequestTrackingMiddleware.process_exception] Unused argument 'exception'
sol/utils/request_tracking/middleware.py:65: [R0201(no-self-use), RequestTrackingMiddleware.process_exception] Method could be a function
sol/utils/request_tracking/middleware.py:68: [C0111(missing-docstring), RequestTrackingMiddleware.process_response] Missing method docstring
sol/utils/request_tracking/middleware.py:89: [W0703(broad-except), RequestTrackingMiddleware.process_response] Catching too general exception Exception
sol/utils/request_tracking/middleware.py:94: [R0201(no-self-use), RequestTrackingMiddleware.should_log] Method could be a function
sol/utils/request_tracking/middleware.py:118: [W0613(unused-argument), RequestTrackingMiddleware.handle_log] Unused argument 'response'
sol/utils/request_tracking/middleware.py:125: [R0201(no-self-use), RequestTrackingMiddleware._get_storage_model] Method could be a function
sol/utils/request_tracking/middleware.py:131: [R0201(no-self-use), RequestTrackingMiddleware._get_client_ip] Method could be a function
sol/utils/request_tracking/middleware.py:135: [W0613(unused-argument), RequestTrackingMiddleware._get_view_name] Unused argument 'response'
sol/utils/request_tracking/middleware.py:135: [R0201(no-self-use), RequestTrackingMiddleware._get_view_name] Method could be a function
sol/utils/request_tracking/middleware.py:140: [W0613(unused-argument), RequestTrackingMiddleware._get_view_method] Unused argument 'response'
sol/utils/request_tracking/middleware.py:140: [R0201(no-self-use), RequestTrackingMiddleware._get_view_method] Method could be a function
sol/utils/request_tracking/middleware.py:149: [R0201(no-self-use), RequestTrackingMiddleware._get_user] Method could be a function
sol/utils/request_tracking/middleware.py:154: [W0613(unused-argument), RequestTrackingMiddleware._get_query_params] Unused argument 'response'
sol/utils/request_tracking/middleware.py:154: [R0201(no-self-use), RequestTrackingMiddleware._get_query_params] Method could be a function
sol/utils/request_tracking/middleware.py:174: [W0702(bare-except), RequestTrackingMiddleware._get_data] No exception type(s) specified
sol/utils/request_tracking/middleware.py:159: [R0201(no-self-use), RequestTrackingMiddleware._get_data] Method could be a function
sol/utils/request_tracking/middleware.py:180: [W0613(unused-argument), RequestTrackingMiddleware._get_response] Unused argument 'request'
sol/utils/request_tracking/middleware.py:180: [R0201(no-self-use), RequestTrackingMiddleware._get_response] Method could be a function
sol/utils/request_tracking/middleware.py:190: [R0201(no-self-use), RequestTrackingMiddleware._get_response_ms] Method could be a function
sol/utils/request_tracking/middleware.py:255: [W0702(bare-except), RequestTrackingMiddleware._truncate] No exception type(s) specified
sol/utils/request_tracking/middleware.py:13: [W0611(unused-import), ] Unused resolve imported from django.core.urlresolvers
sol/utils/request_tracking/middleware.py:35: [C0411(wrong-import-order), ] first party import "from sol.utils import get_client_ip" should be placed before "from . import settings"
************* Module sol.utils.request_tracking.decorators
sol/utils/request_tracking/decorators.py:44: [C0301(line-too-long), ] Line too long (102/100)
sol/utils/request_tracking/decorators.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/decorators.py:41: [R1705(no-else-return), skip_and_return_if.decorator.wrapper] Unnecessary "else" after "return"
************* Module sol.utils.request_tracking.models
sol/utils/request_tracking/models.py:83: [W0511(fixme), ] TODO: swappable model could be used, but don't know if (useless) db table creation can be avoided
sol/utils/request_tracking/models.py:28: [C0301(line-too-long), ] Line too long (105/100)
sol/utils/request_tracking/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/models.py:2: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/request_tracking/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol/utils/request_tracking/models.py:4: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/request_tracking/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol/utils/request_tracking/models.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/request_tracking/models.py:10: [C0111(missing-docstring), BaseRequestTrackingManager] Missing class docstring
sol/utils/request_tracking/models.py:11: [C0111(missing-docstring), BaseRequestTrackingManager.get_queryset] Missing method docstring
sol/utils/request_tracking/models.py:10: [R0903(too-few-public-methods), BaseRequestTrackingManager] Too few public methods (1/2)
sol/utils/request_tracking/models.py:15: [C0111(missing-docstring), BaseRequestTracking] Missing class docstring
sol/utils/request_tracking/models.py:40: [C0111(missing-docstring), BaseRequestTracking.Meta] Missing class docstring
sol/utils/request_tracking/models.py:40: [R0903(too-few-public-methods), BaseRequestTracking.Meta] Too few public methods (0/2)
sol/utils/request_tracking/models.py:45: [C0111(missing-docstring), BaseRequestTracking.fill_user_repr] Missing method docstring
sol/utils/request_tracking/models.py:48: [C0111(missing-docstring), BaseRequestTracking.save] Missing method docstring
sol/utils/request_tracking/models.py:86: [C0111(missing-docstring), RequestTracking] Missing class docstring
sol/utils/request_tracking/models.py:87: [C0111(missing-docstring), RequestTracking.Meta] Missing class docstring
sol/utils/request_tracking/models.py:87: [R0903(too-few-public-methods), RequestTracking.Meta] Too few public methods (0/2)
************* Module sol.utils.request_tracking.migrations.0001_initial
sol/utils/request_tracking/migrations/0001_initial.py:21: [C0301(line-too-long), ] Line too long (110/100)
sol/utils/request_tracking/migrations/0001_initial.py:25: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/request_tracking/migrations/0001_initial.py:40: [C0301(line-too-long), ] Line too long (114/100)
sol/utils/request_tracking/migrations/0001_initial.py:41: [C0301(line-too-long), ] Line too long (123/100)
sol/utils/request_tracking/migrations/0001_initial.py:43: [C0301(line-too-long), ] Line too long (126/100)
sol/utils/request_tracking/migrations/0001_initial.py:46: [C0301(line-too-long), ] Line too long (118/100)
sol/utils/request_tracking/migrations/0001_initial.py:47: [C0301(line-too-long), ] Line too long (131/100)
sol/utils/request_tracking/migrations/0001_initial.py:50: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/request_tracking/migrations/0001_initial.py:55: [C0301(line-too-long), ] Line too long (201/100)
sol/utils/request_tracking/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
sol/utils/request_tracking/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/request_tracking/migrations/0001_initial.py:3: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/request_tracking/migrations/0001_initial.py:4: [E0401(import-error), ] Unable to import 'django.db'
sol/utils/request_tracking/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
sol/utils/request_tracking/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.utils.timezone'
sol/utils/request_tracking/migrations/0001_initial.py:10: [C0111(missing-docstring), CreateConditionally] Missing class docstring
sol/utils/request_tracking/migrations/0001_initial.py:12: [C0111(missing-docstring), CreateConditionally.should_create_rt_model] Missing method docstring
sol/utils/request_tracking/migrations/0001_initial.py:15: [C0111(missing-docstring), CreateConditionally.state_forwards] Missing method docstring
sol/utils/request_tracking/migrations/0001_initial.py:19: [C0111(missing-docstring), CreateConditionally.database_forwards] Missing method docstring
sol/utils/request_tracking/migrations/0001_initial.py:23: [C0111(missing-docstring), CreateConditionally.database_backwards] Missing method docstring
sol/utils/request_tracking/migrations/0001_initial.py:28: [C0111(missing-docstring), Migration] Missing class docstring
sol/utils/request_tracking/migrations/0001_initial.py:28: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol.utils.decorators.signals
sol/utils/decorators/signals.py:21: [C0301(line-too-long), ] Line too long (105/100)
sol/utils/decorators/signals.py:31: [C0301(line-too-long), ] Line too long (105/100)
sol/utils/decorators/signals.py:33: [C0304(missing-final-newline), ] Final newline missing
sol/utils/decorators/signals.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/decorators/signals.py:12: [R1705(no-else-return), get_subclasses] Unnecessary "else" after "return"
************* Module sol.utils.history.mixins
sol/utils/history/mixins.py:36: [C0301(line-too-long), ] Line too long (119/100)
sol/utils/history/mixins.py:172: [C0301(line-too-long), ] Line too long (121/100)
sol/utils/history/mixins.py:188: [C0301(line-too-long), ] Line too long (118/100)
sol/utils/history/mixins.py:216: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/history/mixins.py:220: [C0301(line-too-long), ] Line too long (101/100)
sol/utils/history/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/history/mixins.py:2: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol/utils/history/mixins.py:4: [E0401(import-error), ] Unable to import 'django.apps'
sol/utils/history/mixins.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol/utils/history/mixins.py:6: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol/utils/history/mixins.py:7: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/history/mixins.py:16: [C0111(missing-docstring), HistoryMissingUserException] Missing class docstring
sol/utils/history/mixins.py:20: [C0111(missing-docstring), HistoryModelMixin] Missing class docstring
sol/utils/history/mixins.py:20: [R0205(useless-object-inheritance), HistoryModelMixin] Class 'HistoryModelMixin' inherits from object, can be safely removed from bases in python3
sol/utils/history/mixins.py:26: [C0111(missing-docstring), HistoryModelMixin.refresh_from_db] Missing method docstring
sol/utils/history/mixins.py:35: [C0111(missing-docstring), HistoryModelMixin.sol_history_many_to_many] Missing method docstring
sol/utils/history/mixins.py:49: [C0111(missing-docstring), HistoryModelMixin.sol_history_snapshot] Missing method docstring
sol/utils/history/mixins.py:58: [C0111(missing-docstring), HistoryModelMixin.history_model_class] Missing method docstring
sol/utils/history/mixins.py:65: [C0111(missing-docstring), HistoryModelMixin.sol_history_object_repr] Missing method docstring
sol/utils/history/mixins.py:68: [C0111(missing-docstring), HistoryModelMixin.to_human_readable_repr] Missing method docstring
sol/utils/history/mixins.py:68: [R0913(too-many-arguments), HistoryModelMixin.to_human_readable_repr] Too many arguments (7/5)
sol/utils/history/mixins.py:70: [W0613(unused-argument), HistoryModelMixin.to_human_readable_repr] Unused argument 'field_name'
sol/utils/history/mixins.py:73: [W0613(unused-argument), HistoryModelMixin.to_human_readable_repr] Unused argument 'initial'
sol/utils/history/mixins.py:74: [W0613(unused-argument), HistoryModelMixin.to_human_readable_repr] Unused argument 'final'
sol/utils/history/mixins.py:68: [W0613(unused-argument), HistoryModelMixin.to_human_readable_repr] Unused argument 'kwargs'
sol/utils/history/mixins.py:87: [C0111(missing-docstring), HistoryModelMixin.history_field_changed] Missing method docstring
sol/utils/history/mixins.py:87: [R0913(too-many-arguments), HistoryModelMixin.history_field_changed] Too many arguments (7/5)
sol/utils/history/mixins.py:88: [W0613(unused-argument), HistoryModelMixin.history_field_changed] Unused argument 'field_name'
sol/utils/history/mixins.py:89: [W0613(unused-argument), HistoryModelMixin.history_field_changed] Unused argument 'field_label'
sol/utils/history/mixins.py:92: [W0613(unused-argument), HistoryModelMixin.history_field_changed] Unused argument 'initial'
sol/utils/history/mixins.py:93: [W0613(unused-argument), HistoryModelMixin.history_field_changed] Unused argument 'final'
sol/utils/history/mixins.py:87: [W0613(unused-argument), HistoryModelMixin.history_field_changed] Unused argument 'kwargs'
sol/utils/history/mixins.py:87: [R0201(no-self-use), HistoryModelMixin.history_field_changed] Method could be a function
sol/utils/history/mixins.py:97: [C0111(missing-docstring), HistoryModelMixin.get_history_field_changes] Missing method docstring
sol/utils/history/mixins.py:97: [R0913(too-many-arguments), HistoryModelMixin.get_history_field_changes] Too many arguments (7/5)
sol/utils/history/mixins.py:130: [C0111(missing-docstring), HistoryModelMixin.write_history_changes] Missing method docstring
sol/utils/history/mixins.py:145: [E1101(no-member), HistoryModelMixin.write_history_changes] Method 'history_model_class' has no 'objects' member
sol/utils/history/mixins.py:130: [W0613(unused-argument), HistoryModelMixin.write_history_changes] Unused argument 'kwargs'
sol/utils/history/mixins.py:148: [C0111(missing-docstring), HistoryModelMixin.save] Missing method docstring
sol/utils/history/mixins.py:148: [R0914(too-many-locals), HistoryModelMixin.save] Too many local variables (17/15)
sol/utils/history/mixins.py:197: [C0111(missing-docstring), HistoryModelMixin.delete] Missing method docstring
sol/utils/history/mixins.py:211: [C0111(missing-docstring), JSONDynamicHistoryModelMixin] Missing class docstring
sol/utils/history/mixins.py:213: [C0111(missing-docstring), JSONDynamicHistoryModelMixin.dynamic_fields_info] Missing method docstring
sol/utils/history/mixins.py:216: [R0914(too-many-locals), JSONDynamicHistoryModelMixin.get_history_field_changes] Too many local variables (21/15)
sol/utils/history/mixins.py:216: [W0221(arguments-differ), JSONDynamicHistoryModelMixin.get_history_field_changes] Parameters differ from overridden 'get_history_field_changes' method
sol/utils/history/mixins.py:223: [E0401(import-error), JSONDynamicHistoryModelMixin.get_history_field_changes] Unable to import 'rest_framework.fields'
sol/utils/history/mixins.py:233: [C0103(invalid-name), JSONDynamicHistoryModelMixin.get_history_field_changes] Variable name "f" doesn't conform to snake_case naming style
************* Module sol.utils.history.models_api
sol/utils/history/models_api.py:53: [C0301(line-too-long), ] Line too long (104/100)
sol/utils/history/models_api.py:95: [C0301(line-too-long), ] Line too long (101/100)
sol/utils/history/models_api.py:97: [C0330(bad-continuation), ] Wrong hanging indentation.
                    ]),
        |   |       ^
sol/utils/history/models_api.py:11: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/utils/history/models_api.py:12: [E0401(import-error), ] Unable to import 'rest_framework'
sol/utils/history/models_api.py:13: [E0401(import-error), ] Unable to import 'rest_framework'
sol/utils/history/models_api.py:21: [C0111(missing-docstring), get_queryset_history] Missing function docstring
sol/utils/history/models_api.py:22: [C0103(invalid-name), get_queryset_history] Variable name "qs" doesn't conform to snake_case naming style
sol/utils/history/models_api.py:28: [C0103(invalid-name), get_queryset_history] Variable name "qs" doesn't conform to snake_case naming style
sol/utils/history/models_api.py:33: [C0111(missing-docstring), get_callable_queryset_history_viewset] Missing function docstring
sol/utils/history/models_api.py:51: [C0103(invalid-name), get_api_config] Variable name "c" doesn't conform to snake_case naming style
sol/utils/history/models_api.py:57: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module sol.utils.sol_rq_scheduler_patch.tests
sol/utils/sol_rq_scheduler_patch/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
sol/utils/sol_rq_scheduler_patch/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module sol.utils.sol_rq_scheduler_patch.utils
sol/utils/sol_rq_scheduler_patch/utils.py:11: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/sol_rq_scheduler_patch/utils.py:24: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/sol_rq_scheduler_patch/utils.py:45: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/sol_rq_scheduler_patch/utils.py:69: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                              {job.id: to_unix(scheduled_time)})
                             |^
sol/utils/sol_rq_scheduler_patch/utils.py:97: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                                  {job.id: to_unix(datetime.utcnow()) + int(interval)})
                                 |^
sol/utils/sol_rq_scheduler_patch/utils.py:107: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                                  {job.id: to_unix(get_next_scheduled_time(cron_string, use_local_timezone, tz))})
                                 |^
sol/utils/sol_rq_scheduler_patch/utils.py:107: [C0301(line-too-long), ] Line too long (114/100)
sol/utils/sol_rq_scheduler_patch/utils.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/utils.py:2: [E0401(import-error), ] Unable to import 'croniter'
sol/utils/sol_rq_scheduler_patch/utils.py:4: [E0401(import-error), ] Unable to import 'rq_scheduler.utils'
sol/utils/sol_rq_scheduler_patch/utils.py:5: [E0401(import-error), ] Unable to import 'rq_scheduler'
sol/utils/sol_rq_scheduler_patch/utils.py:7: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/sol_rq_scheduler_patch/utils.py:8: [E0401(import-error), ] Unable to import 'django_rq.settings'
sol/utils/sol_rq_scheduler_patch/utils.py:15: [C0103(invalid-name), get_next_scheduled_time] Argument name "tz" doesn't conform to snake_case naming style
sol/utils/sol_rq_scheduler_patch/utils.py:27: [C0111(missing-docstring), SolScheduler] Missing class docstring
sol/utils/sol_rq_scheduler_patch/utils.py:44: [C0103(invalid-name), SolScheduler.cron] Argument name "id" doesn't conform to snake_case naming style
sol/utils/sol_rq_scheduler_patch/utils.py:45: [W0622(redefined-builtin), SolScheduler.cron] Redefining built-in 'id'
sol/utils/sol_rq_scheduler_patch/utils.py:44: [R0913(too-many-arguments), SolScheduler.cron] Too many arguments (12/5)
sol/utils/sol_rq_scheduler_patch/utils.py:45: [W0613(unused-argument), SolScheduler.cron] Unused argument 'meta'
sol/utils/sol_rq_scheduler_patch/utils.py:104: [C0103(invalid-name), SolScheduler.enqueue_job] Variable name "tz" doesn't conform to snake_case naming style
sol/utils/sol_rq_scheduler_patch/utils.py:105: [C0103(invalid-name), SolScheduler.enqueue_job] Variable name "tz" doesn't conform to snake_case naming style
sol/utils/sol_rq_scheduler_patch/utils.py:3: [C0411(wrong-import-order), ] standard import "from datetime import datetime" should be placed before "import croniter"
************* Module sol.utils.sol_rq_scheduler_patch.apps
sol/utils/sol_rq_scheduler_patch/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/apps.py:1: [E0401(import-error), ] Unable to import 'django.apps'
sol/utils/sol_rq_scheduler_patch/apps.py:4: [C0111(missing-docstring), SolRqSchedulerPatchConfig] Missing class docstring
sol/utils/sol_rq_scheduler_patch/apps.py:4: [R0903(too-few-public-methods), SolRqSchedulerPatchConfig] Too few public methods (0/2)
************* Module sol.utils.sol_rq_scheduler_patch.views
sol/utils/sol_rq_scheduler_patch/views.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/views.py:1: [E0401(import-error), ] Unable to import 'django.shortcuts'
sol/utils/sol_rq_scheduler_patch/views.py:1: [W0611(unused-import), ] Unused render imported from django.shortcuts
************* Module sol.utils.sol_rq_scheduler_patch.admin
sol/utils/sol_rq_scheduler_patch/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/admin.py:1: [E0401(import-error), ] Unable to import 'django.contrib'
sol/utils/sol_rq_scheduler_patch/admin.py:1: [W0611(unused-import), ] Unused admin imported from django.contrib
************* Module sol.utils.sol_rq_scheduler_patch.__init__
sol/utils/sol_rq_scheduler_patch/__init__.py:10: [C0330(bad-continuation), ] Wrong continued indentation (add 3 spaces).
                     connection=get_connection(name))
                     ^  |
************* Module sol.utils.sol_rq_scheduler_patch
sol/utils/sol_rq_scheduler_patch/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/__init__.py:2: [E0401(import-error), ] Unable to import 'django_rq.queues'
sol/utils/sol_rq_scheduler_patch/__init__.py:2: [C0411(wrong-import-order), ] third party import "from django_rq.queues import get_connection" should be placed before "from sol.utils.sol_rq_scheduler_patch.utils import SolScheduler"
************* Module sol.utils.sol_rq_scheduler_patch.models
sol/utils/sol_rq_scheduler_patch/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/models.py:1: [E0401(import-error), ] Unable to import 'django.db'
sol/utils/sol_rq_scheduler_patch/models.py:1: [W0611(unused-import), ] Unused models imported from django.db
************* Module sol.utils.sol_rq_scheduler_patch.management.commands.rqscheduler
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:9: [C0301(line-too-long), ] Line too long (107/100)
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:23: [C0301(line-too-long), ] Line too long (105/100)
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:4: [E0401(import-error), ] Unable to import 'django.core.management.base'
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:5: [E0401(import-error), ] Unable to import 'django.utils.version'
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:6: [E0401(import-error), ] Unable to import 'django_rq.queues'
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:19: [C0111(missing-docstring), Command.add_arguments] Missing method docstring
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:19: [R0201(no-self-use), Command.add_arguments] Method could be a function
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:31: [C0111(missing-docstring), Command.handle] Missing method docstring
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:34: [C0103(invalid-name), Command.handle] Variable name "fp" doesn't conform to snake_case naming style
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:31: [W0613(unused-argument), Command.handle] Unused argument 'args'
sol/utils/sol_rq_scheduler_patch/management/commands/rqscheduler.py:31: [R0201(no-self-use), Command.handle] Method could be a function
************* Module sol.utils.async_jobs.rq
sol/utils/async_jobs/rq.py:41: [C0301(line-too-long), ] Line too long (112/100)
sol/utils/async_jobs/rq.py:66: [C0301(line-too-long), ] Line too long (116/100)
sol/utils/async_jobs/rq.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/async_jobs/rq.py:6: [E0401(import-error), ] Unable to import 'django'
sol/utils/async_jobs/rq.py:7: [E0401(import-error), ] Unable to import 'django.utils'
sol/utils/async_jobs/rq.py:8: [E0401(import-error), ] Unable to import 'django_rq'
sol/utils/async_jobs/rq.py:9: [E0401(import-error), ] Unable to import 'rq'
sol/utils/async_jobs/rq.py:10: [E0401(import-error), ] Unable to import 'rq.job'
sol/utils/async_jobs/rq.py:13: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
sol/utils/async_jobs/rq.py:31: [C0111(missing-docstring), get_serializer_errors] Missing function docstring
sol/utils/async_jobs/rq.py:52: [C0111(missing-docstring), get_job_owner] Missing function docstring
sol/utils/async_jobs/rq.py:58: [C0111(missing-docstring), set_job_owner] Missing function docstring
sol/utils/async_jobs/rq.py:108: [C0111(missing-docstring), JobMetaDict.refresh] Missing method docstring
************* Module sol.utils.async_jobs.views
sol/utils/async_jobs/views.py:26: [C0301(line-too-long), ] Line too long (117/100)
sol/utils/async_jobs/views.py:65: [C0301(line-too-long), ] Line too long (111/100)
sol/utils/async_jobs/views.py:77: [C0301(line-too-long), ] Line too long (103/100)
sol/utils/async_jobs/views.py:1: [C0111(missing-docstring), ] Missing module docstring
sol/utils/async_jobs/views.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol/utils/async_jobs/views.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol/utils/async_jobs/views.py:6: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol/utils/async_jobs/views.py:7: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol/utils/async_jobs/views.py:8: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol/utils/async_jobs/views.py:9: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol/utils/async_jobs/views.py:10: [E0401(import-error), ] Unable to import 'rq.exceptions'
sol/utils/async_jobs/views.py:30: [C0103(invalid-name), job_monitor_view] Variable name "e" doesn't conform to snake_case naming style
sol/utils/async_jobs/views.py:42: [C0103(invalid-name), job_monitor_view] Variable name "e" doesn't conform to snake_case naming style
sol/utils/async_jobs/views.py:22: [W0613(unused-argument), job_monitor_view] Unused argument 'args'
sol/utils/async_jobs/views.py:22: [W0613(unused-argument), job_monitor_view] Unused argument 'kwargs'
sol/utils/async_jobs/views.py:30: [W0612(unused-variable), job_monitor_view] Unused variable 'e'
sol/utils/async_jobs/views.py:87: [C0103(invalid-name), job_download_file_view] Variable name "e" doesn't conform to snake_case naming style
sol/utils/async_jobs/views.py:89: [C0103(invalid-name), job_download_file_view] Variable name "e" doesn't conform to snake_case naming style
sol/utils/async_jobs/views.py:108: [C0103(invalid-name), job_download_file_view] Variable name "e" doesn't conform to snake_case naming style
sol/utils/async_jobs/views.py:113: [C0103(invalid-name), job_download_file_view] Variable name "e" doesn't conform to snake_case naming style
sol/utils/async_jobs/views.py:78: [W0613(unused-argument), job_download_file_view] Unused argument 'args'
sol/utils/async_jobs/views.py:16: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module sol.utils.async_jobs.admin
sol/utils/async_jobs/admin.py:67: [W0511(fixme), ] TODO: implement searching in limited blocks and/or pagination.
sol/utils/async_jobs/admin.py:20: [C0301(line-too-long), ] Line too long (108/100)
sol/utils/async_jobs/admin.py:34: [C0301(line-too-long), ] Line too long (116/100)
sol/utils/async_jobs/admin.py:3: [E0401(import-error), ] Unable to import 'rq.exceptions'
sol/utils/async_jobs/admin.py:4: [E0401(import-error), ] Unable to import 'rq.job'
sol/utils/async_jobs/admin.py:5: [E0401(import-error), ] Unable to import 'rq.registry'
sol/utils/async_jobs/admin.py:7: [E0401(import-error), ] Unable to import 'django.contrib.auth.decorators'
sol/utils/async_jobs/admin.py:8: [E0401(import-error), ] Unable to import 'django.shortcuts'
sol/utils/async_jobs/admin.py:9: [E0401(import-error), ] Unable to import 'django_rq.queues'
sol/utils/async_jobs/admin.py:12: [C0111(missing-docstring), Void] Missing class docstring
sol/utils/async_jobs/admin.py:12: [R0205(useless-object-inheritance), Void] Class 'Void' inherits from object, can be safely removed from bases in python3
sol/utils/async_jobs/admin.py:12: [R0903(too-few-public-methods), Void] Too few public methods (0/2)
sol/utils/async_jobs/admin.py:16: [C0111(missing-docstring), traverse_struct] Missing function docstring
sol/utils/async_jobs/admin.py:28: [C0111(missing-docstring), is_filtered_obj_from_dict] Missing function docstring
sol/utils/async_jobs/admin.py:57: [C0111(missing-docstring), filter_jobs] Missing function docstring
sol/utils/async_jobs/admin.py:95: [C0111(missing-docstring), filter_generic_jobs] Missing function docstring
sol/utils/async_jobs/admin.py:100: [C0111(missing-docstring), filter_finished_jobs] Missing function docstring
sol/utils/async_jobs/admin.py:105: [C0111(missing-docstring), filter_started_jobs] Missing function docstring
sol/utils/async_jobs/admin.py:110: [C0111(missing-docstring), filter_deferred_jobs] Missing function docstring
************* Module orange_sites.tests
orange_sites/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_sites/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_sites.urls
orange_sites/urls.py:12: [C0301(line-too-long), ] Line too long (121/100)
orange_sites/urls.py:22: [C0301(line-too-long), ] Line too long (109/100)
orange_sites/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_sites/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_sites/urls.py:7: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_sites/urls.py:12: [C0103(invalid-name), ] Constant name "standard" doesn't conform to UPPER_CASE naming style
orange_sites/urls.py:15: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_sites/urls.py:16: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
orange_sites/urls.py:22: [C0103(invalid-name), ] Constant name "roles" doesn't conform to UPPER_CASE naming style
orange_sites/urls.py:24: [C0103(invalid-name), ] Constant name "management_app_pattern" doesn't conform to UPPER_CASE naming style
************* Module orange_sites.apps
orange_sites/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_sites/apps.py:6: [C0111(missing-docstring), OrangeSitesConfig] Missing class docstring
orange_sites/apps.py:6: [R0903(too-few-public-methods), OrangeSitesConfig] Too few public methods (0/2)
************* Module orange_sites.views
orange_sites/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/views.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_sites/views.py:7: [E0401(import-error), ] Unable to import 'django.http'
orange_sites/views.py:8: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
orange_sites/views.py:9: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
orange_sites/views.py:11: [W0401(wildcard-import), ] Wildcard import serializers
orange_sites/views.py:19: [E0602(undefined-variable), DeviceDocumentViewSet] Undefined variable 'DeviceDocumentViewSet'
orange_sites/views.py:23: [C0111(missing-docstring), DeviceDocumentViewSet.create] Missing method docstring
orange_sites/views.py:24: [W0212(protected-access), DeviceDocumentViewSet.create] Access to a protected member _mutable of a client class
orange_sites/views.py:38: [C0103(invalid-name), DeviceDocumentViewSet.download] Variable name "f" doesn't conform to snake_case naming style
orange_sites/views.py:29: [W0613(unused-argument), DeviceDocumentViewSet.download] Unused argument 'request'
orange_sites/views.py:29: [W0613(unused-argument), DeviceDocumentViewSet.download] Unused argument 'args'
orange_sites/views.py:29: [W0613(unused-argument), DeviceDocumentViewSet.download] Unused argument 'kwargs'
orange_sites/views.py:51: [E0602(undefined-variable), DocumentTagViewSet] Undefined variable 'DocumentTagViewSet'
orange_sites/views.py:55: [C0111(missing-docstring), DocumentTagViewSet.create] Missing method docstring
orange_sites/views.py:56: [W0212(protected-access), DocumentTagViewSet.create] Access to a protected member _mutable of a client class
orange_sites/views.py:51: [R0903(too-few-public-methods), DocumentTagViewSet] Too few public methods (1/2)
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import DocumentTagSerializer from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import NoForeignkeyDocumentTagListSerializer from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import NoForeignkeyDocumentTagSerializer from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import DeviceDocumentSerializer from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import transaction from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import serializers from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import CharField from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import FileField from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import IntegerField from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import empty from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import PrimaryKeyRelatedField from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import ListSerializer from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import ForeignDocumentTagValue from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import DocumentTag from wildcard import
orange_sites/views.py:11: [W0614(unused-wildcard-import), ] Unused import DeviceDocument from wildcard import
orange_sites/views.py:12: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
orange_sites/views.py:13: [C0411(wrong-import-order), ] first party import "from sol.utils.files import get_mimetype" should be placed before "from .serializers import *"
************* Module orange_sites.serializers
orange_sites/serializers.py:28: [C0301(line-too-long), ] Line too long (106/100)
orange_sites/serializers.py:33: [C0301(line-too-long), ] Line too long (101/100)
orange_sites/serializers.py:35: [C0301(line-too-long), ] Line too long (103/100)
orange_sites/serializers.py:37: [C0301(line-too-long), ] Line too long (116/100)
orange_sites/serializers.py:38: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/serializers.py:41: [C0301(line-too-long), ] Line too long (117/100)
orange_sites/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/serializers.py:4: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/serializers.py:5: [E0401(import-error), ] Unable to import 'rest_framework'
orange_sites/serializers.py:6: [E0401(import-error), ] Unable to import 'rest_framework.fields'
orange_sites/serializers.py:7: [E0401(import-error), ] Unable to import 'rest_framework.relations'
orange_sites/serializers.py:8: [E0401(import-error), ] Unable to import 'rest_framework.serializers'
orange_sites/serializers.py:16: [C0111(missing-docstring), DocumentTagSerializer] Missing class docstring
orange_sites/serializers.py:16: [E0602(undefined-variable), DocumentTagSerializer] Undefined variable 'DocumentTagSerializer'
orange_sites/serializers.py:19: [C0111(missing-docstring), DocumentTagSerializer.validate] Missing method docstring
orange_sites/serializers.py:16: [R0903(too-few-public-methods), DocumentTagSerializer] Too few public methods (1/2)
orange_sites/serializers.py:47: [C0111(missing-docstring), NoForeignkeyDocumentTagListSerializer] Missing class docstring
orange_sites/serializers.py:48: [C0111(missing-docstring), NoForeignkeyDocumentTagListSerializer.run_validation] Missing method docstring
orange_sites/serializers.py:48: [R0201(no-self-use), NoForeignkeyDocumentTagListSerializer.run_validation] Method could be a function
orange_sites/serializers.py:47: [R0903(too-few-public-methods), NoForeignkeyDocumentTagListSerializer] Too few public methods (1/2)
orange_sites/serializers.py:52: [C0111(missing-docstring), NoForeignkeyDocumentTagSerializer] Missing class docstring
orange_sites/serializers.py:60: [C0111(missing-docstring), NoForeignkeyDocumentTagSerializer.Meta] Missing class docstring
orange_sites/serializers.py:60: [R0903(too-few-public-methods), NoForeignkeyDocumentTagSerializer.Meta] Too few public methods (0/2)
orange_sites/serializers.py:52: [R0903(too-few-public-methods), NoForeignkeyDocumentTagSerializer] Too few public methods (1/2)
orange_sites/serializers.py:64: [C0111(missing-docstring), DeviceDocumentSerializer] Missing class docstring
orange_sites/serializers.py:64: [E0602(undefined-variable), DeviceDocumentSerializer] Undefined variable 'DeviceDocumentSerializer'
orange_sites/serializers.py:70: [C0111(missing-docstring), DeviceDocumentSerializer.create] Missing method docstring
orange_sites/serializers.py:84: [C0111(missing-docstring), DeviceDocumentSerializer.validate] Missing method docstring
************* Module orange_sites.legacy_docs_utils
orange_sites/legacy_docs_utils.py:24: [C0301(line-too-long), ] Line too long (115/100)
orange_sites/legacy_docs_utils.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/legacy_docs_utils.py:9: [C0111(missing-docstring), check_or_create_folder] Missing function docstring
orange_sites/legacy_docs_utils.py:15: [C0111(missing-docstring), create_thumb] Missing function docstring
************* Module orange_sites
orange_sites/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_sites.models_api
orange_sites/models_api.py:10: [C0301(line-too-long), ] Line too long (118/100)
orange_sites/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_sites/models_api.py:5: [E0401(import-error), ] Unable to import 'rest_framework.settings'
orange_sites/models_api.py:7: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
orange_sites/models_api.py:16: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_sites.models
orange_sites/models.py:330: [W0511(fixme), ] TODO: manage doclist_status
orange_sites/models.py:97: [C0301(line-too-long), ] Line too long (117/100)
orange_sites/models.py:130: [C0301(line-too-long), ] Line too long (106/100)
orange_sites/models.py:136: [C0301(line-too-long), ] Line too long (106/100)
orange_sites/models.py:138: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/models.py:140: [C0301(line-too-long), ] Line too long (101/100)
orange_sites/models.py:141: [C0301(line-too-long), ] Line too long (123/100)
orange_sites/models.py:142: [C0301(line-too-long), ] Line too long (101/100)
orange_sites/models.py:143: [C0301(line-too-long), ] Line too long (111/100)
orange_sites/models.py:144: [C0301(line-too-long), ] Line too long (113/100)
orange_sites/models.py:145: [C0301(line-too-long), ] Line too long (113/100)
orange_sites/models.py:150: [C0301(line-too-long), ] Line too long (101/100)
orange_sites/models.py:152: [C0301(line-too-long), ] Line too long (105/100)
orange_sites/models.py:153: [C0301(line-too-long), ] Line too long (115/100)
orange_sites/models.py:154: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/models.py:198: [C0301(line-too-long), ] Line too long (113/100)
orange_sites/models.py:213: [C0301(line-too-long), ] Line too long (117/100)
orange_sites/models.py:236: [C0301(line-too-long), ] Line too long (123/100)
orange_sites/models.py:237: [C0301(line-too-long), ] Line too long (113/100)
orange_sites/models.py:246: [C0301(line-too-long), ] Line too long (101/100)
orange_sites/models.py:285: [C0301(line-too-long), ] Line too long (108/100)
orange_sites/models.py:319: [C0301(line-too-long), ] Line too long (101/100)
orange_sites/models.py:320: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/models.py:354: [C0301(line-too-long), ] Line too long (107/100)
orange_sites/models.py:400: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/models.py:416: [C0301(line-too-long), ] Line too long (123/100)
orange_sites/models.py:462: [C0301(line-too-long), ] Line too long (110/100)
orange_sites/models.py:462: [C0326(bad-whitespace), ] Exactly one space required after comma
    document = models.ForeignKey('DeviceDocument', models.DO_NOTHING,  db_column='iddoc', related_name='tags')
                                                                    ^
orange_sites/models.py:466: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/models.py:6: [E0401(import-error), ] Unable to import 'django.core.exceptions'
orange_sites/models.py:7: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/models.py:8: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/models.py:9: [E0401(import-error), ] Unable to import 'django.db.models'
orange_sites/models.py:10: [E0401(import-error), ] Unable to import 'django.db.models.functions'
orange_sites/models.py:11: [E0401(import-error), ] Unable to import 'django.utils'
orange_sites/models.py:12: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_sites/models.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_sites/models.py:16: [E0401(import-error), ] Unable to import 'compositefk.fields'
orange_sites/models.py:28: [C0111(missing-docstring), LegalizationYear] Missing class docstring
orange_sites/models.py:37: [C0111(missing-docstring), LegalizationYear.Meta] Missing class docstring
orange_sites/models.py:37: [R0903(too-few-public-methods), LegalizationYear.Meta] Too few public methods (0/2)
orange_sites/models.py:28: [R0903(too-few-public-methods), LegalizationYear] Too few public methods (1/2)
orange_sites/models.py:44: [C0111(missing-docstring), Device] Missing class docstring
orange_sites/models.py:63: [C0111(missing-docstring), Device.from_string] Missing method docstring
orange_sites/models.py:63: [W0613(unused-argument), Device.from_string] Unused argument 'kwargs'
orange_sites/models.py:67: [C0111(missing-docstring), Device.get_external_url_template] Missing method docstring
orange_sites/models.py:71: [C0103(invalid-name), Device.get_external_url] Argument name "id" doesn't conform to snake_case naming style
orange_sites/models.py:71: [C0111(missing-docstring), Device.get_external_url] Missing method docstring
orange_sites/models.py:71: [W0622(redefined-builtin), Device.get_external_url] Redefining built-in 'id'
orange_sites/models.py:75: [C0111(missing-docstring), Device.external_url] Missing method docstring
orange_sites/models.py:79: [C0111(missing-docstring), Device.get_new_external_instance_url] Missing method docstring
orange_sites/models.py:84: [C0111(missing-docstring), Device.new_external_instance_url] Missing method docstring
orange_sites/models.py:87: [C0111(missing-docstring), Device.Meta] Missing class docstring
orange_sites/models.py:87: [R0903(too-few-public-methods), Device.Meta] Too few public methods (0/2)
orange_sites/models.py:94: [C0111(missing-docstring), DeviceType] Missing class docstring
orange_sites/models.py:102: [C0111(missing-docstring), DeviceType.Meta] Missing class docstring
orange_sites/models.py:102: [R0903(too-few-public-methods), DeviceType.Meta] Too few public methods (0/2)
orange_sites/models.py:94: [R0903(too-few-public-methods), DeviceType] Too few public methods (1/2)
orange_sites/models.py:109: [C0111(missing-docstring), LegalizationCompany] Missing class docstring
orange_sites/models.py:118: [C0111(missing-docstring), LegalizationCompany.Meta] Missing class docstring
orange_sites/models.py:118: [R0903(too-few-public-methods), LegalizationCompany.Meta] Too few public methods (0/2)
orange_sites/models.py:109: [R0903(too-few-public-methods), LegalizationCompany] Too few public methods (1/2)
orange_sites/models.py:125: [C0111(missing-docstring), Site] Missing class docstring
orange_sites/models.py:169: [C0111(missing-docstring), Site.from_string] Missing method docstring
orange_sites/models.py:169: [W0613(unused-argument), Site.from_string] Unused argument 'kwargs'
orange_sites/models.py:172: [C0111(missing-docstring), Site.Meta] Missing class docstring
orange_sites/models.py:172: [R0903(too-few-public-methods), Site.Meta] Too few public methods (0/2)
orange_sites/models.py:179: [C0111(missing-docstring), LegalizationState] Missing class docstring
orange_sites/models.py:188: [C0111(missing-docstring), LegalizationState.Meta] Missing class docstring
orange_sites/models.py:188: [R0903(too-few-public-methods), LegalizationState.Meta] Too few public methods (0/2)
orange_sites/models.py:179: [R0903(too-few-public-methods), LegalizationState] Too few public methods (1/2)
orange_sites/models.py:195: [C0111(missing-docstring), SiteState] Missing class docstring
orange_sites/models.py:203: [C0111(missing-docstring), SiteState.Meta] Missing class docstring
orange_sites/models.py:203: [R0903(too-few-public-methods), SiteState.Meta] Too few public methods (0/2)
orange_sites/models.py:195: [R0903(too-few-public-methods), SiteState] Too few public methods (1/2)
orange_sites/models.py:210: [C0111(missing-docstring), SharingType] Missing class docstring
orange_sites/models.py:218: [C0111(missing-docstring), SharingType.Meta] Missing class docstring
orange_sites/models.py:218: [R0903(too-few-public-methods), SharingType.Meta] Too few public methods (0/2)
orange_sites/models.py:210: [R0903(too-few-public-methods), SharingType] Too few public methods (1/2)
orange_sites/models.py:225: [C0111(missing-docstring), DocumentManager] Missing class docstring
orange_sites/models.py:226: [C0111(missing-docstring), DocumentManager.get_queryset] Missing method docstring
orange_sites/models.py:225: [R0903(too-few-public-methods), DocumentManager] Too few public methods (1/2)
orange_sites/models.py:233: [C0111(missing-docstring), Document] Missing class docstring
orange_sites/models.py:233: [R0902(too-many-instance-attributes), Document] Too many instance attributes (13/7)
orange_sites/models.py:262: [C0111(missing-docstring), Document.get_filesystem_name] Missing method docstring
orange_sites/models.py:269: [C0111(missing-docstring), Document.complete_folder_path] Missing method docstring
orange_sites/models.py:273: [C0111(missing-docstring), Document.complete_file_path] Missing method docstring
orange_sites/models.py:278: [C0111(missing-docstring), Document.save] Missing method docstring
orange_sites/models.py:339: [C0103(invalid-name), Document.save] Variable name "f" doesn't conform to snake_case naming style
orange_sites/models.py:353: [C0111(missing-docstring), Document.get_external_url_template] Missing method docstring
orange_sites/models.py:357: [C0103(invalid-name), Document.get_external_url] Argument name "id" doesn't conform to snake_case naming style
orange_sites/models.py:357: [C0111(missing-docstring), Document.get_external_url] Missing method docstring
orange_sites/models.py:357: [W0622(redefined-builtin), Document.get_external_url] Redefining built-in 'id'
orange_sites/models.py:361: [C0111(missing-docstring), Document.external_url] Missing method docstring
orange_sites/models.py:365: [C0111(missing-docstring), Document.get_new_external_instance_url] Missing method docstring
orange_sites/models.py:369: [C0111(missing-docstring), Document.new_external_instance_url] Missing method docstring
orange_sites/models.py:372: [C0111(missing-docstring), Document.Meta] Missing class docstring
orange_sites/models.py:372: [R0903(too-few-public-methods), Document.Meta] Too few public methods (0/2)
orange_sites/models.py:380: [C0111(missing-docstring), DeviceDocument] Missing class docstring
orange_sites/models.py:397: [C0111(missing-docstring), DocumentType] Missing class docstring
orange_sites/models.py:406: [C0111(missing-docstring), DocumentType.Meta] Missing class docstring
orange_sites/models.py:406: [R0903(too-few-public-methods), DocumentType.Meta] Too few public methods (0/2)
orange_sites/models.py:397: [R0903(too-few-public-methods), DocumentType] Too few public methods (1/2)
orange_sites/models.py:413: [C0111(missing-docstring), DocumentCategory] Missing class docstring
orange_sites/models.py:423: [C0111(missing-docstring), DocumentCategory.Meta] Missing class docstring
orange_sites/models.py:423: [R0903(too-few-public-methods), DocumentCategory.Meta] Too few public methods (0/2)
orange_sites/models.py:413: [R0903(too-few-public-methods), DocumentCategory] Too few public methods (1/2)
orange_sites/models.py:430: [C0111(missing-docstring), DocumentTagType] Missing class docstring
orange_sites/models.py:438: [C0111(missing-docstring), DocumentTagType.foreign_tag_value] Missing method docstring
orange_sites/models.py:444: [C0111(missing-docstring), DocumentTagType.Meta] Missing class docstring
orange_sites/models.py:444: [R0903(too-few-public-methods), DocumentTagType.Meta] Too few public methods (0/2)
orange_sites/models.py:451: [C0111(missing-docstring), DocumentTagManager] Missing class docstring
orange_sites/models.py:452: [C0111(missing-docstring), DocumentTagManager.get_queryset] Missing method docstring
orange_sites/models.py:451: [R0903(too-few-public-methods), DocumentTagManager] Too few public methods (1/2)
orange_sites/models.py:459: [C0111(missing-docstring), DocumentTag] Missing class docstring
orange_sites/models.py:485: [C0111(missing-docstring), DocumentTag.tag_value] Missing method docstring
orange_sites/models.py:505: [C0111(missing-docstring), DocumentTag.Meta] Missing class docstring
orange_sites/models.py:505: [R0903(too-few-public-methods), DocumentTag.Meta] Too few public methods (0/2)
orange_sites/models.py:512: [C0111(missing-docstring), ForeignDocumentTagValue] Missing class docstring
orange_sites/models.py:521: [C0111(missing-docstring), ForeignDocumentTagValue.Meta] Missing class docstring
orange_sites/models.py:521: [R0903(too-few-public-methods), ForeignDocumentTagValue.Meta] Too few public methods (0/2)
orange_sites/models.py:512: [R0903(too-few-public-methods), ForeignDocumentTagValue] Too few public methods (1/2)
orange_sites/models.py:16: [C0411(wrong-import-order), ] third party import "from compositefk.fields import CompositeForeignKey" should be placed before "from orange_public.models import Operator, Zone, Town"
************* Module orange_sites.permissions.document
orange_sites/permissions/document.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/permissions/document.py:6: [C0111(missing-docstring), DocumentPermissionsMixin] Missing class docstring
orange_sites/permissions/document.py:15: [C0111(missing-docstring), DocumentPermissionsMixin.has_read_permission] Missing method docstring
orange_sites/permissions/document.py:24: [C0111(missing-docstring), DocumentPermissionsMixin.has_object_read_permission] Missing method docstring
orange_sites/permissions/document.py:31: [C0111(missing-docstring), DocumentPermissionsMixin.has_write_permission] Missing method docstring
orange_sites/permissions/document.py:40: [C0111(missing-docstring), DocumentPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module orange_sites.permissions.document_tag
orange_sites/permissions/document_tag.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/permissions/document_tag.py:6: [C0111(missing-docstring), DocumentTagPermissionsMixin] Missing class docstring
orange_sites/permissions/document_tag.py:15: [C0111(missing-docstring), DocumentTagPermissionsMixin.has_read_permission] Missing method docstring
orange_sites/permissions/document_tag.py:24: [C0111(missing-docstring), DocumentTagPermissionsMixin.has_object_read_permission] Missing method docstring
orange_sites/permissions/document_tag.py:31: [C0111(missing-docstring), DocumentTagPermissionsMixin.has_write_permission] Missing method docstring
orange_sites/permissions/document_tag.py:40: [C0111(missing-docstring), DocumentTagPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module orange_sites.permissions
orange_sites/permissions/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/permissions/__init__.py:8: [C0111(missing-docstring), AppPermissions] Missing class docstring
************* Module orange_sites.migrations.0012_auto_20181127_1009
orange_sites/migrations/0012_auto_20181127_1009.py:18: [C0301(line-too-long), ] Line too long (134/100)
orange_sites/migrations/0012_auto_20181127_1009.py:1: [C0103(invalid-name), ] Module name "0012_auto_20181127_1009" doesn't conform to snake_case naming style
orange_sites/migrations/0012_auto_20181127_1009.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0012_auto_20181127_1009.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0012_auto_20181127_1009.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0012_auto_20181127_1009.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0004_auto_20160901_1238
orange_sites/migrations/0004_auto_20160901_1238.py:1: [C0103(invalid-name), ] Module name "0004_auto_20160901_1238" doesn't conform to snake_case naming style
orange_sites/migrations/0004_auto_20160901_1238.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0004_auto_20160901_1238.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0004_auto_20160901_1238.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0004_auto_20160901_1238.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0013_merge_20181127_1512
orange_sites/migrations/0013_merge_20181127_1512.py:1: [C0103(invalid-name), ] Module name "0013_merge_20181127_1512" doesn't conform to snake_case naming style
orange_sites/migrations/0013_merge_20181127_1512.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0013_merge_20181127_1512.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0013_merge_20181127_1512.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0013_merge_20181127_1512.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0005_auto_20160901_1550
orange_sites/migrations/0005_auto_20160901_1550.py:1: [C0103(invalid-name), ] Module name "0005_auto_20160901_1550" doesn't conform to snake_case naming style
orange_sites/migrations/0005_auto_20160901_1550.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0005_auto_20160901_1550.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0005_auto_20160901_1550.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0005_auto_20160901_1550.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0009_auto_20180312_0928
orange_sites/migrations/0009_auto_20180312_0928.py:19: [C0301(line-too-long), ] Line too long (277/100)
orange_sites/migrations/0009_auto_20180312_0928.py:1: [C0103(invalid-name), ] Module name "0009_auto_20180312_0928" doesn't conform to snake_case naming style
orange_sites/migrations/0009_auto_20180312_0928.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0009_auto_20180312_0928.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
orange_sites/migrations/0009_auto_20180312_0928.py:6: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0009_auto_20180312_0928.py:9: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0009_auto_20180312_0928.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:24: [C0301(line-too-long), ] Line too long (104/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:27: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:28: [C0301(line-too-long), ] Line too long (130/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:29: [C0301(line-too-long), ] Line too long (107/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:31: [C0301(line-too-long), ] Line too long (108/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:32: [C0301(line-too-long), ] Line too long (104/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:46: [C0301(line-too-long), ] Line too long (121/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:47: [C0301(line-too-long), ] Line too long (107/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:48: [C0301(line-too-long), ] Line too long (106/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:62: [C0301(line-too-long), ] Line too long (110/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:63: [C0301(line-too-long), ] Line too long (131/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:64: [C0301(line-too-long), ] Line too long (108/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:66: [C0301(line-too-long), ] Line too long (108/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:78: [C0301(line-too-long), ] Line too long (107/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:93: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:94: [C0301(line-too-long), ] Line too long (118/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:107: [C0301(line-too-long), ] Line too long (108/100)
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:1: [C0103(invalid-name), ] Module name "0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue" doesn't conform to snake_case naming style
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:6: [E0401(import-error), ] Unable to import 'django.utils.timezone'
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:9: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0006_devicedocument_documentcategory_documenttag_documenttagtype_documenttype_foreigndocumenttagvalue.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0010_auto_20180510_1542
orange_sites/migrations/0010_auto_20180510_1542.py:19: [C0301(line-too-long), ] Line too long (144/100)
orange_sites/migrations/0010_auto_20180510_1542.py:25: [C0301(line-too-long), ] Line too long (266/100)
orange_sites/migrations/0010_auto_20180510_1542.py:1: [C0103(invalid-name), ] Module name "0010_auto_20180510_1542" doesn't conform to snake_case naming style
orange_sites/migrations/0010_auto_20180510_1542.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0010_auto_20180510_1542.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
orange_sites/migrations/0010_auto_20180510_1542.py:6: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0010_auto_20180510_1542.py:9: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0010_auto_20180510_1542.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:51: [C0301(line-too-long), ] Line too long (105/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:64: [C0301(line-too-long), ] Line too long (103/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:77: [C0301(line-too-long), ] Line too long (102/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:106: [C0301(line-too-long), ] Line too long (104/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:112: [C0301(line-too-long), ] Line too long (114/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:114: [C0301(line-too-long), ] Line too long (105/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:115: [C0301(line-too-long), ] Line too long (106/100)
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:1: [C0103(invalid-name), ] Module name "0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate" doesn't conform to snake_case naming style
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0008_auto_20171207_1730
orange_sites/migrations/0008_auto_20171207_1730.py:22: [C0301(line-too-long), ] Line too long (114/100)
orange_sites/migrations/0008_auto_20171207_1730.py:23: [C0301(line-too-long), ] Line too long (150/100)
orange_sites/migrations/0008_auto_20171207_1730.py:24: [C0301(line-too-long), ] Line too long (193/100)
orange_sites/migrations/0008_auto_20171207_1730.py:25: [C0301(line-too-long), ] Line too long (174/100)
orange_sites/migrations/0008_auto_20171207_1730.py:26: [C0301(line-too-long), ] Line too long (360/100)
orange_sites/migrations/0008_auto_20171207_1730.py:27: [C0301(line-too-long), ] Line too long (344/100)
orange_sites/migrations/0008_auto_20171207_1730.py:39: [C0301(line-too-long), ] Line too long (114/100)
orange_sites/migrations/0008_auto_20171207_1730.py:40: [C0301(line-too-long), ] Line too long (122/100)
orange_sites/migrations/0008_auto_20171207_1730.py:41: [C0301(line-too-long), ] Line too long (158/100)
orange_sites/migrations/0008_auto_20171207_1730.py:42: [C0301(line-too-long), ] Line too long (182/100)
orange_sites/migrations/0008_auto_20171207_1730.py:55: [C0301(line-too-long), ] Line too long (114/100)
orange_sites/migrations/0008_auto_20171207_1730.py:56: [C0301(line-too-long), ] Line too long (125/100)
orange_sites/migrations/0008_auto_20171207_1730.py:57: [C0301(line-too-long), ] Line too long (132/100)
orange_sites/migrations/0008_auto_20171207_1730.py:58: [C0301(line-too-long), ] Line too long (144/100)
orange_sites/migrations/0008_auto_20171207_1730.py:59: [C0301(line-too-long), ] Line too long (155/100)
orange_sites/migrations/0008_auto_20171207_1730.py:60: [C0301(line-too-long), ] Line too long (240/100)
orange_sites/migrations/0008_auto_20171207_1730.py:61: [C0301(line-too-long), ] Line too long (252/100)
orange_sites/migrations/0008_auto_20171207_1730.py:62: [C0301(line-too-long), ] Line too long (203/100)
orange_sites/migrations/0008_auto_20171207_1730.py:1: [C0103(invalid-name), ] Module name "0008_auto_20171207_1730" doesn't conform to snake_case naming style
orange_sites/migrations/0008_auto_20171207_1730.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0008_auto_20171207_1730.py:5: [E0401(import-error), ] Unable to import 'django.conf'
orange_sites/migrations/0008_auto_20171207_1730.py:6: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0008_auto_20171207_1730.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
orange_sites/migrations/0008_auto_20171207_1730.py:10: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0008_auto_20171207_1730.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0012_auto_20181106_1421
orange_sites/migrations/0012_auto_20181106_1421.py:19: [C0301(line-too-long), ] Line too long (270/100)
orange_sites/migrations/0012_auto_20181106_1421.py:1: [C0103(invalid-name), ] Module name "0012_auto_20181106_1421" doesn't conform to snake_case naming style
orange_sites/migrations/0012_auto_20181106_1421.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0012_auto_20181106_1421.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
orange_sites/migrations/0012_auto_20181106_1421.py:6: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0012_auto_20181106_1421.py:9: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0012_auto_20181106_1421.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0014_merge_20181207_2209
orange_sites/migrations/0014_merge_20181207_2209.py:1: [C0103(invalid-name), ] Module name "0014_merge_20181207_2209" doesn't conform to snake_case naming style
orange_sites/migrations/0014_merge_20181207_2209.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0014_merge_20181207_2209.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0014_merge_20181207_2209.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0014_merge_20181207_2209.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0011_auto_20181012_1651
orange_sites/migrations/0011_auto_20181012_1651.py:18: [C0301(line-too-long), ] Line too long (122/100)
orange_sites/migrations/0011_auto_20181012_1651.py:1: [C0103(invalid-name), ] Module name "0011_auto_20181012_1651" doesn't conform to snake_case naming style
orange_sites/migrations/0011_auto_20181012_1651.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0011_auto_20181012_1651.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0011_auto_20181012_1651.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0011_auto_20181012_1651.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0003_auto_20160728_0838
orange_sites/migrations/0003_auto_20160728_0838.py:11: [C0301(line-too-long), ] Line too long (133/100)
orange_sites/migrations/0003_auto_20160728_0838.py:17: [C0301(line-too-long), ] Line too long (111/100)
orange_sites/migrations/0003_auto_20160728_0838.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160728_0838" doesn't conform to snake_case naming style
orange_sites/migrations/0003_auto_20160728_0838.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0003_auto_20160728_0838.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0003_auto_20160728_0838.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0003_auto_20160728_0838.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0007_add_solapplication
orange_sites/migrations/0007_add_solapplication.py:11: [C0301(line-too-long), ] Line too long (130/100)
orange_sites/migrations/0007_add_solapplication.py:1: [C0103(invalid-name), ] Module name "0007_add_solapplication" doesn't conform to snake_case naming style
orange_sites/migrations/0007_add_solapplication.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0007_add_solapplication.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0007_add_solapplication.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0007_add_solapplication.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0013_merge_20181207_1841
orange_sites/migrations/0013_merge_20181207_1841.py:1: [C0103(invalid-name), ] Module name "0013_merge_20181207_1841" doesn't conform to snake_case naming style
orange_sites/migrations/0013_merge_20181207_1841.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0013_merge_20181207_1841.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0013_merge_20181207_1841.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0013_merge_20181207_1841.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_sites.migrations.0001_initial
orange_sites/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_sites/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_sites/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_sites/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_sites/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module portal.tests
portal/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
portal/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module portal.urls
portal/urls.py:19: [C0305(trailing-newlines), ] Trailing newlines
portal/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/urls.py:4: [E0401(import-error), ] Unable to import 'django.conf.urls'
portal/urls.py:5: [E0401(import-error), ] Unable to import 'rest_framework_bulk.routes'
portal/urls.py:10: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
portal/urls.py:15: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
portal/urls.py:16: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module portal.apps
portal/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/apps.py:1: [E0401(import-error), ] Unable to import 'django.apps'
portal/apps.py:4: [C0111(missing-docstring), PortalConfig] Missing class docstring
portal/apps.py:4: [R0903(too-few-public-methods), PortalConfig] Too few public methods (0/2)
************* Module portal.views
portal/views.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/views.py:1: [E0401(import-error), ] Unable to import 'django.shortcuts'
portal/views.py:4: [W0401(wildcard-import), ] Wildcard import serializers
portal/views.py:1: [W0611(unused-import), ] Unused render imported from django.shortcuts
************* Module portal.serializers
portal/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module portal.admin
portal/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/admin.py:1: [E0401(import-error), ] Unable to import 'django.contrib'
portal/admin.py:1: [W0611(unused-import), ] Unused admin imported from django.contrib
************* Module portal.__init__
portal/__init__.py:1: [C0304(missing-final-newline), ] Final newline missing
************* Module portal
portal/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module portal.models_api
portal/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/models_api.py:6: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module portal.models
portal/models.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/models.py:1: [E0401(import-error), ] Unable to import 'django.db'
portal/models.py:1: [W0611(unused-import), ] Unused models imported from django.db
************* Module portal.permissions
portal/permissions/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/permissions/__init__.py:6: [C0111(missing-docstring), AppPermissions] Missing class docstring
portal/permissions/__init__.py:15: [C0111(missing-docstring), AppPermissions.has_menu_admin_permission] Missing method docstring
portal/permissions/__init__.py:25: [C0111(missing-docstring), AppPermissions.has_menu_change_user_permission] Missing method docstring
portal/permissions/__init__.py:35: [C0111(missing-docstring), AppPermissions.has_menu_agreement_download_permission] Missing method docstring
************* Module portal.migrations.0003_auto_20180207_1647
portal/migrations/0003_auto_20180207_1647.py:15: [C0301(line-too-long), ] Line too long (106/100)
portal/migrations/0003_auto_20180207_1647.py:17: [C0301(line-too-long), ] Line too long (149/100)
portal/migrations/0003_auto_20180207_1647.py:18: [C0301(line-too-long), ] Line too long (138/100)
portal/migrations/0003_auto_20180207_1647.py:19: [C0301(line-too-long), ] Line too long (145/100)
portal/migrations/0003_auto_20180207_1647.py:22: [C0301(line-too-long), ] Line too long (105/100)
portal/migrations/0003_auto_20180207_1647.py:1: [C0103(invalid-name), ] Module name "0003_auto_20180207_1647" doesn't conform to snake_case naming style
portal/migrations/0003_auto_20180207_1647.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/migrations/0003_auto_20180207_1647.py:5: [E0401(import-error), ] Unable to import 'django.db'
portal/migrations/0003_auto_20180207_1647.py:8: [C0111(missing-docstring), Migration] Missing class docstring
portal/migrations/0003_auto_20180207_1647.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module portal.migrations.0005_auto_20181115_1201
portal/migrations/0005_auto_20181115_1201.py:20: [C0301(line-too-long), ] Line too long (144/100)
portal/migrations/0005_auto_20181115_1201.py:26: [C0301(line-too-long), ] Line too long (282/100)
portal/migrations/0005_auto_20181115_1201.py:31: [C0301(line-too-long), ] Line too long (122/100)
portal/migrations/0005_auto_20181115_1201.py:1: [C0103(invalid-name), ] Module name "0005_auto_20181115_1201" doesn't conform to snake_case naming style
portal/migrations/0005_auto_20181115_1201.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/migrations/0005_auto_20181115_1201.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
portal/migrations/0005_auto_20181115_1201.py:6: [E0401(import-error), ] Unable to import 'django.db'
portal/migrations/0005_auto_20181115_1201.py:9: [C0111(missing-docstring), Migration] Missing class docstring
portal/migrations/0005_auto_20181115_1201.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module portal.migrations.0002_register_solapplication
portal/migrations/0002_register_solapplication.py:18: [C0301(line-too-long), ] Line too long (132/100)
portal/migrations/0002_register_solapplication.py:23: [C0301(line-too-long), ] Line too long (153/100)
portal/migrations/0002_register_solapplication.py:1: [C0103(invalid-name), ] Module name "0002_register_solapplication" doesn't conform to snake_case naming style
portal/migrations/0002_register_solapplication.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/migrations/0002_register_solapplication.py:5: [E0401(import-error), ] Unable to import 'django.db'
portal/migrations/0002_register_solapplication.py:6: [E0401(import-error), ] Unable to import 'django.utils.text'
portal/migrations/0002_register_solapplication.py:8: [C0103(invalid-name), ] Constant name "app_name" doesn't conform to UPPER_CASE naming style
portal/migrations/0002_register_solapplication.py:11: [C0111(missing-docstring), Migration] Missing class docstring
portal/migrations/0002_register_solapplication.py:11: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module portal.migrations.0004_auto_20180604_1538
portal/migrations/0004_auto_20180604_1538.py:19: [C0301(line-too-long), ] Line too long (143/100)
portal/migrations/0004_auto_20180604_1538.py:24: [C0301(line-too-long), ] Line too long (277/100)
portal/migrations/0004_auto_20180604_1538.py:1: [C0103(invalid-name), ] Module name "0004_auto_20180604_1538" doesn't conform to snake_case naming style
portal/migrations/0004_auto_20180604_1538.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/migrations/0004_auto_20180604_1538.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
portal/migrations/0004_auto_20180604_1538.py:6: [E0401(import-error), ] Unable to import 'django.db'
portal/migrations/0004_auto_20180604_1538.py:9: [C0111(missing-docstring), Migration] Missing class docstring
portal/migrations/0004_auto_20180604_1538.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module portal.migrations.0001_initial
portal/migrations/0001_initial.py:23: [C0301(line-too-long), ] Line too long (114/100)
portal/migrations/0001_initial.py:24: [C0301(line-too-long), ] Line too long (150/100)
portal/migrations/0001_initial.py:25: [C0301(line-too-long), ] Line too long (193/100)
portal/migrations/0001_initial.py:26: [C0301(line-too-long), ] Line too long (174/100)
portal/migrations/0001_initial.py:27: [C0301(line-too-long), ] Line too long (354/100)
portal/migrations/0001_initial.py:28: [C0301(line-too-long), ] Line too long (338/100)
portal/migrations/0001_initial.py:40: [C0301(line-too-long), ] Line too long (114/100)
portal/migrations/0001_initial.py:41: [C0301(line-too-long), ] Line too long (111/100)
portal/migrations/0001_initial.py:42: [C0301(line-too-long), ] Line too long (147/100)
portal/migrations/0001_initial.py:43: [C0301(line-too-long), ] Line too long (176/100)
portal/migrations/0001_initial.py:56: [C0301(line-too-long), ] Line too long (114/100)
portal/migrations/0001_initial.py:57: [C0301(line-too-long), ] Line too long (125/100)
portal/migrations/0001_initial.py:58: [C0301(line-too-long), ] Line too long (132/100)
portal/migrations/0001_initial.py:59: [C0301(line-too-long), ] Line too long (144/100)
portal/migrations/0001_initial.py:60: [C0301(line-too-long), ] Line too long (155/100)
portal/migrations/0001_initial.py:61: [C0301(line-too-long), ] Line too long (234/100)
portal/migrations/0001_initial.py:62: [C0301(line-too-long), ] Line too long (246/100)
portal/migrations/0001_initial.py:63: [C0301(line-too-long), ] Line too long (197/100)
portal/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
portal/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
portal/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.conf'
portal/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.db'
portal/migrations/0001_initial.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
portal/migrations/0001_initial.py:10: [C0111(missing-docstring), Migration] Missing class docstring
portal/migrations/0001_initial.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.tests
orange_ordering/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_ordering/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_ordering.urls
orange_ordering/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_ordering/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_ordering/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_ordering/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_ordering/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_ordering.apps
orange_ordering/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_ordering/apps.py:6: [C0111(missing-docstring), OrangeOrderingConfig] Missing class docstring
orange_ordering/apps.py:6: [R0903(too-few-public-methods), OrangeOrderingConfig] Too few public methods (0/2)
************* Module orange_ordering.views
orange_ordering/views.py:8: [C0305(trailing-newlines), ] Trailing newlines
orange_ordering/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_ordering/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_ordering.serializers
orange_ordering/serializers.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_ordering/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_ordering
orange_ordering/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_ordering.models_api
orange_ordering/models_api.py:6: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/models_api.py:13: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order',
        |   ^
orange_ordering/models_api.py:14: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__zone',
        |   ^
orange_ordering/models_api.py:15: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex',
        |   ^
orange_ordering/models_api.py:16: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex__ccdnf',
        |   ^
orange_ordering/models_api.py:17: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex__hypothesys',
        |   ^
orange_ordering/models_api.py:18: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex__hypothesys__budget',
        |   ^
orange_ordering/models_api.py:19: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex__contract',
        |   ^
orange_ordering/models_api.py:20: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex__provider',
        |   ^
orange_ordering/models_api.py:21: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_capex__sdc',
        |   ^
orange_ordering/models_api.py:22: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex',
        |   ^
orange_ordering/models_api.py:23: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex__ccdnf',
        |   ^
orange_ordering/models_api.py:24: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex__hypothesys',
        |   ^
orange_ordering/models_api.py:25: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex__hypothesys__budget',
        |   ^
orange_ordering/models_api.py:26: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex__contract',
        |   ^
orange_ordering/models_api.py:27: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex__provider',
        |   ^
orange_ordering/models_api.py:28: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__delegation_opex__sdc',
        |   ^
orange_ordering/models_api.py:29: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__petitioner',
        |   ^
orange_ordering/models_api.py:30: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'order__manager',
        |   ^
orange_ordering/models_api.py:201: [C0301(line-too-long), ] Line too long (115/100)
orange_ordering/models_api.py:229: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models_api.py:257: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models_api.py:285: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_ordering/models_api.py:11: [C0103(invalid-name), get_queryset_order_task] Argument name "qs" doesn't conform to snake_case naming style
orange_ordering/models_api.py:11: [C0111(missing-docstring), get_queryset_order_task] Missing function docstring
orange_ordering/models_api.py:48: [C0111(missing-docstring), get_queryset_order_task_viewset] Missing function docstring
orange_ordering/models_api.py:52: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_ordering.models
orange_ordering/models.py:628: [W0511(fixme), ] TODO: this could replace 'order' and related 'delegation_order' for Order model, used only in export for now.
orange_ordering/models.py:702: [W0511(fixme), ] TODO: this could replace 'order' and related 'delegation_order' for Order model, used only in export for now.
orange_ordering/models.py:68: [C0301(line-too-long), ] Line too long (108/100)
orange_ordering/models.py:149: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/models.py:150: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:168: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/models.py:172: [C0301(line-too-long), ] Line too long (109/100)
orange_ordering/models.py:173: [C0301(line-too-long), ] Line too long (116/100)
orange_ordering/models.py:181: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/models.py:182: [C0301(line-too-long), ] Line too long (111/100)
orange_ordering/models.py:183: [C0301(line-too-long), ] Line too long (108/100)
orange_ordering/models.py:184: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/models.py:185: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/models.py:202: [C0326(bad-whitespace), ] Exactly one space required after comma
    point = models.ForeignKey(Point, models.DO_NOTHING,  db_column='idpunto')
                                                      ^
orange_ordering/models.py:244: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:249: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/models.py:250: [C0301(line-too-long), ] Line too long (119/100)
orange_ordering/models.py:255: [C0301(line-too-long), ] Line too long (159/100)
orange_ordering/models.py:292: [C0301(line-too-long), ] Line too long (115/100)
orange_ordering/models.py:321: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/models.py:337: [C0301(line-too-long), ] Line too long (133/100)
orange_ordering/models.py:338: [C0301(line-too-long), ] Line too long (123/100)
orange_ordering/models.py:341: [C0301(line-too-long), ] Line too long (140/100)
orange_ordering/models.py:341: [C0326(bad-whitespace), ] Exactly one space required after comma
    delegation_capex = models.ForeignKey(Delegation, models.DO_NOTHING,  db_column='iddelega_capex', related_name='orders_capex', null=True)
                                                                      ^
orange_ordering/models.py:342: [C0301(line-too-long), ] Line too long (136/100)
orange_ordering/models.py:344: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/models.py:349: [C0301(line-too-long), ] Line too long (117/100)
orange_ordering/models.py:350: [C0301(line-too-long), ] Line too long (114/100)
orange_ordering/models.py:352: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/models.py:356: [C0301(line-too-long), ] Line too long (111/100)
orange_ordering/models.py:359: [C0301(line-too-long), ] Line too long (108/100)
orange_ordering/models.py:424: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:457: [C0301(line-too-long), ] Line too long (113/100)
orange_ordering/models.py:476: [C0301(line-too-long), ] Line too long (108/100)
orange_ordering/models.py:478: [C0301(line-too-long), ] Line too long (112/100)
orange_ordering/models.py:520: [C0301(line-too-long), ] Line too long (113/100)
orange_ordering/models.py:521: [C0301(line-too-long), ] Line too long (114/100)
orange_ordering/models.py:522: [C0301(line-too-long), ] Line too long (114/100)
orange_ordering/models.py:561: [C0301(line-too-long), ] Line too long (113/100)
orange_ordering/models.py:564: [C0301(line-too-long), ] Line too long (111/100)
orange_ordering/models.py:582: [C0301(line-too-long), ] Line too long (114/100)
orange_ordering/models.py:584: [C0301(line-too-long), ] Line too long (121/100)
orange_ordering/models.py:604: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:606: [C0301(line-too-long), ] Line too long (117/100)
orange_ordering/models.py:622: [C0301(line-too-long), ] Line too long (117/100)
orange_ordering/models.py:625: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:627: [C0301(line-too-long), ] Line too long (117/100)
orange_ordering/models.py:628: [C0301(line-too-long), ] Line too long (115/100)
orange_ordering/models.py:629: [C0301(line-too-long), ] Line too long (122/100)
orange_ordering/models.py:651: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:677: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/models.py:699: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/models.py:700: [C0301(line-too-long), ] Line too long (132/100)
orange_ordering/models.py:702: [C0301(line-too-long), ] Line too long (115/100)
orange_ordering/models.py:703: [C0301(line-too-long), ] Line too long (117/100)
orange_ordering/models.py:719: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/models.py:720: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/models.py:738: [C0301(line-too-long), ] Line too long (112/100)
orange_ordering/models.py:754: [C0301(line-too-long), ] Line too long (118/100)
orange_ordering/models.py:755: [C0301(line-too-long), ] Line too long (109/100)
orange_ordering/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/models.py:4: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_ordering/models.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_ordering/models.py:11: [C0111(missing-docstring), Budget] Missing class docstring
orange_ordering/models.py:19: [C0111(missing-docstring), Budget.Meta] Missing class docstring
orange_ordering/models.py:19: [R0903(too-few-public-methods), Budget.Meta] Too few public methods (0/2)
orange_ordering/models.py:11: [R0903(too-few-public-methods), Budget] Too few public methods (1/2)
orange_ordering/models.py:26: [C0111(missing-docstring), Zone] Missing class docstring
orange_ordering/models.py:34: [C0111(missing-docstring), Zone.Meta] Missing class docstring
orange_ordering/models.py:34: [R0903(too-few-public-methods), Zone.Meta] Too few public methods (0/2)
orange_ordering/models.py:26: [R0903(too-few-public-methods), Zone] Too few public methods (1/2)
orange_ordering/models.py:41: [C0111(missing-docstring), Person] Missing class docstring
orange_ordering/models.py:58: [C0111(missing-docstring), Person.Meta] Missing class docstring
orange_ordering/models.py:58: [R0903(too-few-public-methods), Person.Meta] Too few public methods (0/2)
orange_ordering/models.py:41: [R0903(too-few-public-methods), Person] Too few public methods (1/2)
orange_ordering/models.py:65: [C0111(missing-docstring), Provider] Missing class docstring
orange_ordering/models.py:73: [C0111(missing-docstring), Provider.Meta] Missing class docstring
orange_ordering/models.py:73: [R0903(too-few-public-methods), Provider.Meta] Too few public methods (0/2)
orange_ordering/models.py:65: [R0903(too-few-public-methods), Provider] Too few public methods (1/2)
orange_ordering/models.py:81: [C0111(missing-docstring), Sdc] Missing class docstring
orange_ordering/models.py:92: [C0111(missing-docstring), Sdc.from_string] Missing method docstring
orange_ordering/models.py:92: [W0613(unused-argument), Sdc.from_string] Unused argument 'kwargs'
orange_ordering/models.py:95: [C0111(missing-docstring), Sdc.Meta] Missing class docstring
orange_ordering/models.py:95: [R0903(too-few-public-methods), Sdc.Meta] Too few public methods (0/2)
orange_ordering/models.py:102: [C0111(missing-docstring), Contract] Missing class docstring
orange_ordering/models.py:118: [C0111(missing-docstring), Contract.Meta] Missing class docstring
orange_ordering/models.py:118: [R0903(too-few-public-methods), Contract.Meta] Too few public methods (0/2)
orange_ordering/models.py:102: [R0903(too-few-public-methods), Contract] Too few public methods (1/2)
orange_ordering/models.py:125: [C0111(missing-docstring), Ccdnf] Missing class docstring
orange_ordering/models.py:136: [C0111(missing-docstring), Ccdnf.from_string] Missing method docstring
orange_ordering/models.py:136: [W0613(unused-argument), Ccdnf.from_string] Unused argument 'kwargs'
orange_ordering/models.py:139: [C0111(missing-docstring), Ccdnf.Meta] Missing class docstring
orange_ordering/models.py:139: [R0903(too-few-public-methods), Ccdnf.Meta] Too few public methods (0/2)
orange_ordering/models.py:146: [C0111(missing-docstring), Point] Missing class docstring
orange_ordering/models.py:155: [C0111(missing-docstring), Point.Meta] Missing class docstring
orange_ordering/models.py:155: [R0903(too-few-public-methods), Point.Meta] Too few public methods (0/2)
orange_ordering/models.py:146: [R0903(too-few-public-methods), Point] Too few public methods (1/2)
orange_ordering/models.py:162: [C0111(missing-docstring), Hypothesys] Missing class docstring
orange_ordering/models.py:191: [C0111(missing-docstring), Hypothesys.Meta] Missing class docstring
orange_ordering/models.py:191: [R0903(too-few-public-methods), Hypothesys.Meta] Too few public methods (0/2)
orange_ordering/models.py:162: [R0903(too-few-public-methods), Hypothesys] Too few public methods (1/2)
orange_ordering/models.py:198: [C0111(missing-docstring), HypothesysPoints] Missing class docstring
orange_ordering/models.py:207: [C0111(missing-docstring), HypothesysPoints.Meta] Missing class docstring
orange_ordering/models.py:207: [R0903(too-few-public-methods), HypothesysPoints.Meta] Too few public methods (0/2)
orange_ordering/models.py:198: [R0903(too-few-public-methods), HypothesysPoints] Too few public methods (1/2)
orange_ordering/models.py:214: [C0111(missing-docstring), Delegation] Missing class docstring
orange_ordering/models.py:230: [C0103(invalid-name), Delegation.get_summary] Argument name "pk" doesn't conform to snake_case naming style
orange_ordering/models.py:230: [C0202(bad-classmethod-argument), Delegation.get_summary] Class method get_summary should have 'cls' as first argument
orange_ordering/models.py:307: [C0111(missing-docstring), Delegation.Meta] Missing class docstring
orange_ordering/models.py:307: [R0903(too-few-public-methods), Delegation.Meta] Too few public methods (0/2)
orange_ordering/models.py:318: [C0111(missing-docstring), OrderType] Missing class docstring
orange_ordering/models.py:326: [C0111(missing-docstring), OrderType.Meta] Missing class docstring
orange_ordering/models.py:326: [R0903(too-few-public-methods), OrderType.Meta] Too few public methods (0/2)
orange_ordering/models.py:318: [R0903(too-few-public-methods), OrderType] Too few public methods (1/2)
orange_ordering/models.py:333: [C0111(missing-docstring), Order] Missing class docstring
orange_ordering/models.py:362: [C0111(missing-docstring), Order.last_sap_zw01p] Missing method docstring
orange_ordering/models.py:372: [C0111(missing-docstring), Order.capex_opex] Missing method docstring
orange_ordering/models.py:374: [R1705(no-else-return), Order.capex_opex] Unnecessary "else" after "return"
orange_ordering/models.py:379: [R1705(no-else-return), Order.capex_opex] Unnecessary "else" after "return"
orange_ordering/models.py:387: [C0111(missing-docstring), Order.Meta] Missing class docstring
orange_ordering/models.py:387: [R0903(too-few-public-methods), Order.Meta] Too few public methods (0/2)
orange_ordering/models.py:394: [C0111(missing-docstring), Company] Missing class docstring
orange_ordering/models.py:412: [C0111(missing-docstring), Company.Meta] Missing class docstring
orange_ordering/models.py:412: [R0903(too-few-public-methods), Company.Meta] Too few public methods (0/2)
orange_ordering/models.py:394: [R0903(too-few-public-methods), Company] Too few public methods (1/2)
orange_ordering/models.py:419: [C0111(missing-docstring), SupervisionContract] Missing class docstring
orange_ordering/models.py:429: [C0111(missing-docstring), SupervisionContract.Meta] Missing class docstring
orange_ordering/models.py:429: [R0903(too-few-public-methods), SupervisionContract.Meta] Too few public methods (0/2)
orange_ordering/models.py:419: [R0903(too-few-public-methods), SupervisionContract] Too few public methods (1/2)
orange_ordering/models.py:436: [C0111(missing-docstring), WorkType] Missing class docstring
orange_ordering/models.py:446: [C0111(missing-docstring), WorkType.Meta] Missing class docstring
orange_ordering/models.py:446: [R0903(too-few-public-methods), WorkType.Meta] Too few public methods (0/2)
orange_ordering/models.py:436: [R0903(too-few-public-methods), WorkType] Too few public methods (1/2)
orange_ordering/models.py:453: [C0111(missing-docstring), Work] Missing class docstring
orange_ordering/models.py:463: [C0111(missing-docstring), Work.Meta] Missing class docstring
orange_ordering/models.py:463: [R0903(too-few-public-methods), Work.Meta] Too few public methods (0/2)
orange_ordering/models.py:453: [R0903(too-few-public-methods), Work] Too few public methods (1/2)
orange_ordering/models.py:470: [C0111(missing-docstring), Task] Missing class docstring
orange_ordering/models.py:484: [C0111(missing-docstring), Task.from_string] Missing method docstring
orange_ordering/models.py:484: [W0613(unused-argument), Task.from_string] Unused argument 'kwargs'
orange_ordering/models.py:487: [C0111(missing-docstring), Task.Meta] Missing class docstring
orange_ordering/models.py:487: [R0903(too-few-public-methods), Task.Meta] Too few public methods (0/2)
orange_ordering/models.py:495: [C0111(missing-docstring), OrderTaskManager] Missing class docstring
orange_ordering/models.py:496: [C0111(missing-docstring), OrderTaskManager.get_queryset] Missing method docstring
orange_ordering/models.py:495: [R0903(too-few-public-methods), OrderTaskManager] Too few public methods (1/2)
orange_ordering/models.py:500: [C0111(missing-docstring), OrderTask] Missing class docstring
orange_ordering/models.py:507: [C0111(missing-docstring), OrderTask.get_external_url_template] Missing method docstring
orange_ordering/models.py:511: [C0103(invalid-name), OrderTask.get_external_url] Argument name "id" doesn't conform to snake_case naming style
orange_ordering/models.py:511: [C0111(missing-docstring), OrderTask.get_external_url] Missing method docstring
orange_ordering/models.py:511: [W0622(redefined-builtin), OrderTask.get_external_url] Redefining built-in 'id'
orange_ordering/models.py:515: [C0111(missing-docstring), OrderTask.external_url] Missing method docstring
orange_ordering/models.py:519: [C0111(missing-docstring), OrderTask.get_new_external_instance_url] Missing method docstring
orange_ordering/models.py:529: [C0111(missing-docstring), OrderTask.new_external_instance_url] Missing method docstring
orange_ordering/models.py:532: [C0111(missing-docstring), OrderTask.Meta] Missing class docstring
orange_ordering/models.py:532: [R0903(too-few-public-methods), OrderTask.Meta] Too few public methods (0/2)
orange_ordering/models.py:539: [C0111(missing-docstring), StateGroup] Missing class docstring
orange_ordering/models.py:547: [C0111(missing-docstring), StateGroup.Meta] Missing class docstring
orange_ordering/models.py:547: [R0903(too-few-public-methods), StateGroup.Meta] Too few public methods (0/2)
orange_ordering/models.py:539: [R0903(too-few-public-methods), StateGroup] Too few public methods (1/2)
orange_ordering/models.py:554: [C0111(missing-docstring), State] Missing class docstring
orange_ordering/models.py:570: [C0111(missing-docstring), State.Meta] Missing class docstring
orange_ordering/models.py:570: [R0903(too-few-public-methods), State.Meta] Too few public methods (0/2)
orange_ordering/models.py:554: [R0903(too-few-public-methods), State] Too few public methods (1/2)
orange_ordering/models.py:577: [C0111(missing-docstring), StateCondition] Missing class docstring
orange_ordering/models.py:591: [C0111(missing-docstring), StateCondition.Meta] Missing class docstring
orange_ordering/models.py:591: [R0903(too-few-public-methods), StateCondition.Meta] Too few public methods (0/2)
orange_ordering/models.py:577: [R0903(too-few-public-methods), StateCondition] Too few public methods (1/2)
orange_ordering/models.py:598: [C0111(missing-docstring), OrderVisit] Missing class docstring
orange_ordering/models.py:611: [C0111(missing-docstring), OrderVisit.Meta] Missing class docstring
orange_ordering/models.py:611: [R0903(too-few-public-methods), OrderVisit.Meta] Too few public methods (0/2)
orange_ordering/models.py:598: [R0903(too-few-public-methods), OrderVisit] Too few public methods (1/2)
orange_ordering/models.py:619: [C0111(missing-docstring), OrderLastVisit] Missing class docstring
orange_ordering/models.py:635: [C0111(missing-docstring), OrderLastVisit.Meta] Missing class docstring
orange_ordering/models.py:635: [R0903(too-few-public-methods), OrderLastVisit.Meta] Too few public methods (0/2)
orange_ordering/models.py:619: [R0903(too-few-public-methods), OrderLastVisit] Too few public methods (1/2)
orange_ordering/models.py:643: [C0111(missing-docstring), OrderSapZw01p] Missing class docstring
orange_ordering/models.py:663: [C0111(missing-docstring), OrderSapZw01p.Meta] Missing class docstring
orange_ordering/models.py:663: [R0903(too-few-public-methods), OrderSapZw01p.Meta] Too few public methods (0/2)
orange_ordering/models.py:643: [R0903(too-few-public-methods), OrderSapZw01p] Too few public methods (1/2)
orange_ordering/models.py:669: [C0111(missing-docstring), OrderLastSapZw01p] Missing class docstring
orange_ordering/models.py:689: [C0111(missing-docstring), OrderLastSapZw01p.Meta] Missing class docstring
orange_ordering/models.py:689: [R0903(too-few-public-methods), OrderLastSapZw01p.Meta] Too few public methods (0/2)
orange_ordering/models.py:669: [R0903(too-few-public-methods), OrderLastSapZw01p] Too few public methods (1/2)
orange_ordering/models.py:696: [C0111(missing-docstring), OrderDelegation] Missing class docstring
orange_ordering/models.py:709: [C0111(missing-docstring), OrderDelegation.Meta] Missing class docstring
orange_ordering/models.py:709: [R0903(too-few-public-methods), OrderDelegation.Meta] Too few public methods (0/2)
orange_ordering/models.py:696: [R0903(too-few-public-methods), OrderDelegation] Too few public methods (1/2)
orange_ordering/models.py:716: [C0111(missing-docstring), Acceptance] Missing class docstring
orange_ordering/models.py:728: [C0111(missing-docstring), Acceptance.Meta] Missing class docstring
orange_ordering/models.py:728: [R0903(too-few-public-methods), Acceptance.Meta] Too few public methods (0/2)
orange_ordering/models.py:716: [R0903(too-few-public-methods), Acceptance] Too few public methods (1/2)
orange_ordering/models.py:735: [C0111(missing-docstring), CcdnfPointsNumber] Missing class docstring
orange_ordering/models.py:744: [C0111(missing-docstring), CcdnfPointsNumber.Meta] Missing class docstring
orange_ordering/models.py:744: [R0903(too-few-public-methods), CcdnfPointsNumber.Meta] Too few public methods (0/2)
orange_ordering/models.py:735: [R0903(too-few-public-methods), CcdnfPointsNumber] Too few public methods (1/2)
orange_ordering/models.py:751: [C0111(missing-docstring), OrderAcceptancesResume] Missing class docstring
orange_ordering/models.py:761: [C0111(missing-docstring), OrderAcceptancesResume.Meta] Missing class docstring
orange_ordering/models.py:761: [R0903(too-few-public-methods), OrderAcceptancesResume.Meta] Too few public methods (0/2)
orange_ordering/models.py:751: [R0903(too-few-public-methods), OrderAcceptancesResume] Too few public methods (1/2)
************* Module orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype
orange_ordering/migrations/0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype.py:122: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/migrations/0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype.py:1: [C0103(invalid-name), ] Module name "0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype" doesn't conform to snake_case naming style
orange_ordering/migrations/0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0017_acceptance_ccdnfpointsnumber
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:18: [C0301(line-too-long), ] Line too long (107/100)
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:19: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:20: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:21: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:35: [C0301(line-too-long), ] Line too long (112/100)
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:1: [C0103(invalid-name), ] Module name "0017_acceptance_ccdnfpointsnumber" doesn't conform to snake_case naming style
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0017_acceptance_ccdnfpointsnumber.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0005_orderlastvisit_ordertask_ordervisit
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:11: [C0301(line-too-long), ] Line too long (131/100)
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:35: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:1: [C0103(invalid-name), ] Module name "0005_orderlastvisit_ordertask_ordervisit" doesn't conform to snake_case naming style
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0005_orderlastvisit_ordertask_ordervisit.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0016_ordini_delegation_view
orange_ordering/migrations/0016_ordini_delegation_view.py:1: [C0103(invalid-name), ] Module name "0016_ordini_delegation_view" doesn't conform to snake_case naming style
orange_ordering/migrations/0016_ordini_delegation_view.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0016_ordini_delegation_view.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0016_ordini_delegation_view.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0016_ordini_delegation_view.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0023_altered_last_visite_view
orange_ordering/migrations/0023_altered_last_visite_view.py:1: [C0103(invalid-name), ] Module name "0023_altered_last_visite_view" doesn't conform to snake_case naming style
orange_ordering/migrations/0023_altered_last_visite_view.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0023_altered_last_visite_view.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0023_altered_last_visite_view.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0023_altered_last_visite_view.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
orange_ordering/migrations/0023_altered_last_visite_view.py:5: [W0611(unused-import), ] Unused models imported from django.db
************* Module orange_ordering.migrations.0012_auto_20160908_1514
orange_ordering/migrations/0012_auto_20160908_1514.py:18: [C0301(line-too-long), ] Line too long (114/100)
orange_ordering/migrations/0012_auto_20160908_1514.py:20: [C0301(line-too-long), ] Line too long (149/100)
orange_ordering/migrations/0012_auto_20160908_1514.py:23: [C0301(line-too-long), ] Line too long (109/100)
orange_ordering/migrations/0012_auto_20160908_1514.py:1: [C0103(invalid-name), ] Module name "0012_auto_20160908_1514" doesn't conform to snake_case naming style
orange_ordering/migrations/0012_auto_20160908_1514.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0012_auto_20160908_1514.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0012_auto_20160908_1514.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0012_auto_20160908_1514.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0021_sdc
orange_ordering/migrations/0021_sdc.py:19: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0021_sdc.py:20: [C0301(line-too-long), ] Line too long (116/100)
orange_ordering/migrations/0021_sdc.py:1: [C0103(invalid-name), ] Module name "0021_sdc" doesn't conform to snake_case naming style
orange_ordering/migrations/0021_sdc.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0021_sdc.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0021_sdc.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0021_sdc.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0013_auto_20160908_1516
orange_ordering/migrations/0013_auto_20160908_1516.py:1: [C0103(invalid-name), ] Module name "0013_auto_20160908_1516" doesn't conform to snake_case naming style
orange_ordering/migrations/0013_auto_20160908_1516.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0013_auto_20160908_1516.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0013_auto_20160908_1516.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0013_auto_20160908_1516.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0022_altered_ordini_delegation_view
orange_ordering/migrations/0022_altered_ordini_delegation_view.py:1: [C0103(invalid-name), ] Module name "0022_altered_ordini_delegation_view" doesn't conform to snake_case naming style
orange_ordering/migrations/0022_altered_ordini_delegation_view.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0022_altered_ordini_delegation_view.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0022_altered_ordini_delegation_view.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0022_altered_ordini_delegation_view.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
orange_ordering/migrations/0022_altered_ordini_delegation_view.py:5: [W0611(unused-import), ] Unused models imported from django.db
************* Module orange_ordering.migrations.0024_auto_20180419_1611
orange_ordering/migrations/0024_auto_20180419_1611.py:17: [C0301(line-too-long), ] Line too long (150/100)
orange_ordering/migrations/0024_auto_20180419_1611.py:1: [C0103(invalid-name), ] Module name "0024_auto_20180419_1611" doesn't conform to snake_case naming style
orange_ordering/migrations/0024_auto_20180419_1611.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0024_auto_20180419_1611.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0024_auto_20180419_1611.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0024_auto_20180419_1611.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0003_ordersapzw01p
orange_ordering/migrations/0003_ordersapzw01p.py:11: [C0301(line-too-long), ] Line too long (137/100)
orange_ordering/migrations/0003_ordersapzw01p.py:18: [C0301(line-too-long), ] Line too long (114/100)
orange_ordering/migrations/0003_ordersapzw01p.py:20: [C0301(line-too-long), ] Line too long (161/100)
orange_ordering/migrations/0003_ordersapzw01p.py:23: [C0301(line-too-long), ] Line too long (109/100)
orange_ordering/migrations/0003_ordersapzw01p.py:1: [C0103(invalid-name), ] Module name "0003_ordersapzw01p" doesn't conform to snake_case naming style
orange_ordering/migrations/0003_ordersapzw01p.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0003_ordersapzw01p.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0003_ordersapzw01p.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0003_ordersapzw01p.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0006_merge
orange_ordering/migrations/0006_merge.py:1: [C0103(invalid-name), ] Module name "0006_merge" doesn't conform to snake_case naming style
orange_ordering/migrations/0006_merge.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0006_merge.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0006_merge.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0006_merge.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0010_auto_20160901_1444
orange_ordering/migrations/0010_auto_20160901_1444.py:1: [C0103(invalid-name), ] Module name "0010_auto_20160901_1444" doesn't conform to snake_case naming style
orange_ordering/migrations/0010_auto_20160901_1444.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0010_auto_20160901_1444.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0010_auto_20160901_1444.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0010_auto_20160901_1444.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0011_auto_20160901_1549
orange_ordering/migrations/0011_auto_20160901_1549.py:1: [C0103(invalid-name), ] Module name "0011_auto_20160901_1549" doesn't conform to snake_case naming style
orange_ordering/migrations/0011_auto_20160901_1549.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0011_auto_20160901_1549.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0011_auto_20160901_1549.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0011_auto_20160901_1549.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0020_fixed_last_visite_view
orange_ordering/migrations/0020_fixed_last_visite_view.py:18: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/migrations/0020_fixed_last_visite_view.py:1: [C0103(invalid-name), ] Module name "0020_fixed_last_visite_view" doesn't conform to snake_case naming style
orange_ordering/migrations/0020_fixed_last_visite_view.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0020_fixed_last_visite_view.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0020_fixed_last_visite_view.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0020_fixed_last_visite_view.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0019_orders_acceptances_resume_view
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:40: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:42: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:1: [C0103(invalid-name), ] Module name "0019_orders_acceptances_resume_view" doesn't conform to snake_case naming style
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0019_orders_acceptances_resume_view.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0003_auto_20160729_1225
orange_ordering/migrations/0003_auto_20160729_1225.py:11: [C0301(line-too-long), ] Line too long (137/100)
orange_ordering/migrations/0003_auto_20160729_1225.py:177: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/migrations/0003_auto_20160729_1225.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160729_1225" doesn't conform to snake_case naming style
orange_ordering/migrations/0003_auto_20160729_1225.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0003_auto_20160729_1225.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0003_auto_20160729_1225.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0003_auto_20160729_1225.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:20: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:21: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:34: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:36: [C0301(line-too-long), ] Line too long (112/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:48: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:49: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:50: [C0301(line-too-long), ] Line too long (122/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:63: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:64: [C0301(line-too-long), ] Line too long (108/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:65: [C0301(line-too-long), ] Line too long (126/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:78: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:79: [C0301(line-too-long), ] Line too long (116/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:80: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:81: [C0301(line-too-long), ] Line too long (106/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:82: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:83: [C0301(line-too-long), ] Line too long (123/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:84: [C0301(line-too-long), ] Line too long (130/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:87: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:88: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:91: [C0301(line-too-long), ] Line too long (116/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:92: [C0301(line-too-long), ] Line too long (125/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:93: [C0301(line-too-long), ] Line too long (122/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:94: [C0301(line-too-long), ] Line too long (119/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:95: [C0301(line-too-long), ] Line too long (116/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:108: [C0301(line-too-long), ] Line too long (108/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:120: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:121: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:122: [C0301(line-too-long), ] Line too long (105/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:123: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:124: [C0301(line-too-long), ] Line too long (144/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:125: [C0301(line-too-long), ] Line too long (141/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:126: [C0301(line-too-long), ] Line too long (120/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:127: [C0301(line-too-long), ] Line too long (136/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:129: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:130: [C0301(line-too-long), ] Line too long (120/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:131: [C0301(line-too-long), ] Line too long (137/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:132: [C0301(line-too-long), ] Line too long (101/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:133: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:134: [C0301(line-too-long), ] Line too long (134/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:146: [C0301(line-too-long), ] Line too long (106/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:147: [C0301(line-too-long), ] Line too long (124/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:159: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:160: [C0301(line-too-long), ] Line too long (110/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:161: [C0301(line-too-long), ] Line too long (111/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:162: [C0301(line-too-long), ] Line too long (109/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:175: [C0301(line-too-long), ] Line too long (118/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:187: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:188: [C0301(line-too-long), ] Line too long (122/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:201: [C0301(line-too-long), ] Line too long (109/100)
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:1: [C0103(invalid-name), ] Module name "0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z" doesn't conform to snake_case naming style
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0008_auto_20160826_0912
orange_ordering/migrations/0008_auto_20160826_0912.py:1: [C0103(invalid-name), ] Module name "0008_auto_20160826_0912" doesn't conform to snake_case naming style
orange_ordering/migrations/0008_auto_20160826_0912.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0008_auto_20160826_0912.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0008_auto_20160826_0912.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0008_auto_20160826_0912.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0015_auto_20161128_1559
orange_ordering/migrations/0015_auto_20161128_1559.py:18: [C0301(line-too-long), ] Line too long (119/100)
orange_ordering/migrations/0015_auto_20161128_1559.py:1: [C0103(invalid-name), ] Module name "0015_auto_20161128_1559" doesn't conform to snake_case naming style
orange_ordering/migrations/0015_auto_20161128_1559.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0015_auto_20161128_1559.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0015_auto_20161128_1559.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0015_auto_20161128_1559.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0001_initial
orange_ordering/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_ordering/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0014_auto_20161122_0910
orange_ordering/migrations/0014_auto_20161122_0910.py:19: [C0301(line-too-long), ] Line too long (103/100)
orange_ordering/migrations/0014_auto_20161122_0910.py:35: [C0301(line-too-long), ] Line too long (102/100)
orange_ordering/migrations/0014_auto_20161122_0910.py:71: [C0301(line-too-long), ] Line too long (104/100)
orange_ordering/migrations/0014_auto_20161122_0910.py:1: [C0103(invalid-name), ] Module name "0014_auto_20161122_0910" doesn't conform to snake_case naming style
orange_ordering/migrations/0014_auto_20161122_0910.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0014_auto_20161122_0910.py:5: [E0401(import-error), ] Unable to import 'django'
orange_ordering/migrations/0014_auto_20161122_0910.py:6: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0014_auto_20161122_0910.py:9: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0014_auto_20161122_0910.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0007_auto_20160825_0855
orange_ordering/migrations/0007_auto_20160825_0855.py:29: [C0301(line-too-long), ] Line too long (125/100)
orange_ordering/migrations/0007_auto_20160825_0855.py:1: [C0103(invalid-name), ] Module name "0007_auto_20160825_0855" doesn't conform to snake_case naming style
orange_ordering/migrations/0007_auto_20160825_0855.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0007_auto_20160825_0855.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0007_auto_20160825_0855.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0007_auto_20160825_0855.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_ordering.migrations.0009_auto_20160826_1450
orange_ordering/migrations/0009_auto_20160826_1450.py:1: [C0103(invalid-name), ] Module name "0009_auto_20160826_1450" doesn't conform to snake_case naming style
orange_ordering/migrations/0009_auto_20160826_1450.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_ordering/migrations/0009_auto_20160826_1450.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_ordering/migrations/0009_auto_20160826_1450.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_ordering/migrations/0009_auto_20160826_1450.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_public.tests
orange_public/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_public/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_public.urls
orange_public/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_public/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_public/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_public/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_public/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_public.apps
orange_public/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_public/apps.py:6: [C0111(missing-docstring), OrangePublicConfig] Missing class docstring
orange_public/apps.py:6: [R0903(too-few-public-methods), OrangePublicConfig] Too few public methods (0/2)
************* Module orange_public.views
orange_public/views.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_public/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_public/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_public.serializers
orange_public/serializers.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_public/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_public
orange_public/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_public.models_api
orange_public/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_public/models_api.py:8: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_public.models
orange_public/models.py:15: [C0301(line-too-long), ] Line too long (101/100)
orange_public/models.py:47: [C0301(line-too-long), ] Line too long (105/100)
orange_public/models.py:64: [C0301(line-too-long), ] Line too long (103/100)
orange_public/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange_public/models.py:4: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_public/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_public/models.py:8: [C0111(missing-docstring), Zone] Missing class docstring
orange_public/models.py:20: [C0111(missing-docstring), Zone.Meta] Missing class docstring
orange_public/models.py:20: [R0903(too-few-public-methods), Zone.Meta] Too few public methods (0/2)
orange_public/models.py:8: [R0903(too-few-public-methods), Zone] Too few public methods (1/2)
orange_public/models.py:27: [C0111(missing-docstring), Region] Missing class docstring
orange_public/models.py:35: [C0111(missing-docstring), Region.Meta] Missing class docstring
orange_public/models.py:35: [R0903(too-few-public-methods), Region.Meta] Too few public methods (0/2)
orange_public/models.py:27: [R0903(too-few-public-methods), Region] Too few public methods (1/2)
orange_public/models.py:42: [C0111(missing-docstring), City] Missing class docstring
orange_public/models.py:53: [C0111(missing-docstring), City.Meta] Missing class docstring
orange_public/models.py:53: [R0903(too-few-public-methods), City.Meta] Too few public methods (0/2)
orange_public/models.py:42: [R0903(too-few-public-methods), City] Too few public methods (1/2)
orange_public/models.py:60: [C0111(missing-docstring), Town] Missing class docstring
orange_public/models.py:70: [C0111(missing-docstring), Town.Meta] Missing class docstring
orange_public/models.py:70: [R0903(too-few-public-methods), Town.Meta] Too few public methods (0/2)
orange_public/models.py:60: [R0903(too-few-public-methods), Town] Too few public methods (1/2)
orange_public/models.py:77: [C0111(missing-docstring), Operator] Missing class docstring
orange_public/models.py:86: [C0111(missing-docstring), Operator.Meta] Missing class docstring
orange_public/models.py:86: [R0903(too-few-public-methods), Operator.Meta] Too few public methods (0/2)
orange_public/models.py:77: [R0903(too-few-public-methods), Operator] Too few public methods (1/2)
************* Module orange_public.migrations.0003_auto_20160901_1444
orange_public/migrations/0003_auto_20160901_1444.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160901_1444" doesn't conform to snake_case naming style
orange_public/migrations/0003_auto_20160901_1444.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/migrations/0003_auto_20160901_1444.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_public/migrations/0003_auto_20160901_1444.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_public/migrations/0003_auto_20160901_1444.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_public.migrations.0002_city_operator_region_town_zone
orange_public/migrations/0002_city_operator_region_town_zone.py:1: [C0103(invalid-name), ] Module name "0002_city_operator_region_town_zone" doesn't conform to snake_case naming style
orange_public/migrations/0002_city_operator_region_town_zone.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/migrations/0002_city_operator_region_town_zone.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_public/migrations/0002_city_operator_region_town_zone.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_public/migrations/0002_city_operator_region_town_zone.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_public.migrations.0004_auto_20160901_1550
orange_public/migrations/0004_auto_20160901_1550.py:1: [C0103(invalid-name), ] Module name "0004_auto_20160901_1550" doesn't conform to snake_case naming style
orange_public/migrations/0004_auto_20160901_1550.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/migrations/0004_auto_20160901_1550.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_public/migrations/0004_auto_20160901_1550.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_public/migrations/0004_auto_20160901_1550.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_public.migrations.0001_initial
orange_public/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_public/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_public/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_public/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_public/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_hunting.tests
orange_hunting/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_hunting/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_hunting.urls
orange_hunting/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_hunting/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_hunting/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_hunting/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_hunting/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_hunting.apps
orange_hunting/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_hunting/apps.py:6: [C0111(missing-docstring), OrangeHuntingConfig] Missing class docstring
orange_hunting/apps.py:6: [R0903(too-few-public-methods), OrangeHuntingConfig] Too few public methods (0/2)
************* Module orange_hunting.views
orange_hunting/views.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_hunting/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_hunting/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_hunting.serializers
orange_hunting/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_hunting
orange_hunting/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_hunting.models_api
orange_hunting/models_api.py:12: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage',
        |   ^
orange_hunting/models_api.py:13: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__zone',
        |   ^
orange_hunting/models_api.py:14: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__town',
        |   ^
orange_hunting/models_api.py:15: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__town__city',
        |   ^
orange_hunting/models_api.py:16: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__town__city__region',
        |   ^
orange_hunting/models_api.py:17: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__coverage_project',
        |   ^
orange_hunting/models_api.py:18: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__coverage_type',
        |   ^
orange_hunting/models_api.py:19: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__company',
        |   ^
orange_hunting/models_api.py:20: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'coverage__assignment_person',
        |   ^
orange_hunting/models_api.py:21: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'work',
        |   ^
orange_hunting/models_api.py:22: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'work__work_type',
        |   ^
orange_hunting/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/models_api.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
orange_hunting/models_api.py:5: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_hunting/models_api.py:10: [C0103(invalid-name), get_queryset_task] Argument name "qs" doesn't conform to snake_case naming style
orange_hunting/models_api.py:10: [C0111(missing-docstring), get_queryset_task] Missing function docstring
orange_hunting/models_api.py:36: [C0111(missing-docstring), get_queryset_task_viewset] Missing function docstring
orange_hunting/models_api.py:40: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_hunting.models
orange_hunting/models.py:97: [C0301(line-too-long), ] Line too long (118/100)
orange_hunting/models.py:98: [C0301(line-too-long), ] Line too long (111/100)
orange_hunting/models.py:102: [C0301(line-too-long), ] Line too long (102/100)
orange_hunting/models.py:103: [C0301(line-too-long), ] Line too long (103/100)
orange_hunting/models.py:104: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/models.py:113: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/models.py:114: [C0301(line-too-long), ] Line too long (108/100)
orange_hunting/models.py:116: [C0301(line-too-long), ] Line too long (116/100)
orange_hunting/models.py:117: [C0301(line-too-long), ] Line too long (118/100)
orange_hunting/models.py:118: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/models.py:119: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/models.py:120: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/models.py:129: [C0301(line-too-long), ] Line too long (120/100)
orange_hunting/models.py:148: [C0301(line-too-long), ] Line too long (118/100)
orange_hunting/models.py:150: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/models.py:184: [C0301(line-too-long), ] Line too long (111/100)
orange_hunting/models.py:206: [C0301(line-too-long), ] Line too long (111/100)
orange_hunting/models.py:229: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/models.py:231: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/models.py:232: [C0301(line-too-long), ] Line too long (109/100)
orange_hunting/models.py:237: [C0301(line-too-long), ] Line too long (122/100)
orange_hunting/models.py:280: [C0301(line-too-long), ] Line too long (109/100)
orange_hunting/models.py:296: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/models.py:298: [C0301(line-too-long), ] Line too long (107/100)
orange_hunting/models.py:301: [C0301(line-too-long), ] Line too long (108/100)
orange_hunting/models.py:304: [C0301(line-too-long), ] Line too long (101/100)
orange_hunting/models.py:305: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/models.py:308: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/models.py:326: [C0301(line-too-long), ] Line too long (103/100)
orange_hunting/models.py:329: [C0301(line-too-long), ] Line too long (117/100)
orange_hunting/models.py:346: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/models.py:347: [C0301(line-too-long), ] Line too long (103/100)
orange_hunting/models.py:349: [C0301(line-too-long), ] Line too long (107/100)
orange_hunting/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange_hunting/models.py:4: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_hunting/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_hunting/models.py:11: [C0111(missing-docstring), CoverageType] Missing class docstring
orange_hunting/models.py:22: [C0111(missing-docstring), CoverageType.Meta] Missing class docstring
orange_hunting/models.py:22: [R0903(too-few-public-methods), CoverageType.Meta] Too few public methods (0/2)
orange_hunting/models.py:11: [R0903(too-few-public-methods), CoverageType] Too few public methods (1/2)
orange_hunting/models.py:29: [C0111(missing-docstring), CoverageProject] Missing class docstring
orange_hunting/models.py:37: [C0111(missing-docstring), CoverageProject.Meta] Missing class docstring
orange_hunting/models.py:37: [R0903(too-few-public-methods), CoverageProject.Meta] Too few public methods (0/2)
orange_hunting/models.py:29: [R0903(too-few-public-methods), CoverageProject] Too few public methods (1/2)
orange_hunting/models.py:44: [C0111(missing-docstring), Company] Missing class docstring
orange_hunting/models.py:62: [C0111(missing-docstring), Company.Meta] Missing class docstring
orange_hunting/models.py:62: [R0903(too-few-public-methods), Company.Meta] Too few public methods (0/2)
orange_hunting/models.py:44: [R0903(too-few-public-methods), Company] Too few public methods (1/2)
orange_hunting/models.py:70: [C0111(missing-docstring), Person] Missing class docstring
orange_hunting/models.py:87: [C0111(missing-docstring), Person.Meta] Missing class docstring
orange_hunting/models.py:87: [R0903(too-few-public-methods), Person.Meta] Too few public methods (0/2)
orange_hunting/models.py:70: [R0903(too-few-public-methods), Person] Too few public methods (1/2)
orange_hunting/models.py:94: [C0111(missing-docstring), Coverage] Missing class docstring
orange_hunting/models.py:136: [C0111(missing-docstring), Coverage.Meta] Missing class docstring
orange_hunting/models.py:136: [R0903(too-few-public-methods), Coverage.Meta] Too few public methods (0/2)
orange_hunting/models.py:94: [R0903(too-few-public-methods), Coverage] Too few public methods (1/2)
orange_hunting/models.py:143: [C0111(missing-docstring), SupervisionContract] Missing class docstring
orange_hunting/models.py:155: [C0111(missing-docstring), SupervisionContract.Meta] Missing class docstring
orange_hunting/models.py:155: [R0903(too-few-public-methods), SupervisionContract.Meta] Too few public methods (0/2)
orange_hunting/models.py:143: [R0903(too-few-public-methods), SupervisionContract] Too few public methods (1/2)
orange_hunting/models.py:162: [C0111(missing-docstring), WorkType] Missing class docstring
orange_hunting/models.py:172: [C0111(missing-docstring), WorkType.Meta] Missing class docstring
orange_hunting/models.py:172: [R0903(too-few-public-methods), WorkType.Meta] Too few public methods (0/2)
orange_hunting/models.py:162: [R0903(too-few-public-methods), WorkType] Too few public methods (1/2)
orange_hunting/models.py:179: [C0111(missing-docstring), State] Missing class docstring
orange_hunting/models.py:195: [C0111(missing-docstring), State.Meta] Missing class docstring
orange_hunting/models.py:195: [R0903(too-few-public-methods), State.Meta] Too few public methods (0/2)
orange_hunting/models.py:179: [R0903(too-few-public-methods), State] Too few public methods (1/2)
orange_hunting/models.py:202: [C0111(missing-docstring), Work] Missing class docstring
orange_hunting/models.py:215: [C0111(missing-docstring), Work.Meta] Missing class docstring
orange_hunting/models.py:215: [R0903(too-few-public-methods), Work.Meta] Too few public methods (0/2)
orange_hunting/models.py:202: [R0903(too-few-public-methods), Work] Too few public methods (1/2)
orange_hunting/models.py:222: [C0111(missing-docstring), Task] Missing class docstring
orange_hunting/models.py:244: [C0111(missing-docstring), Task.from_string] Missing method docstring
orange_hunting/models.py:244: [W0613(unused-argument), Task.from_string] Unused argument 'kwargs'
orange_hunting/models.py:248: [C0111(missing-docstring), Task.get_external_url_template] Missing method docstring
orange_hunting/models.py:252: [C0103(invalid-name), Task.get_external_url] Argument name "id" doesn't conform to snake_case naming style
orange_hunting/models.py:252: [C0111(missing-docstring), Task.get_external_url] Missing method docstring
orange_hunting/models.py:252: [W0622(redefined-builtin), Task.get_external_url] Redefining built-in 'id'
orange_hunting/models.py:256: [C0111(missing-docstring), Task.external_url] Missing method docstring
orange_hunting/models.py:260: [C0111(missing-docstring), Task.get_new_external_instance_url] Missing method docstring
orange_hunting/models.py:264: [C0111(missing-docstring), Task.new_external_instance_url] Missing method docstring
orange_hunting/models.py:267: [C0111(missing-docstring), Task.Meta] Missing class docstring
orange_hunting/models.py:267: [R0903(too-few-public-methods), Task.Meta] Too few public methods (0/2)
orange_hunting/models.py:274: [C0111(missing-docstring), StateCondition] Missing class docstring
orange_hunting/models.py:286: [C0111(missing-docstring), StateCondition.Meta] Missing class docstring
orange_hunting/models.py:286: [R0903(too-few-public-methods), StateCondition.Meta] Too few public methods (0/2)
orange_hunting/models.py:274: [R0903(too-few-public-methods), StateCondition] Too few public methods (1/2)
orange_hunting/models.py:293: [C0111(missing-docstring), Supervision] Missing class docstring
orange_hunting/models.py:313: [C0111(missing-docstring), Supervision.Meta] Missing class docstring
orange_hunting/models.py:313: [R0903(too-few-public-methods), Supervision.Meta] Too few public methods (0/2)
orange_hunting/models.py:293: [R0903(too-few-public-methods), Supervision] Too few public methods (1/2)
orange_hunting/models.py:320: [C0111(missing-docstring), Visit] Missing class docstring
orange_hunting/models.py:335: [C0111(missing-docstring), Visit.Meta] Missing class docstring
orange_hunting/models.py:335: [R0903(too-few-public-methods), Visit.Meta] Too few public methods (0/2)
orange_hunting/models.py:320: [R0903(too-few-public-methods), Visit] Too few public methods (1/2)
orange_hunting/models.py:343: [C0111(missing-docstring), LastVisit] Missing class docstring
orange_hunting/models.py:358: [C0111(missing-docstring), LastVisit.Meta] Missing class docstring
orange_hunting/models.py:358: [R0903(too-few-public-methods), LastVisit.Meta] Too few public methods (0/2)
orange_hunting/models.py:343: [R0903(too-few-public-methods), LastVisit] Too few public methods (1/2)
************* Module orange_hunting.migrations.0001_initial
orange_hunting/migrations/0001_initial.py:19: [C0301(line-too-long), ] Line too long (102/100)
orange_hunting/migrations/0001_initial.py:20: [C0301(line-too-long), ] Line too long (103/100)
orange_hunting/migrations/0001_initial.py:21: [C0301(line-too-long), ] Line too long (108/100)
orange_hunting/migrations/0001_initial.py:23: [C0301(line-too-long), ] Line too long (102/100)
orange_hunting/migrations/0001_initial.py:26: [C0301(line-too-long), ] Line too long (109/100)
orange_hunting/migrations/0001_initial.py:30: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:42: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:45: [C0301(line-too-long), ] Line too long (118/100)
orange_hunting/migrations/0001_initial.py:46: [C0301(line-too-long), ] Line too long (119/100)
orange_hunting/migrations/0001_initial.py:48: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/migrations/0001_initial.py:49: [C0301(line-too-long), ] Line too long (108/100)
orange_hunting/migrations/0001_initial.py:50: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/migrations/0001_initial.py:52: [C0301(line-too-long), ] Line too long (122/100)
orange_hunting/migrations/0001_initial.py:53: [C0301(line-too-long), ] Line too long (132/100)
orange_hunting/migrations/0001_initial.py:54: [C0301(line-too-long), ] Line too long (134/100)
orange_hunting/migrations/0001_initial.py:55: [C0301(line-too-long), ] Line too long (120/100)
orange_hunting/migrations/0001_initial.py:56: [C0301(line-too-long), ] Line too long (122/100)
orange_hunting/migrations/0001_initial.py:58: [C0301(line-too-long), ] Line too long (103/100)
orange_hunting/migrations/0001_initial.py:59: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:60: [C0301(line-too-long), ] Line too long (150/100)
orange_hunting/migrations/0001_initial.py:61: [C0301(line-too-long), ] Line too long (136/100)
orange_hunting/migrations/0001_initial.py:62: [C0301(line-too-long), ] Line too long (116/100)
orange_hunting/migrations/0001_initial.py:75: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:76: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:88: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/migrations/0001_initial.py:89: [C0301(line-too-long), ] Line too long (110/100)
orange_hunting/migrations/0001_initial.py:90: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/migrations/0001_initial.py:91: [C0301(line-too-long), ] Line too long (108/100)
orange_hunting/migrations/0001_initial.py:104: [C0301(line-too-long), ] Line too long (101/100)
orange_hunting/migrations/0001_initial.py:118: [C0301(line-too-long), ] Line too long (102/100)
orange_hunting/migrations/0001_initial.py:119: [C0301(line-too-long), ] Line too long (113/100)
orange_hunting/migrations/0001_initial.py:120: [C0301(line-too-long), ] Line too long (110/100)
orange_hunting/migrations/0001_initial.py:121: [C0301(line-too-long), ] Line too long (111/100)
orange_hunting/migrations/0001_initial.py:122: [C0301(line-too-long), ] Line too long (109/100)
orange_hunting/migrations/0001_initial.py:134: [C0301(line-too-long), ] Line too long (105/100)
orange_hunting/migrations/0001_initial.py:142: [C0301(line-too-long), ] Line too long (113/100)
orange_hunting/migrations/0001_initial.py:154: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:155: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:156: [C0301(line-too-long), ] Line too long (110/100)
orange_hunting/migrations/0001_initial.py:157: [C0301(line-too-long), ] Line too long (108/100)
orange_hunting/migrations/0001_initial.py:172: [C0301(line-too-long), ] Line too long (123/100)
orange_hunting/migrations/0001_initial.py:173: [C0301(line-too-long), ] Line too long (104/100)
orange_hunting/migrations/0001_initial.py:175: [C0301(line-too-long), ] Line too long (124/100)
orange_hunting/migrations/0001_initial.py:176: [C0301(line-too-long), ] Line too long (105/100)
orange_hunting/migrations/0001_initial.py:177: [C0301(line-too-long), ] Line too long (115/100)
orange_hunting/migrations/0001_initial.py:178: [C0301(line-too-long), ] Line too long (117/100)
orange_hunting/migrations/0001_initial.py:179: [C0301(line-too-long), ] Line too long (128/100)
orange_hunting/migrations/0001_initial.py:180: [C0301(line-too-long), ] Line too long (110/100)
orange_hunting/migrations/0001_initial.py:181: [C0301(line-too-long), ] Line too long (110/100)
orange_hunting/migrations/0001_initial.py:182: [C0301(line-too-long), ] Line too long (128/100)
orange_hunting/migrations/0001_initial.py:194: [C0301(line-too-long), ] Line too long (101/100)
orange_hunting/migrations/0001_initial.py:195: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/migrations/0001_initial.py:197: [C0301(line-too-long), ] Line too long (122/100)
orange_hunting/migrations/0001_initial.py:209: [C0301(line-too-long), ] Line too long (103/100)
orange_hunting/migrations/0001_initial.py:210: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/migrations/0001_initial.py:212: [C0301(line-too-long), ] Line too long (128/100)
orange_hunting/migrations/0001_initial.py:213: [C0301(line-too-long), ] Line too long (110/100)
orange_hunting/migrations/0001_initial.py:225: [C0301(line-too-long), ] Line too long (101/100)
orange_hunting/migrations/0001_initial.py:239: [C0301(line-too-long), ] Line too long (105/100)
orange_hunting/migrations/0001_initial.py:242: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/migrations/0001_initial.py:255: [C0301(line-too-long), ] Line too long (105/100)
orange_hunting/migrations/0001_initial.py:256: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/migrations/0001_initial.py:257: [C0301(line-too-long), ] Line too long (106/100)
orange_hunting/migrations/0001_initial.py:258: [C0301(line-too-long), ] Line too long (112/100)
orange_hunting/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_hunting/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_hunting/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_hunting/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_hunting.migrations.0002_auto_20180622_1802
orange_hunting/migrations/0002_auto_20180622_1802.py:17: [C0301(line-too-long), ] Line too long (140/100)
orange_hunting/migrations/0002_auto_20180622_1802.py:1: [C0103(invalid-name), ] Module name "0002_auto_20180622_1802" doesn't conform to snake_case naming style
orange_hunting/migrations/0002_auto_20180622_1802.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_hunting/migrations/0002_auto_20180622_1802.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_hunting/migrations/0002_auto_20180622_1802.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_hunting/migrations/0002_auto_20180622_1802.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.urls
projects/urls.py:31: [C0301(line-too-long), ] Line too long (124/100)
projects/urls.py:32: [C0301(line-too-long), ] Line too long (113/100)
projects/urls.py:34: [C0301(line-too-long), ] Line too long (106/100)
projects/urls.py:35: [C0301(line-too-long), ] Line too long (104/100)
projects/urls.py:36: [C0301(line-too-long), ] Line too long (134/100)
projects/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/urls.py:4: [E0401(import-error), ] Unable to import 'django.conf.urls'
projects/urls.py:6: [E0401(import-error), ] Unable to import 'rest_framework_bulk.routes'
projects/urls.py:22: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
projects/urls.py:28: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
projects/urls.py:29: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
projects/urls.py:19: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
************* Module projects.apps
projects/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
projects/apps.py:6: [C0111(missing-docstring), ProjectsConfig] Missing class docstring
projects/apps.py:10: [C0111(missing-docstring), ProjectsConfig.ready] Missing method docstring
projects/apps.py:12: [W0611(unused-import), ProjectsConfig.ready] Unused lookups imported from projects.fields.json_dynamic
projects/apps.py:10: [R0201(no-self-use), ProjectsConfig.ready] Method could be a function
projects/apps.py:6: [R0903(too-few-public-methods), ProjectsConfig] Too few public methods (1/2)
************* Module projects.views
projects/views.py:193: [W0511(fixme), ] TODO: we are NOT deleting any uploaded file for a while, should be useful for debugging.
projects/views.py:1090: [W0511(fixme), ] TODO: Decide if keep default to request.user.pk
projects/views.py:1103: [W0511(fixme), ] TODO: moved 'self.gantt.calculate_planned_duration()' to avoid extra query, but this should be improved
projects/views.py:1864: [W0511(fixme), ] TODO: we are NOT deleting any uploaded file for a while, should be useful for debugging.
projects/views.py:44: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:48: [C0301(line-too-long), ] Line too long (104/100)
projects/views.py:140: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:191: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:221: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:247: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:320: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:330: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:358: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:378: [C0301(line-too-long), ] Line too long (130/100)
projects/views.py:390: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:409: [C0301(line-too-long), ] Line too long (117/100)
projects/views.py:443: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:444: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:446: [C0301(line-too-long), ] Line too long (200/100)
projects/views.py:463: [C0330(bad-continuation), ] Wrong hanging indentation (remove 32 spaces).
                                                "job": link.source_task.job.name,
                |                               ^
projects/views.py:464: [C0330(bad-continuation), ] Wrong hanging indentation (remove 32 spaces).
                                                "properties": list(link.properties.values_list("label", flat=True)),
                |                               ^
projects/views.py:464: [C0301(line-too-long), ] Line too long (116/100)
projects/views.py:465: [C0330(bad-continuation), ] Wrong hanging indentation.
                                            }
            |   |                           ^
projects/views.py:473: [C0330(bad-continuation), ] Wrong hanging indentation (remove 32 spaces).
                                                "job": link.target_task.job.name,
                |                               ^
projects/views.py:474: [C0330(bad-continuation), ] Wrong hanging indentation (remove 32 spaces).
                                                "properties": list(link.properties.values_list("label", flat=True)),
                |                               ^
projects/views.py:474: [C0301(line-too-long), ] Line too long (116/100)
projects/views.py:475: [C0330(bad-continuation), ] Wrong hanging indentation.
                                            }
            |   |                           ^
projects/views.py:479: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:480: [C0301(line-too-long), ] Line too long (127/100)
projects/views.py:482: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:493: [C0301(line-too-long), ] Line too long (114/100)
projects/views.py:494: [C0301(line-too-long), ] Line too long (108/100)
projects/views.py:495: [C0301(line-too-long), ] Line too long (124/100)
projects/views.py:496: [C0330(bad-continuation), ] Wrong continued indentation (add 6 spaces).
                                                                                                        flat=True) or [],
                                                                                                        ^     |
projects/views.py:496: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:497: [C0301(line-too-long), ] Line too long (124/100)
projects/views.py:498: [C0330(bad-continuation), ] Wrong continued indentation (add 6 spaces).
                                                                                                        flat=True) or [],
                                                                                                        ^     |
projects/views.py:498: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:500: [C0301(line-too-long), ] Line too long (116/100)
projects/views.py:501: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:505: [C0301(line-too-long), ] Line too long (110/100)
projects/views.py:506: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:577: [C0301(line-too-long), ] Line too long (166/100)
projects/views.py:581: [C0301(line-too-long), ] Line too long (117/100)
projects/views.py:582: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:583: [C0301(line-too-long), ] Line too long (110/100)
projects/views.py:584: [C0301(line-too-long), ] Line too long (114/100)
projects/views.py:590: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                .order_by('workflow_milestone__index', 'workflow_milestone__name')
            |   ^
projects/views.py:591: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                .exclude(job_current_history__isnull=True)
            |   ^
projects/views.py:592: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                .values('workflow_milestone', 'workflow_milestone__name')
            |   ^
projects/views.py:593: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                .annotate(count=Count('workflow_milestone'))
            |   ^
projects/views.py:645: [C0301(line-too-long), ] Line too long (145/100)
projects/views.py:647: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:651: [C0301(line-too-long), ] Line too long (136/100)
projects/views.py:709: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:715: [C0326(bad-whitespace), ] No space allowed before :
        if len(years) > 0 :
                          ^
projects/views.py:739: [C0301(line-too-long), ] Line too long (122/100)
projects/views.py:741: [C0301(line-too-long), ] Line too long (116/100)
projects/views.py:759: [C0301(line-too-long), ] Line too long (104/100)
projects/views.py:760: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:761: [C0301(line-too-long), ] Line too long (104/100)
projects/views.py:778: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:806: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:807: [C0301(line-too-long), ] Line too long (111/100)
projects/views.py:809: [C0301(line-too-long), ] Line too long (115/100)
projects/views.py:846: [C0301(line-too-long), ] Line too long (115/100)
projects/views.py:864: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:867: [C0301(line-too-long), ] Line too long (125/100)
projects/views.py:869: [C0301(line-too-long), ] Line too long (127/100)
projects/views.py:876: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:883: [C0301(line-too-long), ] Line too long (103/100)
projects/views.py:892: [C0301(line-too-long), ] Line too long (118/100)
projects/views.py:894: [C0301(line-too-long), ] Line too long (115/100)
projects/views.py:897: [C0301(line-too-long), ] Line too long (117/100)
projects/views.py:903: [C0301(line-too-long), ] Line too long (107/100)
projects/views.py:922: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                        for field_error in errors
                    |   ^
projects/views.py:943: [C0301(line-too-long), ] Line too long (118/100)
projects/views.py:955: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:959: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:982: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:996: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1011: [C0301(line-too-long), ] Line too long (115/100)
projects/views.py:1017: [C0301(line-too-long), ] Line too long (104/100)
projects/views.py:1030: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:1045: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1050: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:1052: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1071: [C0301(line-too-long), ] Line too long (127/100)
projects/views.py:1083: [C0301(line-too-long), ] Line too long (126/100)
projects/views.py:1103: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:1105: [C0301(line-too-long), ] Line too long (114/100)
projects/views.py:1110: [C0301(line-too-long), ] Line too long (111/100)
projects/views.py:1112: [C0301(line-too-long), ] Line too long (113/100)
projects/views.py:1127: [C0301(line-too-long), ] Line too long (108/100)
projects/views.py:1136: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:1153: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:1170: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1183: [C0301(line-too-long), ] Line too long (115/100)
projects/views.py:1189: [C0301(line-too-long), ] Line too long (104/100)
projects/views.py:1227: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:1235: [C0301(line-too-long), ] Line too long (131/100)
projects/views.py:1240: [C0301(line-too-long), ] Line too long (145/100)
projects/views.py:1242: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:1354: [C0301(line-too-long), ] Line too long (108/100)
projects/views.py:1357: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:1382: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:1418: [C0301(line-too-long), ] Line too long (119/100)
projects/views.py:1419: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:1447: [C0301(line-too-long), ] Line too long (103/100)
projects/views.py:1450: [C0301(line-too-long), ] Line too long (118/100)
projects/views.py:1451: [C0301(line-too-long), ] Line too long (119/100)
projects/views.py:1469: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:1480: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1481: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:1488: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1489: [C0301(line-too-long), ] Line too long (107/100)
projects/views.py:1503: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:1648: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:1670: [C0301(line-too-long), ] Line too long (103/100)
projects/views.py:1673: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:1679: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:1691: [C0301(line-too-long), ] Line too long (123/100)
projects/views.py:1692: [C0301(line-too-long), ] Line too long (133/100)
projects/views.py:1706: [C0301(line-too-long), ] Line too long (128/100)
projects/views.py:1712: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1724: [C0301(line-too-long), ] Line too long (123/100)
projects/views.py:1725: [C0301(line-too-long), ] Line too long (133/100)
projects/views.py:1733: [C0301(line-too-long), ] Line too long (125/100)
projects/views.py:1734: [C0301(line-too-long), ] Line too long (110/100)
projects/views.py:1737: [C0301(line-too-long), ] Line too long (124/100)
projects/views.py:1742: [C0301(line-too-long), ] Line too long (158/100)
projects/views.py:1744: [C0301(line-too-long), ] Line too long (116/100)
projects/views.py:1745: [C0301(line-too-long), ] Line too long (118/100)
projects/views.py:1746: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:1747: [C0301(line-too-long), ] Line too long (130/100)
projects/views.py:1748: [C0301(line-too-long), ] Line too long (139/100)
projects/views.py:1758: [C0330(bad-continuation), ] Wrong continued indentation (remove 4 spaces).
                authentication_classes=[QueryStringTokenAuthentication] + api_settings.DEFAULT_AUTHENTICATION_CLASSES)
            |   ^
projects/views.py:1758: [C0301(line-too-long), ] Line too long (118/100)
projects/views.py:1800: [C0301(line-too-long), ] Line too long (104/100)
projects/views.py:1813: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:1827: [C0301(line-too-long), ] Line too long (110/100)
projects/views.py:1837: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:1855: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:1862: [C0301(line-too-long), ] Line too long (116/100)
projects/views.py:1890: [C0301(line-too-long), ] Line too long (113/100)
projects/views.py:1915: [C0301(line-too-long), ] Line too long (122/100)
projects/views.py:1928: [C0301(line-too-long), ] Line too long (107/100)
projects/views.py:1948: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:1959: [C0301(line-too-long), ] Line too long (119/100)
projects/views.py:1961: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:1973: [C0301(line-too-long), ] Line too long (103/100)
projects/views.py:1992: [C0301(line-too-long), ] Line too long (119/100)
projects/views.py:2037: [C0301(line-too-long), ] Line too long (106/100)
projects/views.py:2039: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2066: [C0301(line-too-long), ] Line too long (111/100)
projects/views.py:2098: [C0301(line-too-long), ] Line too long (103/100)
projects/views.py:2100: [C0301(line-too-long), ] Line too long (107/100)
projects/views.py:2149: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:2150: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:2167: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2181: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2212: [C0301(line-too-long), ] Line too long (113/100)
projects/views.py:2234: [C0301(line-too-long), ] Line too long (125/100)
projects/views.py:2235: [C0330(bad-continuation), ] Wrong continued indentation (add 7 spaces).
                                                 partial=True)
                                                 ^      |
projects/views.py:2257: [C0301(line-too-long), ] Line too long (113/100)
projects/views.py:2290: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2351: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                sum=Coalesce(Sum("planned_cost"), 0),
            |   ^
projects/views.py:2352: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                avg=Coalesce(Avg("planned_cost"), 0),
            |   ^
projects/views.py:2353: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                min=Coalesce(Min("planned_cost"), 0),
            |   ^
projects/views.py:2354: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                max=Coalesce(Max("planned_cost"), 0),
            |   ^
projects/views.py:2357: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                task__in=tasks,
            |   ^
projects/views.py:2358: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                status__in=('approved', 'assigned'),
            |   ^
projects/views.py:2367: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                task__in=tasks,
            |   ^
projects/views.py:2368: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                order_task__order__order_origin__isnull=True
            |   ^
projects/views.py:2413: [C0301(line-too-long), ] Line too long (144/100)
projects/views.py:2418: [C0301(line-too-long), ] Line too long (145/100)
projects/views.py:2421: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2427: [C0301(line-too-long), ] Line too long (145/100)
projects/views.py:2430: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2458: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:2467: [C0301(line-too-long), ] Line too long (108/100)
projects/views.py:2468: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:2469: [C0301(line-too-long), ] Line too long (102/100)
projects/views.py:2470: [C0301(line-too-long), ] Line too long (121/100)
projects/views.py:2471: [C0301(line-too-long), ] Line too long (119/100)
projects/views.py:2481: [C0301(line-too-long), ] Line too long (114/100)
projects/views.py:2507: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:2541: [C0301(line-too-long), ] Line too long (120/100)
projects/views.py:2542: [C0330(bad-continuation), ] Wrong hanging indentation (add 2 spaces).
                            **data
                            ^ |
projects/views.py:2543: [C0330(bad-continuation), ] Wrong hanging indentation.
                        )
                        ^ |   |
projects/views.py:2546: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:2560: [C0301(line-too-long), ] Line too long (117/100)
projects/views.py:2575: [C0301(line-too-long), ] Line too long (109/100)
projects/views.py:2577: [C0301(line-too-long), ] Line too long (128/100)
projects/views.py:2587: [C0301(line-too-long), ] Line too long (120/100)
projects/views.py:2602: [C0301(line-too-long), ] Line too long (107/100)
projects/views.py:2620: [C0301(line-too-long), ] Line too long (108/100)
projects/views.py:2636: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:2648: [C0301(line-too-long), ] Line too long (113/100)
projects/views.py:2667: [C0301(line-too-long), ] Line too long (114/100)
projects/views.py:2668: [C0301(line-too-long), ] Line too long (112/100)
projects/views.py:2689: [C0325(superfluous-parens), ] Unnecessary parens after 'not' keyword
projects/views.py:2743: [C0301(line-too-long), ] Line too long (117/100)
projects/views.py:2788: [C0301(line-too-long), ] Line too long (110/100)
projects/views.py:2789: [C0301(line-too-long), ] Line too long (108/100)
projects/views.py:2790: [C0301(line-too-long), ] Line too long (101/100)
projects/views.py:2830: [C0301(line-too-long), ] Line too long (105/100)
projects/views.py:2831: [C0301(line-too-long), ] Line too long (107/100)
projects/views.py:2860: [C0301(line-too-long), ] Line too long (114/100)
projects/views.py:1: [C0302(too-many-lines), ] Too many lines in module (2863/1000)
projects/views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/views.py:10: [E0401(import-error), ] Unable to import 'django.core.files'
projects/views.py:11: [E0401(import-error), ] Unable to import 'django.utils.timezone'
projects/views.py:12: [E0401(import-error), ] Unable to import 'django'
projects/views.py:13: [E0401(import-error), ] Unable to import 'django.contrib.postgres.aggregates'
projects/views.py:14: [E0401(import-error), ] Unable to import 'django.db.models'
projects/views.py:15: [E0401(import-error), ] Unable to import 'django.db.models.constants'
projects/views.py:16: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/views.py:17: [E0401(import-error), ] Unable to import 'django.http'
projects/views.py:18: [E0401(import-error), ] Unable to import 'django.utils.dateparse'
projects/views.py:19: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/views.py:20: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
projects/views.py:21: [E0401(import-error), ] Unable to import 'rest_framework'
projects/views.py:22: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
projects/views.py:30: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/views.py:31: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/views.py:32: [E0401(import-error), ] Unable to import 'rest_framework.parsers'
projects/views.py:33: [E0401(import-error), ] Unable to import 'rest_framework.permissions'
projects/views.py:34: [E0401(import-error), ] Unable to import 'rest_framework.renderers'
projects/views.py:35: [E0401(import-error), ] Unable to import 'rest_framework.response'
projects/views.py:36: [E0401(import-error), ] Unable to import 'rest_framework.schemas'
projects/views.py:37: [E0401(import-error), ] Unable to import 'rest_framework.schemas.generators'
projects/views.py:38: [E0401(import-error), ] Unable to import 'rest_framework.settings'
projects/views.py:39: [E0401(import-error), ] Unable to import 'rest_framework.views'
projects/views.py:40: [E0401(import-error), ] Unable to import 'rest_framework_swagger.renderers'
projects/views.py:41: [E0611(no-name-in-module), ] No name 'fields' in module 'url_filter'
projects/views.py:41: [E0401(import-error), ] Unable to import 'url_filter.fields'
projects/views.py:42: [E0611(no-name-in-module), ] No name 'filters' in module 'url_filter'
projects/views.py:42: [E0401(import-error), ] Unable to import 'url_filter.filters'
projects/views.py:45: [E0611(no-name-in-module), ] No name 'DelegationSerializer' in module 'orange_ordering.serializers'
projects/views.py:46: [E0611(no-name-in-module), ] No name 'DelegationViewSet' in module 'orange_ordering.views'
projects/views.py:51: [W0401(wildcard-import), ] Wildcard import projects.models
projects/views.py:61: [W0401(wildcard-import), ] Wildcard import projects.serializers
projects/views.py:96: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
projects/views.py:106: [C0111(missing-docstring), M2MEndpointEnumerator] Missing class docstring
projects/views.py:133: [C0111(missing-docstring), M2MEndpointEnumerator.should_include_endpoint] Missing method docstring
projects/views.py:139: [C0111(missing-docstring), M2MEndpointEnumerator.get_api_endpoints] Missing method docstring
projects/views.py:151: [C0111(missing-docstring), M2MSchemaGenerator] Missing class docstring
projects/views.py:151: [R0903(too-few-public-methods), M2MSchemaGenerator] Too few public methods (0/2)
projects/views.py:175: [W0613(unused-argument), import_job_task_excel] Unused argument 'args'
projects/views.py:175: [W0613(unused-argument), import_job_task_excel] Unused argument 'kwargs'
projects/views.py:203: [C0111(missing-docstring), AggregatedCoreFieldsFilterSetMixin] Missing class docstring
projects/views.py:203: [R0205(useless-object-inheritance), AggregatedCoreFieldsFilterSetMixin] Class 'AggregatedCoreFieldsFilterSetMixin' inherits from object, can be safely removed from bases in python3
projects/views.py:203: [R0903(too-few-public-methods), AggregatedCoreFieldsFilterSetMixin] Too few public methods (0/2)
projects/views.py:212: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter] Missing class docstring
projects/views.py:213: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_by_job_and_tasks] Missing method docstring
projects/views.py:220: [C0103(invalid-name), CustomDynamicFieldsInstancesNamesFilter.filter_by_job_and_tasks] Variable name "f" doesn't conform to snake_case naming style
projects/views.py:246: [C0103(invalid-name), CustomDynamicFieldsInstancesNamesFilter.filter_by_job_and_tasks_subquery] Variable name "f" doesn't conform to snake_case naming style
projects/views.py:260: [C0103(invalid-name), CustomDynamicFieldsInstancesNamesFilter.filter_by_job_and_tasks_subquery] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:269: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_technical_name_exact_for_django] Missing method docstring
projects/views.py:274: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_technical_name_unaccent_exact_for_django] Missing method docstring
projects/views.py:279: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_technical_name_icontains_for_django] Missing method docstring
projects/views.py:284: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_technical_name_unaccent_icontains_for_django] Missing method docstring
projects/views.py:289: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_name_exact_for_django] Missing method docstring
projects/views.py:294: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_name_unaccent_exact_for_django] Missing method docstring
projects/views.py:299: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_name_icontains_for_django] Missing method docstring
projects/views.py:304: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_name_unaccent_icontains_for_django] Missing method docstring
projects/views.py:309: [C0111(missing-docstring), CustomDynamicFieldsInstancesNamesFilter.filter_value_icontains_for_django] Missing method docstring
projects/views.py:314: [C0111(missing-docstring), CustomProjectsFieldFilter] Missing class docstring
projects/views.py:316: [C0111(missing-docstring), CustomProjectsFieldFilter.filter_in_for_django] Missing method docstring
projects/views.py:319: [C0103(invalid-name), CustomProjectsFieldFilter.filter_in_for_django] Variable name "op" doesn't conform to snake_case naming style
projects/views.py:321: [C0103(invalid-name), CustomProjectsFieldFilter.filter_in_for_django] Variable name "v" doesn't conform to snake_case naming style
projects/views.py:314: [R0903(too-few-public-methods), CustomProjectsFieldFilter] Too few public methods (1/2)
projects/views.py:326: [C0111(missing-docstring), AllJobLinksFilter] Missing class docstring
projects/views.py:327: [C0111(missing-docstring), AllJobLinksFilter.filter_all_job_links] Missing method docstring
projects/views.py:329: [C0103(invalid-name), AllJobLinksFilter.filter_all_job_links] Variable name "f" doesn't conform to snake_case naming style
projects/views.py:337: [C0111(missing-docstring), AllJobLinksFilter.filter_exact_for_django] Missing method docstring
projects/views.py:342: [C0111(missing-docstring), AllJobLinksFilter.filter_in_for_django] Missing method docstring
projects/views.py:346: [C0111(missing-docstring), JobFilterSet] Missing class docstring
projects/views.py:356: [C0111(missing-docstring), JobFilterSet.Meta] Missing class docstring
projects/views.py:357: [E0601(used-before-assignment), JobFilterSet.Meta] Using variable 'JobViewSet' before assignment
projects/views.py:356: [R0903(too-few-public-methods), JobFilterSet.Meta] Too few public methods (0/2)
projects/views.py:346: [R0903(too-few-public-methods), JobFilterSet] Too few public methods (0/2)
projects/views.py:361: [C0111(missing-docstring), Week] Missing class docstring
projects/views.py:361: [R0903(too-few-public-methods), Week] Too few public methods (0/2)
projects/views.py:367: [C0111(missing-docstring), Year] Missing class docstring
projects/views.py:367: [R0903(too-few-public-methods), Year] Too few public methods (0/2)
projects/views.py:384: [C0103(invalid-name), JobViewSet.tasks] Argument name "pk" doesn't conform to snake_case naming style
projects/views.py:384: [W1113(keyword-arg-before-vararg), JobViewSet.tasks] Keyword argument before variable positional arguments list in the definition of tasks function
projects/views.py:384: [W0613(unused-argument), JobViewSet.tasks] Unused argument 'pk'
projects/views.py:384: [W0613(unused-argument), JobViewSet.tasks] Unused argument 'args'
projects/views.py:384: [W0613(unused-argument), JobViewSet.tasks] Unused argument 'kwargs'
projects/views.py:407: [C0111(missing-docstring), JobViewSet.get_date_end] Missing method docstring
projects/views.py:408: [R1705(no-else-return), JobViewSet.get_date_end] Unnecessary "else" after "return"
projects/views.py:413: [C0111(missing-docstring), JobViewSet.dhtmlx_serialized_links] Missing method docstring
projects/views.py:413: [R0201(no-self-use), JobViewSet.dhtmlx_serialized_links] Method could be a function
projects/views.py:433: [C0111(missing-docstring), JobViewSet.is_valid] Missing method docstring
projects/views.py:433: [R0201(no-self-use), JobViewSet.is_valid] Method could be a function
projects/views.py:437: [C0103(invalid-name), JobViewSet.gantt] Argument name "pk" doesn't conform to snake_case naming style
projects/views.py:437: [W1113(keyword-arg-before-vararg), JobViewSet.gantt] Keyword argument before variable positional arguments list in the definition of gantt function
projects/views.py:437: [R0914(too-many-locals), JobViewSet.gantt] Too many local variables (25/15)
projects/views.py:479: [E0602(undefined-variable), JobViewSet.gantt] Undefined variable 'TasksDependencySerializer'
projects/views.py:437: [W0613(unused-argument), JobViewSet.gantt] Unused argument 'pk'
projects/views.py:437: [W0613(unused-argument), JobViewSet.gantt] Unused argument 'args'
projects/views.py:437: [W0613(unused-argument), JobViewSet.gantt] Unused argument 'kwargs'
projects/views.py:541: [C0103(invalid-name), JobViewSet.clone] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:550: [W0703(broad-except), JobViewSet.clone] Catching too general exception Exception
projects/views.py:550: [C0103(invalid-name), JobViewSet.clone] Variable name "e" doesn't conform to snake_case naming style
projects/views.py:538: [W0613(unused-argument), JobViewSet.clone] Unused argument 'request'
projects/views.py:538: [W0613(unused-argument), JobViewSet.clone] Unused argument 'args'
projects/views.py:538: [W0613(unused-argument), JobViewSet.clone] Unused argument 'kwargs'
projects/views.py:562: [W0613(unused-argument), JobViewSet.count] Unused argument 'request'
projects/views.py:562: [W0613(unused-argument), JobViewSet.count] Unused argument 'args'
projects/views.py:562: [W0613(unused-argument), JobViewSet.count] Unused argument 'kwargs'
projects/views.py:571: [W0613(unused-argument), JobViewSet.milestone_count] Unused argument 'request'
projects/views.py:571: [W0613(unused-argument), JobViewSet.milestone_count] Unused argument 'args'
projects/views.py:571: [W0613(unused-argument), JobViewSet.milestone_count] Unused argument 'kwargs'
projects/views.py:597: [W0613(unused-argument), JobViewSet.type_count] Unused argument 'args'
projects/views.py:597: [W0613(unused-argument), JobViewSet.type_count] Unused argument 'kwargs'
projects/views.py:611: [C0111(missing-docstring), JobViewSet.type_count_as_excel] Missing method docstring
projects/views.py:611: [W0613(unused-argument), JobViewSet.type_count_as_excel] Unused argument 'args'
projects/views.py:611: [W0613(unused-argument), JobViewSet.type_count_as_excel] Unused argument 'kwargs'
projects/views.py:646: [W0613(unused-argument), JobViewSet.as_excel] Unused argument 'args'
projects/views.py:646: [W0613(unused-argument), JobViewSet.as_excel] Unused argument 'kwargs'
projects/views.py:671: [R0914(too-many-locals), JobViewSet.end_date_chart] Too many local variables (27/15)
projects/views.py:686: [R1706(consider-using-ternary), JobViewSet.end_date_chart] Consider using ternary (start_date.isocalendar()[1] if date_start else False)
projects/views.py:687: [R1706(consider-using-ternary), JobViewSet.end_date_chart] Consider using ternary (start_date.year if date_start else False)
projects/views.py:691: [R1706(consider-using-ternary), JobViewSet.end_date_chart] Consider using ternary (end_date.isocalendar()[1] if date_end else False)
projects/views.py:692: [R1706(consider-using-ternary), JobViewSet.end_date_chart] Consider using ternary (end_date.year if date_end else False)
projects/views.py:699: [C0103(invalid-name), JobViewSet.end_date_chart] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:715: [C1801(len-as-condition), JobViewSet.end_date_chart] Do not use `len(SEQUENCE)` to determine if a sequence is empty
projects/views.py:722: [R1706(consider-using-ternary), JobViewSet.end_date_chart] Consider using ternary (start_year if start_year < years[0] else years[0])
projects/views.py:723: [R1706(consider-using-ternary), JobViewSet.end_date_chart] Consider using ternary (end_year if end_year > years[-1] else years[-1])
projects/views.py:739: [R0916(too-many-boolean-expressions), JobViewSet.end_date_chart] Too many boolean expressions in if statement (10/5)
projects/views.py:671: [W0613(unused-argument), JobViewSet.end_date_chart] Unused argument 'args'
projects/views.py:671: [W0613(unused-argument), JobViewSet.end_date_chart] Unused argument 'kwargs'
projects/views.py:753: [R0914(too-many-locals), JobViewSet.add_task] Too many local variables (36/15)
projects/views.py:772: [C0103(invalid-name), JobViewSet.add_task] Variable name "d" doesn't conform to snake_case naming style
projects/views.py:811: [R1702(too-many-nested-blocks), JobViewSet.add_task] Too many nested blocks (6/5)
projects/views.py:811: [R1702(too-many-nested-blocks), JobViewSet.add_task] Too many nested blocks (6/5)
projects/views.py:935: [W0212(protected-access), JobViewSet.add_task] Access to a protected member _meta of a client class
projects/views.py:753: [W0613(unused-argument), JobViewSet.add_task] Unused argument 'args'
projects/views.py:753: [W0613(unused-argument), JobViewSet.add_task] Unused argument 'kwargs'
projects/views.py:753: [R0912(too-many-branches), JobViewSet.add_task] Too many branches (31/12)
projects/views.py:753: [R0915(too-many-statements), JobViewSet.add_task] Too many statements (95/50)
projects/views.py:977: [C0111(missing-docstring), ZoneFilterSet] Missing class docstring
projects/views.py:980: [C0111(missing-docstring), ZoneFilterSet.Meta] Missing class docstring
projects/views.py:981: [E0601(used-before-assignment), ZoneFilterSet.Meta] Using variable 'ZoneViewSet' before assignment
projects/views.py:980: [R0903(too-few-public-methods), ZoneFilterSet.Meta] Too few public methods (0/2)
projects/views.py:977: [R0903(too-few-public-methods), ZoneFilterSet] Too few public methods (0/2)
projects/views.py:985: [R0903(too-few-public-methods), ZoneViewSet] Too few public methods (0/2)
projects/views.py:991: [C0111(missing-docstring), JobTypeFilterSet] Missing class docstring
projects/views.py:994: [C0111(missing-docstring), JobTypeFilterSet.Meta] Missing class docstring
projects/views.py:995: [E0601(used-before-assignment), JobTypeFilterSet.Meta] Using variable 'JobTypeViewSet' before assignment
projects/views.py:994: [R0903(too-few-public-methods), JobTypeFilterSet.Meta] Too few public methods (0/2)
projects/views.py:991: [R0903(too-few-public-methods), JobTypeFilterSet] Too few public methods (0/2)
projects/views.py:1007: [W0613(unused-argument), JobTypeViewSet.get_tree] Unused argument 'args'
projects/views.py:1007: [W0613(unused-argument), JobTypeViewSet.get_tree] Unused argument 'kwargs'
projects/views.py:1036: [C0103(invalid-name), JobTypeViewSet.create_job] Argument name "pk" doesn't conform to snake_case naming style
projects/views.py:1036: [W1113(keyword-arg-before-vararg), JobTypeViewSet.create_job] Keyword argument before variable positional arguments list in the definition of create_job function
projects/views.py:1036: [R0914(too-many-locals), JobTypeViewSet.create_job] Too many local variables (23/15)
projects/views.py:1036: [W0613(unused-argument), JobTypeViewSet.create_job] Unused argument 'pk'
projects/views.py:1036: [W0613(unused-argument), JobTypeViewSet.create_job] Unused argument 'args'
projects/views.py:1036: [W0613(unused-argument), JobTypeViewSet.create_job] Unused argument 'kwargs'
projects/views.py:1036: [R0912(too-many-branches), JobTypeViewSet.create_job] Too many branches (15/12)
projects/views.py:1036: [R0915(too-many-statements), JobTypeViewSet.create_job] Too many statements (56/50)
projects/views.py:1165: [C0111(missing-docstring), ProjectFilterSet] Missing class docstring
projects/views.py:1168: [C0111(missing-docstring), ProjectFilterSet.Meta] Missing class docstring
projects/views.py:1169: [E0601(used-before-assignment), ProjectFilterSet.Meta] Using variable 'ProjectViewSet' before assignment
projects/views.py:1168: [R0903(too-few-public-methods), ProjectFilterSet.Meta] Too few public methods (0/2)
projects/views.py:1165: [R0903(too-few-public-methods), ProjectFilterSet] Too few public methods (0/2)
projects/views.py:1179: [W0613(unused-argument), ProjectViewSet.get_tree] Unused argument 'args'
projects/views.py:1179: [W0613(unused-argument), ProjectViewSet.get_tree] Unused argument 'kwargs'
projects/views.py:1173: [R0903(too-few-public-methods), ProjectViewSet] Too few public methods (1/2)
projects/views.py:1205: [E0602(undefined-variable), GanttViewSet] Undefined variable 'GanttViewSet'
projects/views.py:1209: [C0103(invalid-name), GanttViewSet.get_planned_duration] Argument name "pk" doesn't conform to snake_case naming style
projects/views.py:1209: [W1113(keyword-arg-before-vararg), GanttViewSet.get_planned_duration] Keyword argument before variable positional arguments list in the definition of get_planned_duration function
projects/views.py:1215: [E0602(undefined-variable), GanttViewSet.get_planned_duration] Undefined variable 'GanttSerializer'
projects/views.py:1209: [W0613(unused-argument), GanttViewSet.get_planned_duration] Unused argument 'request'
projects/views.py:1209: [W0613(unused-argument), GanttViewSet.get_planned_duration] Unused argument 'pk'
projects/views.py:1209: [W0613(unused-argument), GanttViewSet.get_planned_duration] Unused argument 'args'
projects/views.py:1209: [W0613(unused-argument), GanttViewSet.get_planned_duration] Unused argument 'kwargs'
projects/views.py:1205: [R0903(too-few-public-methods), GanttViewSet] Too few public methods (1/2)
projects/views.py:1219: [C0111(missing-docstring), TaskFilterSet] Missing class docstring
projects/views.py:1225: [C0111(missing-docstring), TaskFilterSet.Meta] Missing class docstring
projects/views.py:1225: [R0903(too-few-public-methods), TaskFilterSet.Meta] Too few public methods (0/2)
projects/views.py:1219: [R0903(too-few-public-methods), TaskFilterSet] Too few public methods (0/2)
projects/views.py:1241: [W0613(unused-argument), TaskViewSet.as_excel] Unused argument 'args'
projects/views.py:1241: [W0613(unused-argument), TaskViewSet.as_excel] Unused argument 'kwargs'
projects/views.py:1263: [W0613(unused-argument), TaskViewSet.count] Unused argument 'request'
projects/views.py:1263: [W0613(unused-argument), TaskViewSet.count] Unused argument 'args'
projects/views.py:1263: [W0613(unused-argument), TaskViewSet.count] Unused argument 'kwargs'
projects/views.py:1289: [W0613(unused-argument), TaskViewSet.type_count] Unused argument 'args'
projects/views.py:1289: [W0613(unused-argument), TaskViewSet.type_count] Unused argument 'kwargs'
projects/views.py:1304: [C0111(missing-docstring), TaskViewSet.type_count_as_excel] Missing method docstring
projects/views.py:1304: [W0613(unused-argument), TaskViewSet.type_count_as_excel] Unused argument 'args'
projects/views.py:1304: [W0613(unused-argument), TaskViewSet.type_count_as_excel] Unused argument 'kwargs'
projects/views.py:1328: [C0111(missing-docstring), TaskViewSet.as_excel_orders] Missing method docstring
projects/views.py:1328: [W0613(unused-argument), TaskViewSet.as_excel_orders] Unused argument 'args'
projects/views.py:1328: [W0613(unused-argument), TaskViewSet.as_excel_orders] Unused argument 'kwargs'
projects/views.py:1348: [C0111(missing-docstring), TaskViewSet.as_excel_offers_orders] Missing method docstring
projects/views.py:1348: [W0613(unused-argument), TaskViewSet.as_excel_offers_orders] Unused argument 'args'
projects/views.py:1348: [W0613(unused-argument), TaskViewSet.as_excel_offers_orders] Unused argument 'kwargs'
projects/views.py:1366: [C0111(missing-docstring), TaskViewSet.all_targets] Missing method docstring
projects/views.py:1376: [C0103(invalid-name), TaskViewSet.all_targets] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:1376: [W0212(protected-access), TaskViewSet.all_targets] Access to a protected member _clone of a client class
projects/views.py:1382: [C0103(invalid-name), TaskViewSet.all_targets] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:1366: [W0613(unused-argument), TaskViewSet.all_targets] Unused argument 'args'
projects/views.py:1366: [W0613(unused-argument), TaskViewSet.all_targets] Unused argument 'kwargs'
projects/views.py:1388: [E0602(undefined-variable), NoteViewSet] Undefined variable 'NoteViewSet'
projects/views.py:1393: [W0613(unused-argument), NoteViewSet.count] Unused argument 'request'
projects/views.py:1393: [W0613(unused-argument), NoteViewSet.count] Unused argument 'args'
projects/views.py:1393: [W0613(unused-argument), NoteViewSet.count] Unused argument 'kwargs'
projects/views.py:1388: [R0903(too-few-public-methods), NoteViewSet] Too few public methods (1/2)
projects/views.py:1402: [E0602(undefined-variable), UserGridColumnsViewSet] Undefined variable 'UserGridColumnsViewSet'
projects/views.py:1406: [C0111(missing-docstring), UserGridColumnsViewSet.get_queryset] Missing method docstring
projects/views.py:1427: [W0613(unused-argument), UserGridColumnsViewSet.all] Unused argument 'args'
projects/views.py:1427: [W0613(unused-argument), UserGridColumnsViewSet.all] Unused argument 'kwargs'
projects/views.py:1467: [C0111(missing-docstring), CustomIsOwnerFilter.filter_user_id_for_django] Missing method docstring
projects/views.py:1468: [C0103(invalid-name), CustomIsOwnerFilter.filter_user_id_for_django] Variable name "f" doesn't conform to snake_case naming style
projects/views.py:1477: [C0111(missing-docstring), CustomIsOwnerFilter.filter_has_any_job_for_django] Missing method docstring
projects/views.py:1485: [C0111(missing-docstring), CustomIsOwnerFilter.filter_has_any_task_for_django] Missing method docstring
projects/views.py:1501: [C0111(missing-docstring), UserFilterSet.Meta] Missing class docstring
projects/views.py:1502: [E0601(used-before-assignment), UserFilterSet.Meta] Using variable 'UserViewSet' before assignment
projects/views.py:1501: [R0903(too-few-public-methods), UserFilterSet.Meta] Too few public methods (0/2)
projects/views.py:1493: [R0903(too-few-public-methods), UserFilterSet] Too few public methods (0/2)
projects/views.py:1507: [R0903(too-few-public-methods), UserViewSet] Too few public methods (0/2)
projects/views.py:1513: [E0602(undefined-variable), EconomicBudgetViewSet] Undefined variable 'EconomicBudgetViewSet'
projects/views.py:1518: [R0914(too-many-locals), EconomicBudgetViewSet.pivot] Too many local variables (28/15)
projects/views.py:1546: [R1702(too-many-nested-blocks), EconomicBudgetViewSet.pivot] Too many nested blocks (6/5)
projects/views.py:1518: [W0613(unused-argument), EconomicBudgetViewSet.pivot] Unused argument 'args'
projects/views.py:1518: [W0613(unused-argument), EconomicBudgetViewSet.pivot] Unused argument 'kwargs'
projects/views.py:1518: [R0912(too-many-branches), EconomicBudgetViewSet.pivot] Too many branches (19/12)
projects/views.py:1808: [C0111(missing-docstring), CompanyFilterSet] Missing class docstring
projects/views.py:1811: [C0111(missing-docstring), CompanyFilterSet.Meta] Missing class docstring
projects/views.py:1812: [E0601(used-before-assignment), CompanyFilterSet.Meta] Using variable 'CompanyViewSet' before assignment
projects/views.py:1811: [R0903(too-few-public-methods), CompanyFilterSet.Meta] Too few public methods (0/2)
projects/views.py:1808: [R0903(too-few-public-methods), CompanyFilterSet] Too few public methods (0/2)
projects/views.py:1816: [R0903(too-few-public-methods), CompanyViewSet] Too few public methods (0/2)
projects/views.py:1822: [C0111(missing-docstring), TaskTypeFilterSet] Missing class docstring
projects/views.py:1825: [C0111(missing-docstring), TaskTypeFilterSet.Meta] Missing class docstring
projects/views.py:1826: [E0601(used-before-assignment), TaskTypeFilterSet.Meta] Using variable 'TaskTypeViewSet' before assignment
projects/views.py:1825: [R0903(too-few-public-methods), TaskTypeFilterSet.Meta] Too few public methods (0/2)
projects/views.py:1822: [R0903(too-few-public-methods), TaskTypeFilterSet] Too few public methods (0/2)
projects/views.py:1835: [C0111(missing-docstring), TaskTypeViewSet.get_export_queryset] Missing method docstring
projects/views.py:1830: [R0903(too-few-public-methods), TaskTypeViewSet] Too few public methods (1/2)
projects/views.py:1841: [E0602(undefined-variable), TaskTypeEconomicHypothesisViewSet] Undefined variable 'TaskTypeEconomicHypothesisViewSet'
projects/views.py:1848: [W0613(unused-argument), TaskTypeEconomicHypothesisViewSet.import_excel] Unused argument 'args'
projects/views.py:1848: [W0613(unused-argument), TaskTypeEconomicHypothesisViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:1847: [R0201(no-self-use), TaskTypeEconomicHypothesisViewSet.import_excel] Method could be a function
projects/views.py:1841: [R0903(too-few-public-methods), TaskTypeEconomicHypothesisViewSet] Too few public methods (1/2)
projects/views.py:1873: [E0602(undefined-variable), EconomicValueViewSet] Undefined variable 'EconomicValueViewSet'
projects/views.py:1879: [W0613(unused-argument), EconomicValueViewSet.import_excel] Unused argument 'args'
projects/views.py:1879: [W0613(unused-argument), EconomicValueViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:1879: [R0201(no-self-use), EconomicValueViewSet.import_excel] Method could be a function
projects/views.py:1873: [R0903(too-few-public-methods), EconomicValueViewSet] Too few public methods (1/2)
projects/views.py:1900: [E0602(undefined-variable), EconomicHypothesisViewSet] Undefined variable 'EconomicHypothesisViewSet'
projects/views.py:1906: [W0613(unused-argument), EconomicHypothesisViewSet.import_excel] Unused argument 'args'
projects/views.py:1906: [W0613(unused-argument), EconomicHypothesisViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:1906: [R0201(no-self-use), EconomicHypothesisViewSet.import_excel] Method could be a function
projects/views.py:1900: [R0903(too-few-public-methods), EconomicHypothesisViewSet] Too few public methods (1/2)
projects/views.py:1925: [C0111(missing-docstring), Delegations] Missing class docstring
projects/views.py:1931: [C0111(missing-docstring), Delegations.get_queryset] Missing method docstring
projects/views.py:1931: [R0913(too-many-arguments), Delegations.get_queryset] Too many arguments (6/5)
projects/views.py:2018: [W0622(redefined-builtin), Delegations.get] Redefining built-in 'format'
projects/views.py:2018: [W0613(unused-argument), Delegations.get] Unused argument 'format'
projects/views.py:2018: [W0613(unused-argument), Delegations.get] Unused argument 'args'
projects/views.py:2018: [W0613(unused-argument), Delegations.get] Unused argument 'kwargs'
projects/views.py:2055: [W0622(redefined-builtin), Delegations.post] Redefining built-in 'format'
projects/views.py:2055: [W0613(unused-argument), Delegations.post] Unused argument 'format'
projects/views.py:2055: [W0613(unused-argument), Delegations.post] Unused argument 'args'
projects/views.py:2055: [W0613(unused-argument), Delegations.post] Unused argument 'kwargs'
projects/views.py:2055: [R0201(no-self-use), Delegations.post] Method could be a function
projects/views.py:2075: [C0111(missing-docstring), get_delegations_ordering_filepath] Missing function docstring
projects/views.py:2114: [C0103(invalid-name), delegations_export] Variable name "zf" doesn't conform to snake_case naming style
projects/views.py:2099: [W0613(unused-argument), delegations_export] Unused argument 'args'
projects/views.py:2099: [W0613(unused-argument), delegations_export] Unused argument 'kwargs'
projects/views.py:2157: [C0103(invalid-name), delegations_send_to_ordering] Variable name "e" doesn't conform to snake_case naming style
projects/views.py:2159: [C0103(invalid-name), delegations_send_to_ordering] Variable name "e" doesn't conform to snake_case naming style
projects/views.py:2132: [W0613(unused-argument), delegations_send_to_ordering] Unused argument 'args'
projects/views.py:2132: [W0613(unused-argument), delegations_send_to_ordering] Unused argument 'kwargs'
projects/views.py:2166: [E0602(undefined-variable), TaskSolOrdersViewSet] Undefined variable 'TaskSolOrdersViewSet'
projects/views.py:2171: [C0111(missing-docstring), TaskSolOrdersViewSet.list] Missing method docstring
projects/views.py:2194: [W0702(bare-except), TaskSolOrdersViewSet.list] No exception type(s) specified
projects/views.py:2202: [W0613(unused-argument), TaskSolOrdersViewSet.import_excel] Unused argument 'args'
projects/views.py:2202: [W0613(unused-argument), TaskSolOrdersViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:2202: [R0201(no-self-use), TaskSolOrdersViewSet.import_excel] Method could be a function
projects/views.py:2222: [C0111(missing-docstring), TaskBlockHistoryViewSet] Missing class docstring
projects/views.py:2222: [E0602(undefined-variable), TaskBlockHistoryViewSet] Undefined variable 'TaskBlockHistoryViewSet'
projects/views.py:2224: [C0111(missing-docstring), TaskBlockHistoryViewSet.endblocks] Missing method docstring
projects/views.py:2224: [W0613(unused-argument), TaskBlockHistoryViewSet.endblocks] Unused argument 'args'
projects/views.py:2224: [W0613(unused-argument), TaskBlockHistoryViewSet.endblocks] Unused argument 'kwargs'
projects/views.py:2250: [C0111(missing-docstring), TaskBlockHistoryViewSet.endblock] Missing method docstring
projects/views.py:2250: [W0613(unused-argument), TaskBlockHistoryViewSet.endblock] Unused argument 'args'
projects/views.py:2250: [W0613(unused-argument), TaskBlockHistoryViewSet.endblock] Unused argument 'kwargs'
projects/views.py:2263: [E0602(undefined-variable), TaskOfferViewSet] Undefined variable 'TaskOfferViewSet'
projects/views.py:2270: [C0111(missing-docstring), TaskOfferViewSet.create] Missing method docstring
projects/views.py:2300: [W0212(protected-access), TaskOfferViewSet.create] Access to a protected member _has_create_permission of a client class
projects/views.py:2270: [W0613(unused-argument), TaskOfferViewSet.create] Unused argument 'args'
projects/views.py:2270: [W0613(unused-argument), TaskOfferViewSet.create] Unused argument 'kwargs'
projects/views.py:2309: [C0111(missing-docstring), TaskOfferViewSet.summary] Missing method docstring
projects/views.py:2311: [C0103(invalid-name), TaskOfferViewSet.summary] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:2309: [W0613(unused-argument), TaskOfferViewSet.summary] Unused argument 'request'
projects/views.py:2309: [W0613(unused-argument), TaskOfferViewSet.summary] Unused argument 'args'
projects/views.py:2309: [W0613(unused-argument), TaskOfferViewSet.summary] Unused argument 'kwargs'
projects/views.py:2414: [C0103(invalid-name), TaskOfferViewSet.file] Argument name "pk" doesn't conform to snake_case naming style
projects/views.py:2414: [C0111(missing-docstring), TaskOfferViewSet.file] Missing method docstring
projects/views.py:2414: [W1113(keyword-arg-before-vararg), TaskOfferViewSet.file] Keyword argument before variable positional arguments list in the definition of file function
projects/views.py:2414: [W0613(unused-argument), TaskOfferViewSet.file] Unused argument 'request'
projects/views.py:2414: [W0613(unused-argument), TaskOfferViewSet.file] Unused argument 'pk'
projects/views.py:2414: [W0613(unused-argument), TaskOfferViewSet.file] Unused argument 'args'
projects/views.py:2414: [W0613(unused-argument), TaskOfferViewSet.file] Unused argument 'kwargs'
projects/views.py:2419: [C0111(missing-docstring), TaskOfferViewSet.file_example_single] Missing method docstring
projects/views.py:2419: [W0613(unused-argument), TaskOfferViewSet.file_example_single] Unused argument 'request'
projects/views.py:2419: [W0613(unused-argument), TaskOfferViewSet.file_example_single] Unused argument 'args'
projects/views.py:2419: [W0613(unused-argument), TaskOfferViewSet.file_example_single] Unused argument 'kwargs'
projects/views.py:2419: [R0201(no-self-use), TaskOfferViewSet.file_example_single] Method could be a function
projects/views.py:2428: [C0111(missing-docstring), TaskOfferViewSet.file_example_multi] Missing method docstring
projects/views.py:2428: [W0613(unused-argument), TaskOfferViewSet.file_example_multi] Unused argument 'request'
projects/views.py:2428: [W0613(unused-argument), TaskOfferViewSet.file_example_multi] Unused argument 'args'
projects/views.py:2428: [W0613(unused-argument), TaskOfferViewSet.file_example_multi] Unused argument 'kwargs'
projects/views.py:2428: [R0201(no-self-use), TaskOfferViewSet.file_example_multi] Method could be a function
projects/views.py:2437: [C0111(missing-docstring), TaskOfferViewSet.assign] Missing method docstring
projects/views.py:2437: [W0613(unused-argument), TaskOfferViewSet.assign] Unused argument 'args'
projects/views.py:2437: [W0613(unused-argument), TaskOfferViewSet.assign] Unused argument 'kwargs'
projects/views.py:2437: [R0201(no-self-use), TaskOfferViewSet.assign] Method could be a function
projects/views.py:2452: [C0111(missing-docstring), CustomOrderingDelegationTaskFilter] Missing class docstring
projects/views.py:2454: [C0111(missing-docstring), CustomOrderingDelegationTaskFilter.filter_in_for_django] Missing method docstring
projects/views.py:2457: [C0103(invalid-name), CustomOrderingDelegationTaskFilter.filter_in_for_django] Variable name "f" doesn't conform to snake_case naming style
projects/views.py:2452: [R0903(too-few-public-methods), CustomOrderingDelegationTaskFilter] Too few public methods (1/2)
projects/views.py:2476: [C0111(missing-docstring), OrderingDelegationFilterSet] Missing class docstring
projects/views.py:2479: [C0111(missing-docstring), OrderingDelegationFilterSet.Meta] Missing class docstring
projects/views.py:2480: [E0601(used-before-assignment), OrderingDelegationFilterSet.Meta] Using variable 'OrderingDelegationViewSet' before assignment
projects/views.py:2479: [R0903(too-few-public-methods), OrderingDelegationFilterSet.Meta] Too few public methods (0/2)
projects/views.py:2476: [R0903(too-few-public-methods), OrderingDelegationFilterSet] Too few public methods (0/2)
projects/views.py:2484: [C0111(missing-docstring), OrderingDelegationViewSet] Missing class docstring
projects/views.py:2488: [C0111(missing-docstring), OrderingDelegationViewSet.delegations] Missing method docstring
projects/views.py:2499: [W0622(redefined-builtin), OrderingDelegationViewSet.delegations] Redefining built-in 'filter'
projects/views.py:2489: [C0103(invalid-name), OrderingDelegationViewSet.delegations] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:2488: [W0613(unused-argument), OrderingDelegationViewSet.delegations] Unused argument 'args'
projects/views.py:2488: [W0613(unused-argument), OrderingDelegationViewSet.delegations] Unused argument 'kwargs'
projects/views.py:2513: [C0111(missing-docstring), OrderingDelegationViewSet.summary] Missing method docstring
projects/views.py:2538: [C0103(invalid-name), OrderingDelegationViewSet.summary] Variable name "e" doesn't conform to snake_case naming style
projects/views.py:2513: [W0613(unused-argument), OrderingDelegationViewSet.summary] Unused argument 'args'
projects/views.py:2513: [W0613(unused-argument), OrderingDelegationViewSet.summary] Unused argument 'kwargs'
projects/views.py:2538: [W0612(unused-variable), OrderingDelegationViewSet.summary] Unused variable 'e'
projects/views.py:2513: [R0201(no-self-use), OrderingDelegationViewSet.summary] Method could be a function
projects/views.py:2554: [C0111(missing-docstring), OrderingDelegationViewSet.import_excel] Missing method docstring
projects/views.py:2554: [W0613(unused-argument), OrderingDelegationViewSet.import_excel] Unused argument 'args'
projects/views.py:2554: [W0613(unused-argument), OrderingDelegationViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:2554: [R0201(no-self-use), OrderingDelegationViewSet.import_excel] Method could be a function
projects/views.py:2569: [C0111(missing-docstring), CustomOrangeOrderingHypothesysTaskFilter] Missing class docstring
projects/views.py:2571: [C0111(missing-docstring), CustomOrangeOrderingHypothesysTaskFilter.filter_in_for_django] Missing method docstring
projects/views.py:2574: [C0103(invalid-name), CustomOrangeOrderingHypothesysTaskFilter.filter_in_for_django] Variable name "f" doesn't conform to snake_case naming style
projects/views.py:2569: [R0903(too-few-public-methods), CustomOrangeOrderingHypothesysTaskFilter] Too few public methods (1/2)
projects/views.py:2582: [C0111(missing-docstring), OrangeOrderingHypothesysViewSetFilterSet] Missing class docstring
projects/views.py:2585: [C0111(missing-docstring), OrangeOrderingHypothesysViewSetFilterSet.Meta] Missing class docstring
projects/views.py:2586: [E0601(used-before-assignment), OrangeOrderingHypothesysViewSetFilterSet.Meta] Using variable 'OrangeOrderingHypothesysViewSet' before assignment
projects/views.py:2585: [R0903(too-few-public-methods), OrangeOrderingHypothesysViewSetFilterSet.Meta] Too few public methods (0/2)
projects/views.py:2582: [R0903(too-few-public-methods), OrangeOrderingHypothesysViewSetFilterSet] Too few public methods (0/2)
projects/views.py:2590: [C0111(missing-docstring), OrangeOrderingHypothesysViewSet] Missing class docstring
projects/views.py:2590: [R0903(too-few-public-methods), OrangeOrderingHypothesysViewSet] Too few public methods (0/2)
projects/views.py:2594: [C0111(missing-docstring), JobsLinksViewSet] Missing class docstring
projects/views.py:2594: [E0602(undefined-variable), JobsLinksViewSet] Undefined variable 'JobsLinksViewSet'
projects/views.py:2597: [C0111(missing-docstring), JobsLinksViewSet.import_excel] Missing method docstring
projects/views.py:2597: [W0613(unused-argument), JobsLinksViewSet.import_excel] Unused argument 'args'
projects/views.py:2597: [W0613(unused-argument), JobsLinksViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:2597: [R0201(no-self-use), JobsLinksViewSet.import_excel] Method could be a function
projects/views.py:2594: [R0903(too-few-public-methods), JobsLinksViewSet] Too few public methods (1/2)
projects/views.py:2610: [C0111(missing-docstring), TasksLinksViewSet] Missing class docstring
projects/views.py:2610: [E0602(undefined-variable), TasksLinksViewSet] Undefined variable 'TasksLinksViewSet'
projects/views.py:2614: [C0111(missing-docstring), TasksLinksViewSet.import_excel] Missing method docstring
projects/views.py:2614: [W0613(unused-argument), TasksLinksViewSet.import_excel] Unused argument 'args'
projects/views.py:2614: [W0613(unused-argument), TasksLinksViewSet.import_excel] Unused argument 'kwargs'
projects/views.py:2614: [R0201(no-self-use), TasksLinksViewSet.import_excel] Method could be a function
projects/views.py:2610: [R0903(too-few-public-methods), TasksLinksViewSet] Too few public methods (1/2)
projects/views.py:2628: [C0111(missing-docstring), FieldsJobsFilterSet] Missing class docstring
projects/views.py:2634: [C0111(missing-docstring), FieldsJobsFilterSet.Meta] Missing class docstring
projects/views.py:2635: [E0601(used-before-assignment), FieldsJobsFilterSet.Meta] Using variable 'FieldsJobsViewSet' before assignment
projects/views.py:2634: [R0903(too-few-public-methods), FieldsJobsFilterSet.Meta] Too few public methods (0/2)
projects/views.py:2628: [R0903(too-few-public-methods), FieldsJobsFilterSet] Too few public methods (0/2)
projects/views.py:2639: [C0111(missing-docstring), FieldsJobsViewSet] Missing class docstring
projects/views.py:2639: [R0903(too-few-public-methods), FieldsJobsViewSet] Too few public methods (0/2)
projects/views.py:2644: [C0111(missing-docstring), FieldsTasksFilterSet] Missing class docstring
projects/views.py:2646: [C0111(missing-docstring), FieldsTasksFilterSet.Meta] Missing class docstring
projects/views.py:2647: [E0601(used-before-assignment), FieldsTasksFilterSet.Meta] Using variable 'FieldsTasksViewSet' before assignment
projects/views.py:2646: [R0903(too-few-public-methods), FieldsTasksFilterSet.Meta] Too few public methods (0/2)
projects/views.py:2644: [R0903(too-few-public-methods), FieldsTasksFilterSet] Too few public methods (0/2)
projects/views.py:2651: [C0111(missing-docstring), FieldsTasksViewSet] Missing class docstring
projects/views.py:2651: [R0903(too-few-public-methods), FieldsTasksViewSet] Too few public methods (0/2)
projects/views.py:2656: [C0111(missing-docstring), DocumentViewSet] Missing class docstring
projects/views.py:2656: [E0602(undefined-variable), DocumentViewSet] Undefined variable 'DocumentViewSet'
projects/views.py:2657: [C0111(missing-docstring), DocumentViewSet.filter_queryset] Missing method docstring
projects/views.py:2666: [W0212(protected-access), DocumentViewSet.filter_queryset] Access to a protected member _mutable of a client class
projects/views.py:2680: [C0103(invalid-name), DocumentViewSet.filter_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:2685: [C0111(missing-docstring), DocumentViewSet.get_queryset] Missing method docstring
projects/views.py:2685: [W0613(unused-argument), DocumentViewSet.get_queryset] Unused argument 'kwargs'
projects/views.py:2694: [C0111(missing-docstring), DocumentViewSet.get_document_links_for_model] Missing method docstring
projects/views.py:2704: [W0212(protected-access), DocumentViewSet.get_document_links_for_model] Access to a protected member _meta of a client class
projects/views.py:2694: [R0201(no-self-use), DocumentViewSet.get_document_links_for_model] Method could be a function
projects/views.py:2713: [C0111(missing-docstring), DocumentViewSet.query_params_contain_document_link_field] Missing method docstring
projects/views.py:2717: [C0111(missing-docstring), DocumentViewSet.get_document_field_from_query_params] Missing method docstring
projects/views.py:2721: [C0103(invalid-name), DocumentViewSet.get_document_field_from_query_params] Variable name "qp" doesn't conform to snake_case naming style
projects/views.py:2723: [W0212(protected-access), DocumentViewSet.get_document_field_from_query_params] Access to a protected member _meta of a client class
projects/views.py:2733: [W0201(attribute-defined-outside-init), DocumentViewSet.get_document_field_from_query_params] Attribute '_document_field' defined outside __init__
projects/views.py:2738: [C0111(missing-docstring), RequestTrackingFilterSet] Missing class docstring
projects/views.py:2741: [C0111(missing-docstring), RequestTrackingFilterSet.Meta] Missing class docstring
projects/views.py:2742: [E0601(used-before-assignment), RequestTrackingFilterSet.Meta] Using variable 'RequestTrackingViewSet' before assignment
projects/views.py:2741: [R0903(too-few-public-methods), RequestTrackingFilterSet.Meta] Too few public methods (0/2)
projects/views.py:2738: [R0903(too-few-public-methods), RequestTrackingFilterSet] Too few public methods (0/2)
projects/views.py:2746: [C0111(missing-docstring), RequestTrackingViewSet] Missing class docstring
projects/views.py:2750: [C0111(missing-docstring), RequestTrackingViewSet.get_queryset] Missing method docstring
projects/views.py:2777: [C0111(missing-docstring), RequestTrackingViewSet.chart] Missing method docstring
projects/views.py:2787: [C0103(invalid-name), RequestTrackingViewSet.chart] Variable name "tz" doesn't conform to snake_case naming style
projects/views.py:2777: [W0613(unused-argument), RequestTrackingViewSet.chart] Unused argument 'args'
projects/views.py:2777: [W0613(unused-argument), RequestTrackingViewSet.chart] Unused argument 'kwargs'
projects/views.py:2805: [C0111(missing-docstring), RequestTrackingViewSet.users] Missing method docstring
projects/views.py:2805: [W0613(unused-argument), RequestTrackingViewSet.users] Unused argument 'request'
projects/views.py:2805: [W0613(unused-argument), RequestTrackingViewSet.users] Unused argument 'args'
projects/views.py:2805: [W0613(unused-argument), RequestTrackingViewSet.users] Unused argument 'kwargs'
projects/views.py:2826: [C0111(missing-docstring), RequestTrackingViewSet.count] Missing method docstring
projects/views.py:2827: [C0103(invalid-name), RequestTrackingViewSet.count] Variable name "qs" doesn't conform to snake_case naming style
projects/views.py:2826: [W0613(unused-argument), RequestTrackingViewSet.count] Unused argument 'request'
projects/views.py:2826: [W0613(unused-argument), RequestTrackingViewSet.count] Unused argument 'args'
projects/views.py:2826: [W0613(unused-argument), RequestTrackingViewSet.count] Unused argument 'kwargs'
projects/views.py:2838: [C0111(missing-docstring), RequestTrackingViewSet.hits] Missing method docstring
projects/views.py:2861: [C0111(missing-docstring), RequestTrackingViewSet.export_async] Missing method docstring
projects/views.py:7: [W0611(unused-import), ] Unused BytesIO imported from io
projects/views.py:10: [W0611(unused-import), ] Unused File imported from django.core.files
projects/views.py:14: [W0611(unused-import), ] Unused CharField imported from django.db.models
projects/views.py:17: [W0611(unused-import), ] Unused FileResponse imported from django.http
projects/views.py:17: [W0611(unused-import), ] Unused JsonResponse imported from django.http
projects/views.py:20: [W0611(unused-import), ] Unused DRYPermissions imported from dry_rest_permissions.generics
projects/views.py:30: [W0611(unused-import), ] Unused PermissionDenied imported from rest_framework.exceptions
projects/views.py:44: [W0611(unused-import), ] Unused Point imported from orange_ordering.models
projects/views.py:44: [W0611(unused-import), ] Unused HypothesysPoints imported from orange_ordering.models
projects/views.py:44: [W0611(unused-import), ] Unused Contract imported from orange_ordering.models
projects/views.py:48: [W0611(unused-import), ] Unused export_job_data imported from projects.data_exchange.outbound.excel_job
projects/views.py:48: [W0611(unused-import), ] Unused ExcelRenderer imported from projects.data_exchange.outbound.excel_job
projects/views.py:48: [W0611(unused-import), ] Unused job_function_fields_meta imported from projects.data_exchange.outbound.excel_job
projects/views.py:50: [W0611(unused-import), ] Unused progress_status_field_map imported from projects.fields.progress_status
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import copy from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import math from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import numbers from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import nx from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import django_rq from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import HistoryModelMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ExcludeFromDjangoAdminHistoryModelMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ProjectsNotificationEvent from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ReportMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BaseColumnsModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import HistoryItemMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ProjectsDocument from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ProjectsDocumentRevision from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import DocumentType from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import DocumentField from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import DEPENDENCIES_TYPES from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BaseFieldsEntitiesModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import FieldsTaskTypes from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import FieldsTasks from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import FieldsJobTypes from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import FieldsJobs from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import field_set_technical_name from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import copy_info_from_field from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import CoreFieldsModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import UserGridColumnsQuerySet from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ExtraJoinCondition from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ForeignKeyQuerySet from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Project from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobType from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ForeignKeyJobQuerySet from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobLink from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Gantt from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import GanttsTaskTypes from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import GanttsTaskTypesDependency from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskType from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ForeignKeyTaskQuerySet from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import update_workflow from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import update_readonly_fields from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import task_set_technical_name from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Field from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Zone from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobOrderingFilter from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobOrderingFiltersHypothesys from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import UserGridColumns from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import EconomicBudget from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import EconomicGroup from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import EconomicProvider from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrderingProvidersMatrix from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskTypeEconomicHypothesis from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskBlockHistory from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TASK_OFFER_STATUS_TYPES from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrderingDelegation from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeOrderingOrderTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeSharingTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeSiteDevice from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeBriseTicket from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeLegalTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeHuntingTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrangeBqaSelfAcceptance from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ChangeLog from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskLinkProperty from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import GenericForeignKey from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import GenericRelation from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import MaxValueValidator from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import MinValueValidator from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import connection from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import cached_property from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import python_2_unicode_compatible from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JSONField from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import LOUTER from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Join from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import post_save from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import post_delete from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import pre_delete from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import pre_save from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import m2m_changed from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import receiver from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import FIELD_TYPES from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import external_field_types from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JSONForeignKeySerializer from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import get_progress_status_kwargs from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BrisePermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobLinkPermissionMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskAssignationEvent from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobAssignationEvent from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobLinkedEvent from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import EconomicsPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobTypePermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JobOrderingFilterPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrderingOrderTaskPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import ReportPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrderingDelegationsPermissionMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import SharingTaskPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import SitePermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import HuntingTaskPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BqaSelfAcceptancePermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import LegalTaskPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskBlockPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TasksDependencyPermissionMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskSolOrdersPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TaskOfferPermissionsMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import get_next_technical_name from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import get_job_projects_breadcrumbs from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import get_current_history from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import is_topological_sorted from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import contribute_fields_to_model from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import sol_model_to_dict from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import MimeTypeAndSizeRestrictedFileField from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import CharVirtualField from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BaseSolModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import PermissionsSolQuerySet from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import PermissionsSolModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TrackedSolModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import MPTTModel from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import TreeForeignKey from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Budget from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrderingZone from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import Provider from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import OrderTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import SharingTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import SiteDevice from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BriseTicket from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import LegalTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import HuntingTask from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BqaSelfAcceptance from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import receiver_subclasses from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import WorkflowPathJob from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import inject_models from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import fix_table_alias_for_schemas from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import empty from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import NullBooleanField from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import BaseHistoryModelMixin from wildcard import
projects/views.py:51: [W0614(unused-wildcard-import), ] Unused import JSONDynamicHistoryModelMixin from wildcard import
projects/views.py:52: [W0611(unused-import), ] Unused get_queryset_job_viewset imported from projects.models_api
projects/views.py:52: [W0611(unused-import), ] Unused get_queryset_job imported from projects.models_api
projects/views.py:52: [W0611(unused-import), ] Unused get_queryset_task imported from projects.models_api
projects/views.py:59: [W0611(unused-import), ] Unused AppPermissions imported from projects.permissions
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import openpyxl from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import utc from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import NoteSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import CoreAnnotatedFields from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import JobAnnotatedFields from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import JobsLinksSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import ProjectSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TasksLinksSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import GanttsTaskTypesSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import UserGridColumnsSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskTypeEconomicHypothesisSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskSolOrdersSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskOfferSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import OrderingDelegationSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import ReportColumnsSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import NotificationSubscriptionSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import FieldsJobsSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import FieldsTasksSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import document_generic_field from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import documentfield_generic_field from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import DocumentSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import DocumentFieldSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import RequestTrackingSerializerMixin from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import timezone from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import six from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import FieldDoesNotExist from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import DRYPermissionsField from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import serializers from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import ModelSerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import RequestTracking from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import JobJSONForeignKeySerializer from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskOpenedEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskClosedEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskReopenedEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import NoteAddedOwnerNotificationEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskBlockCreationEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskBlockEndEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import TaskLinkedEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import LinkedTaskClosedEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import LinkedTaskBlockUnblockEvent from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import get_budgets from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import get_projects_roots from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import get_projects_ancestors from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import get_jobtype_ancestors from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import GenericRelatedField from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import get_generic_serializer_config from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import JSONDynamicFieldsField from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import NoDbConstraintPrimaryKeyRelatedField from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import do_normalize_filename from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import get_permissions_actions_from_class from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import SUBSCRIPTION_METHODS from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import HistoryItem from wildcard import
projects/views.py:61: [W0614(unused-wildcard-import), ] Unused import Order from wildcard import
projects/views.py:62: [W0611(unused-import), ] Unused get_export_excel_file imported from projects.async_jobs
projects/views.py:83: [W0611(unused-import), ] Unused WriteForSuperUserOnly imported from sol.api.permissions
projects/views.py:85: [W0611(unused-import), ] Unused date_to_utc imported from sol.utils
projects/views.py:91: [C0411(wrong-import-order), ] standard import "import datetime" should be placed before "from dateutil import rrule"
projects/views.py:92: [C0411(wrong-import-order), ] standard import "import sys" should be placed before "from dateutil import rrule"
projects/views.py:89: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module projects.serializers
projects/serializers.py:144: [W0511(fixme), ] TODO: What is this? Cannot find any reference in the code, fixed indentation btw.
projects/serializers.py:179: [W0511(fixme), ] TODO: rewrite with decorator
projects/serializers.py:203: [W0511(fixme), ] TODO: filter task physical fields?
projects/serializers.py:722: [W0511(fixme), ] TODO: weak point as this is limited to Job and Task entities
projects/serializers.py:725: [W0511(fixme), ] TODO: queryset (as_manager) class attributes are not copied to the manager: not that bad but..
projects/serializers.py:728: [W0511(fixme), ] TODO: any convenient alternative to avoid one query per each field definitions?
projects/serializers.py:729: [W0511(fixme), ] TODO: saner management of external field case
projects/serializers.py:1038: [W0511(fixme), ] TODO: maybe no good if already existing.
projects/serializers.py:27: [C0301(line-too-long), ] Line too long (110/100)
projects/serializers.py:54: [C0301(line-too-long), ] Line too long (105/100)
projects/serializers.py:98: [C0301(line-too-long), ] Line too long (112/100)
projects/serializers.py:118: [C0301(line-too-long), ] Line too long (110/100)
projects/serializers.py:168: [C0301(line-too-long), ] Line too long (120/100)
projects/serializers.py:180: [C0301(line-too-long), ] Line too long (103/100)
projects/serializers.py:205: [C0301(line-too-long), ] Line too long (113/100)
projects/serializers.py:235: [C0301(line-too-long), ] Line too long (132/100)
projects/serializers.py:302: [C0301(line-too-long), ] Line too long (114/100)
projects/serializers.py:337: [C0301(line-too-long), ] Line too long (104/100)
projects/serializers.py:348: [C0301(line-too-long), ] Line too long (111/100)
projects/serializers.py:383: [C0301(line-too-long), ] Line too long (117/100)
projects/serializers.py:429: [C0301(line-too-long), ] Line too long (109/100)
projects/serializers.py:474: [C0301(line-too-long), ] Line too long (118/100)
projects/serializers.py:485: [C0301(line-too-long), ] Line too long (125/100)
projects/serializers.py:562: [C0301(line-too-long), ] Line too long (102/100)
projects/serializers.py:577: [C0301(line-too-long), ] Line too long (109/100)
projects/serializers.py:583: [C0301(line-too-long), ] Line too long (118/100)
projects/serializers.py:609: [C0301(line-too-long), ] Line too long (106/100)
projects/serializers.py:612: [C0301(line-too-long), ] Line too long (122/100)
projects/serializers.py:618: [C0301(line-too-long), ] Line too long (105/100)
projects/serializers.py:629: [C0301(line-too-long), ] Line too long (124/100)
projects/serializers.py:640: [C0301(line-too-long), ] Line too long (127/100)
projects/serializers.py:670: [C0301(line-too-long), ] Line too long (132/100)
projects/serializers.py:712: [C0301(line-too-long), ] Line too long (105/100)
projects/serializers.py:725: [C0301(line-too-long), ] Line too long (108/100)
projects/serializers.py:731: [C0301(line-too-long), ] Line too long (120/100)
projects/serializers.py:732: [C0301(line-too-long), ] Line too long (117/100)
projects/serializers.py:736: [C0301(line-too-long), ] Line too long (106/100)
projects/serializers.py:751: [C0301(line-too-long), ] Line too long (103/100)
projects/serializers.py:807: [C0301(line-too-long), ] Line too long (207/100)
projects/serializers.py:808: [C0301(line-too-long), ] Line too long (114/100)
projects/serializers.py:843: [C0301(line-too-long), ] Line too long (114/100)
projects/serializers.py:854: [C0301(line-too-long), ] Line too long (121/100)
projects/serializers.py:893: [C0301(line-too-long), ] Line too long (129/100)
projects/serializers.py:898: [C0301(line-too-long), ] Line too long (237/100)
projects/serializers.py:932: [C0301(line-too-long), ] Line too long (114/100)
projects/serializers.py:943: [C0301(line-too-long), ] Line too long (121/100)
projects/serializers.py:964: [C0301(line-too-long), ] Line too long (107/100)
projects/serializers.py:978: [C0301(line-too-long), ] Line too long (104/100)
projects/serializers.py:983: [C0301(line-too-long), ] Line too long (116/100)
projects/serializers.py:986: [C0330(bad-continuation), ] Wrong hanging indentation (remove 55 spaces).
                                                                       'task': task.pk,
                |                                                      ^
projects/serializers.py:987: [C0330(bad-continuation), ] Wrong hanging indentation (remove 55 spaces).
                                                                       'order_task': order_task_id,
                |                                                      ^
projects/serializers.py:988: [C0330(bad-continuation), ] Wrong hanging indentation.
                                                                   },
            |   |                                                  ^
projects/serializers.py:1029: [C0301(line-too-long), ] Line too long (106/100)
projects/serializers.py:1032: [C0301(line-too-long), ] Line too long (103/100)
projects/serializers.py:1035: [C0301(line-too-long), ] Line too long (104/100)
projects/serializers.py:1036: [C0301(line-too-long), ] Line too long (102/100)
projects/serializers.py:1068: [C0301(line-too-long), ] Line too long (102/100)
projects/serializers.py:1097: [C0301(line-too-long), ] Line too long (122/100)
projects/serializers.py:1170: [C0301(line-too-long), ] Line too long (101/100)
projects/serializers.py:1: [C0302(too-many-lines), ] Too many lines in module (1208/1000)
projects/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/serializers.py:11: [E0401(import-error), ] Unable to import 'django.conf'
projects/serializers.py:12: [E0401(import-error), ] Unable to import 'django.db'
projects/serializers.py:13: [E0401(import-error), ] Unable to import 'django.db.models'
projects/serializers.py:14: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/serializers.py:15: [E0401(import-error), ] Unable to import 'django.utils'
projects/serializers.py:16: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/serializers.py:17: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/serializers.py:18: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/serializers.py:19: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
projects/serializers.py:20: [E0401(import-error), ] Unable to import 'rest_framework'
projects/serializers.py:21: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/serializers.py:22: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/serializers.py:23: [E0401(import-error), ] Unable to import 'rest_framework.serializers'
projects/serializers.py:24: [E0401(import-error), ] Unable to import 'rest_framework.settings'
projects/serializers.py:62: [E0611(no-name-in-module), ] No name 'HistoryItem' in module 'projects.models'
projects/serializers.py:66: [C0103(invalid-name), ] Class name "utc" doesn't conform to PascalCase naming style
projects/serializers.py:72: [C0111(missing-docstring), NoteSerializer] Missing class docstring
projects/serializers.py:72: [E0602(undefined-variable), NoteSerializer] Undefined variable 'NoteSerializer'
projects/serializers.py:78: [C0111(missing-docstring), NoteSerializer.to_internal_value] Missing method docstring
projects/serializers.py:83: [C0111(missing-docstring), NoteSerializer.get_notification_kwargs] Missing method docstring
projects/serializers.py:83: [R0201(no-self-use), NoteSerializer.get_notification_kwargs] Method could be a function
projects/serializers.py:113: [C0111(missing-docstring), NoteSerializer.create_recipients] Missing method docstring
projects/serializers.py:113: [W1113(keyword-arg-before-vararg), NoteSerializer.create_recipients] Keyword argument before variable positional arguments list in the definition of create_recipients function
projects/serializers.py:120: [C0111(missing-docstring), NoteSerializer.create] Missing method docstring
projects/serializers.py:137: [W0212(protected-access), NoteSerializer.create] Access to a protected member _meta of a client class
projects/serializers.py:150: [C0111(missing-docstring), CoreAnnotatedFields] Missing class docstring
projects/serializers.py:150: [R0205(useless-object-inheritance), CoreAnnotatedFields] Class 'CoreAnnotatedFields' inherits from object, can be safely removed from bases in python3
projects/serializers.py:150: [R0903(too-few-public-methods), CoreAnnotatedFields] Too few public methods (0/2)
projects/serializers.py:158: [C0111(missing-docstring), JobAnnotatedFields] Missing class docstring
projects/serializers.py:158: [R0205(useless-object-inheritance), JobAnnotatedFields] Class 'JobAnnotatedFields' inherits from object, can be safely removed from bases in python3
projects/serializers.py:158: [R0903(too-few-public-methods), JobAnnotatedFields] Too few public methods (0/2)
projects/serializers.py:167: [C0111(missing-docstring), JobSerializer] Missing class docstring
projects/serializers.py:167: [E0602(undefined-variable), JobSerializer] Undefined variable 'JobSerializer'
projects/serializers.py:181: [C0111(missing-docstring), JobSerializer.get_projects_roots] Missing method docstring
projects/serializers.py:181: [R0201(no-self-use), JobSerializer.get_projects_roots] Method could be a function
projects/serializers.py:184: [C0111(missing-docstring), JobSerializer.get_budgets] Missing method docstring
projects/serializers.py:184: [R0201(no-self-use), JobSerializer.get_budgets] Method could be a function
projects/serializers.py:187: [C0111(missing-docstring), JobSerializer.get_projects_ancestors] Missing method docstring
projects/serializers.py:192: [C0111(missing-docstring), JobSerializer.get_jobtype_ancestors] Missing method docstring
projects/serializers.py:197: [C0111(missing-docstring), JobSerializer.get_task_columns] Missing method docstring
projects/serializers.py:234: [C0111(missing-docstring), JobSerializer.as_type_count] Missing method docstring
projects/serializers.py:189: [W0201(attribute-defined-outside-init), JobSerializer.get_projects_ancestors] Attribute '_projects_ancestors_cache' defined outside __init__
projects/serializers.py:272: [C0111(missing-docstring), JobsLinksSerializer] Missing class docstring
projects/serializers.py:272: [E0602(undefined-variable), JobsLinksSerializer] Undefined variable 'JobsLinksSerializer'
projects/serializers.py:273: [C0111(missing-docstring), JobsLinksSerializer.create] Missing method docstring
projects/serializers.py:272: [R0903(too-few-public-methods), JobsLinksSerializer] Too few public methods (1/2)
projects/serializers.py:293: [C0111(missing-docstring), ProjectSerializer] Missing class docstring
projects/serializers.py:293: [E0602(undefined-variable), ProjectSerializer] Undefined variable 'ProjectSerializer'
projects/serializers.py:293: [R0903(too-few-public-methods), ProjectSerializer] Too few public methods (0/2)
projects/serializers.py:297: [C0111(missing-docstring), JobAddTaskSerializer] Missing class docstring
projects/serializers.py:297: [R0903(too-few-public-methods), JobAddTaskSerializer] Too few public methods (0/2)
projects/serializers.py:312: [C0111(missing-docstring), TasksLinksGanttSerializer] Missing class docstring
projects/serializers.py:312: [E0601(used-before-assignment), TasksLinksGanttSerializer] Using variable 'TasksLinksSerializer' before assignment
projects/serializers.py:316: [C0111(missing-docstring), TasksLinksGanttSerializer.get_type] Missing method docstring
projects/serializers.py:316: [W0613(unused-argument), TasksLinksGanttSerializer.get_type] Unused argument 'value'
projects/serializers.py:316: [R0201(no-self-use), TasksLinksGanttSerializer.get_type] Method could be a function
projects/serializers.py:319: [C0111(missing-docstring), TasksLinksGanttSerializer.get_id] Missing method docstring
projects/serializers.py:319: [R0201(no-self-use), TasksLinksGanttSerializer.get_id] Method could be a function
projects/serializers.py:322: [C0111(missing-docstring), TasksLinksGanttSerializer.Meta] Missing class docstring
projects/serializers.py:322: [R0903(too-few-public-methods), TasksLinksGanttSerializer.Meta] Too few public methods (0/2)
projects/serializers.py:327: [C0111(missing-docstring), TasksLinksSerializer] Missing class docstring
projects/serializers.py:328: [C0111(missing-docstring), TasksLinksSerializer.create] Missing method docstring
projects/serializers.py:357: [C0111(missing-docstring), TasksLinksSerializer.save] Missing method docstring
projects/serializers.py:365: [C0111(missing-docstring), TasksLinksSerializer.destroy] Missing method docstring
projects/serializers.py:372: [C0111(missing-docstring), TasksLinksSerializer.move_task_by_properties] Missing method docstring
projects/serializers.py:373: [R1718(consider-using-set-comprehension), TasksLinksSerializer.move_task_by_properties] Consider using a set comprehension
projects/serializers.py:372: [R0201(no-self-use), TasksLinksSerializer.move_task_by_properties] Method could be a function
projects/serializers.py:382: [C0111(missing-docstring), TaskSerializer] Missing class docstring
projects/serializers.py:393: [C0111(missing-docstring), TaskSerializer.to_internal_value] Missing method docstring
projects/serializers.py:548: [C0111(missing-docstring), TaskSerializer.start_dependent_tasks] Missing method docstring
projects/serializers.py:570: [C0103(invalid-name), TaskSerializer.start_dependent_tasks] Variable name "d" doesn't conform to snake_case naming style
projects/serializers.py:574: [C0103(invalid-name), TaskSerializer.start_dependent_tasks] Variable name "d" doesn't conform to snake_case naming style
projects/serializers.py:587: [C0103(invalid-name), TaskSerializer.start_dependent_tasks] Variable name "d" doesn't conform to snake_case naming style
projects/serializers.py:600: [C0111(missing-docstring), TaskSerializer.do_blocks_house_keeping_after_task_end] Missing method docstring
projects/serializers.py:610: [E1120(no-value-for-parameter), TaskSerializer.do_blocks_house_keeping_after_task_end] No value for argument 'dt' in unbound method call
projects/serializers.py:622: [C0111(missing-docstring), TaskSerializer.do_update_forecast_cost] Missing method docstring
projects/serializers.py:634: [C0111(missing-docstring), TaskSerializer.do_update_real_cost] Missing method docstring
projects/serializers.py:647: [C0111(missing-docstring), TaskSerializer.do_blocks_house_keeping_after_task_rollback] Missing method docstring
projects/serializers.py:669: [C0111(missing-docstring), TaskSerializer.as_type_count] Missing method docstring
projects/serializers.py:707: [C0111(missing-docstring), GanttsTaskTypesSerializer] Missing class docstring
projects/serializers.py:707: [E0602(undefined-variable), GanttsTaskTypesSerializer] Undefined variable 'GanttsTaskTypesSerializer'
projects/serializers.py:708: [C0111(missing-docstring), GanttsTaskTypesSerializer.create] Missing method docstring
projects/serializers.py:708: [R0201(no-self-use), GanttsTaskTypesSerializer.create] Method could be a function
projects/serializers.py:707: [R0903(too-few-public-methods), GanttsTaskTypesSerializer] Too few public methods (1/2)
projects/serializers.py:717: [C0111(missing-docstring), UserGridColumnsSerializer] Missing class docstring
projects/serializers.py:717: [E0602(undefined-variable), UserGridColumnsSerializer] Undefined variable 'UserGridColumnsSerializer'
projects/serializers.py:720: [C0111(missing-docstring), UserGridColumnsSerializer.get_type] Missing method docstring
projects/serializers.py:743: [W0212(protected-access), UserGridColumnsSerializer.get_type] Access to a protected member _meta of a client class
projects/serializers.py:720: [R0201(no-self-use), UserGridColumnsSerializer.get_type] Method could be a function
projects/serializers.py:717: [R0903(too-few-public-methods), UserGridColumnsSerializer] Too few public methods (1/2)
projects/serializers.py:750: [C0111(missing-docstring), TaskTypeEconomicHypothesisSerializer] Missing class docstring
projects/serializers.py:750: [E0602(undefined-variable), TaskTypeEconomicHypothesisSerializer] Undefined variable 'TaskTypeEconomicHypothesisSerializer'
projects/serializers.py:750: [R0903(too-few-public-methods), TaskTypeEconomicHypothesisSerializer] Too few public methods (0/2)
projects/serializers.py:754: [C0111(missing-docstring), TaskSolOrdersSerializer] Missing class docstring
projects/serializers.py:754: [E0602(undefined-variable), TaskSolOrdersSerializer] Undefined variable 'TaskSolOrdersSerializer'
projects/serializers.py:757: [C0111(missing-docstring), TaskSolOrdersSerializer.create] Missing method docstring
projects/serializers.py:763: [W0702(bare-except), TaskSolOrdersSerializer.create] No exception type(s) specified
projects/serializers.py:768: [C0111(missing-docstring), TaskSolOrdersSerializer.destroy] Missing method docstring
projects/serializers.py:771: [W0702(bare-except), TaskSolOrdersSerializer.destroy] No exception type(s) specified
projects/serializers.py:779: [C0111(missing-docstring), TaskBlockHistorySerializer] Missing class docstring
projects/serializers.py:781: [C0111(missing-docstring), TaskBlockHistorySerializer.to_internal_value] Missing method docstring
projects/serializers.py:792: [C0111(missing-docstring), TaskBlockHistorySerializer.create] Missing method docstring
projects/serializers.py:873: [W0212(protected-access), TaskBlockHistorySerializer.create] Access to a protected member _meta of a client class
projects/serializers.py:886: [C0111(missing-docstring), TaskBlockHistorySerializer.endblock] Missing method docstring
projects/serializers.py:951: [W0212(protected-access), TaskBlockHistorySerializer.endblock] Access to a protected member _meta of a client class
projects/serializers.py:962: [C0111(missing-docstring), TaskOfferSerializer] Missing class docstring
projects/serializers.py:962: [E0602(undefined-variable), TaskOfferSerializer] Undefined variable 'TaskOfferSerializer'
projects/serializers.py:971: [C0111(missing-docstring), TaskOfferSerializer.is_valid] Missing method docstring
projects/serializers.py:1001: [C0111(missing-docstring), TaskOfferSerializer.update] Missing method docstring
projects/serializers.py:1029: [C0111(missing-docstring), TaskOfferSerializer.get_data_from_zip] Missing method docstring
projects/serializers.py:1029: [R0914(too-many-locals), TaskOfferSerializer.get_data_from_zip] Too many local variables (21/15)
projects/serializers.py:992: [W0201(attribute-defined-outside-init), TaskOfferSerializer.is_valid] Attribute '_errors' defined outside __init__
projects/serializers.py:1091: [C0111(missing-docstring), OrderingDelegationSerializer] Missing class docstring
projects/serializers.py:1091: [E0602(undefined-variable), OrderingDelegationSerializer] Undefined variable 'OrderingDelegationSerializer'
projects/serializers.py:1092: [C0111(missing-docstring), OrderingDelegationSerializer.validate] Missing method docstring
projects/serializers.py:1091: [R0903(too-few-public-methods), OrderingDelegationSerializer] Too few public methods (1/2)
projects/serializers.py:1102: [C0111(missing-docstring), ReportColumnsSerializer] Missing class docstring
projects/serializers.py:1102: [E0602(undefined-variable), ReportColumnsSerializer] Undefined variable 'ReportColumnsSerializer'
projects/serializers.py:1103: [C0111(missing-docstring), ReportColumnsSerializer.to_internal_value] Missing method docstring
projects/serializers.py:1102: [R0903(too-few-public-methods), ReportColumnsSerializer] Too few public methods (1/2)
projects/serializers.py:1111: [C0111(missing-docstring), NotificationSubscriptionSerializer] Missing class docstring
projects/serializers.py:1111: [E0602(undefined-variable), NotificationSubscriptionSerializer] Undefined variable 'NotificationSubscriptionSerializer'
projects/serializers.py:1112: [C0111(missing-docstring), NotificationSubscriptionSerializer.validate] Missing method docstring
projects/serializers.py:1111: [R0903(too-few-public-methods), NotificationSubscriptionSerializer] Too few public methods (1/2)
projects/serializers.py:1131: [C0111(missing-docstring), FieldsJobsSerializer] Missing class docstring
projects/serializers.py:1131: [E0602(undefined-variable), FieldsJobsSerializer] Undefined variable 'FieldsJobsSerializer'
projects/serializers.py:1135: [C0111(missing-docstring), FieldsJobsSerializer.Meta] Missing class docstring
projects/serializers.py:1138: [W0107(unnecessary-pass), FieldsJobsSerializer.Meta] Unnecessary pass statement
projects/serializers.py:1135: [R0903(too-few-public-methods), FieldsJobsSerializer.Meta] Too few public methods (0/2)
projects/serializers.py:1131: [R0903(too-few-public-methods), FieldsJobsSerializer] Too few public methods (0/2)
projects/serializers.py:1141: [C0111(missing-docstring), FieldsTasksSerializer] Missing class docstring
projects/serializers.py:1141: [E0602(undefined-variable), FieldsTasksSerializer] Undefined variable 'FieldsTasksSerializer'
projects/serializers.py:1145: [C0111(missing-docstring), FieldsTasksSerializer.Meta] Missing class docstring
projects/serializers.py:1148: [W0107(unnecessary-pass), FieldsTasksSerializer.Meta] Unnecessary pass statement
projects/serializers.py:1145: [R0903(too-few-public-methods), FieldsTasksSerializer.Meta] Too few public methods (0/2)
projects/serializers.py:1141: [R0903(too-few-public-methods), FieldsTasksSerializer] Too few public methods (0/2)
projects/serializers.py:1151: [C0103(invalid-name), ] Constant name "document_generic_field" doesn't conform to UPPER_CASE naming style
projects/serializers.py:1156: [C0103(invalid-name), ] Constant name "documentfield_generic_field" doesn't conform to UPPER_CASE naming style
projects/serializers.py:1162: [C0111(missing-docstring), DocumentSerializer] Missing class docstring
projects/serializers.py:1162: [E0602(undefined-variable), DocumentSerializer] Undefined variable 'DocumentSerializer'
projects/serializers.py:1169: [C0111(missing-docstring), DocumentSerializer.create] Missing method docstring
projects/serializers.py:1176: [W0212(protected-access), DocumentSerializer.create] Access to a protected member _meta of a client class
projects/serializers.py:1177: [C0103(invalid-name), DocumentSerializer.create] Variable name "ct" doesn't conform to snake_case naming style
projects/serializers.py:1162: [R0903(too-few-public-methods), DocumentSerializer] Too few public methods (1/2)
projects/serializers.py:1187: [C0111(missing-docstring), DocumentFieldSerializer] Missing class docstring
projects/serializers.py:1187: [E0602(undefined-variable), DocumentFieldSerializer] Undefined variable 'DocumentFieldSerializer'
projects/serializers.py:1187: [R0903(too-few-public-methods), DocumentFieldSerializer] Too few public methods (0/2)
projects/serializers.py:1194: [C0111(missing-docstring), RequestTrackingSerializerMixin] Missing class docstring
projects/serializers.py:1194: [R0205(useless-object-inheritance), RequestTrackingSerializerMixin] Class 'RequestTrackingSerializerMixin' inherits from object, can be safely removed from bases in python3
projects/serializers.py:1194: [R0903(too-few-public-methods), RequestTrackingSerializerMixin] Too few public methods (0/2)
projects/serializers.py:1199: [C0111(missing-docstring), RequestTrackingUserSerializer] Missing class docstring
projects/serializers.py:1199: [E0602(undefined-variable), RequestTrackingUserSerializer] Undefined variable 'UserSerializer'
projects/serializers.py:1200: [C0111(missing-docstring), RequestTrackingUserSerializer.Meta] Missing class docstring
projects/serializers.py:1200: [R0903(too-few-public-methods), RequestTrackingUserSerializer.Meta] Too few public methods (0/2)
projects/serializers.py:1199: [R0903(too-few-public-methods), RequestTrackingUserSerializer] Too few public methods (0/2)
projects/serializers.py:1205: [C0111(missing-docstring), RequestTrackingHitsSerializer] Missing class docstring
projects/serializers.py:1205: [E0602(undefined-variable), RequestTrackingHitsSerializer] Undefined variable 'RequestTrackingSerializer'
projects/serializers.py:1206: [C0111(missing-docstring), RequestTrackingHitsSerializer.Meta] Missing class docstring
projects/serializers.py:1206: [R0903(too-few-public-methods), RequestTrackingHitsSerializer.Meta] Too few public methods (0/2)
projects/serializers.py:1205: [R0903(too-few-public-methods), RequestTrackingHitsSerializer] Too few public methods (0/2)
projects/serializers.py:23: [W0611(unused-import), ] Unused ModelSerializer imported from rest_framework.serializers
projects/serializers.py:24: [W0611(unused-import), ] Unused api_settings imported from rest_framework.settings
projects/serializers.py:28: [W0611(unused-import), ] Unused TaskLinkProperty imported from projects.models
projects/serializers.py:28: [W0611(unused-import), ] Unused TaskSolOrders imported from projects.models
projects/serializers.py:10: [C0411(wrong-import-order), ] standard import "from collections import OrderedDict, defaultdict" should be placed before "import openpyxl"
projects/serializers.py:63: [C0411(wrong-import-order), ] first party import "from orange_ordering.models import Order" should be placed before "from .models import TaskBlockHistory, HistoryItem, ContentType"
projects/serializers.py:64: [C0411(wrong-import-order), ] first party import "from projects.fields.progress_status import progress_status_field_map" should be placed before "from .models import TaskBlockHistory, HistoryItem, ContentType"
projects/serializers.py:65: [C0411(wrong-import-order), ] first party import "from projects.utils import get_job_projects_breadcrumbs, get_current_history" should be placed before "from .models import TaskBlockHistory, HistoryItem, ContentType"
projects/serializers.py:55: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
projects/serializers.py:64: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
************* Module projects.admin
projects/admin.py:51: [W0511(fixme), ] TODO: add write once validator for 'job_types', 'task_types', 'workflow' and 'gantt'?
projects/admin.py:16: [C0301(line-too-long), ] Line too long (105/100)
projects/admin.py:118: [C0301(line-too-long), ] Line too long (103/100)
projects/admin.py:162: [C0301(line-too-long), ] Line too long (103/100)
projects/admin.py:250: [C0301(line-too-long), ] Line too long (144/100)
projects/admin.py:252: [C0301(line-too-long), ] Line too long (111/100)
projects/admin.py:299: [C0301(line-too-long), ] Line too long (112/100)
projects/admin.py:324: [C0301(line-too-long), ] Line too long (119/100)
projects/admin.py:552: [C0301(line-too-long), ] Line too long (105/100)
projects/admin.py:568: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    'task_type',
            |       ^
projects/admin.py:569: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    'owner',
            |       ^
projects/admin.py:570: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    'company',
            |       ^
projects/admin.py:571: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    'workflow_milestone'
            |       ^
projects/admin.py:572: [C0330(bad-continuation), ] Wrong hanging indentation.
                 )
        |   |    ^
projects/admin.py:605: [C0301(line-too-long), ] Line too long (101/100)
projects/admin.py:765: [C0301(line-too-long), ] Line too long (101/100)
projects/admin.py:797: [C0301(line-too-long), ] Line too long (102/100)
projects/admin.py:946: [C0301(line-too-long), ] Line too long (114/100)
projects/admin.py:977: [C0301(line-too-long), ] Line too long (106/100)
projects/admin.py:1007: [C0301(line-too-long), ] Line too long (182/100)
projects/admin.py:1009: [C0301(line-too-long), ] Line too long (102/100)
projects/admin.py:1015: [C0301(line-too-long), ] Line too long (137/100)
projects/admin.py:1: [C0302(too-many-lines), ] Too many lines in module (1036/1000)
projects/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/admin.py:4: [E0401(import-error), ] Unable to import 'cached_property'
projects/admin.py:5: [E0401(import-error), ] Unable to import 'django.conf.urls'
projects/admin.py:6: [E0401(import-error), ] Unable to import 'django.contrib'
projects/admin.py:7: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/admin.py:8: [E0401(import-error), ] Unable to import 'django.db'
projects/admin.py:9: [E0401(import-error), ] Unable to import 'django.db.utils'
projects/admin.py:10: [E0401(import-error), ] Unable to import 'django.shortcuts'
projects/admin.py:11: [E0401(import-error), ] Unable to import 'django.urls'
projects/admin.py:12: [E0401(import-error), ] Unable to import 'django.utils.safestring'
projects/admin.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/admin.py:14: [E0401(import-error), ] Unable to import 'django_mptt_admin.admin'
projects/admin.py:15: [E0401(import-error), ] Unable to import 'ajax_select'
projects/admin.py:16: [E0401(import-error), ] Unable to import 'ajax_select.admin'
projects/admin.py:23: [E0611(no-name-in-module), ] No name 'HistoryItem' in module 'projects.models'
projects/admin.py:24: [E0611(no-name-in-module), ] No name 'DocumentCategory' in module 'projects.models'
projects/admin.py:27: [E0401(import-error), ] Unable to import 'django.http'
projects/admin.py:30: [E0401(import-error), ] Unable to import 'django.forms'
projects/admin.py:31: [E0401(import-error), ] Unable to import 'django.http'
projects/admin.py:42: [E0401(import-error), ] Unable to import 'django.apps'
projects/admin.py:43: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
projects/admin.py:46: [E0401(import-error), ] Unable to import 'django.utils.html'
projects/admin.py:47: [E0401(import-error), ] Unable to import 'django.urls'
projects/admin.py:47: [W0404(reimported), ] Reimport 'reverse' (imported line 11)
projects/admin.py:55: [C0111(missing-docstring), ExportCsvMixin] Missing class docstring
projects/admin.py:55: [R0205(useless-object-inheritance), ExportCsvMixin] Class 'ExportCsvMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:57: [C0111(missing-docstring), ExportCsvMixin.export_as_csv] Missing method docstring
projects/admin.py:58: [W0212(protected-access), ExportCsvMixin.export_as_csv] Access to a protected member _meta of a client class
projects/admin.py:57: [W0613(unused-argument), ExportCsvMixin.export_as_csv] Unused argument 'request'
projects/admin.py:67: [W0612(unused-variable), ExportCsvMixin.export_as_csv] Unused variable 'row'
projects/admin.py:55: [R0903(too-few-public-methods), ExportCsvMixin] Too few public methods (1/2)
projects/admin.py:74: [C0111(missing-docstring), JobsLookup] Missing class docstring
projects/admin.py:78: [C0103(invalid-name), JobsLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:78: [C0111(missing-docstring), JobsLookup.get_query] Missing method docstring
projects/admin.py:78: [W0613(unused-argument), JobsLookup.get_query] Unused argument 'request'
projects/admin.py:81: [C0111(missing-docstring), JobsLookup.format_item_display] Missing method docstring
projects/admin.py:81: [R0201(no-self-use), JobsLookup.format_item_display] Method could be a function
projects/admin.py:85: [C0111(missing-docstring), ProjectsLookup] Missing class docstring
projects/admin.py:89: [C0103(invalid-name), ProjectsLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:89: [C0111(missing-docstring), ProjectsLookup.get_query] Missing method docstring
projects/admin.py:89: [W0613(unused-argument), ProjectsLookup.get_query] Unused argument 'request'
projects/admin.py:92: [C0111(missing-docstring), ProjectsLookup.format_item_display] Missing method docstring
projects/admin.py:92: [R0201(no-self-use), ProjectsLookup.format_item_display] Method could be a function
projects/admin.py:96: [C0111(missing-docstring), JobFieldsLookup] Missing class docstring
projects/admin.py:100: [C0103(invalid-name), JobFieldsLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:100: [C0111(missing-docstring), JobFieldsLookup.get_query] Missing method docstring
projects/admin.py:100: [W0613(unused-argument), JobFieldsLookup.get_query] Unused argument 'request'
projects/admin.py:103: [C0111(missing-docstring), JobFieldsLookup.format_item_display] Missing method docstring
projects/admin.py:103: [R0201(no-self-use), JobFieldsLookup.format_item_display] Method could be a function
projects/admin.py:107: [C0111(missing-docstring), UsersLookup] Missing class docstring
projects/admin.py:111: [C0103(invalid-name), UsersLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:111: [C0111(missing-docstring), UsersLookup.get_query] Missing method docstring
projects/admin.py:111: [W0613(unused-argument), UsersLookup.get_query] Unused argument 'request'
projects/admin.py:114: [C0111(missing-docstring), UsersLookup.format_item_display] Missing method docstring
projects/admin.py:114: [R0201(no-self-use), UsersLookup.format_item_display] Method could be a function
projects/admin.py:117: [W0613(unused-argument), UsersLookup.can_add] Unused argument 'user'
projects/admin.py:117: [W0613(unused-argument), UsersLookup.can_add] Unused argument 'model'
projects/admin.py:117: [R0201(no-self-use), UsersLookup.can_add] Method could be a function
projects/admin.py:124: [C0111(missing-docstring), ZoneAdminLookup] Missing class docstring
projects/admin.py:128: [C0103(invalid-name), ZoneAdminLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:128: [C0111(missing-docstring), ZoneAdminLookup.get_query] Missing method docstring
projects/admin.py:128: [W0613(unused-argument), ZoneAdminLookup.get_query] Unused argument 'request'
projects/admin.py:131: [C0111(missing-docstring), ZoneAdminLookup.format_item_display] Missing method docstring
projects/admin.py:131: [R0201(no-self-use), ZoneAdminLookup.format_item_display] Method could be a function
projects/admin.py:135: [C0111(missing-docstring), CompanyAdminLookup] Missing class docstring
projects/admin.py:139: [C0103(invalid-name), CompanyAdminLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:139: [C0111(missing-docstring), CompanyAdminLookup.get_query] Missing method docstring
projects/admin.py:139: [W0613(unused-argument), CompanyAdminLookup.get_query] Unused argument 'request'
projects/admin.py:142: [C0111(missing-docstring), CompanyAdminLookup.format_item_display] Missing method docstring
projects/admin.py:142: [R0201(no-self-use), CompanyAdminLookup.format_item_display] Method could be a function
projects/admin.py:146: [C0111(missing-docstring), WorkflowMilestoneAdminLookup] Missing class docstring
projects/admin.py:150: [C0103(invalid-name), WorkflowMilestoneAdminLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:150: [C0111(missing-docstring), WorkflowMilestoneAdminLookup.get_query] Missing method docstring
projects/admin.py:150: [W0613(unused-argument), WorkflowMilestoneAdminLookup.get_query] Unused argument 'request'
projects/admin.py:153: [C0111(missing-docstring), WorkflowMilestoneAdminLookup.format_item_display] Missing method docstring
projects/admin.py:153: [R0201(no-self-use), WorkflowMilestoneAdminLookup.format_item_display] Method could be a function
projects/admin.py:157: [C0111(missing-docstring), SourceGanttsTaskTypesDependencyInlineLookup] Missing class docstring
projects/admin.py:161: [C0103(invalid-name), SourceGanttsTaskTypesDependencyInlineLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:161: [C0111(missing-docstring), SourceGanttsTaskTypesDependencyInlineLookup.get_query] Missing method docstring
projects/admin.py:161: [W0613(unused-argument), SourceGanttsTaskTypesDependencyInlineLookup.get_query] Unused argument 'request'
projects/admin.py:164: [C0111(missing-docstring), SourceGanttsTaskTypesDependencyInlineLookup.format_item_display] Missing method docstring
projects/admin.py:164: [R0201(no-self-use), SourceGanttsTaskTypesDependencyInlineLookup.format_item_display] Method could be a function
projects/admin.py:168: [C0111(missing-docstring), GanttAdminLookup] Missing class docstring
projects/admin.py:172: [C0103(invalid-name), GanttAdminLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:172: [C0111(missing-docstring), GanttAdminLookup.get_query] Missing method docstring
projects/admin.py:172: [W0613(unused-argument), GanttAdminLookup.get_query] Unused argument 'request'
projects/admin.py:175: [C0111(missing-docstring), GanttAdminLookup.format_item_display] Missing method docstring
projects/admin.py:175: [R0201(no-self-use), GanttAdminLookup.format_item_display] Method could be a function
projects/admin.py:179: [C0111(missing-docstring), TasksAdminLookup] Missing class docstring
projects/admin.py:183: [C0103(invalid-name), TasksAdminLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:183: [C0111(missing-docstring), TasksAdminLookup.get_query] Missing method docstring
projects/admin.py:183: [W0613(unused-argument), TasksAdminLookup.get_query] Unused argument 'request'
projects/admin.py:186: [C0111(missing-docstring), TasksAdminLookup.format_item_display] Missing method docstring
projects/admin.py:186: [R0201(no-self-use), TasksAdminLookup.format_item_display] Method could be a function
projects/admin.py:190: [C0111(missing-docstring), TaskTypesAdminLookup] Missing class docstring
projects/admin.py:194: [C0103(invalid-name), TaskTypesAdminLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:194: [C0111(missing-docstring), TaskTypesAdminLookup.get_query] Missing method docstring
projects/admin.py:194: [W0613(unused-argument), TaskTypesAdminLookup.get_query] Unused argument 'request'
projects/admin.py:197: [C0111(missing-docstring), TaskTypesAdminLookup.format_item_display] Missing method docstring
projects/admin.py:197: [R0201(no-self-use), TaskTypesAdminLookup.format_item_display] Method could be a function
projects/admin.py:201: [C0111(missing-docstring), JobTypesFieldsInlineLookup] Missing class docstring
projects/admin.py:205: [C0103(invalid-name), JobTypesFieldsInlineLookup.get_query] Argument name "q" doesn't conform to snake_case naming style
projects/admin.py:205: [C0111(missing-docstring), JobTypesFieldsInlineLookup.get_query] Missing method docstring
projects/admin.py:205: [W0613(unused-argument), JobTypesFieldsInlineLookup.get_query] Unused argument 'request'
projects/admin.py:208: [C0111(missing-docstring), JobTypesFieldsInlineLookup.format_item_display] Missing method docstring
projects/admin.py:208: [R0201(no-self-use), JobTypesFieldsInlineLookup.format_item_display] Method could be a function
projects/admin.py:212: [C0111(missing-docstring), SaveDeleteAsAdminMixin] Missing class docstring
projects/admin.py:212: [R0205(useless-object-inheritance), SaveDeleteAsAdminMixin] Class 'SaveDeleteAsAdminMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:213: [C0111(missing-docstring), SaveDeleteAsAdminMixin.save_model] Missing method docstring
projects/admin.py:214: [W0212(protected-access), SaveDeleteAsAdminMixin.save_model] Access to a protected member _changed_by_admin_app of a client class
projects/admin.py:217: [C0111(missing-docstring), SaveDeleteAsAdminMixin.delete_model] Missing method docstring
projects/admin.py:218: [W0212(protected-access), SaveDeleteAsAdminMixin.delete_model] Access to a protected member _changed_by_admin_app of a client class
projects/admin.py:221: [C0111(missing-docstring), SaveDeleteAsAdminMixin.save_formset] Missing method docstring
projects/admin.py:224: [W0212(protected-access), SaveDeleteAsAdminMixin.save_formset] Access to a protected member _changed_by_admin_app of a client class
projects/admin.py:227: [W0212(protected-access), SaveDeleteAsAdminMixin.save_formset] Access to a protected member _changed_by_admin_app of a client class
projects/admin.py:221: [W0613(unused-argument), SaveDeleteAsAdminMixin.save_formset] Unused argument 'request'
projects/admin.py:221: [W0613(unused-argument), SaveDeleteAsAdminMixin.save_formset] Unused argument 'form'
projects/admin.py:221: [W0613(unused-argument), SaveDeleteAsAdminMixin.save_formset] Unused argument 'change'
projects/admin.py:221: [R0201(no-self-use), SaveDeleteAsAdminMixin.save_formset] Method could be a function
projects/admin.py:232: [C0111(missing-docstring), SourceGanttsTaskTypesDependencyInline] Missing class docstring
projects/admin.py:242: [C0111(missing-docstring), SourceGanttsTaskTypesDependencyInline.get_queryset] Missing method docstring
projects/admin.py:243: [C0103(invalid-name), SourceGanttsTaskTypesDependencyInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:232: [R0903(too-few-public-methods), SourceGanttsTaskTypesDependencyInline] Too few public methods (1/2)
projects/admin.py:248: [C0111(missing-docstring), GanttsTaskTypesAdmin] Missing class docstring
projects/admin.py:261: [C0111(missing-docstring), GanttsTaskTypesAdmin.get_queryset] Missing method docstring
projects/admin.py:262: [C0103(invalid-name), GanttsTaskTypesAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:267: [C0111(missing-docstring), GanttsTaskTypesInline] Missing class docstring
projects/admin.py:278: [C0111(missing-docstring), GanttsTaskTypesInline.get_queryset] Missing method docstring
projects/admin.py:279: [C0103(invalid-name), GanttsTaskTypesInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:267: [R0903(too-few-public-methods), GanttsTaskTypesInline] Too few public methods (1/2)
projects/admin.py:283: [C0111(missing-docstring), clone_gantt] Missing function docstring
projects/admin.py:283: [W0613(unused-argument), clone_gantt] Unused argument 'modeladmin'
projects/admin.py:283: [W0613(unused-argument), clone_gantt] Unused argument 'request'
projects/admin.py:309: [C0111(missing-docstring), GanttAdmin] Missing class docstring
projects/admin.py:318: [C0111(missing-docstring), TasksDependencyAdmin] Missing class docstring
projects/admin.py:322: [W0212(protected-access), TasksDependencyAdmin] Access to a protected member _meta of a client class
projects/admin.py:328: [C0111(missing-docstring), SourceTasksDependencyInline] Missing class docstring
projects/admin.py:338: [C0111(missing-docstring), SourceTasksDependencyInline.get_queryset] Missing method docstring
projects/admin.py:339: [C0103(invalid-name), SourceTasksDependencyInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:328: [R0903(too-few-public-methods), SourceTasksDependencyInline] Too few public methods (1/2)
projects/admin.py:344: [C0111(missing-docstring), CoreFieldsFormMixin] Missing class docstring
projects/admin.py:344: [R0205(useless-object-inheritance), CoreFieldsFormMixin] Class 'CoreFieldsFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:345: [C0111(missing-docstring), CoreFieldsFormMixin.clean_real_date_start] Missing method docstring
projects/admin.py:350: [C0111(missing-docstring), CoreFieldsFormMixin.clean_real_date_end] Missing method docstring
projects/admin.py:355: [C0111(missing-docstring), CoreFieldsFormMixin.clean] Missing method docstring
projects/admin.py:366: [C0111(missing-docstring), TechnicalNameFormMixin] Missing class docstring
projects/admin.py:366: [R0205(useless-object-inheritance), TechnicalNameFormMixin] Class 'TechnicalNameFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:367: [C0111(missing-docstring), TechnicalNameFormMixin.clean_technical_name] Missing method docstring
projects/admin.py:366: [R0903(too-few-public-methods), TechnicalNameFormMixin] Too few public methods (1/2)
projects/admin.py:373: [C0111(missing-docstring), JobTypeWriteOnceFormMixin] Missing class docstring
projects/admin.py:373: [R0205(useless-object-inheritance), JobTypeWriteOnceFormMixin] Class 'JobTypeWriteOnceFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:374: [C0111(missing-docstring), JobTypeWriteOnceFormMixin.clean_job_type] Missing method docstring
projects/admin.py:377: [W0702(bare-except), JobTypeWriteOnceFormMixin.clean_job_type] No exception type(s) specified
projects/admin.py:373: [R0903(too-few-public-methods), JobTypeWriteOnceFormMixin] Too few public methods (1/2)
projects/admin.py:384: [C0111(missing-docstring), JobWriteOnceFormMixin] Missing class docstring
projects/admin.py:384: [R0205(useless-object-inheritance), JobWriteOnceFormMixin] Class 'JobWriteOnceFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:385: [C0111(missing-docstring), JobWriteOnceFormMixin.clean_job] Missing method docstring
projects/admin.py:388: [W0702(bare-except), JobWriteOnceFormMixin.clean_job] No exception type(s) specified
projects/admin.py:384: [R0903(too-few-public-methods), JobWriteOnceFormMixin] Too few public methods (1/2)
projects/admin.py:395: [C0111(missing-docstring), TaskTypeWriteOnceFormMixin] Missing class docstring
projects/admin.py:395: [R0205(useless-object-inheritance), TaskTypeWriteOnceFormMixin] Class 'TaskTypeWriteOnceFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:396: [C0111(missing-docstring), TaskTypeWriteOnceFormMixin.clean_task_type] Missing method docstring
projects/admin.py:399: [W0702(bare-except), TaskTypeWriteOnceFormMixin.clean_task_type] No exception type(s) specified
projects/admin.py:395: [R0903(too-few-public-methods), TaskTypeWriteOnceFormMixin] Too few public methods (1/2)
projects/admin.py:406: [C0111(missing-docstring), TaskWriteOnceFormMixin] Missing class docstring
projects/admin.py:406: [R0205(useless-object-inheritance), TaskWriteOnceFormMixin] Class 'TaskWriteOnceFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:407: [C0111(missing-docstring), TaskWriteOnceFormMixin.clean_task] Missing method docstring
projects/admin.py:410: [W0702(bare-except), TaskWriteOnceFormMixin.clean_task] No exception type(s) specified
projects/admin.py:406: [R0903(too-few-public-methods), TaskWriteOnceFormMixin] Too few public methods (1/2)
projects/admin.py:417: [C0111(missing-docstring), JobAdminForm] Missing class docstring
projects/admin.py:423: [C0111(missing-docstring), TaskAdminForm] Missing class docstring
projects/admin.py:430: [C0111(missing-docstring), ProjectAdminForm] Missing class docstring
projects/admin.py:434: [C0111(missing-docstring), FieldAdminForm] Missing class docstring
projects/admin.py:440: [W0702(bare-except), FieldAdminForm.clean_technical_name] No exception type(s) specified
projects/admin.py:446: [C0111(missing-docstring), FieldAdminForm.clean_type] Missing method docstring
projects/admin.py:453: [W0702(bare-except), FieldAdminForm.clean_type] No exception type(s) specified
projects/admin.py:460: [C0111(missing-docstring), FieldWriteOnceFormMixin] Missing class docstring
projects/admin.py:460: [R0205(useless-object-inheritance), FieldWriteOnceFormMixin] Class 'FieldWriteOnceFormMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:461: [C0111(missing-docstring), FieldWriteOnceFormMixin.clean_field] Missing method docstring
projects/admin.py:464: [W0702(bare-except), FieldWriteOnceFormMixin.clean_field] No exception type(s) specified
projects/admin.py:460: [R0903(too-few-public-methods), FieldWriteOnceFormMixin] Too few public methods (1/2)
projects/admin.py:471: [C0111(missing-docstring), FieldsInlineForm] Missing class docstring
projects/admin.py:471: [R0903(too-few-public-methods), FieldsInlineForm] Too few public methods (1/2)
projects/admin.py:475: [C0111(missing-docstring), JobInline] Missing class docstring
projects/admin.py:483: [C0111(missing-docstring), JobInline.get_queryset] Missing method docstring
projects/admin.py:484: [C0103(invalid-name), JobInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:475: [R0903(too-few-public-methods), JobInline] Too few public methods (1/2)
projects/admin.py:489: [C0111(missing-docstring), ProjectsInlineFormSet] Missing class docstring
projects/admin.py:490: [C0111(missing-docstring), ProjectsInlineFormSet.clean] Missing method docstring
projects/admin.py:489: [R0903(too-few-public-methods), ProjectsInlineFormSet] Too few public methods (1/2)
projects/admin.py:508: [C0111(missing-docstring), ProjectsInline] Missing class docstring
projects/admin.py:517: [C0111(missing-docstring), ProjectsInline.get_queryset] Missing method docstring
projects/admin.py:518: [C0103(invalid-name), ProjectsInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:508: [R0903(too-few-public-methods), ProjectsInline] Too few public methods (1/2)
projects/admin.py:523: [C0111(missing-docstring), JobFieldsInline] Missing class docstring
projects/admin.py:535: [C0111(missing-docstring), JobFieldsInline.get_queryset] Missing method docstring
projects/admin.py:536: [C0103(invalid-name), JobFieldsInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:523: [R0903(too-few-public-methods), JobFieldsInline] Too few public methods (1/2)
projects/admin.py:541: [C0111(missing-docstring), JobTasksInline] Missing class docstring
projects/admin.py:564: [C0111(missing-docstring), JobTasksInline.get_queryset] Missing method docstring
projects/admin.py:565: [C0103(invalid-name), JobTasksInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:541: [R0903(too-few-public-methods), JobTasksInline] Too few public methods (1/2)
projects/admin.py:575: [C0111(missing-docstring), JobAdmin] Missing class docstring
projects/admin.py:608: [C0111(missing-docstring), JobAdmin.get_queryset] Missing method docstring
projects/admin.py:610: [C0103(invalid-name), JobAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:614: [C0111(missing-docstring), TaskFieldsInline] Missing class docstring
projects/admin.py:626: [C0111(missing-docstring), TaskFieldsInline.get_queryset] Missing method docstring
projects/admin.py:627: [C0103(invalid-name), TaskFieldsInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:614: [R0903(too-few-public-methods), TaskFieldsInline] Too few public methods (1/2)
projects/admin.py:632: [C0111(missing-docstring), TaskAdmin] Missing class docstring
projects/admin.py:666: [C0111(missing-docstring), TaskAdmin.get_queryset] Missing method docstring
projects/admin.py:668: [C0103(invalid-name), TaskAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:672: [C0111(missing-docstring), ProjectAdminDelete] Missing class docstring
projects/admin.py:687: [C0111(missing-docstring), JobTypesFieldsInline] Missing class docstring
projects/admin.py:701: [C0111(missing-docstring), JobTypesFieldsInline.get_queryset_job] Missing method docstring
projects/admin.py:702: [C0103(invalid-name), JobTypesFieldsInline.get_queryset_job] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:701: [W0613(unused-argument), JobTypesFieldsInline.get_queryset_job] Unused argument 'apply_permissions_filter'
projects/admin.py:687: [R0903(too-few-public-methods), JobTypesFieldsInline] Too few public methods (1/2)
projects/admin.py:707: [C0111(missing-docstring), clone_job_type] Missing function docstring
projects/admin.py:707: [W0613(unused-argument), clone_job_type] Unused argument 'modeladmin'
projects/admin.py:707: [W0613(unused-argument), clone_job_type] Unused argument 'request'
projects/admin.py:730: [C0111(missing-docstring), JobTypeAdmin] Missing class docstring
projects/admin.py:737: [C0111(missing-docstring), TaskTypeFieldsInline] Missing class docstring
projects/admin.py:749: [C0111(missing-docstring), TaskTypeFieldsInline.get_queryset] Missing method docstring
projects/admin.py:750: [C0103(invalid-name), TaskTypeFieldsInline.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:737: [R0903(too-few-public-methods), TaskTypeFieldsInline] Too few public methods (1/2)
projects/admin.py:755: [C0111(missing-docstring), clone_task_type] Missing function docstring
projects/admin.py:755: [W0613(unused-argument), clone_task_type] Unused argument 'modeladmin'
projects/admin.py:755: [W0613(unused-argument), clone_task_type] Unused argument 'request'
projects/admin.py:786: [C0111(missing-docstring), TaskTypeAdmin] Missing class docstring
projects/admin.py:794: [C0111(missing-docstring), FieldAdmin] Missing class docstring
projects/admin.py:804: [C0111(missing-docstring), FieldAdmin.add_view] Missing method docstring
projects/admin.py:809: [C0111(missing-docstring), FieldAdmin.change_view] Missing method docstring
projects/admin.py:816: [C0111(missing-docstring), FieldAdmin.options_docs] Missing method docstring
projects/admin.py:816: [W0613(unused-argument), FieldAdmin.options_docs] Unused argument 'obj'
projects/admin.py:816: [R0201(no-self-use), FieldAdmin.options_docs] Method could be a function
projects/admin.py:821: [C0111(missing-docstring), BaseFieldsEntitiesAdminMixin] Missing class docstring
projects/admin.py:821: [R0205(useless-object-inheritance), BaseFieldsEntitiesAdminMixin] Class 'BaseFieldsEntitiesAdminMixin' inherits from object, can be safely removed from bases in python3
projects/admin.py:821: [R0903(too-few-public-methods), BaseFieldsEntitiesAdminMixin] Too few public methods (0/2)
projects/admin.py:827: [C0111(missing-docstring), FieldsJobTypesForm] Missing class docstring
projects/admin.py:831: [C0111(missing-docstring), FieldsJobTypesAdmin] Missing class docstring
projects/admin.py:840: [C0111(missing-docstring), FieldsJobTypesAdmin.get_queryset] Missing method docstring
projects/admin.py:841: [C0103(invalid-name), FieldsJobTypesAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:846: [C0111(missing-docstring), FieldsJobsForm] Missing class docstring
projects/admin.py:850: [C0111(missing-docstring), FieldsJobsAdmin] Missing class docstring
projects/admin.py:859: [C0111(missing-docstring), FieldsJobsAdmin.get_queryset] Missing method docstring
projects/admin.py:860: [C0103(invalid-name), FieldsJobsAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:865: [C0111(missing-docstring), FieldsTaskTypesForm] Missing class docstring
projects/admin.py:871: [C0111(missing-docstring), FieldsTaskTypesAdmin] Missing class docstring
projects/admin.py:880: [C0111(missing-docstring), FieldsTaskTypesAdmin.get_queryset] Missing method docstring
projects/admin.py:881: [C0103(invalid-name), FieldsTaskTypesAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:886: [C0111(missing-docstring), FieldsTasksForm] Missing class docstring
projects/admin.py:890: [C0111(missing-docstring), FieldsTasksAdmin] Missing class docstring
projects/admin.py:899: [C0111(missing-docstring), FieldsTasksAdmin.get_queryset] Missing method docstring
projects/admin.py:900: [C0103(invalid-name), FieldsTasksAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:905: [C0111(missing-docstring), DocumentTypeAdmin] Missing class docstring
projects/admin.py:905: [R0903(too-few-public-methods), DocumentTypeAdmin] Too few public methods (0/2)
projects/admin.py:911: [C0111(missing-docstring), DocumentCategoryAdmin] Missing class docstring
projects/admin.py:916: [C0111(missing-docstring), ZoneAdmin] Missing class docstring
projects/admin.py:922: [C0111(missing-docstring), EconomicBudgetAdmin] Missing class docstring
projects/admin.py:922: [R0903(too-few-public-methods), EconomicBudgetAdmin] Too few public methods (0/2)
projects/admin.py:928: [C0111(missing-docstring), EconomicProviderAdmin] Missing class docstring
projects/admin.py:928: [R0903(too-few-public-methods), EconomicProviderAdmin] Too few public methods (0/2)
projects/admin.py:934: [C0111(missing-docstring), ChangeLogAdmin] Missing class docstring
projects/admin.py:940: [C0111(missing-docstring), ChangeLogAdmin.row_actions] Missing method docstring
projects/admin.py:940: [R0201(no-self-use), ChangeLogAdmin.row_actions] Method could be a function
projects/admin.py:952: [C0111(missing-docstring), ChangeLogAdmin.get_urls] Missing method docstring
projects/admin.py:963: [C0111(missing-docstring), ChangeLogAdmin.notify] Missing method docstring
projects/admin.py:979: [C0111(missing-docstring), get_history_enabled_cts] Missing function docstring
projects/admin.py:988: [C0111(missing-docstring), HistoryContentTypeFilter] Missing class docstring
projects/admin.py:993: [C0111(missing-docstring), HistoryContentTypeFilter.enabled_cts] Missing method docstring
projects/admin.py:993: [R0201(no-self-use), HistoryContentTypeFilter.enabled_cts] Method could be a function
projects/admin.py:996: [C0111(missing-docstring), HistoryContentTypeFilter.lookups] Missing method docstring
projects/admin.py:996: [W0613(unused-argument), HistoryContentTypeFilter.lookups] Unused argument 'request'
projects/admin.py:996: [W0613(unused-argument), HistoryContentTypeFilter.lookups] Unused argument 'model_admin'
projects/admin.py:999: [C0111(missing-docstring), HistoryContentTypeFilter.queryset] Missing method docstring
projects/admin.py:999: [W0613(unused-argument), HistoryContentTypeFilter.queryset] Unused argument 'request'
projects/admin.py:1005: [C0111(missing-docstring), HistoryItemAdmin] Missing class docstring
projects/admin.py:1008: [W0212(protected-access), HistoryItemAdmin] Access to a protected member _meta of a client class
projects/admin.py:1013: [C0111(missing-docstring), HistoryItemAdmin.view_detail] Missing method docstring
projects/admin.py:1015: [W0621(redefined-outer-name), HistoryItemAdmin.view_detail] Redefining name 'url' from outer scope (line 5)
projects/admin.py:1013: [R0201(no-self-use), HistoryItemAdmin.view_detail] Method could be a function
projects/admin.py:1022: [C0111(missing-docstring), HistoryItemAdmin.get_actions] Missing method docstring
projects/admin.py:1028: [C0111(missing-docstring), HistoryItemAdmin.get_queryset] Missing method docstring
projects/admin.py:1029: [C0103(invalid-name), HistoryItemAdmin.get_queryset] Variable name "qs" doesn't conform to snake_case naming style
projects/admin.py:1032: [C0111(missing-docstring), HistoryItemAdmin.has_delete_permission] Missing method docstring
projects/admin.py:1032: [W0613(unused-argument), HistoryItemAdmin.has_delete_permission] Unused argument 'request'
projects/admin.py:1032: [W0613(unused-argument), HistoryItemAdmin.has_delete_permission] Unused argument 'obj'
projects/admin.py:1032: [R0201(no-self-use), HistoryItemAdmin.has_delete_permission] Method could be a function
projects/admin.py:1035: [C0111(missing-docstring), HistoryItemAdmin.has_add_permission] Missing method docstring
projects/admin.py:1035: [W0613(unused-argument), HistoryItemAdmin.has_add_permission] Unused argument 'request'
projects/admin.py:1035: [W0613(unused-argument), HistoryItemAdmin.has_add_permission] Unused argument 'obj'
projects/admin.py:1035: [R0201(no-self-use), HistoryItemAdmin.has_add_permission] Method could be a function
projects/admin.py:27: [C0411(wrong-import-order), ] third party import "from django.http import JsonResponse" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:30: [C0411(wrong-import-order), ] third party import "from django.forms import ModelForm, BaseInlineFormSet" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:31: [C0411(wrong-import-order), ] third party import "from django.http import HttpResponse" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:42: [C0411(wrong-import-order), ] third party import "from django.apps import apps as django_apps" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:43: [C0411(wrong-import-order), ] third party import "from django.contrib.contenttypes.models import ContentType" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:46: [C0411(wrong-import-order), ] third party import "from django.utils.html import format_html" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:47: [C0411(wrong-import-order), ] third party import "from django.urls import reverse" should be placed before "from projects.models import Project, Job, JobType, ChangeLog, JobLink, DocumentType"
projects/admin.py:49: [C0411(wrong-import-order), ] standard import "import csv" should be placed before "from cached_property import cached_property"
projects/admin.py:27: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/admin.py:28: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
projects/admin.py:30: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/admin.py:32: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
projects/admin.py:42: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/admin.py:44: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
projects/admin.py:46: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/admin.py:48: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module projects
projects/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module projects.validators
projects/validators.py:14: [W0511(fixme), ] TODO: this could be a field-level validator but drf do not to call passed validators (via 'extra_kwargs' in our case)
projects/validators.py:150: [W0511(fixme), ] TODO: check this. Code taken from this same method of UniqueValidator, file rest_framework/validation.py
projects/validators.py:14: [C0301(line-too-long), ] Line too long (119/100)
projects/validators.py:20: [C0301(line-too-long), ] Line too long (115/100)
projects/validators.py:57: [C0301(line-too-long), ] Line too long (120/100)
projects/validators.py:96: [C0301(line-too-long), ] Line too long (112/100)
projects/validators.py:150: [C0301(line-too-long), ] Line too long (114/100)
projects/validators.py:171: [C0301(line-too-long), ] Line too long (108/100)
projects/validators.py:175: [C0301(line-too-long), ] Line too long (103/100)
projects/validators.py:216: [C0301(line-too-long), ] Line too long (109/100)
projects/validators.py:218: [C0301(line-too-long), ] Line too long (115/100)
projects/validators.py:277: [C0301(line-too-long), ] Line too long (109/100)
projects/validators.py:278: [C0301(line-too-long), ] Line too long (118/100)
projects/validators.py:280: [C0301(line-too-long), ] Line too long (116/100)
projects/validators.py:283: [C0301(line-too-long), ] Line too long (102/100)
projects/validators.py:288: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                if field.get('mandatory')
            |   ^
projects/validators.py:289: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    and (not self.instance.dynamic_data or not self.instance.dynamic_data.get(key))
            |       ^
projects/validators.py:290: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    and not data.get('dynamic_data', {}).get(key)
            |       ^
projects/validators.py:370: [C0326(bad-whitespace), ] Exactly one space required around assignment
        self.field_names=field_names
                        ^
projects/validators.py:374: [C0326(bad-whitespace), ] Exactly one space required after comma
        self.instance = getattr(serializer,'instance',None)
                                          ^
projects/validators.py:374: [C0326(bad-whitespace), ] Exactly one space required after comma
        self.instance = getattr(serializer,'instance',None)
                                                     ^
projects/validators.py:390: [C0326(bad-whitespace), ] Exactly one space required after comma
    def __init__(self, instance=None, field=None, field_name=None,  message=""):
                                                                 ^
projects/validators.py:482: [C0301(line-too-long), ] Line too long (104/100)
projects/validators.py:515: [C0301(line-too-long), ] Line too long (113/100)
projects/validators.py:523: [C0301(line-too-long), ] Line too long (114/100)
projects/validators.py:568: [C0301(line-too-long), ] Line too long (115/100)
projects/validators.py:569: [C0301(line-too-long), ] Line too long (121/100)
projects/validators.py:571: [C0301(line-too-long), ] Line too long (103/100)
projects/validators.py:572: [C0301(line-too-long), ] Line too long (114/100)
projects/validators.py:589: [C0301(line-too-long), ] Line too long (120/100)
projects/validators.py:592: [C0301(line-too-long), ] Line too long (152/100)
projects/validators.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/validators.py:6: [E0401(import-error), ] Unable to import 'django.db.models'
projects/validators.py:7: [E0401(import-error), ] Unable to import 'rest_framework'
projects/validators.py:8: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/validators.py:9: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/validators.py:19: [C0111(missing-docstring), DifferentTreeRootsValidator] Missing class docstring
projects/validators.py:19: [R0205(useless-object-inheritance), DifferentTreeRootsValidator] Class 'DifferentTreeRootsValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:28: [W0613(unused-argument), DifferentTreeRootsValidator.set_context] Unused argument 'serializer'
projects/validators.py:44: [W0212(protected-access), DifferentTreeRootsValidator.__call__] Access to a protected member _meta of a client class
projects/validators.py:48: [R1720(no-else-raise), DifferentTreeRootsValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:56: [C0111(missing-docstring), AllowOnlyTreeLeafsValidator] Missing class docstring
projects/validators.py:56: [R0205(useless-object-inheritance), AllowOnlyTreeLeafsValidator] Class 'AllowOnlyTreeLeafsValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:87: [R1720(no-else-raise), AllowOnlyTreeLeafsValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:93: [C0111(missing-docstring), TechnicalNameValidator] Missing class docstring
projects/validators.py:93: [R0205(useless-object-inheritance), TechnicalNameValidator] Class 'TechnicalNameValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:126: [R1720(no-else-raise), TechnicalNameValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:132: [C0111(missing-docstring), WriteOnceValidator] Missing class docstring
projects/validators.py:132: [R0205(useless-object-inheritance), WriteOnceValidator] Class 'WriteOnceValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:163: [R1720(no-else-raise), WriteOnceValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:169: [R0205(useless-object-inheritance), StartEndDateValidator] Class 'StartEndDateValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:221: [R1720(no-else-raise), StartEndDateValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:227: [C0111(missing-docstring), FutureDateNotAllowedValidator] Missing class docstring
projects/validators.py:227: [R0205(useless-object-inheritance), FutureDateNotAllowedValidator] Class 'FutureDateNotAllowedValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:248: [R1720(no-else-raise), FutureDateNotAllowedValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:254: [R0205(useless-object-inheritance), MandatoryDynamicFieldsForClosingTaskValidator] Class 'MandatoryDynamicFieldsForClosingTaskValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:295: [R1720(no-else-raise), MandatoryDynamicFieldsForClosingTaskValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:301: [C0111(missing-docstring), UpdateOnAttributeIsNotNoneValidator] Missing class docstring
projects/validators.py:301: [R0205(useless-object-inheritance), UpdateOnAttributeIsNotNoneValidator] Class 'UpdateOnAttributeIsNotNoneValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:310: [C0111(missing-docstring), UpdateOnAttributeIsNotNoneValidator.set_context] Missing method docstring
projects/validators.py:320: [R1720(no-else-raise), UpdateOnAttributeIsNotNoneValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:326: [C0111(missing-docstring), CreateOnAttributeConditionValidator] Missing class docstring
projects/validators.py:326: [R0205(useless-object-inheritance), CreateOnAttributeConditionValidator] Class 'CreateOnAttributeConditionValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:335: [C0111(missing-docstring), CreateOnAttributeConditionValidator.fail_on_condition] Missing method docstring
projects/validators.py:338: [C0111(missing-docstring), CreateOnAttributeConditionValidator.set_context] Missing method docstring
projects/validators.py:348: [R1720(no-else-raise), CreateOnAttributeConditionValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:354: [C0111(missing-docstring), CreateOnAttributeIsNoneValidator] Missing class docstring
projects/validators.py:359: [C0111(missing-docstring), CreateOnAttributeIsNotNoneValidator] Missing class docstring
projects/validators.py:364: [C0111(missing-docstring), UpdateForceRequiredFieldsValidator] Missing class docstring
projects/validators.py:364: [R0205(useless-object-inheritance), UpdateForceRequiredFieldsValidator] Class 'UpdateForceRequiredFieldsValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:372: [C0111(missing-docstring), UpdateForceRequiredFieldsValidator.set_context] Missing method docstring
projects/validators.py:379: [C1801(len-as-condition), UpdateForceRequiredFieldsValidator.__call__] Do not use `len(SEQUENCE)` to determine if a sequence is empty
projects/validators.py:383: [R1720(no-else-raise), UpdateForceRequiredFieldsValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:389: [C0111(missing-docstring), UpdateFieldIsOriginallyNoneValidator] Missing class docstring
projects/validators.py:389: [R0205(useless-object-inheritance), UpdateFieldIsOriginallyNoneValidator] Class 'UpdateFieldIsOriginallyNoneValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:397: [C0111(missing-docstring), UpdateFieldIsOriginallyNoneValidator.set_context] Missing method docstring
projects/validators.py:407: [R1720(no-else-raise), UpdateFieldIsOriginallyNoneValidator.__call__] Unnecessary "else" after "raise"
projects/validators.py:437: [C0111(missing-docstring), UserIsAllowedValidator] Missing class docstring
projects/validators.py:437: [R0205(useless-object-inheritance), UserIsAllowedValidator] Class 'UserIsAllowedValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:445: [C0111(missing-docstring), UserIsAllowedValidator.set_context] Missing method docstring
projects/validators.py:451: [W0107(unnecessary-pass), UserIsAllowedValidator.__call__] Unnecessary pass statement
projects/validators.py:456: [C0111(missing-docstring), AllowedStateTransitionValidator] Missing class docstring
projects/validators.py:456: [R0205(useless-object-inheritance), AllowedStateTransitionValidator] Class 'AllowedStateTransitionValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:462: [C0111(missing-docstring), AllowedStateTransitionValidator.set_context] Missing method docstring
projects/validators.py:474: [C0111(missing-docstring), TaskTypeJobTypeCompatibilityValidator] Missing class docstring
projects/validators.py:474: [R0205(useless-object-inheritance), TaskTypeJobTypeCompatibilityValidator] Class 'TaskTypeJobTypeCompatibilityValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:474: [R0903(too-few-public-methods), TaskTypeJobTypeCompatibilityValidator] Too few public methods (1/2)
projects/validators.py:486: [C0111(missing-docstring), IsTaskExternalLinkValidator] Missing class docstring
projects/validators.py:486: [R0205(useless-object-inheritance), IsTaskExternalLinkValidator] Class 'IsTaskExternalLinkValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:486: [R0903(too-few-public-methods), IsTaskExternalLinkValidator] Too few public methods (1/2)
projects/validators.py:496: [R0205(useless-object-inheritance), CheckMandatoryCloseTaskExternalLinkValidator] Class 'CheckMandatoryCloseTaskExternalLinkValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:496: [R0903(too-few-public-methods), CheckMandatoryCloseTaskExternalLinkValidator] Too few public methods (1/2)
projects/validators.py:531: [C0111(missing-docstring), IsNewGraphStillADagValidator] Missing class docstring
projects/validators.py:531: [R0205(useless-object-inheritance), IsNewGraphStillADagValidator] Class 'IsNewGraphStillADagValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:531: [R0903(too-few-public-methods), IsNewGraphStillADagValidator] Too few public methods (1/2)
projects/validators.py:544: [C0111(missing-docstring), ExternalInboundLinksConstraintsValidator] Missing class docstring
projects/validators.py:544: [R0205(useless-object-inheritance), ExternalInboundLinksConstraintsValidator] Class 'ExternalInboundLinksConstraintsValidator' inherits from object, can be safely removed from bases in python3
projects/validators.py:551: [C0111(missing-docstring), ExternalInboundLinksConstraintsValidator.set_context] Missing method docstring
projects/validators.py:577: [C0111(missing-docstring), InboundLinksConstraintsValidator] Missing class docstring
projects/validators.py:6: [W0611(unused-import), ] Unused Q imported from django.db.models
projects/validators.py:11: [C0411(wrong-import-order), ] standard import "import re" should be placed before "from django.db.models import Q, Model"
projects/validators.py:8: [C0412(ungrouped-imports), ] Imports from package django are not grouped
************* Module projects.async_jobs
projects/async_jobs.py:230: [W0511(fixme), ] TODO: improvement needed here: all data is loaded in memory and then rendered, should be read, render and forget.
projects/async_jobs.py:1026: [W0511(fixme), ] TODO: check again assign permission? Could have changed in between API call and async job execution.
projects/async_jobs.py:28: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:32: [C0301(line-too-long), ] Line too long (107/100)
projects/async_jobs.py:42: [C0301(line-too-long), ] Line too long (118/100)
projects/async_jobs.py:43: [C0301(line-too-long), ] Line too long (119/100)
projects/async_jobs.py:44: [C0301(line-too-long), ] Line too long (102/100)
projects/async_jobs.py:222: [C0301(line-too-long), ] Line too long (108/100)
projects/async_jobs.py:230: [C0301(line-too-long), ] Line too long (119/100)
projects/async_jobs.py:260: [C0301(line-too-long), ] Line too long (106/100)
projects/async_jobs.py:262: [C0301(line-too-long), ] Line too long (101/100)
projects/async_jobs.py:301: [C0301(line-too-long), ] Line too long (104/100)
projects/async_jobs.py:305: [C0301(line-too-long), ] Line too long (116/100)
projects/async_jobs.py:323: [C0301(line-too-long), ] Line too long (118/100)
projects/async_jobs.py:383: [C0301(line-too-long), ] Line too long (114/100)
projects/async_jobs.py:386: [C0301(line-too-long), ] Line too long (115/100)
projects/async_jobs.py:390: [C0301(line-too-long), ] Line too long (124/100)
projects/async_jobs.py:395: [C0301(line-too-long), ] Line too long (107/100)
projects/async_jobs.py:587: [C0301(line-too-long), ] Line too long (120/100)
projects/async_jobs.py:596: [C0301(line-too-long), ] Line too long (105/100)
projects/async_jobs.py:609: [C0301(line-too-long), ] Line too long (101/100)
projects/async_jobs.py:611: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:619: [C0301(line-too-long), ] Line too long (134/100)
projects/async_jobs.py:650: [C0301(line-too-long), ] Line too long (119/100)
projects/async_jobs.py:677: [C0301(line-too-long), ] Line too long (107/100)
projects/async_jobs.py:746: [C0301(line-too-long), ] Line too long (108/100)
projects/async_jobs.py:793: [C0301(line-too-long), ] Line too long (101/100)
projects/async_jobs.py:796: [C0301(line-too-long), ] Line too long (110/100)
projects/async_jobs.py:798: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:799: [C0301(line-too-long), ] Line too long (115/100)
projects/async_jobs.py:882: [C0301(line-too-long), ] Line too long (103/100)
projects/async_jobs.py:916: [C0301(line-too-long), ] Line too long (111/100)
projects/async_jobs.py:925: [C0301(line-too-long), ] Line too long (118/100)
projects/async_jobs.py:926: [C0301(line-too-long), ] Line too long (103/100)
projects/async_jobs.py:939: [C0301(line-too-long), ] Line too long (112/100)
projects/async_jobs.py:940: [C0330(bad-continuation), ] Wrong hanging indentation (add 2 spaces).
                    contract=contract,
                    ^ |
projects/async_jobs.py:941: [C0330(bad-continuation), ] Wrong hanging indentation (add 2 spaces).
                    ccdnf=ccdnf,
                    ^ |
projects/async_jobs.py:942: [C0330(bad-continuation), ] Wrong hanging indentation (add 2 spaces).
                    sdc=sdc,
                    ^ |
projects/async_jobs.py:943: [C0330(bad-continuation), ] Wrong hanging indentation (add 2 spaces).
                    provider=provider,
                    ^ |
projects/async_jobs.py:944: [C0330(bad-continuation), ] Wrong hanging indentation (add 2 spaces).
                    hypothesys=hypothesis,
                    ^ |
projects/async_jobs.py:945: [C0330(bad-continuation), ] Wrong hanging indentation.
                )
                ^ |   |
projects/async_jobs.py:951: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:953: [C0301(line-too-long), ] Line too long (104/100)
projects/async_jobs.py:954: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:1005: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:1022: [C0301(line-too-long), ] Line too long (107/100)
projects/async_jobs.py:1026: [C0301(line-too-long), ] Line too long (110/100)
projects/async_jobs.py:1089: [C0301(line-too-long), ] Line too long (117/100)
projects/async_jobs.py:1116: [C0301(line-too-long), ] Line too long (108/100)
projects/async_jobs.py:1202: [C0301(line-too-long), ] Line too long (112/100)
projects/async_jobs.py:1205: [C0330(bad-continuation), ] Wrong hanging indentation (remove 1 space).
                                               'request': request,
                                              |^
projects/async_jobs.py:1229: [C0301(line-too-long), ] Line too long (113/100)
projects/async_jobs.py:1295: [C0330(bad-continuation), ] Wrong hanging indentation (remove 44 spaces).
                                                            'projects_ancestors': get_projects_ancestors(offer.task.job)
                |                                           ^
projects/async_jobs.py:1295: [C0301(line-too-long), ] Line too long (120/100)
projects/async_jobs.py:1296: [C0330(bad-continuation), ] Wrong hanging indentation.
                                                        }),
            |   |                                       ^
projects/async_jobs.py:1298: [C0301(line-too-long), ] Line too long (108/100)
projects/async_jobs.py:1302: [C0301(line-too-long), ] Line too long (111/100)
projects/async_jobs.py:1314: [C0301(line-too-long), ] Line too long (105/100)
projects/async_jobs.py:1: [C0302(too-many-lines), ] Too many lines in module (1354/1000)
projects/async_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/async_jobs.py:10: [E0401(import-error), ] Unable to import 'django.conf'
projects/async_jobs.py:11: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/async_jobs.py:12: [E0401(import-error), ] Unable to import 'django.core.files.base'
projects/async_jobs.py:13: [E0401(import-error), ] Unable to import 'django.db'
projects/async_jobs.py:14: [E0401(import-error), ] Unable to import 'django.db.models'
projects/async_jobs.py:15: [E0401(import-error), ] Unable to import 'django.core.files'
projects/async_jobs.py:16: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/async_jobs.py:17: [E0401(import-error), ] Unable to import 'django.http'
projects/async_jobs.py:18: [E0401(import-error), ] Unable to import 'django.utils.html'
projects/async_jobs.py:19: [E0401(import-error), ] Unable to import 'django_rq'
projects/async_jobs.py:20: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/async_jobs.py:22: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/async_jobs.py:23: [E0401(import-error), ] Unable to import 'rest_framework.utils.serializer_helpers'
projects/async_jobs.py:24: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
projects/async_jobs.py:42: [E0611(no-name-in-module), ] No name 'Report' in module 'projects.models'
projects/async_jobs.py:59: [R0914(too-many-locals), _generate_report_file] Too many local variables (18/15)
projects/async_jobs.py:109: [C0103(invalid-name), _generate_report_file] Variable name "qd" doesn't conform to snake_case naming style
projects/async_jobs.py:59: [R1710(inconsistent-return-statements), _generate_report_file] Either all return statements in a function should return an expression, or none of them should.
projects/async_jobs.py:138: [C0103(invalid-name), export_excel_data_tasks] Argument name "qs" doesn't conform to snake_case naming style
projects/async_jobs.py:138: [C0111(missing-docstring), export_excel_data_tasks] Missing function docstring
projects/async_jobs.py:138: [R0913(too-many-arguments), export_excel_data_tasks] Too many arguments (9/5)
projects/async_jobs.py:138: [R0914(too-many-locals), export_excel_data_tasks] Too many local variables (18/15)
projects/async_jobs.py:189: [C0103(invalid-name), get_export_excel_file] Argument name "qs" doesn't conform to snake_case naming style
projects/async_jobs.py:189: [C0111(missing-docstring), get_export_excel_file] Missing function docstring
projects/async_jobs.py:244: [C0103(invalid-name), export_excel_data] Argument name "qs" doesn't conform to snake_case naming style
projects/async_jobs.py:244: [R0913(too-many-arguments), export_excel_data] Too many arguments (9/5)
projects/async_jobs.py:301: [C0111(missing-docstring), import_excel_data] Missing function docstring
projects/async_jobs.py:320: [C0111(missing-docstring), import_excel_tasktypehypothesis] Missing function docstring
projects/async_jobs.py:320: [R0914(too-many-locals), import_excel_tasktypehypothesis] Too many local variables (24/15)
projects/async_jobs.py:332: [C0103(invalid-name), import_excel_tasktypehypothesis] Variable name "wb" doesn't conform to snake_case naming style
projects/async_jobs.py:333: [C0103(invalid-name), import_excel_tasktypehypothesis] Variable name "ws" doesn't conform to snake_case naming style
projects/async_jobs.py:387: [C0103(invalid-name), import_excel_tasktypehypothesis] Variable name "h" doesn't conform to snake_case naming style
projects/async_jobs.py:320: [R0912(too-many-branches), import_excel_tasktypehypothesis] Too many branches (13/12)
projects/async_jobs.py:414: [C0111(missing-docstring), import_excel_economicvalue] Missing function docstring
projects/async_jobs.py:432: [C0111(missing-docstring), import_excel_economichypothesiscode] Missing function docstring
projects/async_jobs.py:450: [C0103(invalid-name), export_excel_delegations] Argument name "qs" doesn't conform to snake_case naming style
projects/async_jobs.py:450: [C0111(missing-docstring), export_excel_delegations] Missing function docstring
projects/async_jobs.py:450: [R0913(too-many-arguments), export_excel_delegations] Too many arguments (11/5)
projects/async_jobs.py:450: [R0914(too-many-locals), export_excel_delegations] Too many local variables (17/15)
projects/async_jobs.py:495: [C0111(missing-docstring), import_excel_delegations] Missing function docstring
projects/async_jobs.py:513: [C0111(missing-docstring), export_excel_tasks_orders] Missing function docstring
projects/async_jobs.py:513: [R0913(too-many-arguments), export_excel_tasks_orders] Too many arguments (6/5)
projects/async_jobs.py:513: [R0914(too-many-locals), export_excel_tasks_orders] Too many local variables (40/15)
projects/async_jobs.py:533: [C0103(invalid-name), export_excel_tasks_orders] Variable name "qs" doesn't conform to snake_case naming style
projects/async_jobs.py:535: [C0103(invalid-name), export_excel_tasks_orders] Variable name "qs" doesn't conform to snake_case naming style
projects/async_jobs.py:618: [W0212(protected-access), export_excel_tasks_orders._get_projects_ancestors] Access to a protected member _job_projects_ancestor of a client class
projects/async_jobs.py:619: [W0212(protected-access), export_excel_tasks_orders._get_projects_ancestors] Access to a protected member _job_projects_ancestor of a client class
projects/async_jobs.py:624: [W0613(unused-argument), export_excel_tasks_orders._get_budgets] Unused argument 'self'
projects/async_jobs.py:652: [W0612(unused-variable), export_excel_tasks_orders] Unused variable 'i'
projects/async_jobs.py:513: [R0915(too-many-statements), export_excel_tasks_orders] Too many statements (68/50)
projects/async_jobs.py:705: [C0111(missing-docstring), import_excel_tasksolorders] Missing function docstring
projects/async_jobs.py:705: [R0914(too-many-locals), import_excel_tasksolorders] Too many local variables (29/15)
projects/async_jobs.py:723: [C0103(invalid-name), import_excel_tasksolorders] Variable name "wb" doesn't conform to snake_case naming style
projects/async_jobs.py:724: [C0103(invalid-name), import_excel_tasksolorders] Variable name "ws" doesn't conform to snake_case naming style
projects/async_jobs.py:747: [C0111(missing-docstring), import_excel_tasksolorders.TaskSolOrdersSerializerDbConstraint] Missing class docstring
projects/async_jobs.py:750: [C0111(missing-docstring), import_excel_tasksolorders.TaskSolOrdersSerializerDbConstraint.Meta] Missing class docstring
projects/async_jobs.py:750: [R0903(too-few-public-methods), import_excel_tasksolorders.TaskSolOrdersSerializerDbConstraint.Meta] Too few public methods (0/2)
projects/async_jobs.py:783: [C0103(invalid-name), import_excel_tasksolorders] Variable name "pk" doesn't conform to snake_case naming style
projects/async_jobs.py:795: [W0703(broad-except), import_excel_tasksolorders] Catching too general exception Exception
projects/async_jobs.py:795: [C0103(invalid-name), import_excel_tasksolorders] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:705: [R0912(too-many-branches), import_excel_tasksolorders] Too many branches (18/12)
projects/async_jobs.py:705: [R0915(too-many-statements), import_excel_tasksolorders] Too many statements (60/50)
projects/async_jobs.py:823: [C0111(missing-docstring), export_excel_precooked_data] Missing function docstring
projects/async_jobs.py:823: [R0913(too-many-arguments), export_excel_precooked_data] Too many arguments (6/5)
projects/async_jobs.py:857: [C0111(missing-docstring), assign_task_offers] Missing function docstring
projects/async_jobs.py:857: [R0914(too-many-locals), assign_task_offers] Too many local variables (39/15)
projects/async_jobs.py:892: [W0703(broad-except), assign_task_offers] Catching too general exception Exception
projects/async_jobs.py:892: [C0103(invalid-name), assign_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:914: [C0103(invalid-name), assign_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:923: [C0103(invalid-name), assign_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:935: [C0103(invalid-name), assign_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:987: [W0703(broad-except), assign_task_offers] Catching too general exception Exception
projects/async_jobs.py:987: [C0103(invalid-name), assign_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:998: [W0703(broad-except), assign_task_offers] Catching too general exception Exception
projects/async_jobs.py:998: [C0103(invalid-name), assign_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:1018: [W0702(bare-except), assign_task_offers] No exception type(s) specified
projects/async_jobs.py:1035: [C0103(invalid-name), assign_task_offers] Variable name "f" doesn't conform to snake_case naming style
projects/async_jobs.py:857: [R0912(too-many-branches), assign_task_offers] Too many branches (16/12)
projects/async_jobs.py:857: [R0915(too-many-statements), assign_task_offers] Too many statements (95/50)
projects/async_jobs.py:1045: [C0111(missing-docstring), validate_and_create_task_offers] Missing function docstring
projects/async_jobs.py:1116: [W0621(redefined-outer-name), validate_and_create_task_offers] Redefining name 'job' from outer scope (line 19)
projects/async_jobs.py:1045: [R0914(too-many-locals), validate_and_create_task_offers] Too many local variables (29/15)
projects/async_jobs.py:1070: [W0703(broad-except), validate_and_create_task_offers] Catching too general exception Exception
projects/async_jobs.py:1070: [C0103(invalid-name), validate_and_create_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:1080: [W0703(broad-except), validate_and_create_task_offers] Catching too general exception Exception
projects/async_jobs.py:1080: [C0103(invalid-name), validate_and_create_task_offers] Variable name "e" doesn't conform to snake_case naming style
projects/async_jobs.py:1139: [C0103(invalid-name), validate_and_create_task_offers] Variable name "f" doesn't conform to snake_case naming style
projects/async_jobs.py:1143: [C0103(invalid-name), validate_and_create_task_offers] Variable name "f" doesn't conform to snake_case naming style
projects/async_jobs.py:1045: [R0912(too-many-branches), validate_and_create_task_offers] Too many branches (15/12)
projects/async_jobs.py:1045: [R0915(too-many-statements), validate_and_create_task_offers] Too many statements (68/50)
projects/async_jobs.py:1152: [C0111(missing-docstring), import_excel_orderingdelegations] Missing function docstring
projects/async_jobs.py:1192: [C0111(missing-docstring), import_excel_jobslinks] Missing function docstring
projects/async_jobs.py:1219: [C0111(missing-docstring), import_excel_taskslinks] Missing function docstring
projects/async_jobs.py:1246: [C0111(missing-docstring), export_offers_and_orders] Missing function docstring
projects/async_jobs.py:1246: [R0913(too-many-arguments), export_offers_and_orders] Too many arguments (6/5)
projects/async_jobs.py:1246: [R0914(too-many-locals), export_offers_and_orders] Too many local variables (23/15)
projects/async_jobs.py:1254: [W0611(unused-import), export_offers_and_orders] Unused TaskViewSet imported from projects.views
projects/async_jobs.py:1254: [W0611(unused-import), export_offers_and_orders] Unused TaskViewSet imported from projects.views
projects/async_jobs.py:1332: [C0111(missing-docstring), PurgeOldRequestTracking] Missing class docstring
projects/async_jobs.py:1332: [R0205(useless-object-inheritance), PurgeOldRequestTracking] Class 'PurgeOldRequestTracking' inherits from object, can be safely removed from bases in python3
projects/async_jobs.py:1332: [R0903(too-few-public-methods), PurgeOldRequestTracking] Too few public methods (1/2)
projects/async_jobs.py:1343: [C0111(missing-docstring), ConsolidateBlocksJob] Missing class docstring
projects/async_jobs.py:1343: [R0205(useless-object-inheritance), ConsolidateBlocksJob] Class 'ConsolidateBlocksJob' inherits from object, can be safely removed from bases in python3
projects/async_jobs.py:1343: [R0903(too-few-public-methods), ConsolidateBlocksJob] Too few public methods (1/2)
projects/async_jobs.py:26: [W0611(unused-import), ] Unused HypothesysPoints imported from orange_ordering.models
projects/async_jobs.py:20: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/async_jobs.py:47: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
projects/async_jobs.py:48: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module projects.models_api
projects/models_api.py:852: [W0511(fixme), ] TODO: where these queries come from?????
projects/models_api.py:2067: [W0511(fixme), ] TODO: needed by O&A.
projects/models_api.py:3508: [W0511(fixme), ] TODO: % acceptance
projects/models_api.py:19: [C0301(line-too-long), ] Line too long (118/100)
projects/models_api.py:133: [C0301(line-too-long), ] Line too long (103/100)
projects/models_api.py:161: [C0301(line-too-long), ] Line too long (103/100)
projects/models_api.py:178: [C0301(line-too-long), ] Line too long (113/100)
projects/models_api.py:179: [C0301(line-too-long), ] Line too long (112/100)
projects/models_api.py:180: [C0301(line-too-long), ] Line too long (106/100)
projects/models_api.py:181: [C0301(line-too-long), ] Line too long (105/100)
projects/models_api.py:284: [C0301(line-too-long), ] Line too long (115/100)
projects/models_api.py:305: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:340: [C0301(line-too-long), ] Line too long (107/100)
projects/models_api.py:377: [C0301(line-too-long), ] Line too long (116/100)
projects/models_api.py:397: [C0301(line-too-long), ] Line too long (112/100)
projects/models_api.py:414: [C0301(line-too-long), ] Line too long (110/100)
projects/models_api.py:431: [C0301(line-too-long), ] Line too long (115/100)
projects/models_api.py:448: [C0301(line-too-long), ] Line too long (115/100)
projects/models_api.py:465: [C0301(line-too-long), ] Line too long (111/100)
projects/models_api.py:482: [C0301(line-too-long), ] Line too long (111/100)
projects/models_api.py:499: [C0301(line-too-long), ] Line too long (111/100)
projects/models_api.py:516: [C0301(line-too-long), ] Line too long (110/100)
projects/models_api.py:533: [C0301(line-too-long), ] Line too long (113/100)
projects/models_api.py:550: [C0301(line-too-long), ] Line too long (108/100)
projects/models_api.py:567: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:603: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:623: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:660: [C0301(line-too-long), ] Line too long (122/100)
projects/models_api.py:661: [C0301(line-too-long), ] Line too long (114/100)
projects/models_api.py:663: [C0301(line-too-long), ] Line too long (102/100)
projects/models_api.py:736: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:745: [C0301(line-too-long), ] Line too long (102/100)
projects/models_api.py:748: [C0301(line-too-long), ] Line too long (108/100)
projects/models_api.py:787: [C0301(line-too-long), ] Line too long (104/100)
projects/models_api.py:822: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:831: [C0301(line-too-long), ] Line too long (102/100)
projects/models_api.py:854: [C0301(line-too-long), ] Line too long (123/100)
projects/models_api.py:855: [C0301(line-too-long), ] Line too long (123/100)
projects/models_api.py:869: [C0301(line-too-long), ] Line too long (104/100)
projects/models_api.py:879: [C0301(line-too-long), ] Line too long (104/100)
projects/models_api.py:904: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__owner',
            |   ^
projects/models_api.py:905: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__company',
            |   ^
projects/models_api.py:906: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__task_type',
            |   ^
projects/models_api.py:907: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__created_by',
            |   ^
projects/models_api.py:908: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__modified_by',
            |   ^
projects/models_api.py:909: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__task_type',
            |   ^
projects/models_api.py:914: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__job',
            |   ^
projects/models_api.py:915: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__job__job_type',
            |   ^
projects/models_api.py:916: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__job__owner',
            |   ^
projects/models_api.py:917: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__job__current_history',
            |   ^
projects/models_api.py:918: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                'task__job__current_history__workflow_milestone',
            |   ^
projects/models_api.py:1118: [C0301(line-too-long), ] Line too long (101/100)
projects/models_api.py:1301: [C0301(line-too-long), ] Line too long (117/100)
projects/models_api.py:1315: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                        + tuple([
                       |^
projects/models_api.py:1399: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                        + tuple([
                       |^
projects/models_api.py:1450: [C0330(bad-continuation), ] Wrong hanging indentation (add 4 spaces).
            # }, {
            ^   |
projects/models_api.py:1462: [C0301(line-too-long), ] Line too long (120/100)
projects/models_api.py:1496: [C0301(line-too-long), ] Line too long (101/100)
projects/models_api.py:1507: [C0301(line-too-long), ] Line too long (110/100)
projects/models_api.py:1509: [C0301(line-too-long), ] Line too long (117/100)
projects/models_api.py:1511: [C0301(line-too-long), ] Line too long (110/100)
projects/models_api.py:1515: [C0301(line-too-long), ] Line too long (112/100)
projects/models_api.py:1521: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                            NoDestroyForgivingBulkModelViewSet if issubclass(c, ModelViewSet) else c
                |           ^
projects/models_api.py:1522: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                            for c in RestifyModels.parent.get('viewset')
                |           ^
projects/models_api.py:1542: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                        + RestifyModels.parent.get('serializer'),
                       |^
projects/models_api.py:1772: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                        + tuple([
                       |^
projects/models_api.py:1940: [C0301(line-too-long), ] Line too long (104/100)
projects/models_api.py:1965: [C0301(line-too-long), ] Line too long (101/100)
projects/models_api.py:2059: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                            ForgivingBulkModelViewSet if issubclass(c, ModelViewSet) else c
                |           ^
projects/models_api.py:2060: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                            for c in RestifyModels.parent.get('viewset')
                |           ^
projects/models_api.py:2163: [C0330(bad-continuation), ] Wrong hanging indentation (add 4 spaces).
            # }, {
            ^   |
projects/models_api.py:2188: [C0301(line-too-long), ] Line too long (116/100)
projects/models_api.py:2208: [C0301(line-too-long), ] Line too long (115/100)
projects/models_api.py:2212: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:2216: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:2220: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:2224: [C0301(line-too-long), ] Line too long (118/100)
projects/models_api.py:2228: [C0301(line-too-long), ] Line too long (112/100)
projects/models_api.py:2248: [C0301(line-too-long), ] Line too long (103/100)
projects/models_api.py:2260: [C0301(line-too-long), ] Line too long (101/100)
projects/models_api.py:2297: [C0301(line-too-long), ] Line too long (106/100)
projects/models_api.py:2307: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                        + tuple([
                       |^
projects/models_api.py:2388: [C0301(line-too-long), ] Line too long (109/100)
projects/models_api.py:2512: [C0301(line-too-long), ] Line too long (116/100)
projects/models_api.py:2561: [C0301(line-too-long), ] Line too long (111/100)
projects/models_api.py:2586: [C0301(line-too-long), ] Line too long (116/100)
projects/models_api.py:2605: [C0301(line-too-long), ] Line too long (125/100)
projects/models_api.py:2813: [C0330(bad-continuation), ] Wrong continued indentation (remove 1 space).
                        + tuple([
                       |^
projects/models_api.py:3155: [C0301(line-too-long), ] Line too long (104/100)
projects/models_api.py:3415: [C0330(bad-continuation), ] Wrong continued indentation (add 8 spaces).
                .select_related(
                ^       |
projects/models_api.py:3421: [C0301(line-too-long), ] Line too long (114/100)
projects/models_api.py:3423: [C0330(bad-continuation), ] Wrong continued indentation (add 8 spaces).
                .prefetch_related(
                ^       |
projects/models_api.py:3476: [C0301(line-too-long), ] Line too long (129/100)
projects/models_api.py:3520: [C0301(line-too-long), ] Line too long (154/100)
projects/models_api.py:3649: [C0330(bad-continuation), ] Wrong hanging indentation (add 4 spaces).
            # }, {
            ^   |
projects/models_api.py:3674: [C0301(line-too-long), ] Line too long (102/100)
projects/models_api.py:3694: [C0301(line-too-long), ] Line too long (101/100)
projects/models_api.py:3710: [C0301(line-too-long), ] Line too long (104/100)
projects/models_api.py:1: [C0302(too-many-lines), ] Too many lines in module (3840/1000)
projects/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/models_api.py:4: [E0401(import-error), ] Unable to import 'django.contrib.postgres.aggregates'
projects/models_api.py:5: [E0401(import-error), ] Unable to import 'django.db.models'
projects/models_api.py:6: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/models_api.py:7: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/models_api.py:8: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
projects/models_api.py:9: [E0611(no-name-in-module), ] No name 'querysets' in module 'mptt'
projects/models_api.py:12: [E0401(import-error), ] Unable to import 'rest_framework.validators'
projects/models_api.py:13: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
projects/models_api.py:14: [E0401(import-error), ] Unable to import 'rest_framework'
projects/models_api.py:25: [E0611(no-name-in-module), ] No name 'SelfAcceptanceSerializer' in module 'orange_bqa.serializers'
projects/models_api.py:26: [E0611(no-name-in-module), ] No name 'BriseTicketSerializer' in module 'orange_brise.serializers'
projects/models_api.py:27: [E0611(no-name-in-module), ] No name 'LegalTaskSerializer' in module 'orange_legal.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'OrderTaskSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'BudgetSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'ZoneSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'HypothesysSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'CapexOpexHypothesysSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'Group3HypothesysSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'Group2HypothesysSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'Group1HypothesysSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'CcdnfSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'ProviderSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:29: [E0611(no-name-in-module), ] No name 'SdcSerializer' in module 'orange_ordering.serializers'
projects/models_api.py:42: [E0611(no-name-in-module), ] No name 'TaskSerializer' in module 'orange_sharing.serializers'
projects/models_api.py:43: [E0611(no-name-in-module), ] No name 'TaskSerializer' in module 'orange_hunting.serializers'
projects/models_api.py:44: [E0611(no-name-in-module), ] No name 'DeviceSerializer' in module 'orange_sites.serializers'
projects/models_api.py:45: [E0611(no-name-in-module), ] No name 'SelfAcceptanceViewSet' in module 'orange_bqa.views'
projects/models_api.py:46: [E0611(no-name-in-module), ] No name 'BriseTicketViewSet' in module 'orange_brise.views'
projects/models_api.py:47: [E0611(no-name-in-module), ] No name 'LegalTaskViewSet' in module 'orange_legal.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'OrderTaskViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'BudgetViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'ZoneViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'HypothesysViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'CapexOpexHypothesysViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'Group3HypothesysViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'Group2HypothesysViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'Group1HypothesysViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'CcdnfViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'ProviderViewSet' in module 'orange_ordering.views'
projects/models_api.py:49: [E0611(no-name-in-module), ] No name 'SdcViewSet' in module 'orange_ordering.views'
projects/models_api.py:62: [E0611(no-name-in-module), ] No name 'TaskViewSet' in module 'orange_sharing.views'
projects/models_api.py:63: [E0611(no-name-in-module), ] No name 'TaskViewSet' in module 'orange_hunting.views'
projects/models_api.py:64: [E0611(no-name-in-module), ] No name 'DeviceViewSet' in module 'orange_sites.views'
projects/models_api.py:95: [W0401(wildcard-import), ] Wildcard import models
projects/models_api.py:96: [W0401(wildcard-import), ] Wildcard import workflows.models
projects/models_api.py:127: [E0401(import-error), ] Unable to import 'rest_framework.settings'
projects/models_api.py:129: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:131: [C0103(invalid-name), ] Constant name "notifications_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:132: [C0103(invalid-name), ] Constant name "notification_events_users_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:153: [C0111(missing-docstring), get_queryset_documents] Missing function docstring
projects/models_api.py:157: [C0103(invalid-name), get_queryset_documents] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:157: [E0602(undefined-variable), get_queryset_documents] Undefined variable 'Document'
projects/models_api.py:166: [C0111(missing-docstring), get_callable_documents_viewset] Missing function docstring
projects/models_api.py:167: [W0613(unused-argument), get_callable_documents_viewset.callable_func] Unused argument 'kwargs'
projects/models_api.py:172: [C0103(invalid-name), ] Constant name "sol_docs_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:250: [C0103(invalid-name), ] Constant name "dynamicreports_columns_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:268: [C0103(invalid-name), get_queryset_bqa_selfacceptance] Argument name "qs" doesn't conform to snake_case naming style
projects/models_api.py:268: [C0111(missing-docstring), get_queryset_bqa_selfacceptance] Missing function docstring
projects/models_api.py:280: [C0111(missing-docstring), get_queryset_bqa_selfacceptance_viewset] Missing function docstring
projects/models_api.py:284: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:286: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:305: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:307: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:324: [C0103(invalid-name), get_queryset_legal_task] Argument name "qs" doesn't conform to snake_case naming style
projects/models_api.py:324: [C0111(missing-docstring), get_queryset_legal_task] Missing function docstring
projects/models_api.py:336: [C0111(missing-docstring), get_queryset_legal_task_viewset] Missing function docstring
projects/models_api.py:340: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:342: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:361: [C0103(invalid-name), get_queryset_ordering_order_task] Argument name "qs" doesn't conform to snake_case naming style
projects/models_api.py:361: [C0111(missing-docstring), get_queryset_ordering_order_task] Missing function docstring
projects/models_api.py:373: [C0111(missing-docstring), get_queryset_ordering_order_task_viewset] Missing function docstring
projects/models_api.py:377: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:379: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:397: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:399: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:414: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:416: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:431: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:433: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:448: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:450: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:465: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:467: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:482: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:484: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:499: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:501: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:516: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:518: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:533: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:535: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:550: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:552: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:567: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:569: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:587: [C0103(invalid-name), get_queryset_hunting_task] Argument name "qs" doesn't conform to snake_case naming style
projects/models_api.py:587: [C0111(missing-docstring), get_queryset_hunting_task] Missing function docstring
projects/models_api.py:599: [C0111(missing-docstring), get_queryset_hunting_task_viewset] Missing function docstring
projects/models_api.py:603: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:605: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:623: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:625: [C0103(invalid-name), ] Constant name "device_config" doesn't conform to UPPER_CASE naming style
projects/models_api.py:641: [C0103(invalid-name), ] Constant name "core_fields" doesn't conform to UPPER_CASE naming style
projects/models_api.py:658: [C0111(missing-docstring), get_core_annotated_fields] Missing function docstring
projects/models_api.py:667: [C0111(missing-docstring), get_jobs_annotated_fields] Missing function docstring
projects/models_api.py:690: [C0111(missing-docstring), get_queryset_company] Missing function docstring
projects/models_api.py:698: [C0111(missing-docstring), get_queryset_report] Missing function docstring
projects/models_api.py:707: [C0111(missing-docstring), get_queryset_report_viewset] Missing function docstring
projects/models_api.py:711: [C0111(missing-docstring), get_queryset_job] Missing function docstring
projects/models_api.py:711: [R0913(too-many-arguments), get_queryset_job] Too many arguments (7/5)
projects/models_api.py:782: [C0111(missing-docstring), get_queryset_job_viewset] Missing function docstring
projects/models_api.py:785: [C0103(invalid-name), get_queryset_job_viewset] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:796: [C0111(missing-docstring), get_queryset_task] Missing function docstring
projects/models_api.py:796: [R0913(too-many-arguments), get_queryset_task] Too many arguments (7/5)
projects/models_api.py:864: [C0111(missing-docstring), get_queryset_task_viewset] Missing function docstring
projects/models_api.py:867: [C0103(invalid-name), get_queryset_task_viewset] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:879: [C0111(missing-docstring), get_queryset_tasksolorders] Missing function docstring
projects/models_api.py:880: [C0103(invalid-name), get_queryset_tasksolorders] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:903: [C0103(invalid-name), get_queryset_tasksolorders] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:913: [C0103(invalid-name), get_queryset_tasksolorders] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:930: [C0103(invalid-name), get_queryset_tasksolorders] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:935: [C0111(missing-docstring), get_queryset_tasksolorders_viewset] Missing function docstring
projects/models_api.py:939: [C0111(missing-docstring), get_queryset_taskoffer] Missing function docstring
projects/models_api.py:940: [C0103(invalid-name), get_queryset_taskoffer] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:956: [C0103(invalid-name), get_queryset_taskoffer] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:961: [C0111(missing-docstring), get_queryset_taskoffer_viewset] Missing function docstring
projects/models_api.py:961: [W0613(unused-argument), get_queryset_taskoffer_viewset] Unused argument 'kwargs'
projects/models_api.py:965: [C0111(missing-docstring), get_queryset_field] Missing function docstring
projects/models_api.py:965: [W0613(unused-argument), get_queryset_field] Unused argument 'request'
projects/models_api.py:969: [C0111(missing-docstring), get_queryset_field_viewset] Missing function docstring
projects/models_api.py:969: [W0613(unused-argument), get_queryset_field_viewset] Unused argument 'kwargs'
projects/models_api.py:973: [C0111(missing-docstring), get_queryset_orderingdelegation] Missing function docstring
projects/models_api.py:974: [C0103(invalid-name), get_queryset_orderingdelegation] Variable name "qs" doesn't conform to snake_case naming style
projects/models_api.py:989: [C0111(missing-docstring), get_export_queryset_orderingdelegation] Missing function docstring
projects/models_api.py:997: [C0111(missing-docstring), get_queryset_joblink] Missing function docstring
projects/models_api.py:997: [W0613(unused-argument), get_queryset_joblink] Unused argument 'request'
projects/models_api.py:1003: [C0111(missing-docstring), get_queryset_joblink_viewset] Missing function docstring
projects/models_api.py:1003: [W0613(unused-argument), get_queryset_joblink_viewset] Unused argument 'kwargs'
projects/models_api.py:1007: [C0111(missing-docstring), get_export_queryset_joblink] Missing function docstring
projects/models_api.py:1025: [C0111(missing-docstring), get_queryset_tasklink] Missing function docstring
projects/models_api.py:1025: [W0613(unused-argument), get_queryset_tasklink] Unused argument 'request'
projects/models_api.py:1033: [C0111(missing-docstring), get_queryset_tasklink_viewset] Missing function docstring
projects/models_api.py:1033: [W0613(unused-argument), get_queryset_tasklink_viewset] Unused argument 'kwargs'
projects/models_api.py:1037: [C0111(missing-docstring), get_export_queryset_tasklink] Missing function docstring
projects/models_api.py:1044: [C0103(invalid-name), ] Constant name "job_ordering_fields" doesn't conform to UPPER_CASE naming style
projects/models_api.py:2370: [E1101(no-member), ] Class 'Cell' has no 'TYPE_STRING' member
projects/models_api.py:3312: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/models_api.py:3318: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/models_api.py:9: [W0611(unused-import), ] Unused querysets imported from mptt
projects/models_api.py:68: [W0611(unused-import), ] Unused OrderingOrderTaskPermissionsMixin imported from projects.permissions.ordering
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import math from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import numbers from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import os from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import nx from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import datetime from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import django_rq from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import HistoryModelMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ExcludeFromDjangoAdminHistoryModelMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ProjectsNotificationEvent from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ReportMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BaseColumnsModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import HistoryItemMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ProjectsDocument from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ProjectsDocumentRevision from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import DEPENDENCIES_TYPES_TOOLTIPS from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import DEPENDENCIES_TYPES from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BaseFieldsEntitiesModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import field_set_technical_name from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import copy_info_from_field from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import CoreFieldsModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import UserGridColumnsQuerySet from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ExtraJoinCondition from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ForeignKeyQuerySet from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ForeignKeyJobQuerySet from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Gantt from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import GanttsTaskTypes from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import GanttsTaskTypesDependency from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ForeignKeyTaskQuerySet from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import update_workflow from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import update_readonly_fields from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import task_set_technical_name from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobOrderingFiltersHypothesys from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import EconomicSubproject from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import EconomicProvider from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrderingZonesMatrix from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrderingHypothesesMatrix from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrderingProvidersMatrix from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TASK_OFFER_STATUS_TYPES from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrangeSharingTask from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrangeSiteDevice from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrangeBriseTicket from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TaskLinkProperty from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import defaultdict from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import get_user_model from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import File from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import now from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import GenericForeignKey from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import GenericRelation from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ContentType from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import MaxValueValidator from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import MinValueValidator from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import connection from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import transaction from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ObjectDoesNotExist from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import settings from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Case from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import When from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Max from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import cached_property from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import python_2_unicode_compatible from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JSONField from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import LOUTER from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Join from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import post_save from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import post_delete from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import pre_delete from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import pre_save from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import m2m_changed from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import receiver from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import FIELD_TYPES from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import external_field_types from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JSONForeignKeySerializer from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import get_progress_status_kwargs from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BrisePermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobLinkPermissionMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TaskAssignationEvent from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobAssignationEvent from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobLinkedEvent from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import EconomicsPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobTypePermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JobOrderingFilterPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import ReportPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrderingDelegationsPermissionMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import SharingTaskPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import SitePermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import HuntingTaskPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BqaSelfAcceptancePermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import LegalTaskPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TaskPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TasksDependencyPermissionMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TaskSolOrdersPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TaskOfferPermissionsMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import get_next_technical_name from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import get_job_projects_breadcrumbs from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import get_current_history from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import is_topological_sorted from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import contribute_fields_to_model from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import sol_model_to_dict from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import MimeTypeAndSizeRestrictedFileField from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import CharVirtualField from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BaseSolModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import PermissionsSolQuerySet from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import PermissionsSolModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TrackedSolModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import MPTTModel from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import TreeForeignKey from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Hypothesys from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Budget from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrderingZone from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import Provider from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import OrderTask from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import SharingTask from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import SiteDevice from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BriseTicket from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import LegalTask from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import HuntingTask from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BqaSelfAcceptance from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import receiver_subclasses from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import SolExportExcelRenderer from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import WorkflowPathJob from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import WorkflowHistory from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import inject_models from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import fix_table_alias_for_schemas from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import empty from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import NullBooleanField from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BooleanField from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import BaseHistoryModelMixin from wildcard import
projects/models_api.py:95: [W0614(unused-wildcard-import), ] Unused import JSONDynamicHistoryModelMixin from wildcard import
projects/models_api.py:96: [W0614(unused-wildcard-import), ] Unused import WORKFLOW_PATH_TYPE_CHOICES from wildcard import
projects/models_api.py:96: [W0614(unused-wildcard-import), ] Unused import Workflow from wildcard import
projects/models_api.py:96: [W0614(unused-wildcard-import), ] Unused import WorkflowPath from wildcard import
projects/models_api.py:96: [W0614(unused-wildcard-import), ] Unused import ValidationError from wildcard import
projects/models_api.py:96: [W0614(unused-wildcard-import), ] Unused import WorkflowHistoryPermissionMixin from wildcard import
projects/models_api.py:96: [C0411(wrong-import-order), ] first party import "from workflows.models import *" should be placed before "from .models import *"
projects/models_api.py:97: [C0411(wrong-import-order), ] first party import "from projects.validators import DifferentTreeRootsValidator, StartEndDateValidator, WriteOnceValidator, TechnicalNameValidator, MandatoryDynamicFieldsForClosingTaskValidator, FutureDateNotAllowedValidator, AllowOnlyTreeLeafsValidator, CreateOnAttributeIsNoneValidator, UpdateFieldIsOriginallyNoneValidator, UserIsAllowedValidator, AllowedStateTransitionValidator, CreateOnAttributeIsNotNoneValidator, TaskTypeJobTypeCompatibilityValidator, IsTaskExternalLinkValidator, CheckMandatoryCloseTaskExternalLinkValidator, IsNewGraphStillADagValidator, InboundLinksConstraintsValidator, ExternalInboundLinksConstraintsValidator" should be placed before "from .models import *"
projects/models_api.py:117: [C0411(wrong-import-order), ] first party import "from projects import models" should be placed before "from .models import *"
projects/models_api.py:118: [C0411(wrong-import-order), ] first party import "from sol_notes.models_api import get_api_config as sol_notes_get_api_config" should be placed before "from .models import *"
projects/models_api.py:119: [C0411(wrong-import-order), ] first party import "from sol_notifications.models_api import get_api_config as sol_notifications_get_api_config" should be placed before "from .models import *"
projects/models_api.py:120: [C0411(wrong-import-order), ] first party import "from sol_users.models_api import get_api_config as sol_users_get_api_config" should be placed before "from .models import *"
projects/models_api.py:121: [C0411(wrong-import-order), ] first party import "from sol.utils.history.models_api import get_api_config as history_get_api_config" should be placed before "from .models import *"
projects/models_api.py:122: [C0411(wrong-import-order), ] first party import "from sol_dynamicreports.models_api import get_api_config as dynamicreports_get_api_config" should be placed before "from .models import *"
projects/models_api.py:123: [C0411(wrong-import-order), ] first party import "from sol_docs.models_api import get_api_config as sol_docs_get_api_config, get_queryset_documents as docs_get_queryset_documents" should be placed before "from .models import *"
projects/models_api.py:127: [C0411(wrong-import-order), ] third party import "from rest_framework.settings import api_settings" should be placed before "from sol.utils.request_tracking.models import RequestTracking"
projects/models_api.py:25: [C0412(ungrouped-imports), ] Imports from package orange_bqa are not grouped
projects/models_api.py:26: [C0412(ungrouped-imports), ] Imports from package orange_brise are not grouped
projects/models_api.py:27: [C0412(ungrouped-imports), ] Imports from package orange_legal are not grouped
projects/models_api.py:29: [C0412(ungrouped-imports), ] Imports from package orange_ordering are not grouped
projects/models_api.py:42: [C0412(ungrouped-imports), ] Imports from package orange_sharing are not grouped
projects/models_api.py:43: [C0412(ungrouped-imports), ] Imports from package orange_hunting are not grouped
projects/models_api.py:44: [C0412(ungrouped-imports), ] Imports from package orange_sites are not grouped
projects/models_api.py:45: [C0412(ungrouped-imports), ] Imports from package orange_bqa are not grouped
projects/models_api.py:46: [C0412(ungrouped-imports), ] Imports from package orange_brise are not grouped
projects/models_api.py:47: [C0412(ungrouped-imports), ] Imports from package orange_legal are not grouped
projects/models_api.py:49: [C0412(ungrouped-imports), ] Imports from package orange_ordering are not grouped
projects/models_api.py:62: [C0412(ungrouped-imports), ] Imports from package orange_sharing are not grouped
projects/models_api.py:63: [C0412(ungrouped-imports), ] Imports from package orange_hunting are not grouped
projects/models_api.py:64: [C0412(ungrouped-imports), ] Imports from package orange_sites are not grouped
projects/models_api.py:73: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
projects/models_api.py:89: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
projects/models_api.py:97: [C0412(ungrouped-imports), ] Imports from package projects are not grouped
projects/models_api.py:120: [C0412(ungrouped-imports), ] Imports from package sol_users are not grouped
projects/models_api.py:121: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
projects/models_api.py:122: [C0412(ungrouped-imports), ] Imports from package sol_dynamicreports are not grouped
projects/models_api.py:127: [C0412(ungrouped-imports), ] Imports from package rest_framework are not grouped
************* Module projects.models
projects/models.py:889: [R1707(trailing-comma-tuple), ] Disallow trailing comma tuple
projects/models.py:2507: [R1707(trailing-comma-tuple), ] Disallow trailing comma tuple
projects/models.py:449: [W0511(fixme), ] TODO: queryset (as_manager) class attributes are not copied to the manager: not that bad but..
projects/models.py:450: [W0511(fixme), ] TODO: accept also string references for a model
projects/models.py:529: [W0511(fixme), ] TODO: queryset (as_manager) class attributes are not copied to the manager: not that bad but..
projects/models.py:530: [W0511(fixme), ] TODO: accept also string references for a model
projects/models.py:581: [W0511(fixme), ] TODO: since we are in queryset now, this can (and should) be converted to a cached_property, but has to be tested.
projects/models.py:594: [W0511(fixme), ] TODO: Think about adding flag to disable this optimization?
projects/models.py:644: [W0511(fixme), ] TODO: Think about getting rid of pk_foreign_key here and convert it to lookup in add_foreign_keys.
projects/models.py:930: [W0511(fixme), ] TODO: moved 'self.gantt.calculate_planned_duration()' to avoid extra query, but this should be improved
projects/models.py:1070: [W0511(fixme), ] TODO: queryset (as_manager) class attributes are not copied to the manager: not that bad but..
projects/models.py:1087: [W0511(fixme), ] TODO: saner management of external field case
projects/models.py:1203: [W0511(fixme), ] TODO: maybe this can be improved when select_related will be filtered by permissions
projects/models.py:1472: [W0511(fixme), ] TODO: Write tests. See what will happen with the move forward of the part of Gantt
projects/models.py:1696: [W0511(fixme), ] TODO: queryset (as_manager) class attributes are not copied to the manager: not that bad but..
projects/models.py:1714: [W0511(fixme), ] TODO: saner management of external field case
projects/models.py:2339: [W0511(fixme), ] TODO: not sure about this full-relational solution as can be implemented as JSON blob on user table
projects/models.py:29: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:52: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:75: [C0301(line-too-long), ] Line too long (109/100)
projects/models.py:84: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:88: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:139: [C0301(line-too-long), ] Line too long (122/100)
projects/models.py:141: [C0301(line-too-long), ] Line too long (120/100)
projects/models.py:142: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:156: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:174: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:181: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:224: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:250: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:257: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:267: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:391: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:394: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:401: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:417: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:419: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:425: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:427: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:428: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:433: [C0301(line-too-long), ] Line too long (107/100)
projects/models.py:581: [C0301(line-too-long), ] Line too long (120/100)
projects/models.py:596: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:606: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:608: [C0301(line-too-long), ] Line too long (102/100)
projects/models.py:610: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:620: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:644: [C0301(line-too-long), ] Line too long (116/100)
projects/models.py:646: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:651: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:653: [C0301(line-too-long), ] Line too long (107/100)
projects/models.py:654: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:740: [C0301(line-too-long), ] Line too long (122/100)
projects/models.py:754: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:813: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:831: [C0301(line-too-long), ] Line too long (123/100)
projects/models.py:836: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:842: [C0326(bad-whitespace), ] Exactly one space required after comma
                                 ,help_text='The workflow chosen for jobs of this job type')
                                 ^
projects/models.py:850: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:852: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:879: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:930: [C0301(line-too-long), ] Line too long (117/100)
projects/models.py:1078: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:1088: [C0301(line-too-long), ] Line too long (114/100)
projects/models.py:1103: [C0301(line-too-long), ] Line too long (114/100)
projects/models.py:1129: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:1131: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1141: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:1143: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:1146: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:1152: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:1152: [C0326(bad-whitespace), ] Exactly one space required after comma
                                                   MaxValueValidator(2100,_('Plans Year must be less than 2100!')),
                                                                         ^
projects/models.py:1153: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:1153: [C0326(bad-whitespace), ] Exactly one space required after comma
                                                   MinValueValidator(1980,_('Plans Year must be greater than  1980!')),
                                                                         ^
projects/models.py:1211: [C0301(line-too-long), ] Line too long (120/100)
projects/models.py:1288: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:1373: [C0301(line-too-long), ] Line too long (116/100)
projects/models.py:1384: [C0301(line-too-long), ] Line too long (112/100)
projects/models.py:1391: [C0301(line-too-long), ] Line too long (112/100)
projects/models.py:1415: [C0330(bad-continuation), ] Wrong continued indentation (add 13 spaces).
            + ((gantt_task_type.planned_duration_max - gantt_task_type.planned_duration_min) * duration_elasticity))
            ^            |
projects/models.py:1415: [C0301(line-too-long), ] Line too long (116/100)
projects/models.py:1419: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:1433: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:1455: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:1491: [C0301(line-too-long), ] Line too long (107/100)
projects/models.py:1523: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:1525: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:1526: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:1528: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:1535: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:1536: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:1537: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:1540: [C0301(line-too-long), ] Line too long (116/100)
projects/models.py:1542: [C0301(line-too-long), ] Line too long (107/100)
projects/models.py:1545: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1546: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:1551: [C0301(line-too-long), ] Line too long (104/100)
projects/models.py:1591: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:1624: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:1625: [C0301(line-too-long), ] Line too long (109/100)
projects/models.py:1627: [C0330(bad-continuation), ] Wrong continued indentation (remove 10 spaces).
                                      "\n".join([_type[1] + " : " +
                            |         ^
projects/models.py:1628: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                                            DEPENDENCIES_TYPES_TOOLTIPS.get(_type[0]) for _type in
                                            ^    |
projects/models.py:1629: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                                            DEPENDENCIES_TYPES]))
                                            ^    |
projects/models.py:1662: [C0301(line-too-long), ] Line too long (124/100)
projects/models.py:1667: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:1669: [C0301(line-too-long), ] Line too long (125/100)
projects/models.py:1676: [C0301(line-too-long), ] Line too long (125/100)
projects/models.py:1678: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:1704: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:1716: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:1720: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:1725: [C0301(line-too-long), ] Line too long (120/100)
projects/models.py:1759: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:1764: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:1765: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:1766: [C0301(line-too-long), ] Line too long (102/100)
projects/models.py:1772: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:1774: [C0301(line-too-long), ] Line too long (116/100)
projects/models.py:1785: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:1787: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:1790: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:1793: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1794: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1810: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:1811: [C0301(line-too-long), ] Line too long (117/100)
projects/models.py:1888: [C0301(line-too-long), ] Line too long (102/100)
projects/models.py:1893: [C0301(line-too-long), ] Line too long (120/100)
projects/models.py:1894: [C0301(line-too-long), ] Line too long (112/100)
projects/models.py:1895: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1896: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:1897: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1916: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:1917: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:1921: [C0301(line-too-long), ] Line too long (125/100)
projects/models.py:1934: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:1949: [C0301(line-too-long), ] Line too long (141/100)
projects/models.py:1964: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:1982: [C0301(line-too-long), ] Line too long (107/100)
projects/models.py:2021: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:2070: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:2095: [C0301(line-too-long), ] Line too long (112/100)
projects/models.py:2096: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:2128: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:2153: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:2159: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:2162: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:2163: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:2174: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:2175: [C0301(line-too-long), ] Line too long (116/100)
projects/models.py:2178: [C0301(line-too-long), ] Line too long (119/100)
projects/models.py:2180: [C0301(line-too-long), ] Line too long (112/100)
projects/models.py:2207: [C0301(line-too-long), ] Line too long (121/100)
projects/models.py:2239: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:2240: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:2253: [C0301(line-too-long), ] Line too long (120/100)
projects/models.py:2339: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:2355: [C0301(line-too-long), ] Line too long (105/100)
projects/models.py:2375: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:2400: [C0301(line-too-long), ] Line too long (102/100)
projects/models.py:2452: [C0301(line-too-long), ] Line too long (101/100)
projects/models.py:2476: [C0301(line-too-long), ] Line too long (104/100)
projects/models.py:2477: [C0301(line-too-long), ] Line too long (104/100)
projects/models.py:2501: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:2502: [C0301(line-too-long), ] Line too long (104/100)
projects/models.py:2503: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:2526: [C0301(line-too-long), ] Line too long (115/100)
projects/models.py:2552: [C0301(line-too-long), ] Line too long (104/100)
projects/models.py:2558: [C0301(line-too-long), ] Line too long (108/100)
projects/models.py:2564: [C0301(line-too-long), ] Line too long (114/100)
projects/models.py:2570: [C0301(line-too-long), ] Line too long (114/100)
projects/models.py:2576: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:2582: [C0301(line-too-long), ] Line too long (110/100)
projects/models.py:2591: [C0301(line-too-long), ] Line too long (103/100)
projects/models.py:2592: [C0330(bad-continuation), ] Wrong continued indentation (remove 4 spaces).
                                     help_text='The amount defined for this economic value')
                                 |   ^
projects/models.py:2594: [C0330(bad-continuation), ] Wrong continued indentation (remove 5 spaces).
                                     help_text='The units defined for this economic value')
                                |    ^
projects/models.py:2709: [C0301(line-too-long), ] Line too long (114/100)
projects/models.py:2768: [C0301(line-too-long), ] Line too long (102/100)
projects/models.py:2846: [C0301(line-too-long), ] Line too long (113/100)
projects/models.py:2848: [C0301(line-too-long), ] Line too long (111/100)
projects/models.py:2851: [C0301(line-too-long), ] Line too long (117/100)
projects/models.py:2857: [C0301(line-too-long), ] Line too long (118/100)
projects/models.py:2862: [C0301(line-too-long), ] Line too long (106/100)
projects/models.py:2986: [C0301(line-too-long), ] Line too long (112/100)
projects/models.py:1: [C0302(too-many-lines), ] Too many lines in module (3045/1000)
projects/models.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/models.py:9: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/models.py:10: [E0401(import-error), ] Unable to import 'django.core.files'
projects/models.py:11: [E0401(import-error), ] Unable to import 'django.utils.timezone'
projects/models.py:12: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.fields'
projects/models.py:13: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
projects/models.py:14: [E0401(import-error), ] Unable to import 'django.core.validators'
projects/models.py:15: [E0401(import-error), ] Unable to import 'django.db'
projects/models.py:16: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/models.py:17: [E0401(import-error), ] Unable to import 'django.conf'
projects/models.py:18: [E0401(import-error), ] Unable to import 'django.db.models'
projects/models.py:19: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/models.py:20: [E0401(import-error), ] Unable to import 'django.utils.functional'
projects/models.py:21: [E0401(import-error), ] Unable to import 'django.utils.encoding'
projects/models.py:22: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/models.py:23: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields'
projects/models.py:24: [E0401(import-error), ] Unable to import 'django.db.models.sql.constants'
projects/models.py:25: [E0401(import-error), ] Unable to import 'django.db.models.sql.datastructures'
projects/models.py:26: [E0401(import-error), ] Unable to import 'django.db.models.signals'
projects/models.py:27: [E0401(import-error), ] Unable to import 'django.dispatch'
projects/models.py:43: [W0404(reimported), ] Reimport 'BrisePermissionsMixin' (imported line 31)
projects/models.py:57: [E0611(no-name-in-module), ] No name 'models' in module 'mptt'
projects/models.py:57: [E0401(import-error), ] Unable to import 'mptt.models'
projects/models.py:72: [E0401(import-error), ] Unable to import 'django_rq'
projects/models.py:73: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/models.py:78: [C0111(missing-docstring), HistoryModelMixin] Missing class docstring
projects/models.py:81: [C0103(invalid-name), HistoryModelMixin.write_history_changes] Variable name "c" doesn't conform to snake_case naming style
projects/models.py:87: [R0205(useless-object-inheritance), ExcludeFromDjangoAdminHistoryModelMixin] Class 'ExcludeFromDjangoAdminHistoryModelMixin' inherits from object, can be safely removed from bases in python3
projects/models.py:90: [W0107(unnecessary-pass), ExcludeFromDjangoAdminHistoryModelMixin] Unnecessary pass statement
projects/models.py:87: [R0903(too-few-public-methods), ExcludeFromDjangoAdminHistoryModelMixin] Too few public methods (0/2)
projects/models.py:93: [C0111(missing-docstring), ProjectsNotificationEvent] Missing class docstring
projects/models.py:113: [C0111(missing-docstring), ProjectsNotificationEvent.Meta] Missing class docstring
projects/models.py:113: [R0903(too-few-public-methods), ProjectsNotificationEvent.Meta] Too few public methods (0/2)
projects/models.py:93: [R0903(too-few-public-methods), ProjectsNotificationEvent] Too few public methods (0/2)
projects/models.py:117: [C0111(missing-docstring), ReportMixin] Missing class docstring
projects/models.py:117: [R0205(useless-object-inheritance), ReportMixin] Class 'ReportMixin' inherits from object, can be safely removed from bases in python3
projects/models.py:118: [C0111(missing-docstring), ReportMixin.get_file] Missing method docstring
projects/models.py:117: [R0903(too-few-public-methods), ReportMixin] Too few public methods (1/2)
projects/models.py:135: [C0111(missing-docstring), BaseColumnsModel] Missing class docstring
projects/models.py:144: [C0111(missing-docstring), BaseColumnsModel.Meta] Missing class docstring
projects/models.py:144: [R0903(too-few-public-methods), BaseColumnsModel.Meta] Too few public methods (0/2)
projects/models.py:135: [R0903(too-few-public-methods), BaseColumnsModel] Too few public methods (0/2)
projects/models.py:148: [C0111(missing-docstring), HistoryItemMixin] Missing class docstring
projects/models.py:151: [C0111(missing-docstring), HistoryItemMixin.Meta] Missing class docstring
projects/models.py:151: [R0903(too-few-public-methods), HistoryItemMixin.Meta] Too few public methods (0/2)
projects/models.py:148: [R0903(too-few-public-methods), HistoryItemMixin] Too few public methods (0/2)
projects/models.py:166: [C0111(missing-docstring), ProjectsDocument.Meta] Missing class docstring
projects/models.py:166: [R0903(too-few-public-methods), ProjectsDocument.Meta] Too few public methods (0/2)
projects/models.py:169: [C0111(missing-docstring), ProjectsDocument.get_document_number] Missing method docstring
projects/models.py:155: [R0903(too-few-public-methods), ProjectsDocument] Too few public methods (1/2)
projects/models.py:180: [C0111(missing-docstring), ProjectsDocumentRevision] Missing class docstring
projects/models.py:183: [C0111(missing-docstring), ProjectsDocumentRevision.Meta] Missing class docstring
projects/models.py:183: [R0903(too-few-public-methods), ProjectsDocumentRevision.Meta] Too few public methods (0/2)
projects/models.py:180: [R0903(too-few-public-methods), ProjectsDocumentRevision] Too few public methods (0/2)
projects/models.py:187: [C0111(missing-docstring), DocumentType] Missing class docstring
projects/models.py:195: [C0111(missing-docstring), DocumentType.Meta] Missing class docstring
projects/models.py:195: [R0903(too-few-public-methods), DocumentType.Meta] Too few public methods (0/2)
projects/models.py:202: [C0111(missing-docstring), DocumentField] Missing class docstring
projects/models.py:217: [C0111(missing-docstring), DocumentField.Meta] Missing class docstring
projects/models.py:217: [R0903(too-few-public-methods), DocumentField.Meta] Too few public methods (0/2)
projects/models.py:202: [R0903(too-few-public-methods), DocumentField] Too few public methods (0/2)
projects/models.py:249: [C0111(missing-docstring), BaseFieldsEntitiesModel] Missing class docstring
projects/models.py:269: [C0111(missing-docstring), BaseFieldsEntitiesModel.Meta] Missing class docstring
projects/models.py:269: [R0903(too-few-public-methods), BaseFieldsEntitiesModel.Meta] Too few public methods (0/2)
projects/models.py:275: [C0111(missing-docstring), BaseFieldsEntitiesModel.connected_entity] Missing method docstring
projects/models.py:298: [C0111(missing-docstring), FieldsTaskTypes.Meta] Missing class docstring
projects/models.py:298: [R0903(too-few-public-methods), FieldsTaskTypes.Meta] Too few public methods (0/2)
projects/models.py:327: [C0111(missing-docstring), FieldsTasks.Meta] Missing class docstring
projects/models.py:327: [R0903(too-few-public-methods), FieldsTasks.Meta] Too few public methods (0/2)
projects/models.py:354: [C0111(missing-docstring), FieldsJobTypes.Meta] Missing class docstring
projects/models.py:354: [R0903(too-few-public-methods), FieldsJobTypes.Meta] Too few public methods (0/2)
projects/models.py:383: [C0111(missing-docstring), FieldsJobs.Meta] Missing class docstring
projects/models.py:383: [R0903(too-few-public-methods), FieldsJobs.Meta] Too few public methods (0/2)
projects/models.py:392: [C0111(missing-docstring), field_set_technical_name] Missing function docstring
projects/models.py:392: [W0613(unused-argument), field_set_technical_name] Unused argument 'sender'
projects/models.py:392: [W0613(unused-argument), field_set_technical_name] Unused argument 'args'
projects/models.py:392: [W0613(unused-argument), field_set_technical_name] Unused argument 'kwargs'
projects/models.py:402: [C0111(missing-docstring), copy_info_from_field] Missing function docstring
projects/models.py:402: [W0613(unused-argument), copy_info_from_field] Unused argument 'sender'
projects/models.py:402: [W0613(unused-argument), copy_info_from_field] Unused argument 'args'
projects/models.py:402: [W0613(unused-argument), copy_info_from_field] Unused argument 'kwargs'
projects/models.py:412: [C0111(missing-docstring), CoreFieldsModel] Missing class docstring
projects/models.py:444: [C0111(missing-docstring), CoreFieldsModel.Meta] Missing class docstring
projects/models.py:444: [R0903(too-few-public-methods), CoreFieldsModel.Meta] Too few public methods (0/2)
projects/models.py:448: [C0111(missing-docstring), UserGridColumnsQuerySet] Missing class docstring
projects/models.py:463: [C0111(missing-docstring), UserGridColumnsQuerySet.user_columns_qs] Missing method docstring
projects/models.py:469: [C0111(missing-docstring), UserGridColumnsQuerySet.user_columns_fields_qs_lookups] Missing method docstring
projects/models.py:469: [R0201(no-self-use), UserGridColumnsQuerySet.user_columns_fields_qs_lookups] Method could be a function
projects/models.py:472: [C0111(missing-docstring), UserGridColumnsQuerySet.apply_user_configured_columns] Missing method docstring
projects/models.py:498: [C0111(missing-docstring), ExtraJoinCondition] Missing class docstring
projects/models.py:498: [R0205(useless-object-inheritance), ExtraJoinCondition] Class 'ExtraJoinCondition' inherits from object, can be safely removed from bases in python3
projects/models.py:503: [C0111(missing-docstring), ExtraJoinCondition.get_joining_columns] Missing method docstring
projects/models.py:503: [W0613(unused-argument), ExtraJoinCondition.get_joining_columns] Unused argument 'args'
projects/models.py:503: [W0613(unused-argument), ExtraJoinCondition.get_joining_columns] Unused argument 'kwargs'
projects/models.py:503: [R0201(no-self-use), ExtraJoinCondition.get_joining_columns] Method could be a function
projects/models.py:506: [C0111(missing-docstring), ExtraJoinCondition.get_extra_restriction] Missing method docstring
projects/models.py:507: [C0111(missing-docstring), ExtraJoinCondition.get_extra_restriction.WhereClause] Missing class docstring
projects/models.py:507: [R0205(useless-object-inheritance), ExtraJoinCondition.get_extra_restriction.WhereClause] Class 'WhereClause' inherits from object, can be safely removed from bases in python3
projects/models.py:512: [C0111(missing-docstring), ExtraJoinCondition.get_extra_restriction.WhereClause.as_sql] Missing method docstring
projects/models.py:512: [W0613(unused-argument), ExtraJoinCondition.get_extra_restriction.WhereClause.as_sql] Unused argument 'args'
projects/models.py:512: [W0613(unused-argument), ExtraJoinCondition.get_extra_restriction.WhereClause.as_sql] Unused argument 'kwargs'
projects/models.py:507: [R0903(too-few-public-methods), ExtraJoinCondition.get_extra_restriction.WhereClause] Too few public methods (1/2)
projects/models.py:506: [W0613(unused-argument), ExtraJoinCondition.get_extra_restriction] Unused argument 'where_class'
projects/models.py:526: [C0111(missing-docstring), ForeignKeyQuerySet] Missing class docstring
projects/models.py:545: [W0212(protected-access), ForeignKeyQuerySet._clone] Access to a protected member _add_foreign_keys of a client class
projects/models.py:546: [W0212(protected-access), ForeignKeyQuerySet._clone] Access to a protected member _foreignkey_filter of a client class
projects/models.py:547: [W0212(protected-access), ForeignKeyQuerySet._clone] Access to a protected member _foreignkey_exclude of a client class
projects/models.py:548: [W0212(protected-access), ForeignKeyQuerySet._clone] Access to a protected member _foreignkey_annotations of a client class
projects/models.py:559: [C0111(missing-docstring), ForeignKeyQuerySet.iterator] Missing method docstring
projects/models.py:564: [C0111(missing-docstring), ForeignKeyQuerySet.aggregate] Missing method docstring
projects/models.py:569: [C0111(missing-docstring), ForeignKeyQuerySet.filter] Missing method docstring
projects/models.py:573: [C0111(missing-docstring), ForeignKeyQuerySet.exclude] Missing method docstring
projects/models.py:577: [C0111(missing-docstring), ForeignKeyQuerySet.annotate] Missing method docstring
projects/models.py:584: [C0111(missing-docstring), ForeignKeyQuerySet.foreign_key_fields] Missing method docstring
projects/models.py:587: [W0212(protected-access), ForeignKeyQuerySet.foreign_key_fields] Access to a protected member _meta of a client class
projects/models.py:635: [C0103(invalid-name), ForeignKeyQuerySet.foreign_key_fields] Variable name "t" doesn't conform to snake_case naming style
projects/models.py:587: [R1702(too-many-nested-blocks), ForeignKeyQuerySet.foreign_key_fields] Too many nested blocks (6/5)
projects/models.py:645: [W0212(protected-access), ForeignKeyQuerySet.foreign_key_fields] Access to a protected member _meta of a client class
projects/models.py:658: [C0111(missing-docstring), ForeignKeyQuerySet.remove_foreign_keys] Missing method docstring
projects/models.py:660: [W0212(protected-access), ForeignKeyQuerySet.remove_foreign_keys] Access to a protected member _add_foreign_keys of a client class
projects/models.py:663: [C0111(missing-docstring), ForeignKeyQuerySet.add_foreign_keys] Missing method docstring
projects/models.py:677: [C0111(missing-docstring), ForeignKeyQuerySet.execute_extra_join] Missing method docstring
projects/models.py:686: [W0621(redefined-outer-name), ForeignKeyQuerySet.execute_extra_join] Redefining name 'connection' from outer scope (line 15)
projects/models.py:677: [R0913(too-many-arguments), ForeignKeyQuerySet.execute_extra_join] Too many arguments (8/5)
projects/models.py:677: [R0914(too-many-locals), ForeignKeyQuerySet.execute_extra_join] Too many local variables (18/15)
projects/models.py:731: [C0111(missing-docstring), ForeignKeyQuerySet.apply_foreign_join] Missing method docstring
projects/models.py:775: [C0111(missing-docstring), Project.root] Missing method docstring
projects/models.py:778: [C0111(missing-docstring), Project.Meta] Missing class docstring
projects/models.py:778: [R0903(too-few-public-methods), Project.Meta] Too few public methods (0/2)
projects/models.py:786: [C0111(missing-docstring), Project.MPTTMeta] Missing class docstring
projects/models.py:786: [R0903(too-few-public-methods), Project.MPTTMeta] Too few public methods (0/2)
projects/models.py:790: [C0111(missing-docstring), Project.from_string] Missing method docstring
projects/models.py:790: [W0613(unused-argument), Project.from_string] Unused argument 'kwargs'
projects/models.py:859: [C0111(missing-docstring), JobType.from_string] Missing method docstring
projects/models.py:859: [W0613(unused-argument), JobType.from_string] Unused argument 'kwargs'
projects/models.py:874: [C0111(missing-docstring), JobType.Meta] Missing class docstring
projects/models.py:874: [R0903(too-few-public-methods), JobType.Meta] Too few public methods (0/2)
projects/models.py:881: [C0111(missing-docstring), JobType.MPTTMeta] Missing class docstring
projects/models.py:881: [R0903(too-few-public-methods), JobType.MPTTMeta] Too few public methods (0/2)
projects/models.py:885: [C0111(missing-docstring), JobType.create_job] Missing method docstring
projects/models.py:885: [R0914(too-many-locals), JobType.create_job] Too many local variables (21/15)
projects/models.py:914: [W0212(protected-access), JobType.create_job] Access to a protected member _meta of a client class
projects/models.py:1013: [W0212(protected-access), JobType.create_job] Access to a protected member _meta of a client class
projects/models.py:885: [R0912(too-many-branches), JobType.create_job] Too many branches (13/12)
projects/models.py:1033: [C0111(missing-docstring), JobType.end_date] Missing method docstring
projects/models.py:1036: [C0111(missing-docstring), JobType.create_job_workflow] Missing method docstring
projects/models.py:1069: [C0111(missing-docstring), ForeignKeyJobQuerySet] Missing class docstring
projects/models.py:1078: [E1101(no-member), ForeignKeyJobQuerySet.user_columns_qs] Method 'user_columns_qs' has no 'filter' member
projects/models.py:1085: [E1133(not-an-iterable), ForeignKeyJobQuerySet.user_columns_fields_qs_lookups] Non-iterable value self.user_columns_qs is used in an iterating context
projects/models.py:1085: [C0103(invalid-name), ForeignKeyJobQuerySet.user_columns_fields_qs_lookups] Variable name "c" doesn't conform to snake_case naming style
projects/models.py:1220: [C0103(invalid-name), Job.clone] Attribute name "pk" doesn't conform to snake_case naming style
projects/models.py:1098: [R0901(too-many-ancestors), Job] Too many ancestors (13/7)
projects/models.py:1098: [R0902(too-many-instance-attributes), Job] Too many instance attributes (11/7)
projects/models.py:1170: [C0111(missing-docstring), Job.Meta] Missing class docstring
projects/models.py:1170: [R0903(too-few-public-methods), Job.Meta] Too few public methods (0/2)
projects/models.py:1184: [C0111(missing-docstring), Job.graph] Missing method docstring
projects/models.py:1199: [C0111(missing-docstring), Job.get_links] Missing method docstring
projects/models.py:1202: [C0111(missing-docstring), Job.get_nodes] Missing method docstring
projects/models.py:1210: [R0914(too-many-locals), Job.clone] Too many local variables (17/15)
projects/models.py:1236: [W0212(protected-access), Job.clone] Access to a protected member _ignore_technical_name_composition of a client class
projects/models.py:1289: [W0212(protected-access), Job.clone] Access to a protected member _ignore_technical_name_composition of a client class
projects/models.py:1293: [C0103(invalid-name), Job.clone] Variable name "td" doesn't conform to snake_case naming style
projects/models.py:1210: [R0915(too-many-statements), Job.clone] Too many statements (59/50)
projects/models.py:1213: [E0203(access-member-before-definition), Job.clone] Access to member 'pk' before its definition line 1220
projects/models.py:1220: [W0201(attribute-defined-outside-init), Job.clone] Attribute 'pk' defined outside __init__
projects/models.py:1341: [C0103(invalid-name), JobLink.save] Attribute name "pk" doesn't conform to snake_case naming style
projects/models.py:1300: [C0111(missing-docstring), JobLink] Missing class docstring
projects/models.py:1323: [C0111(missing-docstring), JobLink.Meta] Missing class docstring
projects/models.py:1323: [R0903(too-few-public-methods), JobLink.Meta] Too few public methods (0/2)
projects/models.py:1362: [C0111(missing-docstring), JobLink.delete] Missing method docstring
projects/models.py:1367: [C0111(missing-docstring), JobLink.create_snapshot] Missing method docstring
projects/models.py:1336: [E0203(access-member-before-definition), JobLink.save] Access to member 'pk' before its definition line 1341
projects/models.py:1341: [W0201(attribute-defined-outside-init), JobLink.save] Attribute 'pk' defined outside __init__
projects/models.py:1398: [C0111(missing-docstring), Gantt.Meta] Missing class docstring
projects/models.py:1398: [R0903(too-few-public-methods), Gantt.Meta] Too few public methods (0/2)
projects/models.py:1405: [C0111(missing-docstring), Gantt.get_planned_duration] Missing method docstring
projects/models.py:1418: [C0111(missing-docstring), Gantt.is_index_topologicaly_sorted] Missing method docstring
projects/models.py:1423: [C0111(missing-docstring), Gantt.graph] Missing method docstring
projects/models.py:1441: [R1706(consider-using-ternary), Gantt.graph] Consider using ternary (graph if has_data else False)
projects/models.py:1443: [C0111(missing-docstring), Gantt.critical_path] Missing method docstring
projects/models.py:1451: [C0111(missing-docstring), Gantt.longest_path] Missing method docstring
projects/models.py:1467: [C0111(missing-docstring), Gantt.calculate_planned_duration] Missing method docstring
projects/models.py:1474: [W0125(using-constant-test), Gantt.calculate_planned_duration] Using a conditional statement with a constant value
projects/models.py:1467: [W0613(unused-argument), Gantt.calculate_planned_duration] Unused argument 'args'
projects/models.py:1480: [C0111(missing-docstring), Gantt.set_dates] Missing method docstring
projects/models.py:1480: [R0913(too-many-arguments), Gantt.set_dates] Too many arguments (6/5)
projects/models.py:1556: [C0111(missing-docstring), GanttsTaskTypes.Meta] Missing class docstring
projects/models.py:1556: [R0903(too-few-public-methods), GanttsTaskTypes.Meta] Too few public methods (0/2)
projects/models.py:1598: [C0111(missing-docstring), TasksDependency.Meta] Missing class docstring
projects/models.py:1598: [R0903(too-few-public-methods), TasksDependency.Meta] Too few public methods (0/2)
projects/models.py:1638: [C0111(missing-docstring), GanttsTaskTypesDependency.Meta] Missing class docstring
projects/models.py:1638: [R0903(too-few-public-methods), GanttsTaskTypesDependency.Meta] Too few public methods (0/2)
projects/models.py:1606: [R0903(too-few-public-methods), GanttsTaskTypesDependency] Too few public methods (1/2)
projects/models.py:1681: [C0111(missing-docstring), TaskType.from_string] Missing method docstring
projects/models.py:1681: [W0613(unused-argument), TaskType.from_string] Unused argument 'kwargs'
projects/models.py:1687: [C0111(missing-docstring), TaskType.Meta] Missing class docstring
projects/models.py:1687: [R0903(too-few-public-methods), TaskType.Meta] Too few public methods (0/2)
projects/models.py:1695: [C0111(missing-docstring), ForeignKeyTaskQuerySet] Missing class docstring
projects/models.py:1704: [E1101(no-member), ForeignKeyTaskQuerySet.user_columns_qs] Method 'user_columns_qs' has no 'exclude' member
projects/models.py:1712: [E1133(not-an-iterable), ForeignKeyTaskQuerySet.user_columns_fields_qs_lookups] Non-iterable value self.user_columns_qs is used in an iterating context
projects/models.py:1712: [C0103(invalid-name), ForeignKeyTaskQuerySet.user_columns_fields_qs_lookups] Variable name "c" doesn't conform to snake_case naming style
projects/models.py:1724: [C0111(missing-docstring), ForeignKeyTaskQuerySet.filter_by_user_columns] Missing method docstring
projects/models.py:1725: [R1718(consider-using-set-comprehension), ForeignKeyTaskQuerySet.filter_by_user_columns] Consider using a set comprehension
projects/models.py:1725: [E1133(not-an-iterable), ForeignKeyTaskQuerySet.filter_by_user_columns] Non-iterable value self.user_columns_qs is used in an iterating context
projects/models.py:1732: [R0901(too-many-ancestors), Task] Too many ancestors (13/7)
projects/models.py:1844: [C0111(missing-docstring), Task.Meta] Missing class docstring
projects/models.py:1844: [R0903(too-few-public-methods), Task.Meta] Too few public methods (0/2)
projects/models.py:1870: [C0111(missing-docstring), Task.date_start] Missing method docstring
projects/models.py:1873: [C0111(missing-docstring), Task.date_end] Missing method docstring
projects/models.py:1876: [C0111(missing-docstring), Task.cost] Missing method docstring
projects/models.py:1879: [C0111(missing-docstring), Task.units] Missing method docstring
projects/models.py:1882: [R0913(too-many-arguments), Task.move_forward] Too many arguments (6/5)
projects/models.py:1882: [R0914(too-many-locals), Task.move_forward] Too many local variables (20/15)
projects/models.py:1908: [R0916(too-many-boolean-expressions), Task.move_forward] Too many boolean expressions in if statement (6/5)
projects/models.py:1954: [C0111(missing-docstring), Task.move_forward_planned] Missing method docstring
projects/models.py:1957: [C0111(missing-docstring), Task.move_forward_forecast] Missing method docstring
projects/models.py:1960: [C0111(missing-docstring), Task.vacuum_dependents] Missing method docstring
projects/models.py:1967: [R0916(too-many-boolean-expressions), Task.vacuum_dependents] Too many boolean expressions in if statement (6/5)
projects/models.py:1996: [C0103(invalid-name), Task.get_all_target_tasks] Variable name "r" doesn't conform to snake_case naming style
projects/models.py:2005: [C0111(missing-docstring), Task.consolidate_blocks] Missing method docstring
projects/models.py:2029: [C0111(missing-docstring), update_workflow] Missing function docstring
projects/models.py:2036: [R1705(no-else-return), update_workflow.get_parent] Unnecessary "else" after "return"
projects/models.py:2047: [C0103(invalid-name), update_workflow] Variable name "qs" doesn't conform to snake_case naming style
projects/models.py:2042: [R1702(too-many-nested-blocks), update_workflow] Too many nested blocks (6/5)
projects/models.py:2029: [W0613(unused-argument), update_workflow] Unused argument 'sender'
projects/models.py:2029: [W0613(unused-argument), update_workflow] Unused argument 'kwargs'
projects/models.py:2105: [C0111(missing-docstring), update_readonly_fields] Missing function docstring
projects/models.py:2106: [W0622(redefined-builtin), update_readonly_fields] Redefining built-in 'sum'
projects/models.py:2105: [W0613(unused-argument), update_readonly_fields] Unused argument 'sender'
projects/models.py:2105: [W0613(unused-argument), update_readonly_fields] Unused argument 'kwargs'
projects/models.py:2148: [C0111(missing-docstring), task_set_technical_name] Missing function docstring
projects/models.py:2148: [W0613(unused-argument), task_set_technical_name] Unused argument 'sender'
projects/models.py:2148: [W0613(unused-argument), task_set_technical_name] Unused argument 'args'
projects/models.py:2148: [W0613(unused-argument), task_set_technical_name] Unused argument 'kwargs'
projects/models.py:2185: [C0111(missing-docstring), Field.Meta] Missing class docstring
projects/models.py:2185: [R0903(too-few-public-methods), Field.Meta] Too few public methods (0/2)
projects/models.py:2213: [C0111(missing-docstring), Zone.Meta] Missing class docstring
projects/models.py:2213: [R0903(too-few-public-methods), Zone.Meta] Too few public methods (0/2)
projects/models.py:2221: [C0111(missing-docstring), Zone.from_string] Missing method docstring
projects/models.py:2221: [W0613(unused-argument), Zone.from_string] Unused argument 'kwargs'
projects/models.py:2272: [C0111(missing-docstring), JobOrderingFilter.Meta] Missing class docstring
projects/models.py:2272: [R0903(too-few-public-methods), JobOrderingFilter.Meta] Too few public methods (0/2)
projects/models.py:2302: [E1111(assignment-from-no-return), JobOrderingFilter.save] Assigning result of a function call, where the function has no return
projects/models.py:2333: [C0111(missing-docstring), JobOrderingFiltersHypothesys.Meta] Missing class docstring
projects/models.py:2333: [R0903(too-few-public-methods), JobOrderingFiltersHypothesys.Meta] Too few public methods (0/2)
projects/models.py:2360: [C0111(missing-docstring), UserGridColumns.Meta] Missing class docstring
projects/models.py:2360: [R0903(too-few-public-methods), UserGridColumns.Meta] Too few public methods (0/2)
projects/models.py:2340: [R0903(too-few-public-methods), UserGridColumns] Too few public methods (1/2)
projects/models.py:2380: [C0111(missing-docstring), EconomicBudget.Meta] Missing class docstring
projects/models.py:2380: [R0903(too-few-public-methods), EconomicBudget.Meta] Too few public methods (0/2)
projects/models.py:2405: [C0111(missing-docstring), EconomicRevision.Meta] Missing class docstring
projects/models.py:2405: [R0903(too-few-public-methods), EconomicRevision.Meta] Too few public methods (0/2)
projects/models.py:2431: [C0111(missing-docstring), EconomicGroup.Meta] Missing class docstring
projects/models.py:2431: [R0903(too-few-public-methods), EconomicGroup.Meta] Too few public methods (0/2)
projects/models.py:2457: [C0111(missing-docstring), EconomicProject.Meta] Missing class docstring
projects/models.py:2457: [R0903(too-few-public-methods), EconomicProject.Meta] Too few public methods (0/2)
projects/models.py:2482: [C0111(missing-docstring), EconomicSubproject.Meta] Missing class docstring
projects/models.py:2482: [R0903(too-few-public-methods), EconomicSubproject.Meta] Too few public methods (0/2)
projects/models.py:2512: [C0111(missing-docstring), EconomicHypothesis.Meta] Missing class docstring
projects/models.py:2512: [R0903(too-few-public-methods), EconomicHypothesis.Meta] Too few public methods (0/2)
projects/models.py:2531: [C0111(missing-docstring), EconomicProvider.Meta] Missing class docstring
projects/models.py:2531: [R0903(too-few-public-methods), EconomicProvider.Meta] Too few public methods (0/2)
projects/models.py:2609: [C0111(missing-docstring), EconomicValue.Meta] Missing class docstring
projects/models.py:2609: [R0903(too-few-public-methods), EconomicValue.Meta] Too few public methods (0/2)
projects/models.py:2637: [C0111(missing-docstring), OrderingZonesMatrix] Missing class docstring
projects/models.py:2652: [C0111(missing-docstring), OrderingZonesMatrix.Meta] Missing class docstring
projects/models.py:2652: [R0903(too-few-public-methods), OrderingZonesMatrix.Meta] Too few public methods (0/2)
projects/models.py:2637: [R0903(too-few-public-methods), OrderingZonesMatrix] Too few public methods (1/2)
projects/models.py:2659: [C0111(missing-docstring), OrderingHypothesesMatrix] Missing class docstring
projects/models.py:2678: [C0111(missing-docstring), OrderingHypothesesMatrix.Meta] Missing class docstring
projects/models.py:2678: [R0903(too-few-public-methods), OrderingHypothesesMatrix.Meta] Too few public methods (0/2)
projects/models.py:2659: [R0903(too-few-public-methods), OrderingHypothesesMatrix] Too few public methods (1/2)
projects/models.py:2685: [C0111(missing-docstring), OrderingProvidersMatrix] Missing class docstring
projects/models.py:2700: [C0111(missing-docstring), OrderingProvidersMatrix.Meta] Missing class docstring
projects/models.py:2700: [R0903(too-few-public-methods), OrderingProvidersMatrix.Meta] Too few public methods (0/2)
projects/models.py:2685: [R0903(too-few-public-methods), OrderingProvidersMatrix] Too few public methods (1/2)
projects/models.py:2728: [C0111(missing-docstring), TaskTypeEconomicHypothesis.Meta] Missing class docstring
projects/models.py:2728: [R0903(too-few-public-methods), TaskTypeEconomicHypothesis.Meta] Too few public methods (0/2)
projects/models.py:2707: [R0903(too-few-public-methods), TaskTypeEconomicHypothesis] Too few public methods (1/2)
projects/models.py:2757: [C0111(missing-docstring), TaskSolOrders.warning_order_hypothesis_not_associated] Missing method docstring
projects/models.py:2760: [C0103(invalid-name), TaskSolOrders.warning_order_hypothesis_not_associated] Variable name "e" doesn't conform to snake_case naming style
projects/models.py:2760: [W0612(unused-variable), TaskSolOrders.warning_order_hypothesis_not_associated] Unused variable 'e'
projects/models.py:2784: [C0111(missing-docstring), TaskSolOrders.Meta] Missing class docstring
projects/models.py:2784: [R0903(too-few-public-methods), TaskSolOrders.Meta] Too few public methods (0/2)
projects/models.py:2791: [C0111(missing-docstring), TaskBlockHistory] Missing class docstring
projects/models.py:2822: [W0622(redefined-builtin), TaskBlockHistory.__str__] Redefining built-in 'repr'
projects/models.py:2827: [C0111(missing-docstring), TaskBlockHistory.Meta] Missing class docstring
projects/models.py:2827: [R0903(too-few-public-methods), TaskBlockHistory.Meta] Too few public methods (0/2)
projects/models.py:2842: [C0111(missing-docstring), TaskOffer] Missing class docstring
projects/models.py:2842: [R0901(too-many-ancestors), TaskOffer] Too many ancestors (10/7)
projects/models.py:2885: [C0111(missing-docstring), TaskOffer.Meta] Missing class docstring
projects/models.py:2885: [R0903(too-few-public-methods), TaskOffer.Meta] Too few public methods (0/2)
projects/models.py:2893: [C0111(missing-docstring), OrderingDelegation] Missing class docstring
projects/models.py:2940: [C0111(missing-docstring), OrderingDelegation.Meta] Missing class docstring
projects/models.py:2940: [R0903(too-few-public-methods), OrderingDelegation.Meta] Too few public methods (0/2)
projects/models.py:2947: [C0111(missing-docstring), OrangeOrderingOrderTask] Missing class docstring
projects/models.py:2948: [C0111(missing-docstring), OrangeOrderingOrderTask.Meta] Missing class docstring
projects/models.py:2948: [R0903(too-few-public-methods), OrangeOrderingOrderTask.Meta] Too few public methods (0/2)
projects/models.py:2952: [C0111(missing-docstring), OrangeSharingTask] Missing class docstring
projects/models.py:2953: [C0111(missing-docstring), OrangeSharingTask.Meta] Missing class docstring
projects/models.py:2953: [R0903(too-few-public-methods), OrangeSharingTask.Meta] Too few public methods (0/2)
projects/models.py:2957: [C0111(missing-docstring), OrangeSiteDevice] Missing class docstring
projects/models.py:2958: [C0111(missing-docstring), OrangeSiteDevice.Meta] Missing class docstring
projects/models.py:2958: [R0903(too-few-public-methods), OrangeSiteDevice.Meta] Too few public methods (0/2)
projects/models.py:2962: [C0111(missing-docstring), OrangeBriseTicket] Missing class docstring
projects/models.py:2963: [C0111(missing-docstring), OrangeBriseTicket.Meta] Missing class docstring
projects/models.py:2963: [R0903(too-few-public-methods), OrangeBriseTicket.Meta] Too few public methods (0/2)
projects/models.py:2967: [C0111(missing-docstring), OrangeLegalTask] Missing class docstring
projects/models.py:2968: [C0111(missing-docstring), OrangeLegalTask.Meta] Missing class docstring
projects/models.py:2968: [R0903(too-few-public-methods), OrangeLegalTask.Meta] Too few public methods (0/2)
projects/models.py:2972: [C0111(missing-docstring), OrangeHuntingTask] Missing class docstring
projects/models.py:2973: [C0111(missing-docstring), OrangeHuntingTask.Meta] Missing class docstring
projects/models.py:2973: [R0903(too-few-public-methods), OrangeHuntingTask.Meta] Too few public methods (0/2)
projects/models.py:2977: [C0111(missing-docstring), OrangeBqaSelfAcceptance] Missing class docstring
projects/models.py:2978: [C0111(missing-docstring), OrangeBqaSelfAcceptance.Meta] Missing class docstring
projects/models.py:2978: [R0903(too-few-public-methods), OrangeBqaSelfAcceptance.Meta] Too few public methods (0/2)
projects/models.py:2982: [C0111(missing-docstring), ChangeLog] Missing class docstring
projects/models.py:2994: [C0111(missing-docstring), TaskLink] Missing class docstring
projects/models.py:3018: [C0111(missing-docstring), TaskLink.Meta] Missing class docstring
projects/models.py:3018: [R0903(too-few-public-methods), TaskLink.Meta] Too few public methods (0/2)
projects/models.py:3025: [C0111(missing-docstring), TaskLinkProperty] Missing class docstring
projects/models.py:3038: [C0111(missing-docstring), TaskLinkProperty.from_string] Missing method docstring
projects/models.py:3038: [W0613(unused-argument), TaskLinkProperty.from_string] Unused argument 'kwargs'
projects/models.py:3041: [C0111(missing-docstring), TaskLinkProperty.Meta] Missing class docstring
projects/models.py:3041: [R0903(too-few-public-methods), TaskLinkProperty.Meta] Too few public methods (0/2)
projects/models.py:3: [W0611(unused-import), ] Unused import copy
projects/models.py:9: [W0611(unused-import), ] Unused get_user_model imported from django.contrib.auth
projects/models.py:18: [W0611(unused-import), ] Unused F imported from django.db.models
projects/models.py:18: [W0611(unused-import), ] Unused Func imported from django.db.models
projects/models.py:18: [W0611(unused-import), ] Unused Case imported from django.db.models
projects/models.py:18: [W0611(unused-import), ] Unused When imported from django.db.models
projects/models.py:26: [W0611(unused-import), ] Unused post_delete imported from django.db.models.signals
projects/models.py:26: [W0611(unused-import), ] Unused pre_delete imported from django.db.models.signals
projects/models.py:26: [W0611(unused-import), ] Unused m2m_changed imported from django.db.models.signals
projects/models.py:33: [W0611(unused-import), ] Unused JobLinkedEvent imported from projects.notifications
projects/models.py:39: [W0611(unused-import), ] Unused ReportPermissionsMixin imported from projects.permissions.report
projects/models.py:53: [W0611(unused-import), ] Unused contribute_fields_to_model imported from sol.utils
projects/models.py:58: [W0611(unused-import), ] Unused Provider imported from orange_ordering.models
projects/models.py:72: [W0611(unused-import), ] Unused import django_rq
projects/models.py:73: [W0611(unused-import), ] Unused empty imported from rest_framework.fields
projects/models.py:73: [W0611(unused-import), ] Unused NullBooleanField imported from rest_framework.fields
projects/models.py:73: [W0611(unused-import), ] Unused BooleanField imported from rest_framework.fields
projects/models.py:57: [C0411(wrong-import-order), ] third party import "from mptt.models import MPTTModel, TreeForeignKey" should be placed before "from projects.fields.json_dynamic import FIELD_TYPES"
projects/models.py:68: [C0411(wrong-import-order), ] third party import "import networkx as nx" should be placed before "from projects.fields.json_dynamic import FIELD_TYPES"
projects/models.py:71: [C0411(wrong-import-order), ] standard import "import datetime" should be placed before "from django.contrib.auth import get_user_model"
projects/models.py:72: [C0411(wrong-import-order), ] third party import "import django_rq" should be placed before "from projects.fields.json_dynamic import FIELD_TYPES"
projects/models.py:73: [C0411(wrong-import-order), ] third party import "from rest_framework.fields import empty, NullBooleanField, BooleanField" should be placed before "from projects.fields.json_dynamic import FIELD_TYPES"
projects/models.py:65: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
projects/models.py:69: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
projects/models.py:75: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module projects.data_exchange.inbound.excel_economicvalue_import
projects/data_exchange/inbound/excel_economicvalue_import.py:7: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:83: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:113: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:138: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:168: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:177: [C0301(line-too-long), ] Line too long (104/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:188: [C0301(line-too-long), ] Line too long (116/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:204: [C0301(line-too-long), ] Line too long (109/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:215: [C0301(line-too-long), ] Line too long (106/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:228: [C0301(line-too-long), ] Line too long (110/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:241: [C0301(line-too-long), ] Line too long (110/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:254: [C0301(line-too-long), ] Line too long (117/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:258: [C0301(line-too-long), ] Line too long (117/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:318: [C0301(line-too-long), ] Line too long (109/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:347: [C0301(line-too-long), ] Line too long (123/100)
projects/data_exchange/inbound/excel_economicvalue_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_economicvalue_import.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/data_exchange/inbound/excel_economicvalue_import.py:37: [C0103(invalid-name), EconomicValuesExcelImporter.__init__] Attribute name "ws" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_economicvalue_import.py:11: [C0111(missing-docstring), EconomicValuesExcelImporter] Missing class docstring
projects/data_exchange/inbound/excel_economicvalue_import.py:11: [R0205(useless-object-inheritance), EconomicValuesExcelImporter] Class 'EconomicValuesExcelImporter' inherits from object, can be safely removed from bases in python3
projects/data_exchange/inbound/excel_economicvalue_import.py:36: [C0103(invalid-name), EconomicValuesExcelImporter.__init__] Variable name "wb" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_economicvalue_import.py:105: [R0914(too-many-locals), EconomicValuesExcelImporter.validate_row] Too many local variables (29/15)
projects/data_exchange/inbound/excel_economicvalue_import.py:105: [R0912(too-many-branches), EconomicValuesExcelImporter.validate_row] Too many branches (19/12)
projects/data_exchange/inbound/excel_economicvalue_import.py:105: [R0915(too-many-statements), EconomicValuesExcelImporter.validate_row] Too many statements (83/50)
projects/data_exchange/inbound/excel_economicvalue_import.py:261: [R0912(too-many-branches), EconomicValuesExcelImporter.process] Too many branches (13/12)
************* Module projects.data_exchange.inbound.excel_delegations_import
projects/data_exchange/inbound/excel_delegations_import.py:132: [W0511(fixme), ] TODO: quick and dirty fix for tuple out of range exception coming from openpyxl, find a better way maybe..
projects/data_exchange/inbound/excel_delegations_import.py:558: [W0511(fixme), ] TODO: manage error?
projects/data_exchange/inbound/excel_delegations_import.py:17: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/inbound/excel_delegations_import.py:18: [C0301(line-too-long), ] Line too long (107/100)
projects/data_exchange/inbound/excel_delegations_import.py:132: [C0301(line-too-long), ] Line too long (116/100)
projects/data_exchange/inbound/excel_delegations_import.py:149: [C0301(line-too-long), ] Line too long (139/100)
projects/data_exchange/inbound/excel_delegations_import.py:173: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_delegations_import.py:190: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/inbound/excel_delegations_import.py:219: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/inbound/excel_delegations_import.py:246: [C0301(line-too-long), ] Line too long (129/100)
projects/data_exchange/inbound/excel_delegations_import.py:259: [C0301(line-too-long), ] Line too long (107/100)
projects/data_exchange/inbound/excel_delegations_import.py:269: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_delegations_import.py:290: [C0301(line-too-long), ] Line too long (125/100)
projects/data_exchange/inbound/excel_delegations_import.py:295: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_delegations_import.py:433: [C0301(line-too-long), ] Line too long (122/100)
projects/data_exchange/inbound/excel_delegations_import.py:436: [C0301(line-too-long), ] Line too long (110/100)
projects/data_exchange/inbound/excel_delegations_import.py:448: [C0301(line-too-long), ] Line too long (127/100)
projects/data_exchange/inbound/excel_delegations_import.py:449: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_delegations_import.py:508: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    .distinct('economic_budget')
                |   ^
projects/data_exchange/inbound/excel_delegations_import.py:509: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    .order_by('economic_budget__pk', '-created')
                |   ^
projects/data_exchange/inbound/excel_delegations_import.py:510: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    .first()
                |   ^
projects/data_exchange/inbound/excel_delegations_import.py:526: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_delegations_import.py:537: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/inbound/excel_delegations_import.py:549: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/inbound/excel_delegations_import.py:571: [C0301(line-too-long), ] Line too long (120/100)
projects/data_exchange/inbound/excel_delegations_import.py:573: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_delegations_import.py:574: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_delegations_import.py:582: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/inbound/excel_delegations_import.py:583: [C0301(line-too-long), ] Line too long (107/100)
projects/data_exchange/inbound/excel_delegations_import.py:584: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/inbound/excel_delegations_import.py:692: [C0301(line-too-long), ] Line too long (106/100)
projects/data_exchange/inbound/excel_delegations_import.py:695: [C0301(line-too-long), ] Line too long (141/100)
projects/data_exchange/inbound/excel_delegations_import.py:697: [C0301(line-too-long), ] Line too long (115/100)
projects/data_exchange/inbound/excel_delegations_import.py:703: [C0301(line-too-long), ] Line too long (102/100)
projects/data_exchange/inbound/excel_delegations_import.py:706: [C0301(line-too-long), ] Line too long (104/100)
projects/data_exchange/inbound/excel_delegations_import.py:709: [C0301(line-too-long), ] Line too long (110/100)
projects/data_exchange/inbound/excel_delegations_import.py:714: [C0301(line-too-long), ] Line too long (101/100)
projects/data_exchange/inbound/excel_delegations_import.py:720: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_delegations_import.py:755: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_delegations_import.py:789: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_delegations_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_delegations_import.py:8: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/data_exchange/inbound/excel_delegations_import.py:9: [E0401(import-error), ] Unable to import 'django.db'
projects/data_exchange/inbound/excel_delegations_import.py:10: [E0401(import-error), ] Unable to import 'django.db.models'
projects/data_exchange/inbound/excel_delegations_import.py:11: [E0401(import-error), ] Unable to import 'django.conf'
projects/data_exchange/inbound/excel_delegations_import.py:12: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/data_exchange/inbound/excel_delegations_import.py:42: [C0103(invalid-name), DelegationsExcelImporter.__init__] Attribute name "wb" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:44: [C0103(invalid-name), DelegationsExcelImporter.__init__] Attribute name "ws" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:30: [C0111(missing-docstring), DelegationsExcelImporter] Missing class docstring
projects/data_exchange/inbound/excel_delegations_import.py:30: [R0902(too-many-instance-attributes), DelegationsExcelImporter] Too many instance attributes (14/7)
projects/data_exchange/inbound/excel_delegations_import.py:30: [R0205(useless-object-inheritance), DelegationsExcelImporter] Class 'DelegationsExcelImporter' inherits from object, can be safely removed from bases in python3
projects/data_exchange/inbound/excel_delegations_import.py:65: [C0111(missing-docstring), DelegationsExcelImporter.sheets] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:69: [C0111(missing-docstring), DelegationsExcelImporter.get_sheets] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:73: [C0111(missing-docstring), DelegationsExcelImporter.ccdnf_is_valid] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:78: [C0111(missing-docstring), DelegationsExcelImporter.filename_template_is_valid] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:86: [C0111(missing-docstring), DelegationsExcelImporter.get_filename_template] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:103: [C0111(missing-docstring), DelegationsExcelImporter.validate] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:109: [C0103(invalid-name), DelegationsExcelImporter.validate] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:122: [C0103(invalid-name), DelegationsExcelImporter.validate] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:128: [C0103(invalid-name), DelegationsExcelImporter.validate] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:157: [C0103(invalid-name), DelegationsExcelImporter.validate] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:168: [C0111(missing-docstring), DelegationsExcelImporter.validate_header] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:190: [W0212(protected-access), DelegationsExcelImporter.validate_header] Access to a protected member _zones_insert_index of a client class
projects/data_exchange/inbound/excel_delegations_import.py:190: [W0212(protected-access), DelegationsExcelImporter.validate_header] Access to a protected member _total_zones_header of a client class
projects/data_exchange/inbound/excel_delegations_import.py:191: [E1133(not-an-iterable), DelegationsExcelImporter.validate_header] Non-iterable value zones is used in an iterating context
projects/data_exchange/inbound/excel_delegations_import.py:193: [E1136(unsubscriptable-object), DelegationsExcelImporter.validate_header] Value 'headers' is unsubscriptable
projects/data_exchange/inbound/excel_delegations_import.py:194: [E1136(unsubscriptable-object), DelegationsExcelImporter.validate_header] Value 'headers' is unsubscriptable
projects/data_exchange/inbound/excel_delegations_import.py:211: [R0914(too-many-locals), DelegationsExcelImporter.validate_row] Too many local variables (19/15)
projects/data_exchange/inbound/excel_delegations_import.py:256: [W0702(bare-except), DelegationsExcelImporter.validate_row] No exception type(s) specified
projects/data_exchange/inbound/excel_delegations_import.py:266: [W0702(bare-except), DelegationsExcelImporter.validate_row] No exception type(s) specified
projects/data_exchange/inbound/excel_delegations_import.py:294: [C0103(invalid-name), DelegationsExcelImporter.validate_row] Variable name "v" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:313: [R0914(too-many-locals), DelegationsExcelImporter.process] Too many local variables (39/15)
projects/data_exchange/inbound/excel_delegations_import.py:423: [C0103(invalid-name), DelegationsExcelImporter.process] Variable name "cm" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:437: [C0103(invalid-name), DelegationsExcelImporter.process] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_delegations_import.py:437: [W0612(unused-variable), DelegationsExcelImporter.process] Unused variable 'e'
projects/data_exchange/inbound/excel_delegations_import.py:313: [R0912(too-many-branches), DelegationsExcelImporter.process] Too many branches (21/12)
projects/data_exchange/inbound/excel_delegations_import.py:313: [R0915(too-many-statements), DelegationsExcelImporter.process] Too many statements (98/50)
projects/data_exchange/inbound/excel_delegations_import.py:626: [C0111(missing-docstring), DelegationsExcelImporter.get_row_key] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:639: [C0111(missing-docstring), DelegationsExcelImporter.add_sap_sheet] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:639: [R0914(too-many-locals), DelegationsExcelImporter.add_sap_sheet] Too many local variables (40/15)
projects/data_exchange/inbound/excel_delegations_import.py:658: [E1133(not-an-iterable), DelegationsExcelImporter.add_sap_sheet] Non-iterable value zones is used in an iterating context
projects/data_exchange/inbound/excel_delegations_import.py:700: [R1702(too-many-nested-blocks), DelegationsExcelImporter.add_sap_sheet] Too many nested blocks (6/5)
projects/data_exchange/inbound/excel_delegations_import.py:700: [W0612(unused-variable), DelegationsExcelImporter.add_sap_sheet] Unused variable 'sdc_row_index'
projects/data_exchange/inbound/excel_delegations_import.py:703: [W0612(unused-variable), DelegationsExcelImporter.add_sap_sheet] Unused variable 'negocio_row_index'
projects/data_exchange/inbound/excel_delegations_import.py:706: [W0612(unused-variable), DelegationsExcelImporter.add_sap_sheet] Unused variable 'cm_code_row_index'
projects/data_exchange/inbound/excel_delegations_import.py:709: [W0612(unused-variable), DelegationsExcelImporter.add_sap_sheet] Unused variable 'provider_row_index'
projects/data_exchange/inbound/excel_delegations_import.py:639: [R0912(too-many-branches), DelegationsExcelImporter.add_sap_sheet] Too many branches (15/12)
projects/data_exchange/inbound/excel_delegations_import.py:639: [R0915(too-many-statements), DelegationsExcelImporter.add_sap_sheet] Too many statements (57/50)
projects/data_exchange/inbound/excel_delegations_import.py:731: [C0111(missing-docstring), DelegationsExcelImporter.add_patch_sheet] Missing method docstring
projects/data_exchange/inbound/excel_delegations_import.py:731: [W0613(unused-argument), DelegationsExcelImporter.add_patch_sheet] Unused argument 'rows_data'
************* Module projects.data_exchange.inbound.excel_economichypothesiscode_import
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:6: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:68: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:98: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:121: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:130: [C0301(line-too-long), ] Line too long (109/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:139: [C0301(line-too-long), ] Line too long (109/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:148: [C0301(line-too-long), ] Line too long (109/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:157: [C0301(line-too-long), ] Line too long (117/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:168: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:30: [C0103(invalid-name), EconomicHypotesisCodeExcelImporter.__init__] Attribute name "ws" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:9: [C0111(missing-docstring), EconomicHypotesisCodeExcelImporter] Missing class docstring
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:9: [R0205(useless-object-inheritance), EconomicHypotesisCodeExcelImporter] Class 'EconomicHypotesisCodeExcelImporter' inherits from object, can be safely removed from bases in python3
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:29: [C0103(invalid-name), EconomicHypotesisCodeExcelImporter.__init__] Variable name "wb" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:90: [R0914(too-many-locals), EconomicHypotesisCodeExcelImporter.validate_row] Too many local variables (18/15)
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:166: [R1705(no-else-return), EconomicHypotesisCodeExcelImporter.validate_row] Unnecessary "else" after "return"
projects/data_exchange/inbound/excel_economichypothesiscode_import.py:90: [R0911(too-many-return-statements), EconomicHypotesisCodeExcelImporter.validate_row] Too many return statements (8/6)
************* Module projects.data_exchange.inbound.excel_job_import
projects/data_exchange/inbound/excel_job_import.py:176: [W0511(fixme), ] TODO: this enable task fields to be of type 'functional', BUT this is not currently supported!
projects/data_exchange/inbound/excel_job_import.py:439: [W0511(fixme), ] TODO check if openpyxl return always None if a value for a cell is not set
projects/data_exchange/inbound/excel_job_import.py:510: [W0511(fixme), ] TODO: set only if new_field_value is not None...?
projects/data_exchange/inbound/excel_job_import.py:585: [W0511(fixme), ] TODO: set only if new_field_value is not None...?
projects/data_exchange/inbound/excel_job_import.py:16: [C0301(line-too-long), ] Line too long (102/100)
projects/data_exchange/inbound/excel_job_import.py:52: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    'job': job.pk,
                |   ^
projects/data_exchange/inbound/excel_job_import.py:53: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    # 'job_current_history': job.pk,
                |   ^
projects/data_exchange/inbound/excel_job_import.py:54: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    'workflow_milestone': milestone.pk,
                |   ^
projects/data_exchange/inbound/excel_job_import.py:56: [C0330(bad-continuation), ] Wrong continued indentation (add 36 spaces).
                context=kwargs.get('serializer_context'))
                ^                                   |
projects/data_exchange/inbound/excel_job_import.py:83: [C0301(line-too-long), ] Line too long (101/100)
projects/data_exchange/inbound/excel_job_import.py:85: [C0301(line-too-long), ] Line too long (101/100)
projects/data_exchange/inbound/excel_job_import.py:121: [C0301(line-too-long), ] Line too long (120/100)
projects/data_exchange/inbound/excel_job_import.py:122: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/inbound/excel_job_import.py:176: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_job_import.py:197: [C0301(line-too-long), ] Line too long (118/100)
projects/data_exchange/inbound/excel_job_import.py:244: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    .select_related('field')
                |   ^
projects/data_exchange/inbound/excel_job_import.py:245: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    .filter(technical_name__in=[f['field_name'] for f in info])
                |   ^
projects/data_exchange/inbound/excel_job_import.py:261: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/inbound/excel_job_import.py:268: [C0301(line-too-long), ] Line too long (113/100)
projects/data_exchange/inbound/excel_job_import.py:289: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_job_import.py:335: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/inbound/excel_job_import.py:390: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/inbound/excel_job_import.py:393: [C0301(line-too-long), ] Line too long (113/100)
projects/data_exchange/inbound/excel_job_import.py:402: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/inbound/excel_job_import.py:421: [C0301(line-too-long), ] Line too long (115/100)
projects/data_exchange/inbound/excel_job_import.py:440: [C0301(line-too-long), ] Line too long (116/100)
projects/data_exchange/inbound/excel_job_import.py:446: [C0301(line-too-long), ] Line too long (106/100)
projects/data_exchange/inbound/excel_job_import.py:468: [C0301(line-too-long), ] Line too long (128/100)
projects/data_exchange/inbound/excel_job_import.py:477: [C0301(line-too-long), ] Line too long (135/100)
projects/data_exchange/inbound/excel_job_import.py:502: [C0301(line-too-long), ] Line too long (116/100)
projects/data_exchange/inbound/excel_job_import.py:511: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/inbound/excel_job_import.py:516: [C0301(line-too-long), ] Line too long (133/100)
projects/data_exchange/inbound/excel_job_import.py:550: [C0301(line-too-long), ] Line too long (123/100)
projects/data_exchange/inbound/excel_job_import.py:559: [C0301(line-too-long), ] Line too long (130/100)
projects/data_exchange/inbound/excel_job_import.py:568: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/inbound/excel_job_import.py:579: [C0301(line-too-long), ] Line too long (104/100)
projects/data_exchange/inbound/excel_job_import.py:591: [C0301(line-too-long), ] Line too long (129/100)
projects/data_exchange/inbound/excel_job_import.py:601: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/inbound/excel_job_import.py:613: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_job_import.py:615: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                            for field_error in errors
                        |   ^
projects/data_exchange/inbound/excel_job_import.py:621: [C0301(line-too-long), ] Line too long (107/100)
projects/data_exchange/inbound/excel_job_import.py:628: [C0301(line-too-long), ] Line too long (160/100)
projects/data_exchange/inbound/excel_job_import.py:636: [C0330(bad-continuation), ] Wrong hanging indentation before block.
                        task_data['instance'].is_owner_of_task(self.request.user)
                |   |   ^
projects/data_exchange/inbound/excel_job_import.py:637: [C0330(bad-continuation), ] Wrong hanging indentation before block.
                        or self.request.user.company == task_data['instance'].company)):
                |   |   ^
projects/data_exchange/inbound/excel_job_import.py:641: [C0301(line-too-long), ] Line too long (120/100)
projects/data_exchange/inbound/excel_job_import.py:642: [C0301(line-too-long), ] Line too long (123/100)
projects/data_exchange/inbound/excel_job_import.py:646: [C0301(line-too-long), ] Line too long (131/100)
projects/data_exchange/inbound/excel_job_import.py:664: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                        for field_error in errors
                    |   ^
projects/data_exchange/inbound/excel_job_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_job_import.py:8: [E0401(import-error), ] Unable to import 'django.apps'
projects/data_exchange/inbound/excel_job_import.py:9: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/data_exchange/inbound/excel_job_import.py:10: [E0401(import-error), ] Unable to import 'django.db'
projects/data_exchange/inbound/excel_job_import.py:11: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/data_exchange/inbound/excel_job_import.py:13: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/data_exchange/inbound/excel_job_import.py:24: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
projects/data_exchange/inbound/excel_job_import.py:27: [C0103(invalid-name), ] Constant name "job_function_fields_map" doesn't conform to UPPER_CASE naming style
projects/data_exchange/inbound/excel_job_import.py:33: [C0111(missing-docstring), ExcelImportError] Missing class docstring
projects/data_exchange/inbound/excel_job_import.py:37: [C0111(missing-docstring), get_current_history] Missing function docstring
projects/data_exchange/inbound/excel_job_import.py:63: [W0703(broad-except), get_current_history] Catching too general exception Exception
projects/data_exchange/inbound/excel_job_import.py:61: [C0103(invalid-name), get_current_history] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:63: [C0103(invalid-name), get_current_history] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:72: [C0111(missing-docstring), get_projects] Missing function docstring
projects/data_exchange/inbound/excel_job_import.py:72: [W0613(unused-argument), get_projects] Unused argument 'kwargs'
projects/data_exchange/inbound/excel_job_import.py:101: [C0111(missing-docstring), Field] Missing class docstring
projects/data_exchange/inbound/excel_job_import.py:101: [R0205(useless-object-inheritance), Field] Class 'Field' inherits from object, can be safely removed from bases in python3
projects/data_exchange/inbound/excel_job_import.py:102: [W0622(redefined-builtin), Field.__init__] Redefining built-in 'type'
projects/data_exchange/inbound/excel_job_import.py:101: [R0903(too-few-public-methods), Field] Too few public methods (0/2)
projects/data_exchange/inbound/excel_job_import.py:124: [C0103(invalid-name), ExcelParser.__init__] Attribute name "ws" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:107: [C0111(missing-docstring), ExcelParser] Missing class docstring
projects/data_exchange/inbound/excel_job_import.py:107: [R0902(too-many-instance-attributes), ExcelParser] Too many instance attributes (15/7)
projects/data_exchange/inbound/excel_job_import.py:107: [R0205(useless-object-inheritance), ExcelParser] Class 'ExcelParser' inherits from object, can be safely removed from bases in python3
projects/data_exchange/inbound/excel_job_import.py:123: [C0103(invalid-name), ExcelParser.__init__] Variable name "wb" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:131: [W0212(protected-access), ExcelParser.__init__] Access to a protected member _meta of a client class
projects/data_exchange/inbound/excel_job_import.py:134: [W0212(protected-access), ExcelParser.__init__] Access to a protected member _meta of a client class
projects/data_exchange/inbound/excel_job_import.py:143: [C0111(missing-docstring), ExcelParser.get_field_info] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:173: [C0111(missing-docstring), ExcelParser.get_type] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:281: [C0111(missing-docstring), ExcelParser.process] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:302: [W0703(broad-except), ExcelParser.process] Catching too general exception Exception
projects/data_exchange/inbound/excel_job_import.py:298: [C0103(invalid-name), ExcelParser.process] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:302: [C0103(invalid-name), ExcelParser.process] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:308: [W1202(logging-format-interpolation), ExcelParser.process] Use % formatting in logging functions and pass the % parameters as arguments
projects/data_exchange/inbound/excel_job_import.py:313: [C0111(missing-docstring), ExcelParser.process_dynamic_field] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:339: [C0111(missing-docstring), ExcelParser.process_field_value] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:351: [C0123(unidiomatic-typecheck), ExcelParser.process_field_value] Using type() instead of isinstance() for a typecheck.
projects/data_exchange/inbound/excel_job_import.py:352: [R1717(consider-using-dict-comprehension), ExcelParser.process_field_value] Consider using a dictionary comprehension
projects/data_exchange/inbound/excel_job_import.py:339: [R0201(no-self-use), ExcelParser.process_field_value] Method could be a function
projects/data_exchange/inbound/excel_job_import.py:360: [C0111(missing-docstring), ExcelParser.process_row] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:360: [R0914(too-many-locals), ExcelParser.process_row] Too many local variables (28/15)
projects/data_exchange/inbound/excel_job_import.py:376: [C0103(invalid-name), ExcelParser.process_row] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:392: [C0103(invalid-name), ExcelParser.process_row] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:409: [R1720(no-else-raise), ExcelParser.process_row] Unnecessary "else" after "raise"
projects/data_exchange/inbound/excel_job_import.py:515: [C0103(invalid-name), ExcelParser.process_row] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:380: [R1702(too-many-nested-blocks), ExcelParser.process_row] Too many nested blocks (6/5)
projects/data_exchange/inbound/excel_job_import.py:590: [C0103(invalid-name), ExcelParser.process_row] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_job_import.py:360: [R0912(too-many-branches), ExcelParser.process_row] Too many branches (59/12)
projects/data_exchange/inbound/excel_job_import.py:360: [R0915(too-many-statements), ExcelParser.process_row] Too many statements (146/50)
projects/data_exchange/inbound/excel_job_import.py:672: [C0111(missing-docstring), ExcelParser.last_row] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:679: [W0612(unused-variable), ExcelParser.last_row] Unused variable 'row'
projects/data_exchange/inbound/excel_job_import.py:684: [C0111(missing-docstring), ExcelParser.last_column] Missing method docstring
projects/data_exchange/inbound/excel_job_import.py:693: [W0702(bare-except), ExcelParser.last_column] No exception type(s) specified
************* Module projects.data_exchange.inbound.excel_jobslinks_import
projects/data_exchange/inbound/excel_jobslinks_import.py:18: [C0301(line-too-long), ] Line too long (117/100)
projects/data_exchange/inbound/excel_jobslinks_import.py:23: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_jobslinks_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_jobslinks_import.py:2: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/data_exchange/inbound/excel_jobslinks_import.py:8: [C0111(missing-docstring), JobsLinksImporterExcel] Missing class docstring
projects/data_exchange/inbound/excel_jobslinks_import.py:16: [C0103(invalid-name), JobsLinksImporterExcel.process_field_value] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_jobslinks_import.py:16: [W0612(unused-variable), JobsLinksImporterExcel.process_field_value] Unused variable 'e'
************* Module projects.data_exchange.inbound.excel_taskslinks_import
projects/data_exchange/inbound/excel_taskslinks_import.py:43: [C0301(line-too-long), ] Line too long (103/100)
projects/data_exchange/inbound/excel_taskslinks_import.py:56: [C0301(line-too-long), ] Line too long (104/100)
projects/data_exchange/inbound/excel_taskslinks_import.py:60: [C0301(line-too-long), ] Line too long (127/100)
projects/data_exchange/inbound/excel_taskslinks_import.py:74: [C0301(line-too-long), ] Line too long (118/100)
projects/data_exchange/inbound/excel_taskslinks_import.py:75: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/inbound/excel_taskslinks_import.py:78: [C0301(line-too-long), ] Line too long (102/100)
projects/data_exchange/inbound/excel_taskslinks_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_taskslinks_import.py:2: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/data_exchange/inbound/excel_taskslinks_import.py:3: [E0401(import-error), ] Unable to import 'django.utils.functional'
projects/data_exchange/inbound/excel_taskslinks_import.py:10: [C0111(missing-docstring), TasksLinksImporterExcel] Missing class docstring
projects/data_exchange/inbound/excel_taskslinks_import.py:20: [C0111(missing-docstring), TasksLinksImporterExcel.default_link_properties] Missing method docstring
projects/data_exchange/inbound/excel_taskslinks_import.py:20: [R0201(no-self-use), TasksLinksImporterExcel.default_link_properties] Method could be a function
projects/data_exchange/inbound/excel_taskslinks_import.py:24: [C0111(missing-docstring), TasksLinksImporterExcel.default_link_properties_pks] Missing method docstring
projects/data_exchange/inbound/excel_taskslinks_import.py:25: [E1133(not-an-iterable), TasksLinksImporterExcel.default_link_properties_pks] Non-iterable value self.default_link_properties is used in an iterating context
projects/data_exchange/inbound/excel_taskslinks_import.py:27: [C0111(missing-docstring), TasksLinksImporterExcel.get_link_property] Missing method docstring
projects/data_exchange/inbound/excel_taskslinks_import.py:38: [R1705(no-else-return), TasksLinksImporterExcel.process_field_value] Unnecessary "elif" after "return"
projects/data_exchange/inbound/excel_taskslinks_import.py:41: [C0103(invalid-name), TasksLinksImporterExcel.process_field_value] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/inbound/excel_taskslinks_import.py:41: [W0612(unused-variable), TasksLinksImporterExcel.process_field_value] Unused variable 'e'
projects/data_exchange/inbound/excel_taskslinks_import.py:70: [R1710(inconsistent-return-statements), TasksLinksImporterExcel.save_row] Either all return statements in a function should return an expression, or none of them should.
************* Module projects.data_exchange.inbound.__init__
projects/data_exchange/inbound/__init__.py:39: [C0305(trailing-newlines), ] Trailing newlines
************* Module projects.data_exchange.inbound
projects/data_exchange/inbound/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/__init__.py:4: [C0111(missing-docstring), normalize_field_value] Missing function docstring
projects/data_exchange/inbound/__init__.py:6: [R1705(no-else-return), normalize_field_value] Unnecessary "elif" after "return"
projects/data_exchange/inbound/__init__.py:16: [C0111(missing-docstring), normalize_cell_value] Missing function docstring
projects/data_exchange/inbound/__init__.py:21: [R1705(no-else-return), normalize_cell_value] Unnecessary "elif" after "return"
projects/data_exchange/inbound/__init__.py:27: [R1705(no-else-return), normalize_cell_value] Unnecessary "elif" after "return"
projects/data_exchange/inbound/__init__.py:33: [R1705(no-else-return), normalize_cell_value] Unnecessary "elif" after "return"
projects/data_exchange/inbound/__init__.py:16: [R0911(too-many-return-statements), normalize_cell_value] Too many return statements (7/6)
************* Module projects.data_exchange.inbound.excel_orderingdelegations_import
projects/data_exchange/inbound/excel_orderingdelegations_import.py:13: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_orderingdelegations_import.py:26: [C0301(line-too-long), ] Line too long (102/100)
projects/data_exchange/inbound/excel_orderingdelegations_import.py:35: [C0301(line-too-long), ] Line too long (110/100)
projects/data_exchange/inbound/excel_orderingdelegations_import.py:40: [C0326(bad-whitespace), ] No space allowed after bracket
            data['projects'] = [ el for el in data['plans_id'] if el is not None ]
                               ^
projects/data_exchange/inbound/excel_orderingdelegations_import.py:40: [C0326(bad-whitespace), ] No space allowed before bracket
            data['projects'] = [ el for el in data['plans_id'] if el is not None ]
                                                                                 ^
projects/data_exchange/inbound/excel_orderingdelegations_import.py:50: [C0301(line-too-long), ] Line too long (117/100)
projects/data_exchange/inbound/excel_orderingdelegations_import.py:51: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/inbound/excel_orderingdelegations_import.py:56: [C0301(line-too-long), ] Line too long (130/100)
projects/data_exchange/inbound/excel_orderingdelegations_import.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/inbound/excel_orderingdelegations_import.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/data_exchange/inbound/excel_orderingdelegations_import.py:8: [C0111(missing-docstring), OrderingDelegationImporterExcel] Missing class docstring
projects/data_exchange/inbound/excel_orderingdelegations_import.py:21: [R1720(no-else-raise), OrderingDelegationImporterExcel.process_row] Unnecessary "else" after "raise"
projects/data_exchange/inbound/excel_orderingdelegations_import.py:45: [W0221(arguments-differ), OrderingDelegationImporterExcel.process_field_value] Parameters differ from overridden 'process_field_value' method
projects/data_exchange/inbound/excel_orderingdelegations_import.py:46: [R1705(no-else-return), OrderingDelegationImporterExcel.process_field_value] Unnecessary "elif" after "return"
projects/data_exchange/inbound/excel_orderingdelegations_import.py:3: [W0611(unused-import), ] Unused Project imported from projects.models
projects/data_exchange/inbound/excel_orderingdelegations_import.py:5: [C0411(wrong-import-order), ] third party import "from django.utils.translation import ugettext_lazy as _" should be placed before "from sol.utils.importer import BaseImporterExcel"
************* Module projects.data_exchange.outbound.excel_job
projects/data_exchange/outbound/excel_job.py:119: [W0511(fixme), ] TODO: 'dynamic_data' could not be hardcoded
projects/data_exchange/outbound/excel_job.py:340: [W0511(fixme), ] TODO: 'dynamic_data' could not be hardcoded
projects/data_exchange/outbound/excel_job.py:357: [W0511(fixme), ] TODO: 'dynamic_data' could not be hardcoded
projects/data_exchange/outbound/excel_job.py:373: [W0511(fixme), ] TODO: 'dynamic_data' could not be hardcoded
projects/data_exchange/outbound/excel_job.py:822: [W0511(fixme), ] TODO: get format from settings somehow as it is also related to the client localized formats.
projects/data_exchange/outbound/excel_job.py:833: [W0511(fixme), ] TODO: get format from settings somehow as it is also related to the client localized formats.
projects/data_exchange/outbound/excel_job.py:27: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/outbound/excel_job.py:118: [C0301(line-too-long), ] Line too long (128/100)
projects/data_exchange/outbound/excel_job.py:135: [C0301(line-too-long), ] Line too long (120/100)
projects/data_exchange/outbound/excel_job.py:152: [C0301(line-too-long), ] Line too long (123/100)
projects/data_exchange/outbound/excel_job.py:166: [C0301(line-too-long), ] Line too long (101/100)
projects/data_exchange/outbound/excel_job.py:187: [C0301(line-too-long), ] Line too long (104/100)
projects/data_exchange/outbound/excel_job.py:415: [C0301(line-too-long), ] Line too long (136/100)
projects/data_exchange/outbound/excel_job.py:429: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'technical_name': f.name,
        |   ^
projects/data_exchange/outbound/excel_job.py:430: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'human_readable_name': f.human_readable_name,
        |   ^
projects/data_exchange/outbound/excel_job.py:431: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'has_related_model': f.has_related_model,
        |   ^
projects/data_exchange/outbound/excel_job.py:432: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'parent_technical_name': '',
        |   ^
projects/data_exchange/outbound/excel_job.py:433: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'type': f.type,
        |   ^
projects/data_exchange/outbound/excel_job.py:435: [C0330(bad-continuation), ] Wrong continued indentation.
    ]
    ^             ||
projects/data_exchange/outbound/excel_job.py:456: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'technical_name': f.name,
        |   ^
projects/data_exchange/outbound/excel_job.py:457: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'human_readable_name': f.human_readable_name,
        |   ^
projects/data_exchange/outbound/excel_job.py:458: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'has_related_model': f.has_related_model,
        |   ^
projects/data_exchange/outbound/excel_job.py:459: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'parent_technical_name': '',
        |   ^
projects/data_exchange/outbound/excel_job.py:460: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'type': f.type,
        |   ^
projects/data_exchange/outbound/excel_job.py:462: [C0330(bad-continuation), ] Wrong continued indentation.
    ]
    ^             ||
projects/data_exchange/outbound/excel_job.py:500: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/outbound/excel_job.py:502: [C0301(line-too-long), ] Line too long (106/100)
projects/data_exchange/outbound/excel_job.py:570: [C0301(line-too-long), ] Line too long (102/100)
projects/data_exchange/outbound/excel_job.py:571: [C0301(line-too-long), ] Line too long (115/100)
projects/data_exchange/outbound/excel_job.py:618: [C0330(bad-continuation), ] Wrong hanging indentation (remove 3 spaces).
               and k not in writable_job_import_fields
            |  ^
projects/data_exchange/outbound/excel_job.py:626: [C0301(line-too-long), ] Line too long (111/100)
projects/data_exchange/outbound/excel_job.py:650: [C0301(line-too-long), ] Line too long (116/100)
projects/data_exchange/outbound/excel_job.py:654: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/outbound/excel_job.py:655: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/outbound/excel_job.py:659: [C0301(line-too-long), ] Line too long (138/100)
projects/data_exchange/outbound/excel_job.py:751: [C0326(bad-whitespace), ] Exactly one space required after comma
        self.progress = kwargs.get('progress',  {})
                                             ^
projects/data_exchange/outbound/excel_job.py:790: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/outbound/excel_job.py:794: [C0301(line-too-long), ] Line too long (101/100)
projects/data_exchange/outbound/excel_job.py:812: [C0301(line-too-long), ] Line too long (114/100)
projects/data_exchange/outbound/excel_job.py:822: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/outbound/excel_job.py:829: [C0301(line-too-long), ] Line too long (112/100)
projects/data_exchange/outbound/excel_job.py:831: [C0301(line-too-long), ] Line too long (124/100)
projects/data_exchange/outbound/excel_job.py:833: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/outbound/excel_job.py:856: [C0301(line-too-long), ] Line too long (106/100)
projects/data_exchange/outbound/excel_job.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/outbound/excel_job.py:3: [E0401(import-error), ] Unable to import 'django.conf'
projects/data_exchange/outbound/excel_job.py:12: [E0401(import-error), ] Unable to import 'django.db.models'
projects/data_exchange/outbound/excel_job.py:13: [E0401(import-error), ] Unable to import 'django.utils.dateparse'
projects/data_exchange/outbound/excel_job.py:16: [E0401(import-error), ] Unable to import 'django.db.models'
projects/data_exchange/outbound/excel_job.py:17: [E0401(import-error), ] Unable to import 'rest_framework.serializers'
projects/data_exchange/outbound/excel_job.py:23: [E0401(import-error), ] Unable to import 'django.db.models'
projects/data_exchange/outbound/excel_job.py:24: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/data_exchange/outbound/excel_job.py:29: [C0103(invalid-name), ] Constant name "job_function_fields_meta" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:36: [C0103(invalid-name), ] Constant name "job_function_fields_meta_for_task" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:42: [C0103(invalid-name), ] Constant name "core_base_fields" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:61: [C0103(invalid-name), ] Constant name "job_base_additional_fields" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:67: [C0103(invalid-name), ] Constant name "job_fields_on_task_export" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:76: [C0103(invalid-name), ] Constant name "job_fields_service_on_task_export" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:78: [C0103(invalid-name), ] Class name "task_export_job_serializer" doesn't conform to PascalCase naming style
projects/data_exchange/outbound/excel_job.py:84: [C0103(invalid-name), ] Constant name "task_base_additional_fields" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:91: [C0103(invalid-name), ] Constant name "task_fields_required_by_import" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:95: [C0103(invalid-name), ] Constant name "task_fields_user_list_allowed" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:105: [C0103(invalid-name), ] Constant name "readonly_import_fields" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:113: [C0103(invalid-name), ] Constant name "writable_job_import_fields" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_job.py:118: [C0111(missing-docstring), collect_dynamic_data] Missing function docstring
projects/data_exchange/outbound/excel_job.py:118: [R0913(too-many-arguments), collect_dynamic_data] Too many arguments (6/5)
projects/data_exchange/outbound/excel_job.py:118: [R0914(too-many-locals), collect_dynamic_data] Too many local variables (18/15)
projects/data_exchange/outbound/excel_job.py:152: [R1706(consider-using-ternary), collect_dynamic_data] Consider using ternary ('{}.{}'.format(parent_technical_name, technical_name) if parent_technical_name else technical_name)
projects/data_exchange/outbound/excel_job.py:178: [C0123(unidiomatic-typecheck), collect_dynamic_data] Using type() instead of isinstance() for a typecheck.
projects/data_exchange/outbound/excel_job.py:124: [R1702(too-many-nested-blocks), collect_dynamic_data] Too many nested blocks (7/5)
projects/data_exchange/outbound/excel_job.py:118: [R0912(too-many-branches), collect_dynamic_data] Too many branches (22/12)
projects/data_exchange/outbound/excel_job.py:186: [C0111(missing-docstring), get_projects] Missing function docstring
projects/data_exchange/outbound/excel_job.py:186: [W0613(unused-argument), get_projects] Unused argument 'job'
projects/data_exchange/outbound/excel_job.py:197: [C0111(missing-docstring), get_ordering_filters] Missing function docstring
projects/data_exchange/outbound/excel_job.py:197: [W0613(unused-argument), get_ordering_filters] Unused argument 'job_data'
projects/data_exchange/outbound/excel_job.py:221: [C0111(missing-docstring), get_current_history] Missing function docstring
projects/data_exchange/outbound/excel_job.py:222: [R1705(no-else-return), get_current_history] Unnecessary "else" after "return"
projects/data_exchange/outbound/excel_job.py:221: [W0613(unused-argument), get_current_history] Unused argument 'job_data'
projects/data_exchange/outbound/excel_job.py:228: [C0111(missing-docstring), get_current_history_date] Missing function docstring
projects/data_exchange/outbound/excel_job.py:229: [R1705(no-else-return), get_current_history_date] Unnecessary "else" after "return"
projects/data_exchange/outbound/excel_job.py:228: [W0613(unused-argument), get_current_history_date] Unused argument 'job_data'
projects/data_exchange/outbound/excel_job.py:235: [C0111(missing-docstring), translate_field_type] Missing function docstring
projects/data_exchange/outbound/excel_job.py:248: [C0111(missing-docstring), get_column_list] Missing function docstring
projects/data_exchange/outbound/excel_job.py:248: [R0914(too-many-locals), get_column_list] Too many local variables (20/15)
projects/data_exchange/outbound/excel_job.py:281: [W0212(protected-access), get_column_list] Access to a protected member _meta of a client class
projects/data_exchange/outbound/excel_job.py:312: [W0212(protected-access), get_column_list] Access to a protected member _meta of a client class
projects/data_exchange/outbound/excel_job.py:248: [R0912(too-many-branches), get_column_list] Too many branches (14/12)
projects/data_exchange/outbound/excel_job.py:408: [C0111(missing-docstring), get_fields_info_from_meta] Missing function docstring
projects/data_exchange/outbound/excel_job.py:411: [W0212(protected-access), get_fields_info_from_meta] Access to a protected member _meta of a client class
projects/data_exchange/outbound/excel_job.py:425: [C0111(missing-docstring), export_task_data] Missing function docstring
projects/data_exchange/outbound/excel_job.py:452: [C0111(missing-docstring), export_job_data] Missing function docstring
projects/data_exchange/outbound/excel_job.py:479: [C0111(missing-docstring), export_data] Missing function docstring
projects/data_exchange/outbound/excel_job.py:479: [R0914(too-many-locals), export_data] Too many local variables (52/15)
projects/data_exchange/outbound/excel_job.py:498: [W0212(protected-access), export_data] Access to a protected member _readable_fields of a client class
projects/data_exchange/outbound/excel_job.py:504: [W0212(protected-access), export_data] Access to a protected member _readable_fields of a client class
projects/data_exchange/outbound/excel_job.py:575: [R1702(too-many-nested-blocks), export_data] Too many nested blocks (7/5)
projects/data_exchange/outbound/excel_job.py:479: [R0912(too-many-branches), export_data] Too many branches (34/12)
projects/data_exchange/outbound/excel_job.py:479: [R0915(too-many-statements), export_data] Too many statements (114/50)
projects/data_exchange/outbound/excel_job.py:744: [C0103(invalid-name), ExcelRenderer.__init__] Attribute name "wb" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_job.py:740: [C0111(missing-docstring), ExcelRenderer] Missing class docstring
projects/data_exchange/outbound/excel_job.py:740: [R0205(useless-object-inheritance), ExcelRenderer] Class 'ExcelRenderer' inherits from object, can be safely removed from bases in python3
projects/data_exchange/outbound/excel_job.py:743: [W0621(redefined-outer-name), ExcelRenderer.__init__] Redefining name 'export_data' from outer scope (line 479)
projects/data_exchange/outbound/excel_job.py:764: [C0111(missing-docstring), ExcelRenderer.compose_workbook] Missing method docstring
projects/data_exchange/outbound/excel_job.py:764: [R0914(too-many-locals), ExcelRenderer.compose_workbook] Too many local variables (16/15)
projects/data_exchange/outbound/excel_job.py:787: [C0103(invalid-name), ExcelRenderer.compose_workbook] Variable name "ws" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_job.py:764: [R0912(too-many-branches), ExcelRenderer.compose_workbook] Too many branches (22/12)
projects/data_exchange/outbound/excel_job.py:764: [R0915(too-many-statements), ExcelRenderer.compose_workbook] Too many statements (65/50)
projects/data_exchange/outbound/excel_job.py:863: [C0111(missing-docstring), ExcelRenderer.get_as_byteio] Missing method docstring
projects/data_exchange/outbound/excel_job.py:874: [C0111(missing-docstring), ExcelRenderer.get_as_tempfile] Missing method docstring
projects/data_exchange/outbound/excel_job.py:892: [C0103(invalid-name), ExcelRenderer.get_as_zipfile] Variable name "zf" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_job.py:16: [W0611(unused-import), ] Unused Prefetch imported from django.db.models
projects/data_exchange/outbound/excel_job.py:5: [C0411(wrong-import-order), ] standard import "import tempfile" should be placed before "from django.conf import settings"
projects/data_exchange/outbound/excel_job.py:6: [C0411(wrong-import-order), ] standard import "import zipfile" should be placed before "from django.conf import settings"
projects/data_exchange/outbound/excel_job.py:8: [C0411(wrong-import-order), ] standard import "from decimal import Decimal" should be placed before "from django.conf import settings"
projects/data_exchange/outbound/excel_job.py:9: [C0411(wrong-import-order), ] standard import "from io import BytesIO" should be placed before "from django.conf import settings"
projects/data_exchange/outbound/excel_job.py:10: [C0411(wrong-import-order), ] standard import "from collections import OrderedDict, namedtuple, defaultdict" should be placed before "from django.conf import settings"
projects/data_exchange/outbound/excel_job.py:23: [C0411(wrong-import-order), ] third party import "from django.db.models import Value" should be placed before "from projects.fields.json_dynamic.json_foreignkey import JSONForeignKeySerializer"
projects/data_exchange/outbound/excel_job.py:24: [C0411(wrong-import-order), ] third party import "from django.db.models.functions import Concat, Coalesce" should be placed before "from projects.fields.json_dynamic.json_foreignkey import JSONForeignKeySerializer"
projects/data_exchange/outbound/excel_job.py:12: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/data_exchange/outbound/excel_job.py:16: [C0412(ungrouped-imports), ] Imports from package django are not grouped
projects/data_exchange/outbound/excel_job.py:23: [C0412(ungrouped-imports), ] Imports from package django are not grouped
************* Module projects.data_exchange.outbound.excel_delegations
projects/data_exchange/outbound/excel_delegations.py:104: [C0301(line-too-long), ] Line too long (121/100)
projects/data_exchange/outbound/excel_delegations.py:105: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/outbound/excel_delegations.py:109: [C0301(line-too-long), ] Line too long (120/100)
projects/data_exchange/outbound/excel_delegations.py:110: [C0301(line-too-long), ] Line too long (113/100)
projects/data_exchange/outbound/excel_delegations.py:111: [C0301(line-too-long), ] Line too long (125/100)
projects/data_exchange/outbound/excel_delegations.py:112: [C0301(line-too-long), ] Line too long (102/100)
projects/data_exchange/outbound/excel_delegations.py:113: [C0301(line-too-long), ] Line too long (121/100)
projects/data_exchange/outbound/excel_delegations.py:114: [C0301(line-too-long), ] Line too long (115/100)
projects/data_exchange/outbound/excel_delegations.py:160: [C0301(line-too-long), ] Line too long (107/100)
projects/data_exchange/outbound/excel_delegations.py:228: [C0301(line-too-long), ] Line too long (119/100)
projects/data_exchange/outbound/excel_delegations.py:259: [C0301(line-too-long), ] Line too long (108/100)
projects/data_exchange/outbound/excel_delegations.py:261: [C0301(line-too-long), ] Line too long (121/100)
projects/data_exchange/outbound/excel_delegations.py:263: [C0301(line-too-long), ] Line too long (134/100)
projects/data_exchange/outbound/excel_delegations.py:264: [C0301(line-too-long), ] Line too long (105/100)
projects/data_exchange/outbound/excel_delegations.py:266: [C0301(line-too-long), ] Line too long (118/100)
projects/data_exchange/outbound/excel_delegations.py:272: [C0301(line-too-long), ] Line too long (109/100)
projects/data_exchange/outbound/excel_delegations.py:333: [C0326(bad-whitespace), ] Exactly one space required after comma
        self.progress = kwargs.get('progress',  {})
                                             ^
projects/data_exchange/outbound/excel_delegations.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/outbound/excel_delegations.py:9: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/data_exchange/outbound/excel_delegations.py:10: [E0401(import-error), ] Unable to import 'django.db.models'
projects/data_exchange/outbound/excel_delegations.py:11: [E0401(import-error), ] Unable to import 'django.db.models.expressions'
projects/data_exchange/outbound/excel_delegations.py:12: [E0401(import-error), ] Unable to import 'django.utils.six'
projects/data_exchange/outbound/excel_delegations.py:24: [C0111(missing-docstring), get_path_from_qs_obj] Missing function docstring
projects/data_exchange/outbound/excel_delegations.py:45: [C0103(invalid-name), ] Constant name "cell_defaults" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations.py:47: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/data_exchange/outbound/excel_delegations.py:51: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/data_exchange/outbound/excel_delegations.py:55: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/data_exchange/outbound/excel_delegations.py:59: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/data_exchange/outbound/excel_delegations.py:63: [E1101(no-member), ] Class 'Cell' has no 'TYPE_NUMERIC' member
projects/data_exchange/outbound/excel_delegations.py:69: [C0103(invalid-name), ] Constant name "header_fill" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations.py:73: [C0103(invalid-name), ] Constant name "header_alignment" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations.py:75: [C0103(invalid-name), ] Constant name "id_field_fill" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations.py:79: [C0103(invalid-name), ] Constant name "readonly_field_fill" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations.py:84: [C0111(missing-docstring), apply_style_header] Missing function docstring
projects/data_exchange/outbound/excel_delegations.py:93: [C0103(invalid-name), BaseDelegationSheet.__init__] Attribute name "ws" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:90: [C0111(missing-docstring), BaseDelegationSheet] Missing class docstring
projects/data_exchange/outbound/excel_delegations.py:90: [R0205(useless-object-inheritance), BaseDelegationSheet] Class 'BaseDelegationSheet' inherits from object, can be safely removed from bases in python3
projects/data_exchange/outbound/excel_delegations.py:96: [C0111(missing-docstring), BaseDelegationSheet.feed_row] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:90: [R0903(too-few-public-methods), BaseDelegationSheet] Too few public methods (1/2)
projects/data_exchange/outbound/excel_delegations.py:100: [C0111(missing-docstring), HypothesesSheet] Missing class docstring
projects/data_exchange/outbound/excel_delegations.py:151: [C0111(missing-docstring), HypothesesSheet.zones] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:155: [C0111(missing-docstring), HypothesesSheet.get_zones] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:165: [C0111(missing-docstring), HypothesesSheet.headers] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:169: [C0111(missing-docstring), HypothesesSheet.get_headers] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:169: [R0914(too-many-locals), HypothesesSheet.get_headers] Too many local variables (18/15)
projects/data_exchange/outbound/excel_delegations.py:189: [E1133(not-an-iterable), HypothesesSheet.get_headers] Non-iterable value cls.get_zones() is used in an iterating context
projects/data_exchange/outbound/excel_delegations.py:191: [C0103(invalid-name), HypothesesSheet.get_headers] Variable name "h" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:192: [W0612(unused-variable), HypothesesSheet.get_headers] Unused variable 'zone_h'
projects/data_exchange/outbound/excel_delegations.py:200: [R0914(too-many-locals), HypothesesSheet.feed_row] Too many local variables (17/15)
projects/data_exchange/outbound/excel_delegations.py:200: [W0221(arguments-differ), HypothesesSheet.feed_row] Parameters differ from overridden 'feed_row' method
projects/data_exchange/outbound/excel_delegations.py:226: [C0103(invalid-name), HypothesesSheet.feed_row] Variable name "h" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:200: [R0912(too-many-branches), HypothesesSheet.feed_row] Too many branches (23/12)
projects/data_exchange/outbound/excel_delegations.py:280: [C0111(missing-docstring), CcdnfSheet] Missing class docstring
projects/data_exchange/outbound/excel_delegations.py:302: [C0103(invalid-name), CcdnfSheet.__init__] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:304: [C0103(invalid-name), CcdnfSheet.__init__] Variable name "e" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:302: [W0612(unused-variable), CcdnfSheet.__init__] Unused variable 'e'
projects/data_exchange/outbound/excel_delegations.py:280: [R0903(too-few-public-methods), CcdnfSheet] Too few public methods (1/2)
projects/data_exchange/outbound/excel_delegations.py:325: [C0103(invalid-name), DelegationsExcelRenderer.__init__] Attribute name "qs" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:329: [C0103(invalid-name), DelegationsExcelRenderer.__init__] Attribute name "wb" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:308: [C0111(missing-docstring), DelegationsExcelRenderer] Missing class docstring
projects/data_exchange/outbound/excel_delegations.py:308: [R0205(useless-object-inheritance), DelegationsExcelRenderer] Class 'DelegationsExcelRenderer' inherits from object, can be safely removed from bases in python3
projects/data_exchange/outbound/excel_delegations.py:324: [W0613(unused-argument), DelegationsExcelRenderer.__init__] Unused argument 'args'
projects/data_exchange/outbound/excel_delegations.py:346: [C0111(missing-docstring), DelegationsExcelRenderer.compose_workbook] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:350: [C0103(invalid-name), DelegationsExcelRenderer.compose_workbook] Variable name "ws" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:354: [C0103(invalid-name), DelegationsExcelRenderer.compose_workbook] Variable name "ws" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:390: [C0111(missing-docstring), DelegationsExcelRenderer.get_as_byteio] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:399: [C0111(missing-docstring), DelegationsExcelRenderer.get_as_tempfile] Missing method docstring
projects/data_exchange/outbound/excel_delegations.py:415: [C0103(invalid-name), DelegationsExcelRenderer.get_as_zipfile] Variable name "zf" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations.py:20: [W0611(unused-import), ] Unused Zone imported from projects.models
************* Module projects.data_exchange.outbound.excel_delegations_sol_ordering
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:152: [C0301(line-too-long), ] Line too long (101/100)
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:12: [C0103(invalid-name), ] Constant name "header_fill" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:16: [C0103(invalid-name), ] Constant name "header_alignment" doesn't conform to UPPER_CASE naming style
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:19: [C0111(missing-docstring), apply_style_header] Missing function docstring
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:103: [C0103(invalid-name), DelegationsOrderingExcelRenderer.__init__] Attribute name "wb" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:25: [C0111(missing-docstring), DelegationsOrderingExcelRenderer] Missing class docstring
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:25: [R0205(useless-object-inheritance), DelegationsOrderingExcelRenderer] Class 'DelegationsOrderingExcelRenderer' inherits from object, can be safely removed from bases in python3
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:102: [W0613(unused-argument), DelegationsOrderingExcelRenderer.__init__] Unused argument 'args'
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:102: [W0613(unused-argument), DelegationsOrderingExcelRenderer.__init__] Unused argument 'kwargs'
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:115: [C0111(missing-docstring), DelegationsOrderingExcelRenderer.compose_workbook] Missing method docstring
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:115: [R0914(too-many-locals), DelegationsOrderingExcelRenderer.compose_workbook] Too many local variables (21/15)
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:117: [C0103(invalid-name), DelegationsOrderingExcelRenderer.compose_workbook] Variable name "ws" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:137: [C0103(invalid-name), DelegationsOrderingExcelRenderer.compose_workbook] Variable name "pk" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:163: [C1801(len-as-condition), DelegationsOrderingExcelRenderer.compose_workbook] Do not use `len(SEQUENCE)` to determine if a sequence is empty
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:175: [C0111(missing-docstring), DelegationsOrderingExcelRenderer.get_as_byteio] Missing method docstring
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:184: [C0111(missing-docstring), DelegationsOrderingExcelRenderer.get_as_tempfile] Missing method docstring
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:200: [C0103(invalid-name), DelegationsOrderingExcelRenderer.get_as_zipfile] Variable name "zf" doesn't conform to snake_case naming style
projects/data_exchange/outbound/excel_delegations_sol_ordering.py:6: [W0611(unused-import), ] Unused defaultdict imported from collections
************* Module projects.tests.test_job_views
projects/tests/test_job_views.py:23: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_active=True,
            |   ^
projects/tests/test_job_views.py:24: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                job_rel__isnull=False,
            |   ^
projects/tests/test_job_views.py:25: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_superuser=False,
            |   ^
projects/tests/test_job_views.py:128: [C0301(line-too-long), ] Line too long (112/100)
projects/tests/test_job_views.py:133: [C0301(line-too-long), ] Line too long (121/100)
projects/tests/test_job_views.py:149: [C0301(line-too-long), ] Line too long (105/100)
projects/tests/test_job_views.py:158: [C0301(line-too-long), ] Line too long (112/100)
projects/tests/test_job_views.py:168: [C0301(line-too-long), ] Line too long (116/100)
projects/tests/test_job_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/test_job_views.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/tests/test_job_views.py:6: [E0401(import-error), ] Unable to import 'django.db.models'
projects/tests/test_job_views.py:7: [E0401(import-error), ] Unable to import 'django.utils.crypto'
projects/tests/test_job_views.py:8: [E0401(import-error), ] Unable to import 'rest_framework'
projects/tests/test_job_views.py:9: [E0401(import-error), ] Unable to import 'rest_framework.test'
projects/tests/test_job_views.py:16: [C0111(missing-docstring), JobAPITests] Missing class docstring
projects/tests/test_job_views.py:19: [C0103(invalid-name), JobAPITests.setUp] Method name "setUp" doesn't conform to snake_case naming style
projects/tests/test_job_views.py:19: [C0111(missing-docstring), JobAPITests.setUp] Missing method docstring
projects/tests/test_job_views.py:48: [C0111(missing-docstring), JobAPITests.test_list] Missing method docstring
projects/tests/test_job_views.py:61: [C0111(missing-docstring), JobAPITests.test_list_filters] Missing method docstring
projects/tests/test_job_views.py:175: [C0111(missing-docstring), JobAPITests.test_detail] Missing method docstring
projects/tests/test_job_views.py:188: [C0111(missing-docstring), JobAPITests.test_create] Missing method docstring
projects/tests/test_job_views.py:188: [R0914(too-many-locals), JobAPITests.test_create] Too many local variables (18/15)
projects/tests/test_job_views.py:311: [C0103(invalid-name), JobAPITests.test_create] Variable name "d" doesn't conform to snake_case naming style
projects/tests/test_job_views.py:331: [C0111(missing-docstring), JobAPITests.test_update] Missing method docstring
projects/tests/test_job_views.py:390: [C0111(missing-docstring), JobAPITests.test_delete] Missing method docstring
projects/tests/test_job_views.py:400: [C0111(missing-docstring), JobAPITests.test_add_task] Missing method docstring
projects/tests/test_job_views.py:3: [W0611(unused-import), ] Unused import random
projects/tests/test_job_views.py:6: [W0611(unused-import), ] Unused Prefetch imported from django.db.models
************* Module projects.tests.test_task_views
projects/tests/test_task_views.py:24: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_active=True,
            |   ^
projects/tests/test_task_views.py:25: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_superuser=False,
            |   ^
projects/tests/test_task_views.py:26: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                job_rel__isnull=False,
            |   ^
projects/tests/test_task_views.py:130: [C0301(line-too-long), ] Line too long (101/100)
projects/tests/test_task_views.py:131: [C0301(line-too-long), ] Line too long (111/100)
projects/tests/test_task_views.py:136: [C0301(line-too-long), ] Line too long (122/100)
projects/tests/test_task_views.py:152: [C0301(line-too-long), ] Line too long (105/100)
projects/tests/test_task_views.py:160: [C0301(line-too-long), ] Line too long (101/100)
projects/tests/test_task_views.py:161: [C0301(line-too-long), ] Line too long (111/100)
projects/tests/test_task_views.py:171: [C0301(line-too-long), ] Line too long (117/100)
projects/tests/test_task_views.py:322: [C0301(line-too-long), ] Line too long (113/100)
projects/tests/test_task_views.py:323: [C0301(line-too-long), ] Line too long (109/100)
projects/tests/test_task_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/test_task_views.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/tests/test_task_views.py:6: [E0401(import-error), ] Unable to import 'django.db.models'
projects/tests/test_task_views.py:7: [E0401(import-error), ] Unable to import 'django.utils.crypto'
projects/tests/test_task_views.py:8: [E0401(import-error), ] Unable to import 'rest_framework'
projects/tests/test_task_views.py:9: [E0401(import-error), ] Unable to import 'rest_framework.test'
projects/tests/test_task_views.py:17: [C0111(missing-docstring), TaskAPITests] Missing class docstring
projects/tests/test_task_views.py:20: [C0103(invalid-name), TaskAPITests.setUp] Method name "setUp" doesn't conform to snake_case naming style
projects/tests/test_task_views.py:20: [C0111(missing-docstring), TaskAPITests.setUp] Missing method docstring
projects/tests/test_task_views.py:51: [C0111(missing-docstring), TaskAPITests.test_list] Missing method docstring
projects/tests/test_task_views.py:64: [C0111(missing-docstring), TaskAPITests.test_list_filters] Missing method docstring
projects/tests/test_task_views.py:64: [R0914(too-many-locals), TaskAPITests.test_list_filters] Too many local variables (16/15)
projects/tests/test_task_views.py:178: [C0111(missing-docstring), TaskAPITests.test_detail] Missing method docstring
projects/tests/test_task_views.py:190: [C0111(missing-docstring), TaskAPITests.test_create] Missing method docstring
projects/tests/test_task_views.py:215: [C0111(missing-docstring), TaskAPITests.test_update] Missing method docstring
projects/tests/test_task_views.py:215: [R0915(too-many-statements), TaskAPITests.test_update] Too many statements (55/50)
projects/tests/test_task_views.py:339: [C0111(missing-docstring), TaskAPITests.test_delete] Missing method docstring
projects/tests/test_task_views.py:3: [W0611(unused-import), ] Unused import random
************* Module projects.tests.test_tasksolorders_views
projects/tests/test_tasksolorders_views.py:21: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_active=True,
            |   ^
projects/tests/test_tasksolorders_views.py:22: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_superuser=False,
            |   ^
projects/tests/test_tasksolorders_views.py:23: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                job_rel__isnull=False,
            |   ^
projects/tests/test_tasksolorders_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/test_tasksolorders_views.py:4: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/tests/test_tasksolorders_views.py:5: [E0401(import-error), ] Unable to import 'django.utils.crypto'
projects/tests/test_tasksolorders_views.py:6: [E0401(import-error), ] Unable to import 'rest_framework'
projects/tests/test_tasksolorders_views.py:7: [E0401(import-error), ] Unable to import 'rest_framework.test'
projects/tests/test_tasksolorders_views.py:14: [C0111(missing-docstring), TaskSolOrdersAPITests] Missing class docstring
projects/tests/test_tasksolorders_views.py:17: [C0103(invalid-name), TaskSolOrdersAPITests.setUp] Method name "setUp" doesn't conform to snake_case naming style
projects/tests/test_tasksolorders_views.py:17: [C0111(missing-docstring), TaskSolOrdersAPITests.setUp] Missing method docstring
projects/tests/test_tasksolorders_views.py:52: [C0111(missing-docstring), TaskSolOrdersAPITests.test_list] Missing method docstring
projects/tests/test_tasksolorders_views.py:65: [C0111(missing-docstring), TaskSolOrdersAPITests.test_list_filters] Missing method docstring
projects/tests/test_tasksolorders_views.py:2: [W0611(unused-import), ] Unused import datetime
************* Module projects.tests.test_taskoffer_views
projects/tests/test_taskoffer_views.py:20: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_active=True,
            |   ^
projects/tests/test_taskoffer_views.py:21: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                is_superuser=False,
            |   ^
projects/tests/test_taskoffer_views.py:22: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                job_rel__isnull=False,
            |   ^
projects/tests/test_taskoffer_views.py:39: [C0301(line-too-long), ] Line too long (103/100)
projects/tests/test_taskoffer_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/test_taskoffer_views.py:3: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/tests/test_taskoffer_views.py:4: [E0401(import-error), ] Unable to import 'django.utils.crypto'
projects/tests/test_taskoffer_views.py:5: [E0401(import-error), ] Unable to import 'rest_framework'
projects/tests/test_taskoffer_views.py:6: [E0401(import-error), ] Unable to import 'rest_framework.test'
projects/tests/test_taskoffer_views.py:13: [C0111(missing-docstring), TaskOfferAPITests] Missing class docstring
projects/tests/test_taskoffer_views.py:16: [C0103(invalid-name), TaskOfferAPITests.setUp] Method name "setUp" doesn't conform to snake_case naming style
projects/tests/test_taskoffer_views.py:16: [C0111(missing-docstring), TaskOfferAPITests.setUp] Missing method docstring
projects/tests/test_taskoffer_views.py:55: [C0111(missing-docstring), TaskOfferAPITests.test_list] Missing method docstring
projects/tests/test_taskoffer_views.py:68: [C0111(missing-docstring), TaskOfferAPITests.test_list_filters] Missing method docstring
************* Module projects.tests.__init__
projects/tests/__init__.py:14: [C0301(line-too-long), ] Line too long (120/100)
projects/tests/__init__.py:15: [C0301(line-too-long), ] Line too long (113/100)
projects/tests/__init__.py:17: [C0301(line-too-long), ] Line too long (140/100)
projects/tests/__init__.py:19: [C0301(line-too-long), ] Line too long (128/100)
projects/tests/__init__.py:20: [C0301(line-too-long), ] Line too long (129/100)
projects/tests/__init__.py:33: [C0301(line-too-long), ] Line too long (103/100)
************* Module projects.tests
projects/tests/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/__init__.py:3: [E0401(import-error), ] Unable to import 'rest_framework.reverse'
projects/tests/__init__.py:4: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/tests/__init__.py:5: [E0401(import-error), ] Unable to import 'django.test'
projects/tests/__init__.py:31: [C0111(missing-docstring), app_api_path] Missing function docstring
projects/tests/__init__.py:36: [C0111(missing-docstring), projects_reverse] Missing function docstring
projects/tests/__init__.py:45: [C0111(missing-docstring), projects_api_path] Missing function docstring
projects/tests/__init__.py:54: [C0111(missing-docstring), get_super_user] Missing function docstring
************* Module projects.tests.settings.preprod
projects/tests/settings/preprod.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/settings/preprod.py:2: [W0401(wildcard-import), ] Wildcard import prod
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import queue_name from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import TEST from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import MEDIA_ROOT from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REDIS_PASSWORD from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SECRET_KEY from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import ENV_KEY from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_SECURE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_NAME from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_SECURE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_NAME from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import TIME_ZONE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import ROOT_URLCONF from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import TEMPLATE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import FIRE_EMAIL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_APPS_SETTINGS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import INSTALLED_APPS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import AUTH_USER_MODEL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import MIDDLEWARE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REQUEST_TRACKING from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import FILE_UPLOAD_HANDLERS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_INITIAL_APP from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_DYNAMICREPORTS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_PRO from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import BLOCKED_JOB_MILESTONE_ID from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import os from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import BASE_DIR from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import DEBUG from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import ALLOWED_HOSTS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import WSGI_APPLICATION from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import DATABASE_ROUTERS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import AUTHENTICATION_BACKENDS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import AUTH_PASSWORD_VALIDATORS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import LANGUAGE_CODE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import USE_I18N from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import USE_L10N from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import USE_TZ from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import DATE_FORMAT from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import DATE_TIME_FORMAT from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import STATIC_URL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import STATIC_ROOT from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import STATICFILES_DIRS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import MEDIA_URL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import MAX_UPLOAD_SIZE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import MAX_DOWNLOAD_FILE_SIZE from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import DATA_UPLOAD_MAX_NUMBER_FIELDS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import TEMPLATES from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import LOGGING from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import ADMINS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import MANAGERS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_BACKEND from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import DEFAULT_FROM_EMAIL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SERVER_EMAIL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_USER from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_PASSWORD from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_ORIGIN_ALLOW_ALL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_URLS_REGEX from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_HEADERS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_CREDENTIALS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_FRAMEWORK from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import BASE_API_VERSION from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_SERIALIZERS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import OLD_PASSWORD_FIELD_ENABLED from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_SESSION_LOGIN from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_CREATOR from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_MODEL from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import EXPIRING_TOKEN_LIFESPAN from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SWAGGER_SETTINGS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import RQ from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import RQ_EXCEPTION_HANDLERS from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_SYSTEM_USER from wildcard import
projects/tests/settings/preprod.py:2: [W0614(unused-wildcard-import), ] Unused import timedelta from wildcard import
************* Module projects.tests.settings.prod
projects/tests/settings/prod.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/tests/settings/prod.py:2: [W0401(wildcard-import), ] Wildcard import settings.tests
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import queue_name from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import TEST from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import MEDIA_ROOT from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REDIS_PASSWORD from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SECRET_KEY from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import ENV_KEY from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_SECURE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SESSION_COOKIE_NAME from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_SECURE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import CSRF_COOKIE_NAME from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import TIME_ZONE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import ROOT_URLCONF from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import TEMPLATE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import FIRE_EMAIL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_APPS_SETTINGS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import INSTALLED_APPS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import AUTH_USER_MODEL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import MIDDLEWARE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REQUEST_TRACKING from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import FILE_UPLOAD_HANDLERS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_INITIAL_APP from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_DYNAMICREPORTS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_PRO from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import BLOCKED_JOB_MILESTONE_ID from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import os from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import BASE_DIR from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import DEBUG from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import ALLOWED_HOSTS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import WSGI_APPLICATION from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import DATABASE_ROUTERS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import AUTHENTICATION_BACKENDS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import AUTH_PASSWORD_VALIDATORS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import LANGUAGE_CODE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import USE_I18N from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import USE_L10N from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import USE_TZ from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import DATE_FORMAT from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import DATE_TIME_FORMAT from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import STATIC_URL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import STATIC_ROOT from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import STATICFILES_DIRS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import MEDIA_URL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import MAX_UPLOAD_SIZE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import MAX_DOWNLOAD_FILE_SIZE from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import DATA_UPLOAD_MAX_NUMBER_FIELDS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import TEMPLATES from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import LOGGING from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import ADMINS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import MANAGERS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_BACKEND from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import DEFAULT_FROM_EMAIL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SERVER_EMAIL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_USER from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import EMAIL_HOST_PASSWORD from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_ORIGIN_ALLOW_ALL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_URLS_REGEX from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_HEADERS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import CORS_ALLOW_CREDENTIALS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_FRAMEWORK from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import BASE_API_VERSION from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_SERIALIZERS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import OLD_PASSWORD_FIELD_ENABLED from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_SESSION_LOGIN from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_CREATOR from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import REST_AUTH_TOKEN_MODEL from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import EXPIRING_TOKEN_LIFESPAN from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SWAGGER_SETTINGS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import RQ from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import RQ_EXCEPTION_HANDLERS from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import SOL_SYSTEM_USER from wildcard import
projects/tests/settings/prod.py:2: [W0614(unused-wildcard-import), ] Unused import timedelta from wildcard import
************* Module projects.fields.progress_status
projects/fields/progress_status.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/progress_status.py:1: [C0103(invalid-name), ] Constant name "progress_status_field_map" doesn't conform to UPPER_CASE naming style
projects/fields/progress_status.py:6: [C0103(invalid-name), ] Constant name "progress_status_kwargs" doesn't conform to UPPER_CASE naming style
projects/fields/progress_status.py:27: [C0111(missing-docstring), get_progress_status_kwargs] Missing function docstring
************* Module projects.fields.json_dynamic.serializer
projects/fields/json_dynamic/serializer.py:42: [W0511(fixme), ] TODO: Note that dynamic data passed in the initial payload, are not saved yet.
projects/fields/json_dynamic/serializer.py:44: [W0511(fixme), ] TODO: Investigate different scenarios, when in creation of an object, parent_instance is None.
projects/fields/json_dynamic/serializer.py:12: [C0301(line-too-long), ] Line too long (112/100)
projects/fields/json_dynamic/serializer.py:13: [C0301(line-too-long), ] Line too long (119/100)
projects/fields/json_dynamic/serializer.py:14: [C0301(line-too-long), ] Line too long (120/100)
projects/fields/json_dynamic/serializer.py:43: [C0301(line-too-long), ] Line too long (111/100)
projects/fields/json_dynamic/serializer.py:44: [C0301(line-too-long), ] Line too long (104/100)
projects/fields/json_dynamic/serializer.py:59: [C0301(line-too-long), ] Line too long (116/100)
projects/fields/json_dynamic/serializer.py:60: [C0301(line-too-long), ] Line too long (118/100)
projects/fields/json_dynamic/serializer.py:67: [C0301(line-too-long), ] Line too long (117/100)
projects/fields/json_dynamic/serializer.py:75: [C0301(line-too-long), ] Line too long (116/100)
projects/fields/json_dynamic/serializer.py:78: [C0301(line-too-long), ] Line too long (120/100)
projects/fields/json_dynamic/serializer.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/serializer.py:59: [C0111(missing-docstring), ProjectsJSONDynamicFieldsSerializer.get_dynamic_field_defs_from_queryset] Missing method docstring
projects/fields/json_dynamic/serializer.py:67: [C0111(missing-docstring), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Missing method docstring
projects/fields/json_dynamic/serializer.py:67: [R0914(too-many-locals), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Too many local variables (16/15)
projects/fields/json_dynamic/serializer.py:78: [R1706(consider-using-ternary), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Consider using ternary (fields_queryset.query._annotations.keys() if fields_queryset.query._annotations else [])
projects/fields/json_dynamic/serializer.py:78: [W0212(protected-access), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Access to a protected member _annotations of a client class
projects/fields/json_dynamic/serializer.py:78: [W0212(protected-access), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Access to a protected member _annotations of a client class
projects/fields/json_dynamic/serializer.py:85: [C0103(invalid-name), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Variable name "f" doesn't conform to snake_case naming style
projects/fields/json_dynamic/serializer.py:85: [W0212(protected-access), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Access to a protected member _meta of a client class
projects/fields/json_dynamic/serializer.py:89: [C0103(invalid-name), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Variable name "f" doesn't conform to snake_case naming style
projects/fields/json_dynamic/serializer.py:89: [W0212(protected-access), ProjectsJSONDynamicFieldsSerializer.load_dynamic_field_defs_from_queryset] Access to a protected member _meta of a client class
projects/fields/json_dynamic/serializer.py:5: [C0411(wrong-import-order), ] standard import "from collections import OrderedDict" should be placed before "from sol.fields.json_dynamic import empty"
************* Module projects.fields.json_dynamic.document
projects/fields/json_dynamic/document.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/document.py:2: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/fields/json_dynamic/document.py:4: [C0103(invalid-name), ] Constant name "document_type" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/document.py:10: [C0111(missing-docstring), DocumentField] Missing class docstring
projects/fields/json_dynamic/document.py:10: [R0903(too-few-public-methods), DocumentField] Too few public methods (0/2)
projects/fields/json_dynamic/document.py:19: [C0111(missing-docstring), DocumentLinkField] Missing class docstring
projects/fields/json_dynamic/document.py:19: [R0903(too-few-public-methods), DocumentLinkField] Too few public methods (0/2)
projects/fields/json_dynamic/document.py:2: [W0611(unused-import), ] Unused IntegerField imported from rest_framework.fields
projects/fields/json_dynamic/document.py:2: [C0411(wrong-import-order), ] third party import "from rest_framework.fields import DictField, IntegerField" should be placed before "from sol.fields.json_dynamic import BaseJSONDynamicFieldsSerializer, base_field_defaults"
************* Module projects.fields.json_dynamic.mixins
projects/fields/json_dynamic/mixins.py:20: [C0301(line-too-long), ] Line too long (113/100)
projects/fields/json_dynamic/mixins.py:33: [C0301(line-too-long), ] Line too long (116/100)
projects/fields/json_dynamic/mixins.py:84: [C0301(line-too-long), ] Line too long (111/100)
projects/fields/json_dynamic/mixins.py:89: [C0301(line-too-long), ] Line too long (103/100)
projects/fields/json_dynamic/mixins.py:98: [C0301(line-too-long), ] Line too long (118/100)
projects/fields/json_dynamic/mixins.py:101: [C0301(line-too-long), ] Line too long (109/100)
projects/fields/json_dynamic/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/mixins.py:2: [E0401(import-error), ] Unable to import 'django.core.exceptions'
projects/fields/json_dynamic/mixins.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/fields/json_dynamic/mixins.py:4: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/fields/json_dynamic/mixins.py:5: [E0401(import-error), ] Unable to import 'rest_framework'
projects/fields/json_dynamic/mixins.py:6: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
projects/fields/json_dynamic/mixins.py:7: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/fields/json_dynamic/mixins.py:8: [E0401(import-error), ] Unable to import 'rest_framework.response'
projects/fields/json_dynamic/mixins.py:11: [C0111(missing-docstring), DynamicFieldsViewsetMixin] Missing class docstring
projects/fields/json_dynamic/mixins.py:11: [R0205(useless-object-inheritance), DynamicFieldsViewsetMixin] Class 'DynamicFieldsViewsetMixin' inherits from object, can be safely removed from bases in python3
projects/fields/json_dynamic/mixins.py:14: [C0103(invalid-name), DynamicFieldsViewsetMixin.dynamic_fields] Argument name "pk" doesn't conform to snake_case naming style
projects/fields/json_dynamic/mixins.py:14: [W1113(keyword-arg-before-vararg), DynamicFieldsViewsetMixin.dynamic_fields] Keyword argument before variable positional arguments list in the definition of dynamic_fields function
projects/fields/json_dynamic/mixins.py:14: [W0613(unused-argument), DynamicFieldsViewsetMixin.dynamic_fields] Unused argument 'pk'
projects/fields/json_dynamic/mixins.py:14: [W0613(unused-argument), DynamicFieldsViewsetMixin.dynamic_fields] Unused argument 'args'
projects/fields/json_dynamic/mixins.py:14: [W0613(unused-argument), DynamicFieldsViewsetMixin.dynamic_fields] Unused argument 'kwargs'
projects/fields/json_dynamic/mixins.py:52: [R0914(too-many-locals), DynamicFieldsViewsetMixin.add_dynamic_field] Too many local variables (17/15)
projects/fields/json_dynamic/mixins.py:84: [R1706(consider-using-ternary), DynamicFieldsViewsetMixin.add_dynamic_field] Consider using ternary (max_index['index__max'] + 1 if max_index['index__max'] is not None else 0)
projects/fields/json_dynamic/mixins.py:88: [R1720(no-else-raise), DynamicFieldsViewsetMixin.add_dynamic_field] Unnecessary "elif" after "raise"
projects/fields/json_dynamic/mixins.py:52: [W0613(unused-argument), DynamicFieldsViewsetMixin.add_dynamic_field] Unused argument 'args'
projects/fields/json_dynamic/mixins.py:52: [W0613(unused-argument), DynamicFieldsViewsetMixin.add_dynamic_field] Unused argument 'kwargs'
************* Module projects.fields.json_dynamic.slider
projects/fields/json_dynamic/slider.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/slider.py:3: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/fields/json_dynamic/slider.py:6: [C0103(invalid-name), ] Constant name "slider_type" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/slider.py:11: [C0111(missing-docstring), SliderField] Missing class docstring
projects/fields/json_dynamic/slider.py:11: [R0903(too-few-public-methods), SliderField] Too few public methods (0/2)
projects/fields/json_dynamic/slider.py:3: [C0411(wrong-import-order), ] third party import "from rest_framework.fields import IntegerField" should be placed before "from sol.fields.json_dynamic import BaseJSONDynamicFieldsSerializer, field_defaults"
************* Module projects.fields.json_dynamic.sla
projects/fields/json_dynamic/sla.py:30: [W0511(fixme), ] TODO: is this always appropriate?
projects/fields/json_dynamic/sla.py:48: [W0511(fixme), ] TODO: decide what to do with closed Jobs
projects/fields/json_dynamic/sla.py:29: [C0301(line-too-long), ] Line too long (107/100)
projects/fields/json_dynamic/sla.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/sla.py:2: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/fields/json_dynamic/sla.py:3: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/fields/json_dynamic/sla.py:7: [C0103(invalid-name), ] Constant name "sla_field_types" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/sla.py:14: [C0111(missing-docstring), SlaSemaphoreField] Missing class docstring
projects/fields/json_dynamic/sla.py:27: [C0111(missing-docstring), SlaSemaphoreField.get_composite_field_info] Missing method docstring
projects/fields/json_dynamic/sla.py:39: [C0111(missing-docstring), SlaSemaphoreField.consume] Missing method docstring
projects/fields/json_dynamic/sla.py:43: [W0212(protected-access), SlaSemaphoreField.consume] Access to a protected member _loaded_field_defs of a client class
projects/fields/json_dynamic/sla.py:62: [C0111(missing-docstring), SlaField] Missing class docstring
projects/fields/json_dynamic/sla.py:75: [C0111(missing-docstring), SlaField.get_attribute] Missing method docstring
projects/fields/json_dynamic/sla.py:75: [R0201(no-self-use), SlaField.get_attribute] Method could be a function
projects/fields/json_dynamic/sla.py:80: [C0111(missing-docstring), SlaField.to_representation] Missing method docstring
projects/fields/json_dynamic/sla.py:90: [C0111(missing-docstring), SlaField.set_composite_values] Missing method docstring
projects/fields/json_dynamic/sla.py:2: [W0611(unused-import), ] Unused HiddenField imported from rest_framework.fields
projects/fields/json_dynamic/sla.py:2: [C0411(wrong-import-order), ] third party import "from rest_framework.fields import DateField, HiddenField, CharField" should be placed before "from sol.fields.json_dynamic import BaseJSONDynamicFieldsSerializer"
projects/fields/json_dynamic/sla.py:3: [C0411(wrong-import-order), ] third party import "from rest_framework.exceptions import ValidationError" should be placed before "from sol.fields.json_dynamic import BaseJSONDynamicFieldsSerializer"
projects/fields/json_dynamic/sla.py:4: [C0411(wrong-import-order), ] standard import "import datetime" should be placed before "from rest_framework.fields import DateField, HiddenField, CharField"
************* Module projects.fields.json_dynamic.fields_conf
projects/fields/json_dynamic/fields_conf.py:398: [C0330(bad-continuation), ] Wrong hanging indentation.
             },
            |^  |
projects/fields/json_dynamic/fields_conf.py:564: [C0301(line-too-long), ] Line too long (118/100)
projects/fields/json_dynamic/fields_conf.py:878: [C0301(line-too-long), ] Line too long (103/100)
projects/fields/json_dynamic/fields_conf.py:895: [C0301(line-too-long), ] Line too long (103/100)
projects/fields/json_dynamic/fields_conf.py:1176: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
                   'fields': {
                   ^|
projects/fields/json_dynamic/fields_conf.py:1177: [C0330(bad-continuation), ] Wrong hanging indentation (remove 1 space).
                        'desc_stato_legal': {
                       |^
projects/fields/json_dynamic/fields_conf.py:1184: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
                   'key_field': 'idstato_legal',
                   ^|
projects/fields/json_dynamic/fields_conf.py:1185: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
                   'table_name': 'legal.stati_legal',
                   ^|
projects/fields/json_dynamic/fields_conf.py:1186: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
                   'alias': 'legal_state',
                   ^|
projects/fields/json_dynamic/fields_conf.py:1187: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
                   'origin_field': 'idstato_legal'
                   ^|
projects/fields/json_dynamic/fields_conf.py:1: [C0302(too-many-lines), ] Too many lines in module (1210/1000)
projects/fields/json_dynamic/fields_conf.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/fields_conf.py:3: [C0103(invalid-name), ] Constant name "orange_bqa_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:199: [C0103(invalid-name), ] Constant name "orange_sharing_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:452: [C0103(invalid-name), ] Constant name "orange_sites_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:555: [C0103(invalid-name), ] Constant name "orange_hunting_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:682: [C0103(invalid-name), ] Constant name "orange_ordering_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:969: [C0103(invalid-name), ] Constant name "orange_brise_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:1065: [C0103(invalid-name), ] Constant name "orange_legal_fields_conf" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/fields_conf.py:1095: [W0109(duplicate-key), ] Duplicate key 'nested_join' in dictionary
************* Module projects.fields.json_dynamic.json_foreignkey
projects/fields/json_dynamic/json_foreignkey.py:135: [W0511(fixme), ] TODO: it isn't possible mutate dict during iteration, this line raise internal server error. Check if it's necessary.
projects/fields/json_dynamic/json_foreignkey.py:137: [W0511(fixme), ] TODO: we need to unset self.fields, because they are coupled to the field definitions (see parent method).
projects/fields/json_dynamic/json_foreignkey.py:146: [W0511(fixme), ] TODO: attached here to not be included in defs (and not be rendered by the client),
projects/fields/json_dynamic/json_foreignkey.py:8: [C0301(line-too-long), ] Line too long (104/100)
projects/fields/json_dynamic/json_foreignkey.py:9: [C0301(line-too-long), ] Line too long (116/100)
projects/fields/json_dynamic/json_foreignkey.py:12: [C0301(line-too-long), ] Line too long (104/100)
projects/fields/json_dynamic/json_foreignkey.py:70: [C0301(line-too-long), ] Line too long (118/100)
projects/fields/json_dynamic/json_foreignkey.py:86: [C0301(line-too-long), ] Line too long (109/100)
projects/fields/json_dynamic/json_foreignkey.py:118: [C0301(line-too-long), ] Line too long (116/100)
projects/fields/json_dynamic/json_foreignkey.py:119: [C0301(line-too-long), ] Line too long (111/100)
projects/fields/json_dynamic/json_foreignkey.py:120: [C0301(line-too-long), ] Line too long (111/100)
projects/fields/json_dynamic/json_foreignkey.py:121: [C0301(line-too-long), ] Line too long (116/100)
projects/fields/json_dynamic/json_foreignkey.py:122: [C0301(line-too-long), ] Line too long (105/100)
projects/fields/json_dynamic/json_foreignkey.py:135: [C0301(line-too-long), ] Line too long (135/100)
projects/fields/json_dynamic/json_foreignkey.py:137: [C0301(line-too-long), ] Line too long (124/100)
projects/fields/json_dynamic/json_foreignkey.py:157: [C0301(line-too-long), ] Line too long (103/100)
projects/fields/json_dynamic/json_foreignkey.py:162: [C0301(line-too-long), ] Line too long (117/100)
projects/fields/json_dynamic/json_foreignkey.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/json_foreignkey.py:4: [E0401(import-error), ] Unable to import 'django.apps'
projects/fields/json_dynamic/json_foreignkey.py:5: [E0401(import-error), ] Unable to import 'rest_framework'
projects/fields/json_dynamic/json_foreignkey.py:6: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/fields/json_dynamic/json_foreignkey.py:15: [C0103(invalid-name), ] Constant name "external_field_types" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/json_foreignkey.py:26: [C0111(missing-docstring), JSONForeignKeySerializer] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:38: [C0111(missing-docstring), JSONForeignKeySerializer.get_ext_field_defs] Missing method docstring
projects/fields/json_dynamic/json_foreignkey.py:98: [W0221(arguments-differ), JSONForeignKeySerializer.load_dynamic_field_defs] Parameters differ from overridden 'load_dynamic_field_defs' method
projects/fields/json_dynamic/json_foreignkey.py:167: [C0103(invalid-name), ] Constant name "foreign_base_field_defaults" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/json_foreignkey.py:176: [C0111(missing-docstring), JobJSONForeignKeySerializer] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:182: [C0111(missing-docstring), JSONForeignKeyField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:183: [C0111(missing-docstring), JSONForeignKeyField.to_representation] Missing method docstring
projects/fields/json_dynamic/json_foreignkey.py:183: [R0201(no-self-use), JSONForeignKeyField.to_representation] Method could be a function
projects/fields/json_dynamic/json_foreignkey.py:186: [C0111(missing-docstring), JSONForeignKeyField.to_internal_value] Missing method docstring
projects/fields/json_dynamic/json_foreignkey.py:186: [R0201(no-self-use), JSONForeignKeyField.to_internal_value] Method could be a function
projects/fields/json_dynamic/json_foreignkey.py:192: [C0111(missing-docstring), ExternalOrangeSiteField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:196: [C0111(missing-docstring), ExternalOrangeOrderingTaskField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:200: [C0111(missing-docstring), ExternalOrangeSharingTaskField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:204: [C0111(missing-docstring), ExternalOrangeHuntingTaskField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:208: [C0111(missing-docstring), ExternalOrangeBqaAutoaceptField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:212: [C0111(missing-docstring), ExternalOrangeBriseTicketField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:219: [C0111(missing-docstring), ExternalOrangeLegalTaskField] Missing class docstring
projects/fields/json_dynamic/json_foreignkey.py:223: [C0111(missing-docstring), add_field_classes] Missing function docstring
************* Module projects.fields.json_dynamic.sol_sites_document
projects/fields/json_dynamic/sol_sites_document.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/sol_sites_document.py:2: [E0401(import-error), ] Unable to import 'django.utils.six.moves.urllib.parse'
projects/fields/json_dynamic/sol_sites_document.py:3: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/fields/json_dynamic/sol_sites_document.py:4: [E0401(import-error), ] Unable to import 'django.core.validators'
projects/fields/json_dynamic/sol_sites_document.py:5: [E0401(import-error), ] Unable to import 'rest_framework.fields'
projects/fields/json_dynamic/sol_sites_document.py:6: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
projects/fields/json_dynamic/sol_sites_document.py:11: [C0103(invalid-name), ] Constant name "sol_sites_document_type" doesn't conform to UPPER_CASE naming style
projects/fields/json_dynamic/sol_sites_document.py:16: [C0111(missing-docstring), SOLSitesDocumentField] Missing class docstring
projects/fields/json_dynamic/sol_sites_document.py:26: [C0111(missing-docstring), SOLSitesDocumentField.run_validation] Missing method docstring
projects/fields/json_dynamic/sol_sites_document.py:33: [C0111(missing-docstring), SOLSitesDocumentField.to_internal_value] Missing method docstring
projects/fields/json_dynamic/sol_sites_document.py:50: [C0111(missing-docstring), SOLSitesDocumentField.to_representation] Missing method docstring
************* Module projects.fields.json_dynamic.__init__
projects/fields/json_dynamic/__init__.py:41: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                + sla_field_types
    |           ^
projects/fields/json_dynamic/__init__.py:42: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                + slider_type
    |           ^
projects/fields/json_dynamic/__init__.py:43: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                + document_type
    |           ^
projects/fields/json_dynamic/__init__.py:44: [C0330(bad-continuation), ] Wrong hanging indentation (remove 12 spaces).
                + sol_sites_document_type
    |           ^
projects/fields/json_dynamic/__init__.py:75: [C0305(trailing-newlines), ] Trailing newlines
************* Module projects.fields.json_dynamic
projects/fields/json_dynamic/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/__init__.py:7: [C0411(wrong-import-order), ] standard import "import copy" should be placed before "from projects.fields.json_dynamic.document import document_type"
************* Module projects.fields.json_dynamic.lookups
projects/fields/json_dynamic/lookups.py:7: [W0511(fixme), ] TODO: These is not used anymore (problem solved with standard db relational way), left here for "reference".
projects/fields/json_dynamic/lookups.py:7: [C0301(line-too-long), ] Line too long (110/100)
projects/fields/json_dynamic/lookups.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/fields/json_dynamic/lookups.py:2: [E0401(import-error), ] Unable to import 'django.contrib.postgres.lookups'
projects/fields/json_dynamic/lookups.py:3: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields'
projects/fields/json_dynamic/lookups.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
projects/fields/json_dynamic/lookups.py:8: [C0111(missing-docstring), GetByDynamicFieldPk] Missing class docstring
projects/fields/json_dynamic/lookups.py:22: [C0111(missing-docstring), GetByDynamicFieldPk.get_prep_lookup] Missing method docstring
projects/fields/json_dynamic/lookups.py:33: [C0103(invalid-name), GetByDynamicFieldPk.as_sql] Argument name "qn" doesn't conform to snake_case naming style
projects/fields/json_dynamic/lookups.py:33: [C0111(missing-docstring), GetByDynamicFieldPk.as_sql] Missing method docstring
projects/fields/json_dynamic/lookups.py:40: [C0111(missing-docstring), GetByDynamicFieldPk.get_rhs_op] Missing method docstring
projects/fields/json_dynamic/lookups.py:40: [W0613(unused-argument), GetByDynamicFieldPk.get_rhs_op] Unused argument 'connection'
projects/fields/json_dynamic/lookups.py:40: [R0201(no-self-use), GetByDynamicFieldPk.get_rhs_op] Method could be a function
projects/fields/json_dynamic/lookups.py:25: [W0201(attribute-defined-outside-init), GetByDynamicFieldPk.get_prep_lookup] Attribute 'rhs' defined outside __init__
projects/fields/json_dynamic/lookups.py:44: [C0111(missing-docstring), GetByDynamicFieldName] Missing class docstring
projects/fields/json_dynamic/lookups.py:49: [C0111(missing-docstring), GetByDynamicFieldNameContains] Missing class docstring
projects/fields/json_dynamic/lookups.py:54: [C0111(missing-docstring), GetByDynamicFieldNameIContains] Missing class docstring
************* Module projects.permissions.legal
projects/permissions/legal.py:52: [C0301(line-too-long), ] Line too long (103/100)
projects/permissions/legal.py:63: [C0301(line-too-long), ] Line too long (101/100)
projects/permissions/legal.py:68: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/legal.py:69: [C0301(line-too-long), ] Line too long (109/100)
projects/permissions/legal.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/legal.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/legal.py:8: [C0111(missing-docstring), LegalTaskPermissionsMixin] Missing class docstring
projects/permissions/legal.py:19: [C0111(missing-docstring), LegalTaskPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/legal.py:28: [C0111(missing-docstring), LegalTaskPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/legal.py:35: [C0111(missing-docstring), LegalTaskPermissionsMixin.has_filter_legal_selfacceptance_permission] Missing method docstring
projects/permissions/legal.py:45: [C0111(missing-docstring), LegalTaskPermissionsMixin.get_permissions_filter_annotations] Missing method docstring
projects/permissions/legal.py:45: [W0613(unused-argument), LegalTaskPermissionsMixin.get_permissions_filter_annotations] Unused argument 'args'
projects/permissions/legal.py:45: [W0613(unused-argument), LegalTaskPermissionsMixin.get_permissions_filter_annotations] Unused argument 'kwargs'
projects/permissions/legal.py:62: [C0111(missing-docstring), LegalTaskPermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/legal.py:3: [W0611(unused-import), ] Unused Value imported from django.db.models
************* Module projects.permissions.tasksdependency
projects/permissions/tasksdependency.py:40: [C0301(line-too-long), ] Line too long (113/100)
projects/permissions/tasksdependency.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/tasksdependency.py:7: [C0111(missing-docstring), TasksDependencyPermissionMixin] Missing class docstring
projects/permissions/tasksdependency.py:15: [C0111(missing-docstring), TasksDependencyPermissionMixin.has_read_permission] Missing method docstring
projects/permissions/tasksdependency.py:15: [W0613(unused-argument), TasksDependencyPermissionMixin.has_read_permission] Unused argument 'request'
projects/permissions/tasksdependency.py:22: [C0111(missing-docstring), TasksDependencyPermissionMixin.has_write_permission] Missing method docstring
projects/permissions/tasksdependency.py:22: [W0613(unused-argument), TasksDependencyPermissionMixin.has_write_permission] Unused argument 'request'
projects/permissions/tasksdependency.py:30: [C0111(missing-docstring), TasksDependencyPermissionMixin.check_has_create_or_update_permission] Missing method docstring
projects/permissions/tasksdependency.py:41: [W0702(bare-except), TasksDependencyPermissionMixin.check_has_create_or_update_permission] No exception type(s) specified
projects/permissions/tasksdependency.py:53: [C0111(missing-docstring), TasksDependencyPermissionMixin.has_create_permission] Missing method docstring
projects/permissions/tasksdependency.py:59: [C0111(missing-docstring), TasksDependencyPermissionMixin.has_object_write_permission] Missing method docstring
************* Module projects.permissions.delegations
projects/permissions/delegations.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/delegations.py:2: [E0401(import-error), ] Unable to import 'rest_framework'
projects/permissions/delegations.py:5: [C0111(missing-docstring), DelegationsPermission] Missing class docstring
projects/permissions/delegations.py:6: [C0111(missing-docstring), DelegationsPermission.has_permission] Missing method docstring
projects/permissions/delegations.py:6: [W0613(unused-argument), DelegationsPermission.has_permission] Unused argument 'view'
projects/permissions/delegations.py:6: [R0201(no-self-use), DelegationsPermission.has_permission] Method could be a function
projects/permissions/delegations.py:5: [R0903(too-few-public-methods), DelegationsPermission] Too few public methods (1/2)
************* Module projects.permissions.job
projects/permissions/job.py:16: [C0301(line-too-long), ] Line too long (120/100)
projects/permissions/job.py:92: [C0301(line-too-long), ] Line too long (105/100)
projects/permissions/job.py:96: [C0301(line-too-long), ] Line too long (107/100)
projects/permissions/job.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/job.py:8: [C0111(missing-docstring), JobSerializerPermissionsMixin] Missing class docstring
projects/permissions/job.py:8: [R0205(useless-object-inheritance), JobSerializerPermissionsMixin] Class 'JobSerializerPermissionsMixin' inherits from object, can be safely removed from bases in python3
projects/permissions/job.py:9: [C0111(missing-docstring), JobSerializerPermissionsMixin.permissions_fields] Missing method docstring
projects/permissions/job.py:9: [W0613(unused-argument), JobSerializerPermissionsMixin.permissions_fields] Unused argument 'fields'
projects/permissions/job.py:41: [C0111(missing-docstring), JobSerializerPermissionsMixin.permissions_writable_fields] Missing method docstring
projects/permissions/job.py:41: [W0613(unused-argument), JobSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'validated_data'
projects/permissions/job.py:53: [C0111(missing-docstring), JobSerializerPermissionsMixin.permissions_readable_fields] Missing method docstring
projects/permissions/job.py:57: [C0111(missing-docstring), JobPermissionsMixin] Missing class docstring
projects/permissions/job.py:71: [C0111(missing-docstring), JobPermissionsMixin.has_filter_jobs_for_tasks_permission] Missing method docstring
projects/permissions/job.py:81: [C0111(missing-docstring), JobPermissionsMixin.has_filter_jobs_created_permission] Missing method docstring
projects/permissions/job.py:91: [C0111(missing-docstring), JobPermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/job.py:104: [C0111(missing-docstring), JobPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/job.py:104: [W0613(unused-argument), JobPermissionsMixin.has_read_permission] Unused argument 'request'
projects/permissions/job.py:111: [C0111(missing-docstring), JobPermissionsMixin.has_create_permission] Missing method docstring
projects/permissions/job.py:119: [C0111(missing-docstring), JobPermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/job.py:129: [C0111(missing-docstring), JobPermissionsMixin.has_destroy_permission] Missing method docstring
projects/permissions/job.py:136: [C0111(missing-docstring), JobPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/job.py:142: [C0111(missing-docstring), JobPermissionsMixin.has_object_write_permission] Missing method docstring
projects/permissions/job.py:148: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_summary_permission] Missing method docstring
projects/permissions/job.py:157: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_fields_permission] Missing method docstring
projects/permissions/job.py:166: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_tasksfields_permission] Missing method docstring
projects/permissions/job.py:175: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_workflow_permission] Missing method docstring
projects/permissions/job.py:184: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_gantt_permission] Missing method docstring
projects/permissions/job.py:193: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_notes_permission] Missing method docstring
projects/permissions/job.py:202: [C0111(missing-docstring), JobPermissionsMixin.has_object_tab_linked_jobs_permission] Missing method docstring
projects/permissions/job.py:211: [C0111(missing-docstring), JobPermissionsMixin.has_object_show_economics_info_permission] Missing method docstring
projects/permissions/job.py:211: [R0201(no-self-use), JobPermissionsMixin.has_object_show_economics_info_permission] Method could be a function
projects/permissions/job.py:219: [C0111(missing-docstring), JobPermissionsMixin.has_object_show_planned_info_permission] Missing method docstring
projects/permissions/job.py:219: [R0201(no-self-use), JobPermissionsMixin.has_object_show_planned_info_permission] Method could be a function
projects/permissions/job.py:242: [C0111(missing-docstring), JobPermissionsMixin.has_can_edit_owner_permission] Missing method docstring
projects/permissions/job.py:252: [C0111(missing-docstring), JobPermissionsMixin.has_add_task_permission] Missing method docstring
projects/permissions/job.py:272: [C0111(missing-docstring), JobPermissionsMixin.has_object_can_add_or_remove_job_links_permission] Missing method docstring
projects/permissions/job.py:279: [C0111(missing-docstring), JobPermissionsMixin.has_object_docs_delete_if_owner_permission] Missing method docstring
projects/permissions/job.py:285: [C0111(missing-docstring), JobPermissionsMixin.has_object_docs_approve_reject_if_owner_permission] Missing method docstring
projects/permissions/job.py:291: [C0111(missing-docstring), JobPermissionsMixin.is_owner_of_job] Missing method docstring
projects/permissions/job.py:57: [R0904(too-many-public-methods), JobPermissionsMixin] Too many public methods (26/20)
projects/permissions/job.py:1: [W0611(unused-import), ] Unused defaultdict imported from collections
************* Module projects.permissions.tasksolorders
projects/permissions/tasksolorders.py:8: [W0511(fixme), ] TODO: think about the high complexity of setting permission for nested fields, maybe a "flat" API response is better.
projects/permissions/tasksolorders.py:8: [C0301(line-too-long), ] Line too long (119/100)
projects/permissions/tasksolorders.py:88: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/tasksolorders.py:130: [C0301(line-too-long), ] Line too long (124/100)
projects/permissions/tasksolorders.py:140: [C0301(line-too-long), ] Line too long (129/100)
projects/permissions/tasksolorders.py:144: [C0301(line-too-long), ] Line too long (104/100)
projects/permissions/tasksolorders.py:154: [C0301(line-too-long), ] Line too long (115/100)
projects/permissions/tasksolorders.py:162: [C0301(line-too-long), ] Line too long (107/100)
projects/permissions/tasksolorders.py:166: [C0301(line-too-long), ] Line too long (117/100)
projects/permissions/tasksolorders.py:172: [C0301(line-too-long), ] Line too long (104/100)
projects/permissions/tasksolorders.py:175: [C0305(trailing-newlines), ] Trailing newlines
projects/permissions/tasksolorders.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/tasksolorders.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/tasksolorders.py:9: [C0111(missing-docstring), TaskSolOrdersDelegationOrderSerializerPermissionsMixin] Missing class docstring
projects/permissions/tasksolorders.py:9: [R0205(useless-object-inheritance), TaskSolOrdersDelegationOrderSerializerPermissionsMixin] Class 'TaskSolOrdersDelegationOrderSerializerPermissionsMixin' inherits from object, can be safely removed from bases in python3
projects/permissions/tasksolorders.py:10: [C0111(missing-docstring), TaskSolOrdersDelegationOrderSerializerPermissionsMixin.permissions_fields] Missing method docstring
projects/permissions/tasksolorders.py:10: [W0613(unused-argument), TaskSolOrdersDelegationOrderSerializerPermissionsMixin.permissions_fields] Unused argument 'fields'
projects/permissions/tasksolorders.py:23: [C0111(missing-docstring), TaskSolOrdersDelegationOrderSerializerPermissionsMixin.permissions_writable_fields] Missing method docstring
projects/permissions/tasksolorders.py:23: [W0613(unused-argument), TaskSolOrdersDelegationOrderSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'validated_data'
projects/permissions/tasksolorders.py:26: [C0111(missing-docstring), TaskSolOrdersDelegationOrderSerializerPermissionsMixin.permissions_readable_fields] Missing method docstring
projects/permissions/tasksolorders.py:30: [C0111(missing-docstring), TaskSolOrdersOrdersSerializerPermissionsMixin] Missing class docstring
projects/permissions/tasksolorders.py:30: [R0205(useless-object-inheritance), TaskSolOrdersOrdersSerializerPermissionsMixin] Class 'TaskSolOrdersOrdersSerializerPermissionsMixin' inherits from object, can be safely removed from bases in python3
projects/permissions/tasksolorders.py:31: [C0111(missing-docstring), TaskSolOrdersOrdersSerializerPermissionsMixin.permissions_fields] Missing method docstring
projects/permissions/tasksolorders.py:31: [W0613(unused-argument), TaskSolOrdersOrdersSerializerPermissionsMixin.permissions_fields] Unused argument 'fields'
projects/permissions/tasksolorders.py:44: [C0111(missing-docstring), TaskSolOrdersOrdersSerializerPermissionsMixin.permissions_writable_fields] Missing method docstring
projects/permissions/tasksolorders.py:44: [W0613(unused-argument), TaskSolOrdersOrdersSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'validated_data'
projects/permissions/tasksolorders.py:47: [C0111(missing-docstring), TaskSolOrdersOrdersSerializerPermissionsMixin.permissions_readable_fields] Missing method docstring
projects/permissions/tasksolorders.py:51: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin] Missing class docstring
projects/permissions/tasksolorders.py:60: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/tasksolorders.py:60: [W0613(unused-argument), TaskSolOrdersPermissionsMixin.has_read_permission] Unused argument 'request'
projects/permissions/tasksolorders.py:66: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/tasksolorders.py:73: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.check_has_retrieve_permission] Missing method docstring
projects/permissions/tasksolorders.py:77: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.check_has_create_or_update_permission] Missing method docstring
projects/permissions/tasksolorders.py:85: [W0702(bare-except), TaskSolOrdersPermissionsMixin.check_has_create_or_update_permission] No exception type(s) specified
projects/permissions/tasksolorders.py:99: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/tasksolorders.py:99: [W0613(unused-argument), TaskSolOrdersPermissionsMixin.has_write_permission] Unused argument 'request'
projects/permissions/tasksolorders.py:106: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.has_create_permission] Missing method docstring
projects/permissions/tasksolorders.py:112: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.has_object_retrieve_permission] Missing method docstring
projects/permissions/tasksolorders.py:118: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.has_object_write_permission] Missing method docstring
projects/permissions/tasksolorders.py:153: [C0111(missing-docstring), TaskSolOrdersPermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/tasksolorders.py:3: [W0611(unused-import), ] Unused Case imported from django.db.models
projects/permissions/tasksolorders.py:3: [W0611(unused-import), ] Unused When imported from django.db.models
projects/permissions/tasksolorders.py:3: [W0611(unused-import), ] Unused BooleanField imported from django.db.models
************* Module projects.permissions.document
projects/permissions/document.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/document.py:5: [C0111(missing-docstring), ProjectsDocumentContainerPermissionsMixin] Missing class docstring
projects/permissions/document.py:24: [C0111(missing-docstring), ProjectsDocumentContainerPermissionsMixin.has_docs_delete_if_owner_permission] Missing method docstring
projects/permissions/document.py:44: [C0111(missing-docstring), ProjectsDocumentContainerPermissionsMixin.has_docs_approve_reject_if_owner_permission] Missing method docstring
************* Module projects.permissions.sharing
projects/permissions/sharing.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/sharing.py:6: [C0111(missing-docstring), SharingTaskPermissionsMixin] Missing class docstring
projects/permissions/sharing.py:15: [C0111(missing-docstring), SharingTaskPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/sharing.py:24: [C0111(missing-docstring), SharingTaskPermissionsMixin.has_object_read_permission] Missing method docstring
************* Module projects.permissions.ordering
projects/permissions/ordering.py:50: [C0301(line-too-long), ] Line too long (144/100)
projects/permissions/ordering.py:61: [C0301(line-too-long), ] Line too long (101/100)
projects/permissions/ordering.py:66: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/ordering.py:67: [C0301(line-too-long), ] Line too long (109/100)
projects/permissions/ordering.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/ordering.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/ordering.py:8: [C0111(missing-docstring), OrderingOrderTaskPermissionsMixin] Missing class docstring
projects/permissions/ordering.py:17: [C0111(missing-docstring), OrderingOrderTaskPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/ordering.py:26: [C0111(missing-docstring), OrderingOrderTaskPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/ordering.py:33: [C0111(missing-docstring), OrderingOrderTaskPermissionsMixin.has_filter_order_task_permission] Missing method docstring
projects/permissions/ordering.py:43: [C0111(missing-docstring), OrderingOrderTaskPermissionsMixin.get_permissions_filter_annotations] Missing method docstring
projects/permissions/ordering.py:43: [W0613(unused-argument), OrderingOrderTaskPermissionsMixin.get_permissions_filter_annotations] Unused argument 'args'
projects/permissions/ordering.py:43: [W0613(unused-argument), OrderingOrderTaskPermissionsMixin.get_permissions_filter_annotations] Unused argument 'kwargs'
projects/permissions/ordering.py:60: [C0111(missing-docstring), OrderingOrderTaskPermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/ordering.py:3: [W0611(unused-import), ] Unused Value imported from django.db.models
************* Module projects.permissions.jobtype
projects/permissions/jobtype.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/jobtype.py:5: [C0111(missing-docstring), JobTypePermissionsMixin] Missing class docstring
projects/permissions/jobtype.py:7: [C0111(missing-docstring), JobTypePermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/jobtype.py:7: [W0613(unused-argument), JobTypePermissionsMixin.has_read_permission] Unused argument 'request'
projects/permissions/jobtype.py:11: [C0111(missing-docstring), JobTypePermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/jobtype.py:11: [W0613(unused-argument), JobTypePermissionsMixin.has_write_permission] Unused argument 'request'
projects/permissions/jobtype.py:15: [C0111(missing-docstring), JobTypePermissionsMixin.has_create_permission] Missing method docstring
projects/permissions/jobtype.py:19: [C0111(missing-docstring), JobTypePermissionsMixin.has_update_permission] Missing method docstring
projects/permissions/jobtype.py:23: [C0111(missing-docstring), JobTypePermissionsMixin.has_destroy_permission] Missing method docstring
projects/permissions/jobtype.py:26: [C0111(missing-docstring), JobTypePermissionsMixin.has_object_write_permission] Missing method docstring
projects/permissions/jobtype.py:29: [C0111(missing-docstring), JobTypePermissionsMixin.has_object_create_permission] Missing method docstring
projects/permissions/jobtype.py:32: [C0111(missing-docstring), JobTypePermissionsMixin.has_object_update_permission] Missing method docstring
projects/permissions/jobtype.py:35: [C0111(missing-docstring), JobTypePermissionsMixin.has_object_destroy_permission] Missing method docstring
projects/permissions/jobtype.py:38: [C0111(missing-docstring), JobTypePermissionsMixin.has_object_create_job_permission] Missing method docstring
projects/permissions/jobtype.py:38: [R0201(no-self-use), JobTypePermissionsMixin.has_object_create_job_permission] Method could be a function
************* Module projects.permissions.brise
projects/permissions/brise.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/brise.py:6: [C0111(missing-docstring), BrisePermissionsMixin] Missing class docstring
projects/permissions/brise.py:15: [C0111(missing-docstring), BrisePermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/brise.py:24: [C0111(missing-docstring), BrisePermissionsMixin.has_object_read_permission] Missing method docstring
************* Module projects.permissions.hunting
projects/permissions/hunting.py:52: [C0301(line-too-long), ] Line too long (115/100)
projects/permissions/hunting.py:63: [C0301(line-too-long), ] Line too long (101/100)
projects/permissions/hunting.py:68: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/hunting.py:69: [C0301(line-too-long), ] Line too long (109/100)
projects/permissions/hunting.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/hunting.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/hunting.py:8: [C0111(missing-docstring), HuntingTaskPermissionsMixin] Missing class docstring
projects/permissions/hunting.py:19: [C0111(missing-docstring), HuntingTaskPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/hunting.py:28: [C0111(missing-docstring), HuntingTaskPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/hunting.py:35: [C0111(missing-docstring), HuntingTaskPermissionsMixin.has_filter_hunting_task_permission] Missing method docstring
projects/permissions/hunting.py:45: [C0111(missing-docstring), HuntingTaskPermissionsMixin.get_permissions_filter_annotations] Missing method docstring
projects/permissions/hunting.py:45: [W0613(unused-argument), HuntingTaskPermissionsMixin.get_permissions_filter_annotations] Unused argument 'args'
projects/permissions/hunting.py:45: [W0613(unused-argument), HuntingTaskPermissionsMixin.get_permissions_filter_annotations] Unused argument 'kwargs'
projects/permissions/hunting.py:62: [C0111(missing-docstring), HuntingTaskPermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/hunting.py:3: [W0611(unused-import), ] Unused Value imported from django.db.models
************* Module projects.permissions.company
projects/permissions/company.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/company.py:6: [C0111(missing-docstring), CompanyPermissionsMixin] Missing class docstring
projects/permissions/company.py:15: [C0111(missing-docstring), CompanyPermissionsMixin.has_filter_other_companies_permission] Missing method docstring
projects/permissions/company.py:25: [C0111(missing-docstring), CompanyPermissionsMixin.permissions_filter] Missing method docstring
************* Module projects.permissions.bqa
projects/permissions/bqa.py:63: [C0301(line-too-long), ] Line too long (101/100)
projects/permissions/bqa.py:68: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/bqa.py:69: [C0301(line-too-long), ] Line too long (109/100)
projects/permissions/bqa.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/bqa.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/bqa.py:8: [C0111(missing-docstring), BqaSelfAcceptancePermissionsMixin] Missing class docstring
projects/permissions/bqa.py:19: [C0111(missing-docstring), BqaSelfAcceptancePermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/bqa.py:28: [C0111(missing-docstring), BqaSelfAcceptancePermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/bqa.py:35: [C0111(missing-docstring), BqaSelfAcceptancePermissionsMixin.has_filter_bqa_selfacceptance_permission] Missing method docstring
projects/permissions/bqa.py:45: [C0111(missing-docstring), BqaSelfAcceptancePermissionsMixin.get_permissions_filter_annotations] Missing method docstring
projects/permissions/bqa.py:45: [W0613(unused-argument), BqaSelfAcceptancePermissionsMixin.get_permissions_filter_annotations] Unused argument 'args'
projects/permissions/bqa.py:45: [W0613(unused-argument), BqaSelfAcceptancePermissionsMixin.get_permissions_filter_annotations] Unused argument 'kwargs'
projects/permissions/bqa.py:62: [C0111(missing-docstring), BqaSelfAcceptancePermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/bqa.py:3: [W0611(unused-import), ] Unused Value imported from django.db.models
************* Module projects.permissions.taskoffer
projects/permissions/taskoffer.py:122: [W0511(fixme), ] TODO: not very elegant nor safe: permissions should be checked every time is needed without any hassle.
projects/permissions/taskoffer.py:21: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/taskoffer.py:26: [C0301(line-too-long), ] Line too long (111/100)
projects/permissions/taskoffer.py:109: [C0301(line-too-long), ] Line too long (181/100)
projects/permissions/taskoffer.py:112: [C0301(line-too-long), ] Line too long (102/100)
projects/permissions/taskoffer.py:120: [C0301(line-too-long), ] Line too long (104/100)
projects/permissions/taskoffer.py:122: [C0301(line-too-long), ] Line too long (113/100)
projects/permissions/taskoffer.py:123: [C0301(line-too-long), ] Line too long (119/100)
projects/permissions/taskoffer.py:151: [C0301(line-too-long), ] Line too long (105/100)
projects/permissions/taskoffer.py:188: [C0301(line-too-long), ] Line too long (103/100)
projects/permissions/taskoffer.py:225: [C0301(line-too-long), ] Line too long (102/100)
projects/permissions/taskoffer.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/taskoffer.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/taskoffer.py:9: [C0111(missing-docstring), TaskOfferPermissionsMixin] Missing class docstring
projects/permissions/taskoffer.py:20: [C0111(missing-docstring), TaskOfferPermissionsMixin.permissions_filter] Missing method docstring
projects/permissions/taskoffer.py:33: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_filter_other_companies_task_offers_permission] Missing method docstring
projects/permissions/taskoffer.py:43: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/taskoffer.py:43: [W0613(unused-argument), TaskOfferPermissionsMixin.has_read_permission] Unused argument 'request'
projects/permissions/taskoffer.py:50: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/taskoffer.py:50: [W0613(unused-argument), TaskOfferPermissionsMixin.has_write_permission] Unused argument 'request'
projects/permissions/taskoffer.py:56: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/taskoffer.py:62: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_write_permission] Missing method docstring
projects/permissions/taskoffer.py:68: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_update_permission] Missing method docstring
projects/permissions/taskoffer.py:75: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_file_permission] Missing method docstring
projects/permissions/taskoffer.py:82: [C0111(missing-docstring), TaskOfferPermissionsMixin.is_owner_of_task] Missing method docstring
projects/permissions/taskoffer.py:92: [C0103(invalid-name), TaskOfferPermissionsMixin._has_create_permission] Variable name "o" doesn't conform to snake_case naming style
projects/permissions/taskoffer.py:95: [W0702(bare-except), TaskOfferPermissionsMixin._has_create_permission] No exception type(s) specified
projects/permissions/taskoffer.py:119: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_create_permission] Missing method docstring
projects/permissions/taskoffer.py:130: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_create_always_permission] Missing method docstring
projects/permissions/taskoffer.py:140: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_create_deny_permission] Missing method docstring
projects/permissions/taskoffer.py:150: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_approve_permission] Missing method docstring
projects/permissions/taskoffer.py:156: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_approve_permission] Missing method docstring
projects/permissions/taskoffer.py:167: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_approve_always_permission] Missing method docstring
projects/permissions/taskoffer.py:177: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_approve_deny_permission] Missing method docstring
projects/permissions/taskoffer.py:187: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_assign_permission] Missing method docstring
projects/permissions/taskoffer.py:193: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_assign_permission] Missing method docstring
projects/permissions/taskoffer.py:204: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_assign_always_permission] Missing method docstring
projects/permissions/taskoffer.py:214: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_assign_deny_permission] Missing method docstring
projects/permissions/taskoffer.py:224: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_reject_permission] Missing method docstring
projects/permissions/taskoffer.py:231: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_object_reject_permission] Missing method docstring
projects/permissions/taskoffer.py:242: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_reject_always_permission] Missing method docstring
projects/permissions/taskoffer.py:252: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_reject_deny_permission] Missing method docstring
projects/permissions/taskoffer.py:262: [C0111(missing-docstring), TaskOfferPermissionsMixin.has_can_revert_assignation_permission] Missing method docstring
projects/permissions/taskoffer.py:9: [R0904(too-many-public-methods), TaskOfferPermissionsMixin] Too many public methods (27/20)
projects/permissions/taskoffer.py:1: [W0611(unused-import), ] Unused defaultdict imported from collections
************* Module projects.permissions.orderingdelegations
projects/permissions/orderingdelegations.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/orderingdelegations.py:5: [C0111(missing-docstring), OrderingDelegationsPermissionMixin] Missing class docstring
projects/permissions/orderingdelegations.py:15: [C0111(missing-docstring), OrderingDelegationsPermissionMixin.has_read_permission] Missing method docstring
projects/permissions/orderingdelegations.py:25: [C0111(missing-docstring), OrderingDelegationsPermissionMixin.has_write_permission] Missing method docstring
************* Module projects.permissions.joblink
projects/permissions/joblink.py:60: [C0305(trailing-newlines), ] Trailing newlines
projects/permissions/joblink.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/joblink.py:7: [C0111(missing-docstring), JobLinkPermissionMixin] Missing class docstring
projects/permissions/joblink.py:15: [C0111(missing-docstring), JobLinkPermissionMixin.has_read_permission] Missing method docstring
projects/permissions/joblink.py:15: [W0613(unused-argument), JobLinkPermissionMixin.has_read_permission] Unused argument 'request'
projects/permissions/joblink.py:22: [C0111(missing-docstring), JobLinkPermissionMixin.has_write_permission] Missing method docstring
projects/permissions/joblink.py:22: [W0613(unused-argument), JobLinkPermissionMixin.has_write_permission] Unused argument 'request'
projects/permissions/joblink.py:29: [C0111(missing-docstring), JobLinkPermissionMixin.check_has_create_or_update_permission] Missing method docstring
projects/permissions/joblink.py:40: [W0702(bare-except), JobLinkPermissionMixin.check_has_create_or_update_permission] No exception type(s) specified
projects/permissions/joblink.py:49: [C0111(missing-docstring), JobLinkPermissionMixin.has_create_permission] Missing method docstring
projects/permissions/joblink.py:55: [C0111(missing-docstring), JobLinkPermissionMixin.has_object_write_permission] Missing method docstring
************* Module projects.permissions.joborderingfilter
projects/permissions/joborderingfilter.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/joborderingfilter.py:6: [C0111(missing-docstring), JobOrderingFilterPermissionsMixin] Missing class docstring
projects/permissions/joborderingfilter.py:15: [C0111(missing-docstring), JobOrderingFilterPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/joborderingfilter.py:24: [C0111(missing-docstring), JobOrderingFilterPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/joborderingfilter.py:31: [C0111(missing-docstring), JobOrderingFilterPermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/joborderingfilter.py:40: [C0111(missing-docstring), JobOrderingFilterPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module projects.permissions.projects
projects/permissions/projects.py:14: [C0301(line-too-long), ] Line too long (120/100)
projects/permissions/projects.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/projects.py:6: [C0111(missing-docstring), ProjectSerializerPermissionsMixin] Missing class docstring
projects/permissions/projects.py:6: [R0205(useless-object-inheritance), ProjectSerializerPermissionsMixin] Class 'ProjectSerializerPermissionsMixin' inherits from object, can be safely removed from bases in python3
projects/permissions/projects.py:7: [C0111(missing-docstring), ProjectSerializerPermissionsMixin.permissions_fields] Missing method docstring
projects/permissions/projects.py:7: [W0613(unused-argument), ProjectSerializerPermissionsMixin.permissions_fields] Unused argument 'fields'
projects/permissions/projects.py:37: [C0111(missing-docstring), ProjectSerializerPermissionsMixin.permissions_writable_fields] Missing method docstring
projects/permissions/projects.py:37: [W0613(unused-argument), ProjectSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'validated_data'
projects/permissions/projects.py:40: [C0111(missing-docstring), ProjectSerializerPermissionsMixin.permissions_readable_fields] Missing method docstring
************* Module projects.permissions.sites
projects/permissions/sites.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/sites.py:6: [C0111(missing-docstring), SitePermissionsMixin] Missing class docstring
projects/permissions/sites.py:15: [C0111(missing-docstring), SitePermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/sites.py:24: [C0111(missing-docstring), SitePermissionsMixin.has_object_read_permission] Missing method docstring
************* Module projects.permissions.taskblock
projects/permissions/taskblock.py:18: [C0305(trailing-newlines), ] Trailing newlines
projects/permissions/taskblock.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/taskblock.py:7: [C0111(missing-docstring), TaskBlockPermissionsMixin] Missing class docstring
projects/permissions/taskblock.py:12: [C0111(missing-docstring), TaskBlockPermissionsMixin.has_can_block_unblock_tasks_permission] Missing method docstring
************* Module projects.permissions
projects/permissions/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/__init__.py:30: [C0111(missing-docstring), AppPermissions] Missing class docstring
projects/permissions/__init__.py:41: [C0111(missing-docstring), AppPermissions.has_menu_dashboard_permission] Missing method docstring
projects/permissions/__init__.py:52: [C0111(missing-docstring), AppPermissions.has_menu_apidashboard_permission] Missing method docstring
projects/permissions/__init__.py:64: [C0111(missing-docstring), AppPermissions.has_menu_jobbrowser_permission] Missing method docstring
projects/permissions/__init__.py:75: [C0111(missing-docstring), AppPermissions.has_menu_taskbrowser_permission] Missing method docstring
projects/permissions/__init__.py:86: [C0111(missing-docstring), AppPermissions.has_menu_documents_permission] Missing method docstring
projects/permissions/__init__.py:97: [C0111(missing-docstring), AppPermissions.has_menu_importjobs_permission] Missing method docstring
projects/permissions/__init__.py:108: [C0111(missing-docstring), AppPermissions.has_menu_importeconomicvalues_permission] Missing method docstring
projects/permissions/__init__.py:119: [C0111(missing-docstring), AppPermissions.has_menu_tasktypehypotheses_permission] Missing method docstring
projects/permissions/__init__.py:130: [C0111(missing-docstring), AppPermissions.has_menu_importtasksolorders_permission] Missing method docstring
projects/permissions/__init__.py:141: [C0111(missing-docstring), AppPermissions.has_menu_importeconomichypothesiscode_permission] Missing method docstring
projects/permissions/__init__.py:152: [C0111(missing-docstring), AppPermissions.has_menu_importdelegations_permission] Missing method docstring
projects/permissions/__init__.py:163: [C0111(missing-docstring), AppPermissions.has_menu_importorderingdelegations_permission] Missing method docstring
projects/permissions/__init__.py:174: [C0111(missing-docstring), AppPermissions.has_menu_importjobslinks_permission] Missing method docstring
projects/permissions/__init__.py:185: [C0111(missing-docstring), AppPermissions.has_menu_importtaskslinks_permission] Missing method docstring
projects/permissions/__init__.py:196: [C0111(missing-docstring), AppPermissions.has_menu_dynamicreports_permission] Missing method docstring
projects/permissions/__init__.py:207: [C0111(missing-docstring), AppPermissions.has_menu_economicdashboard_permission] Missing method docstring
projects/permissions/__init__.py:218: [C0111(missing-docstring), AppPermissions.has_menu_admin_permission] Missing method docstring
projects/permissions/__init__.py:228: [C0111(missing-docstring), AppPermissions.has_menu_useradmin_permission] Missing method docstring
projects/permissions/__init__.py:238: [C0111(missing-docstring), AppPermissions.has_jobbrowser_export_permission] Missing method docstring
projects/permissions/__init__.py:248: [C0111(missing-docstring), AppPermissions.has_taskbrowser_export_permission] Missing method docstring
projects/permissions/__init__.py:258: [C0111(missing-docstring), AppPermissions.has_column_selection_permission] Missing method docstring
projects/permissions/__init__.py:268: [C0111(missing-docstring), AppPermissions.has_show_economics_info_permission] Missing method docstring
projects/permissions/__init__.py:278: [C0111(missing-docstring), AppPermissions.has_show_planned_info_permission] Missing method docstring
projects/permissions/__init__.py:288: [C0111(missing-docstring), AppPermissions.has_can_edit_planned_fields_permission] Missing method docstring
projects/permissions/__init__.py:298: [C0111(missing-docstring), AppPermissions.has_can_create_job_permission] Missing method docstring
projects/permissions/__init__.py:308: [C0111(missing-docstring), AppPermissions.has_can_add_task_to_job_permission] Missing method docstring
projects/permissions/__init__.py:318: [C0111(missing-docstring), AppPermissions.has_activate_zone_permissions_filter_permission] Missing method docstring
projects/permissions/__init__.py:338: [C0111(missing-docstring), AppPermissions.has_edit_externalorangeorderingtask_fields_permission] Missing method docstring
projects/permissions/__init__.py:348: [C0111(missing-docstring), AppPermissions.has_edit_externalorangebqaautoacept_fields_permission] Missing method docstring
projects/permissions/__init__.py:358: [C0111(missing-docstring), AppPermissions.has_edit_externalorangesharingtask_fields_permission] Missing method docstring
projects/permissions/__init__.py:368: [C0111(missing-docstring), AppPermissions.has_edit_externalorangehuntingtask_fields_permission] Missing method docstring
projects/permissions/__init__.py:378: [C0111(missing-docstring), AppPermissions.has_edit_externalorangesite_fields_permission] Missing method docstring
projects/permissions/__init__.py:388: [C0111(missing-docstring), AppPermissions.has_edit_externalorangebriseticket_fields_permission] Missing method docstring
projects/permissions/__init__.py:398: [C0111(missing-docstring), AppPermissions.has_edit_externalorangelegaltask_fields_permission] Missing method docstring
projects/permissions/__init__.py:408: [C0111(missing-docstring), AppPermissions.has_can_block_unblock_tasks_permission] Missing method docstring
projects/permissions/__init__.py:418: [C0111(missing-docstring), AppPermissions.has_can_add_task_offers_permission] Missing method docstring
projects/permissions/__init__.py:427: [C0111(missing-docstring), AppPermissions.has_can_approve_task_offers_permission] Missing method docstring
projects/permissions/__init__.py:436: [C0111(missing-docstring), AppPermissions.has_can_assign_task_offers_permission] Missing method docstring
projects/permissions/__init__.py:445: [C0111(missing-docstring), AppPermissions.has_can_reject_task_offers_permission] Missing method docstring
projects/permissions/__init__.py:30: [R0904(too-many-public-methods), AppPermissions] Too many public methods (39/20)
projects/permissions/__init__.py:24: [C0411(wrong-import-order), ] standard import "from collections import defaultdict" should be placed before "from projects.permissions import company, delegations, economics, job, joborderingfilter, ordering, projects, report, task, tasksolorders, taskoffer, orderingdelegations, sharing, sites, brise"
************* Module projects.permissions.economics
projects/permissions/economics.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/economics.py:6: [C0111(missing-docstring), EconomicsPermissionsMixin] Missing class docstring
projects/permissions/economics.py:15: [C0111(missing-docstring), EconomicsPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/economics.py:24: [C0111(missing-docstring), EconomicsPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/economics.py:31: [C0111(missing-docstring), EconomicsPermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/economics.py:40: [C0111(missing-docstring), EconomicsPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module projects.permissions.report
projects/permissions/report.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/report.py:7: [C0111(missing-docstring), ReportPermissionsMixin] Missing class docstring
projects/permissions/report.py:1: [W0611(unused-import), ] Unused defaultdict imported from collections
************* Module projects.permissions.task
projects/permissions/task.py:312: [W0511(fixme), ] TODO: this could (and should) be moved in a TaskOffer permission mixin method.
projects/permissions/task.py:96: [C0301(line-too-long), ] Line too long (120/100)
projects/permissions/task.py:97: [C0301(line-too-long), ] Line too long (114/100)
projects/permissions/task.py:304: [C0301(line-too-long), ] Line too long (113/100)
projects/permissions/task.py:342: [C0301(line-too-long), ] Line too long (101/100)
projects/permissions/task.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/permissions/task.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
projects/permissions/task.py:10: [C0111(missing-docstring), TaskSerializerPermissionsMixin] Missing class docstring
projects/permissions/task.py:10: [R0205(useless-object-inheritance), TaskSerializerPermissionsMixin] Class 'TaskSerializerPermissionsMixin' inherits from object, can be safely removed from bases in python3
projects/permissions/task.py:11: [C0111(missing-docstring), TaskSerializerPermissionsMixin.permissions_fields] Missing method docstring
projects/permissions/task.py:11: [W0613(unused-argument), TaskSerializerPermissionsMixin.permissions_fields] Unused argument 'fields'
projects/permissions/task.py:37: [C0111(missing-docstring), TaskSerializerPermissionsMixin.permissions_writable_fields] Missing method docstring
projects/permissions/task.py:37: [W0613(unused-argument), TaskSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'validated_data'
projects/permissions/task.py:62: [C0111(missing-docstring), TaskSerializerPermissionsMixin.permissions_readable_fields] Missing method docstring
projects/permissions/task.py:66: [C0111(missing-docstring), TaskPermissionsMixin] Missing class docstring
projects/permissions/task.py:85: [C0111(missing-docstring), TaskPermissionsMixin.has_filter_other_companies_tasks_permission] Missing method docstring
projects/permissions/task.py:95: [C0111(missing-docstring), TaskPermissionsMixin.get_permissions_filter_annotations] Missing method docstring
projects/permissions/task.py:116: [C0111(missing-docstring), TaskPermissionsMixin.has_read_permission] Missing method docstring
projects/permissions/task.py:116: [W0613(unused-argument), TaskPermissionsMixin.has_read_permission] Unused argument 'request'
projects/permissions/task.py:123: [C0111(missing-docstring), TaskPermissionsMixin.has_write_permission] Missing method docstring
projects/permissions/task.py:133: [C0111(missing-docstring), TaskPermissionsMixin.has_create_permission] Missing method docstring
projects/permissions/task.py:141: [C0111(missing-docstring), TaskPermissionsMixin.has_destroy_permission] Missing method docstring
projects/permissions/task.py:148: [C0111(missing-docstring), TaskPermissionsMixin.has_object_read_permission] Missing method docstring
projects/permissions/task.py:154: [C0111(missing-docstring), TaskPermissionsMixin.has_object_retrieve_permission] Missing method docstring
projects/permissions/task.py:163: [C0111(missing-docstring), TaskPermissionsMixin.has_object_write_permission] Missing method docstring
projects/permissions/task.py:176: [C0111(missing-docstring), TaskPermissionsMixin.has_object_show_planned_info_permission] Missing method docstring
projects/permissions/task.py:176: [R0201(no-self-use), TaskPermissionsMixin.has_object_show_planned_info_permission] Method could be a function
projects/permissions/task.py:185: [C0111(missing-docstring), TaskPermissionsMixin.has_can_edit_planned_fields_permission] Missing method docstring
projects/permissions/task.py:194: [C0111(missing-docstring), TaskPermissionsMixin.has_read_only_tasks_not_assigned_to_user_company_permission] Missing method docstring
projects/permissions/task.py:203: [C0111(missing-docstring), TaskPermissionsMixin.has_object_edit_dynamic_fields_permission] Missing method docstring
projects/permissions/task.py:216: [C0111(missing-docstring), TaskPermissionsMixin.has_only_owner_can_edit_dynamic_fields_permission] Missing method docstring
projects/permissions/task.py:225: [C0111(missing-docstring), TaskPermissionsMixin.has_object_only_owner_can_add_order_permission] Missing method docstring
projects/permissions/task.py:237: [C0111(missing-docstring), TaskPermissionsMixin.has_object_can_add_order_permission] Missing method docstring
projects/permissions/task.py:248: [C0111(missing-docstring), TaskPermissionsMixin.has_show_limited_orders_info_permission] Missing method docstring
projects/permissions/task.py:258: [C0111(missing-docstring), TaskPermissionsMixin.has_can_edit_company_permission] Missing method docstring
projects/permissions/task.py:269: [C0111(missing-docstring), TaskPermissionsMixin.has_can_edit_owner_permission] Missing method docstring
projects/permissions/task.py:278: [C0111(missing-docstring), TaskPermissionsMixin.has_object_tab_ordering_permission] Missing method docstring
projects/permissions/task.py:287: [C0111(missing-docstring), TaskPermissionsMixin.has_object_tab_linked_tasks_permission] Missing method docstring
projects/permissions/task.py:310: [C0111(missing-docstring), TaskPermissionsMixin.has_object_can_add_task_offers_permission] Missing method docstring
projects/permissions/task.py:322: [C0111(missing-docstring), TaskPermissionsMixin.has_object_can_add_or_remove_task_links_permission] Missing method docstring
projects/permissions/task.py:329: [C0111(missing-docstring), TaskPermissionsMixin.has_object_docs_delete_if_owner_permission] Missing method docstring
projects/permissions/task.py:335: [C0111(missing-docstring), TaskPermissionsMixin.has_object_docs_approve_reject_if_owner_permission] Missing method docstring
projects/permissions/task.py:341: [C0111(missing-docstring), TaskPermissionsMixin.is_owner_of_task] Missing method docstring
projects/permissions/task.py:66: [R0904(too-many-public-methods), TaskPermissionsMixin] Too many public methods (27/20)
projects/permissions/task.py:1: [W0611(unused-import), ] Unused defaultdict imported from collections
************* Module projects.migrations.0063_auto_20170418_1013
projects/migrations/0063_auto_20170418_1013.py:18: [C0301(line-too-long), ] Line too long (106/100)
projects/migrations/0063_auto_20170418_1013.py:1: [C0103(invalid-name), ] Module name "0063_auto_20170418_1013" doesn't conform to snake_case naming style
projects/migrations/0063_auto_20170418_1013.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0063_auto_20170418_1013.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0063_auto_20170418_1013.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0063_auto_20170418_1013.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0125_auto_20181122_1731
projects/migrations/0125_auto_20181122_1731.py:26: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0125_auto_20181122_1731.py:27: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0125_auto_20181122_1731.py:28: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0125_auto_20181122_1731.py:29: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0125_auto_20181122_1731.py:34: [C0301(line-too-long), ] Line too long (187/100)
projects/migrations/0125_auto_20181122_1731.py:35: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0125_auto_20181122_1731.py:36: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0125_auto_20181122_1731.py:38: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0125_auto_20181122_1731.py:40: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0125_auto_20181122_1731.py:41: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0125_auto_20181122_1731.py:55: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0125_auto_20181122_1731.py:56: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0125_auto_20181122_1731.py:57: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0125_auto_20181122_1731.py:59: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0125_auto_20181122_1731.py:63: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0125_auto_20181122_1731.py:64: [C0301(line-too-long), ] Line too long (242/100)
projects/migrations/0125_auto_20181122_1731.py:65: [C0301(line-too-long), ] Line too long (254/100)
projects/migrations/0125_auto_20181122_1731.py:74: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0125_auto_20181122_1731.py:79: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0125_auto_20181122_1731.py:84: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0125_auto_20181122_1731.py:89: [C0301(line-too-long), ] Line too long (220/100)
projects/migrations/0125_auto_20181122_1731.py:94: [C0301(line-too-long), ] Line too long (178/100)
projects/migrations/0125_auto_20181122_1731.py:99: [C0301(line-too-long), ] Line too long (231/100)
projects/migrations/0125_auto_20181122_1731.py:1: [C0103(invalid-name), ] Module name "0125_auto_20181122_1731" doesn't conform to snake_case naming style
projects/migrations/0125_auto_20181122_1731.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0125_auto_20181122_1731.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0125_auto_20181122_1731.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0125_auto_20181122_1731.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0125_auto_20181122_1731.py:14: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0125_auto_20181122_1731.py:14: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0018_field_technical_name
projects/migrations/0018_field_technical_name.py:1: [C0103(invalid-name), ] Module name "0018_field_technical_name" doesn't conform to snake_case naming style
projects/migrations/0018_field_technical_name.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0018_field_technical_name.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0018_field_technical_name.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0018_field_technical_name.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0033_auto_20161219_1604
projects/migrations/0033_auto_20161219_1604.py:19: [C0301(line-too-long), ] Line too long (193/100)
projects/migrations/0033_auto_20161219_1604.py:24: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0033_auto_20161219_1604.py:1: [C0103(invalid-name), ] Module name "0033_auto_20161219_1604" doesn't conform to snake_case naming style
projects/migrations/0033_auto_20161219_1604.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0033_auto_20161219_1604.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0033_auto_20161219_1604.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0033_auto_20161219_1604.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0033_auto_20161219_1604.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0096_tasks_links_summary_view
projects/migrations/0096_tasks_links_summary_view.py:1: [C0103(invalid-name), ] Module name "0096_tasks_links_summary_view" doesn't conform to snake_case naming style
projects/migrations/0096_tasks_links_summary_view.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0096_tasks_links_summary_view.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0096_tasks_links_summary_view.py:5: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0096_tasks_links_summary_view.py:5: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0050_merge_20170307_1803
projects/migrations/0050_merge_20170307_1803.py:1: [C0103(invalid-name), ] Module name "0050_merge_20170307_1803" doesn't conform to snake_case naming style
projects/migrations/0050_merge_20170307_1803.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0050_merge_20170307_1803.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0050_merge_20170307_1803.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0050_merge_20170307_1803.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0019_update_technical_name_20161026
projects/migrations/0019_update_technical_name_20161026.py:1: [C0103(invalid-name), ] Module name "0019_update_technical_name_20161026" doesn't conform to snake_case naming style
projects/migrations/0019_update_technical_name_20161026.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0019_update_technical_name_20161026.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0019_update_technical_name_20161026.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0019_update_technical_name_20161026.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0057_merge_20170321_1722
projects/migrations/0057_merge_20170321_1722.py:1: [C0103(invalid-name), ] Module name "0057_merge_20170321_1722" doesn't conform to snake_case naming style
projects/migrations/0057_merge_20170321_1722.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0057_merge_20170321_1722.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0057_merge_20170321_1722.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0057_merge_20170321_1722.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0047_auto_20170220_0921
projects/migrations/0047_auto_20170220_0921.py:19: [C0301(line-too-long), ] Line too long (129/100)
projects/migrations/0047_auto_20170220_0921.py:24: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0047_auto_20170220_0921.py:29: [C0301(line-too-long), ] Line too long (127/100)
projects/migrations/0047_auto_20170220_0921.py:1: [C0103(invalid-name), ] Module name "0047_auto_20170220_0921" doesn't conform to snake_case naming style
projects/migrations/0047_auto_20170220_0921.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0047_auto_20170220_0921.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0047_auto_20170220_0921.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0047_auto_20170220_0921.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0047_auto_20170220_0921.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0128_auto_20181205_1231
projects/migrations/0128_auto_20181205_1231.py:19: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0128_auto_20181205_1231.py:1: [C0103(invalid-name), ] Module name "0128_auto_20181205_1231" doesn't conform to snake_case naming style
projects/migrations/0128_auto_20181205_1231.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0128_auto_20181205_1231.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0128_auto_20181205_1231.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0128_auto_20181205_1231.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0128_auto_20181205_1231.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0139_merge_20190118_1115
projects/migrations/0139_merge_20190118_1115.py:1: [C0103(invalid-name), ] Module name "0139_merge_20190118_1115" doesn't conform to snake_case naming style
projects/migrations/0139_merge_20190118_1115.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0139_merge_20190118_1115.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0139_merge_20190118_1115.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0139_merge_20190118_1115.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0067_merge_20170505_0955
projects/migrations/0067_merge_20170505_0955.py:1: [C0103(invalid-name), ] Module name "0067_merge_20170505_0955" doesn't conform to snake_case naming style
projects/migrations/0067_merge_20170505_0955.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0067_merge_20170505_0955.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0067_merge_20170505_0955.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0067_merge_20170505_0955.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0028_auto_20161213_1431
projects/migrations/0028_auto_20161213_1431.py:18: [C0301(line-too-long), ] Line too long (626/100)
projects/migrations/0028_auto_20161213_1431.py:1: [C0103(invalid-name), ] Module name "0028_auto_20161213_1431" doesn't conform to snake_case naming style
projects/migrations/0028_auto_20161213_1431.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0028_auto_20161213_1431.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0028_auto_20161213_1431.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0028_auto_20161213_1431.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0140_merge_20190208_1116
projects/migrations/0140_merge_20190208_1116.py:1: [C0103(invalid-name), ] Module name "0140_merge_20190208_1116" doesn't conform to snake_case naming style
projects/migrations/0140_merge_20190208_1116.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0140_merge_20190208_1116.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0140_merge_20190208_1116.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0140_merge_20190208_1116.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0040_auto_20170113_1631
projects/migrations/0040_auto_20170113_1631.py:18: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0040_auto_20170113_1631.py:1: [C0103(invalid-name), ] Module name "0040_auto_20170113_1631" doesn't conform to snake_case naming style
projects/migrations/0040_auto_20170113_1631.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0040_auto_20170113_1631.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0040_auto_20170113_1631.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0040_auto_20170113_1631.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0097_auto_20180619_1340
projects/migrations/0097_auto_20180619_1340.py:18: [C0301(line-too-long), ] Line too long (474/100)
projects/migrations/0097_auto_20180619_1340.py:23: [C0301(line-too-long), ] Line too long (462/100)
projects/migrations/0097_auto_20180619_1340.py:1: [C0103(invalid-name), ] Module name "0097_auto_20180619_1340" doesn't conform to snake_case naming style
projects/migrations/0097_auto_20180619_1340.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0097_auto_20180619_1340.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0097_auto_20180619_1340.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0097_auto_20180619_1340.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0091_auto_20180523_1627
projects/migrations/0091_auto_20180523_1627.py:17: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0091_auto_20180523_1627.py:1: [C0103(invalid-name), ] Module name "0091_auto_20180523_1627" doesn't conform to snake_case naming style
projects/migrations/0091_auto_20180523_1627.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0091_auto_20180523_1627.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0091_auto_20180523_1627.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0091_auto_20180523_1627.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0039_merge_20170112_1414
projects/migrations/0039_merge_20170112_1414.py:1: [C0103(invalid-name), ] Module name "0039_merge_20170112_1414" doesn't conform to snake_case naming style
projects/migrations/0039_merge_20170112_1414.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0039_merge_20170112_1414.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0039_merge_20170112_1414.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0039_merge_20170112_1414.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0011_auto_20161006_1339
projects/migrations/0011_auto_20161006_1339.py:19: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0011_auto_20161006_1339.py:1: [C0103(invalid-name), ] Module name "0011_auto_20161006_1339" doesn't conform to snake_case naming style
projects/migrations/0011_auto_20161006_1339.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0011_auto_20161006_1339.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0011_auto_20161006_1339.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0011_auto_20161006_1339.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0011_auto_20161006_1339.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0086_taskoffer
projects/migrations/0086_taskoffer.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0086_taskoffer.py:22: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0086_taskoffer.py:23: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0086_taskoffer.py:24: [C0301(line-too-long), ] Line too long (249/100)
projects/migrations/0086_taskoffer.py:26: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0086_taskoffer.py:27: [C0301(line-too-long), ] Line too long (235/100)
projects/migrations/0086_taskoffer.py:28: [C0301(line-too-long), ] Line too long (247/100)
projects/migrations/0086_taskoffer.py:29: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0086_taskoffer.py:1: [C0103(invalid-name), ] Module name "0086_taskoffer" doesn't conform to snake_case naming style
projects/migrations/0086_taskoffer.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0086_taskoffer.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0086_taskoffer.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0086_taskoffer.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0086_taskoffer.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0086_taskoffer.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0029_merge_20161215_0956
projects/migrations/0029_merge_20161215_0956.py:1: [C0103(invalid-name), ] Module name "0029_merge_20161215_0956" doesn't conform to snake_case naming style
projects/migrations/0029_merge_20161215_0956.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0029_merge_20161215_0956.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0029_merge_20161215_0956.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0029_merge_20161215_0956.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0138_auto_20190111_1644
projects/migrations/0138_auto_20190111_1644.py:19: [C0301(line-too-long), ] Line too long (149/100)
projects/migrations/0138_auto_20190111_1644.py:1: [C0103(invalid-name), ] Module name "0138_auto_20190111_1644" doesn't conform to snake_case naming style
projects/migrations/0138_auto_20190111_1644.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0138_auto_20190111_1644.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0138_auto_20190111_1644.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0138_auto_20190111_1644.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0138_auto_20190111_1644.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0146_auto_20190403_1534
projects/migrations/0146_auto_20190403_1534.py:17: [C0301(line-too-long), ] Line too long (168/100)
projects/migrations/0146_auto_20190403_1534.py:22: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0146_auto_20190403_1534.py:27: [C0301(line-too-long), ] Line too long (131/100)
projects/migrations/0146_auto_20190403_1534.py:1: [C0103(invalid-name), ] Module name "0146_auto_20190403_1534" doesn't conform to snake_case naming style
projects/migrations/0146_auto_20190403_1534.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0146_auto_20190403_1534.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0146_auto_20190403_1534.py:4: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0146_auto_20190403_1534.py:7: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0146_auto_20190403_1534.py:7: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0082_auto_20180503_1032
projects/migrations/0082_auto_20180503_1032.py:22: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0082_auto_20180503_1032.py:23: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0082_auto_20180503_1032.py:24: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0082_auto_20180503_1032.py:25: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0082_auto_20180503_1032.py:26: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0082_auto_20180503_1032.py:28: [C0301(line-too-long), ] Line too long (242/100)
projects/migrations/0082_auto_20180503_1032.py:29: [C0301(line-too-long), ] Line too long (226/100)
projects/migrations/0082_auto_20180503_1032.py:30: [C0301(line-too-long), ] Line too long (254/100)
projects/migrations/0082_auto_20180503_1032.py:31: [C0301(line-too-long), ] Line too long (217/100)
projects/migrations/0082_auto_20180503_1032.py:56: [C0301(line-too-long), ] Line too long (225/100)
projects/migrations/0082_auto_20180503_1032.py:61: [C0301(line-too-long), ] Line too long (205/100)
projects/migrations/0082_auto_20180503_1032.py:66: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0082_auto_20180503_1032.py:71: [C0301(line-too-long), ] Line too long (210/100)
projects/migrations/0082_auto_20180503_1032.py:1: [C0103(invalid-name), ] Module name "0082_auto_20180503_1032" doesn't conform to snake_case naming style
projects/migrations/0082_auto_20180503_1032.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0082_auto_20180503_1032.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0082_auto_20180503_1032.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0082_auto_20180503_1032.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0082_auto_20180503_1032.py:11: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0082_auto_20180503_1032.py:11: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0106_taskoffer_tasksolorder
projects/migrations/0106_taskoffer_tasksolorder.py:19: [C0301(line-too-long), ] Line too long (163/100)
projects/migrations/0106_taskoffer_tasksolorder.py:1: [C0103(invalid-name), ] Module name "0106_taskoffer_tasksolorder" doesn't conform to snake_case naming style
projects/migrations/0106_taskoffer_tasksolorder.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0106_taskoffer_tasksolorder.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0106_taskoffer_tasksolorder.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0106_taskoffer_tasksolorder.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0106_taskoffer_tasksolorder.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0021_auto_20161026_1655
projects/migrations/0021_auto_20161026_1655.py:1: [C0103(invalid-name), ] Module name "0021_auto_20161026_1655" doesn't conform to snake_case naming style
projects/migrations/0021_auto_20161026_1655.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0021_auto_20161026_1655.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0021_auto_20161026_1655.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0021_auto_20161026_1655.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0134_merge_20181219_1735
projects/migrations/0134_merge_20181219_1735.py:1: [C0103(invalid-name), ] Module name "0134_merge_20181219_1735" doesn't conform to snake_case naming style
projects/migrations/0134_merge_20181219_1735.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0134_merge_20181219_1735.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0134_merge_20181219_1735.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0134_merge_20181219_1735.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0015_usergridcolumns
projects/migrations/0015_usergridcolumns.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0015_usergridcolumns.py:26: [C0301(line-too-long), ] Line too long (143/100)
projects/migrations/0015_usergridcolumns.py:27: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0015_usergridcolumns.py:1: [C0103(invalid-name), ] Module name "0015_usergridcolumns" doesn't conform to snake_case naming style
projects/migrations/0015_usergridcolumns.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0015_usergridcolumns.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0015_usergridcolumns.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0015_usergridcolumns.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0015_usergridcolumns.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0015_usergridcolumns.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0056_auto_20170314_1527
projects/migrations/0056_auto_20170314_1527.py:19: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0056_auto_20170314_1527.py:35: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0056_auto_20170314_1527.py:40: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0056_auto_20170314_1527.py:1: [C0103(invalid-name), ] Module name "0056_auto_20170314_1527" doesn't conform to snake_case naming style
projects/migrations/0056_auto_20170314_1527.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0056_auto_20170314_1527.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0056_auto_20170314_1527.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0056_auto_20170314_1527.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0056_auto_20170314_1527.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0075_auto_20180315_1503
projects/migrations/0075_auto_20180315_1503.py:18: [C0301(line-too-long), ] Line too long (774/100)
projects/migrations/0075_auto_20180315_1503.py:1: [C0103(invalid-name), ] Module name "0075_auto_20180315_1503" doesn't conform to snake_case naming style
projects/migrations/0075_auto_20180315_1503.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0075_auto_20180315_1503.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0075_auto_20180315_1503.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0075_auto_20180315_1503.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0009_auto_20160927_1247
projects/migrations/0009_auto_20160927_1247.py:20: [C0301(line-too-long), ] Line too long (175/100)
projects/migrations/0009_auto_20160927_1247.py:25: [C0301(line-too-long), ] Line too long (179/100)
projects/migrations/0009_auto_20160927_1247.py:1: [C0103(invalid-name), ] Module name "0009_auto_20160927_1247" doesn't conform to snake_case naming style
projects/migrations/0009_auto_20160927_1247.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0009_auto_20160927_1247.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0009_auto_20160927_1247.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0009_auto_20160927_1247.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0009_auto_20160927_1247.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0048_merge_20170223_1417
projects/migrations/0048_merge_20170223_1417.py:1: [C0103(invalid-name), ] Module name "0048_merge_20170223_1417" doesn't conform to snake_case naming style
projects/migrations/0048_merge_20170223_1417.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0048_merge_20170223_1417.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0048_merge_20170223_1417.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0048_merge_20170223_1417.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0066_auto_20170505_0931
projects/migrations/0066_auto_20170505_0931.py:1: [C0103(invalid-name), ] Module name "0066_auto_20170505_0931" doesn't conform to snake_case naming style
projects/migrations/0066_auto_20170505_0931.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0066_auto_20170505_0931.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0066_auto_20170505_0931.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0066_auto_20170505_0931.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0152_auto_20190524_1250
projects/migrations/0152_auto_20190524_1250.py:19: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0152_auto_20190524_1250.py:1: [C0103(invalid-name), ] Module name "0152_auto_20190524_1250" doesn't conform to snake_case naming style
projects/migrations/0152_auto_20190524_1250.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0152_auto_20190524_1250.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0152_auto_20190524_1250.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0152_auto_20190524_1250.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0105_remove_tasks_links_summary_view
projects/migrations/0105_remove_tasks_links_summary_view.py:1: [C0103(invalid-name), ] Module name "0105_remove_tasks_links_summary_view" doesn't conform to snake_case naming style
projects/migrations/0105_remove_tasks_links_summary_view.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0105_remove_tasks_links_summary_view.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0105_remove_tasks_links_summary_view.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0105_remove_tasks_links_summary_view.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0074_auto_20180312_0928
projects/migrations/0074_auto_20180312_0928.py:19: [C0301(line-too-long), ] Line too long (714/100)
projects/migrations/0074_auto_20180312_0928.py:24: [C0301(line-too-long), ] Line too long (277/100)
projects/migrations/0074_auto_20180312_0928.py:1: [C0103(invalid-name), ] Module name "0074_auto_20180312_0928" doesn't conform to snake_case naming style
projects/migrations/0074_auto_20180312_0928.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0074_auto_20180312_0928.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
projects/migrations/0074_auto_20180312_0928.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0074_auto_20180312_0928.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0074_auto_20180312_0928.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0013_auto_20161007_1715
projects/migrations/0013_auto_20161007_1715.py:18: [C0301(line-too-long), ] Line too long (612/100)
projects/migrations/0013_auto_20161007_1715.py:1: [C0103(invalid-name), ] Module name "0013_auto_20161007_1715" doesn't conform to snake_case naming style
projects/migrations/0013_auto_20161007_1715.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0013_auto_20161007_1715.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0013_auto_20161007_1715.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0013_auto_20161007_1715.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0095_auto_20180531_1036
projects/migrations/0095_auto_20180531_1036.py:1: [C0103(invalid-name), ] Module name "0095_auto_20180531_1036" doesn't conform to snake_case naming style
projects/migrations/0095_auto_20180531_1036.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0095_auto_20180531_1036.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0095_auto_20180531_1036.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0095_auto_20180531_1036.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0097_ordering_matrix_views
projects/migrations/0097_ordering_matrix_views.py:1: [C0103(invalid-name), ] Module name "0097_ordering_matrix_views" doesn't conform to snake_case naming style
projects/migrations/0097_ordering_matrix_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0097_ordering_matrix_views.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0097_ordering_matrix_views.py:7: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0097_ordering_matrix_views.py:7: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0058_tasksolorders
projects/migrations/0058_tasksolorders.py:20: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0058_tasksolorders.py:21: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0058_tasksolorders.py:22: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0058_tasksolorders.py:1: [C0103(invalid-name), ] Module name "0058_tasksolorders" doesn't conform to snake_case naming style
projects/migrations/0058_tasksolorders.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0058_tasksolorders.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0058_tasksolorders.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0058_tasksolorders.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0058_tasksolorders.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0142_merge_20190312_1621
projects/migrations/0142_merge_20190312_1621.py:1: [C0103(invalid-name), ] Module name "0142_merge_20190312_1621" doesn't conform to snake_case naming style
projects/migrations/0142_merge_20190312_1621.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0142_merge_20190312_1621.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0142_merge_20190312_1621.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0142_merge_20190312_1621.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0087_auto_20180510_1542
projects/migrations/0087_auto_20180510_1542.py:19: [C0301(line-too-long), ] Line too long (144/100)
projects/migrations/0087_auto_20180510_1542.py:25: [C0301(line-too-long), ] Line too long (266/100)
projects/migrations/0087_auto_20180510_1542.py:1: [C0103(invalid-name), ] Module name "0087_auto_20180510_1542" doesn't conform to snake_case naming style
projects/migrations/0087_auto_20180510_1542.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0087_auto_20180510_1542.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
projects/migrations/0087_auto_20180510_1542.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0087_auto_20180510_1542.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0087_auto_20180510_1542.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0118_copy_description_to_event_users
projects/migrations/0118_copy_description_to_event_users.py:1: [C0103(invalid-name), ] Module name "0118_copy_description_to_event_users" doesn't conform to snake_case naming style
projects/migrations/0118_copy_description_to_event_users.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0118_copy_description_to_event_users.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0118_copy_description_to_event_users.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0118_copy_description_to_event_users.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0087_auto_20180521_1008
projects/migrations/0087_auto_20180521_1008.py:18: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0087_auto_20180521_1008.py:23: [C0301(line-too-long), ] Line too long (303/100)
projects/migrations/0087_auto_20180521_1008.py:1: [C0103(invalid-name), ] Module name "0087_auto_20180521_1008" doesn't conform to snake_case naming style
projects/migrations/0087_auto_20180521_1008.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0087_auto_20180521_1008.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0087_auto_20180521_1008.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0087_auto_20180521_1008.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0092_taskoffer_contract_code
projects/migrations/0092_taskoffer_contract_code.py:1: [C0103(invalid-name), ] Module name "0092_taskoffer_contract_code" doesn't conform to snake_case naming style
projects/migrations/0092_taskoffer_contract_code.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0092_taskoffer_contract_code.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0092_taskoffer_contract_code.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0092_taskoffer_contract_code.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0020_auto_20161026_1020
projects/migrations/0020_auto_20161026_1020.py:1: [C0103(invalid-name), ] Module name "0020_auto_20161026_1020" doesn't conform to snake_case naming style
projects/migrations/0020_auto_20161026_1020.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0020_auto_20161026_1020.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0020_auto_20161026_1020.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0020_auto_20161026_1020.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0027_auto_20161206_1029
projects/migrations/0027_auto_20161206_1029.py:1: [C0103(invalid-name), ] Module name "0027_auto_20161206_1029" doesn't conform to snake_case naming style
projects/migrations/0027_auto_20161206_1029.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0027_auto_20161206_1029.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0027_auto_20161206_1029.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0027_auto_20161206_1029.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0085_auto_20180507_1401
projects/migrations/0085_auto_20180507_1401.py:17: [C0301(line-too-long), ] Line too long (103/100)
projects/migrations/0085_auto_20180507_1401.py:21: [C0301(line-too-long), ] Line too long (158/100)
projects/migrations/0085_auto_20180507_1401.py:1: [C0103(invalid-name), ] Module name "0085_auto_20180507_1401" doesn't conform to snake_case naming style
projects/migrations/0085_auto_20180507_1401.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0085_auto_20180507_1401.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0085_auto_20180507_1401.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0085_auto_20180507_1401.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0122_auto_20181012_1537
projects/migrations/0122_auto_20181012_1537.py:18: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0122_auto_20181012_1537.py:23: [C0301(line-too-long), ] Line too long (106/100)
projects/migrations/0122_auto_20181012_1537.py:28: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0122_auto_20181012_1537.py:33: [C0301(line-too-long), ] Line too long (149/100)
projects/migrations/0122_auto_20181012_1537.py:1: [C0103(invalid-name), ] Module name "0122_auto_20181012_1537" doesn't conform to snake_case naming style
projects/migrations/0122_auto_20181012_1537.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0122_auto_20181012_1537.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0122_auto_20181012_1537.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0122_auto_20181012_1537.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0114_notificationeventsusers_context
projects/migrations/0114_notificationeventsusers_context.py:19: [C0301(line-too-long), ] Line too long (199/100)
projects/migrations/0114_notificationeventsusers_context.py:1: [C0103(invalid-name), ] Module name "0114_notificationeventsusers_context" doesn't conform to snake_case naming style
projects/migrations/0114_notificationeventsusers_context.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0114_notificationeventsusers_context.py:5: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
projects/migrations/0114_notificationeventsusers_context.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0114_notificationeventsusers_context.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0114_notificationeventsusers_context.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0148_auto_20190516_1423
projects/migrations/0148_auto_20190516_1423.py:1: [C0103(invalid-name), ] Module name "0148_auto_20190516_1423" doesn't conform to snake_case naming style
projects/migrations/0148_auto_20190516_1423.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0148_auto_20190516_1423.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0148_auto_20190516_1423.py:29: [C0111(missing-docstring), insert_data] Missing function docstring
projects/migrations/0148_auto_20190516_1423.py:30: [C0103(invalid-name), insert_data] Variable name "TaskLinkProperty" doesn't conform to snake_case naming style
projects/migrations/0148_auto_20190516_1423.py:29: [W0613(unused-argument), insert_data] Unused argument 'schema_editor'
projects/migrations/0148_auto_20190516_1423.py:37: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0148_auto_20190516_1423.py:37: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0088_merge_20180522_1133
projects/migrations/0088_merge_20180522_1133.py:1: [C0103(invalid-name), ] Module name "0088_merge_20180522_1133" doesn't conform to snake_case naming style
projects/migrations/0088_merge_20180522_1133.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0088_merge_20180522_1133.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0088_merge_20180522_1133.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0088_merge_20180522_1133.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0148_auto_20190502_1636
projects/migrations/0148_auto_20190502_1636.py:18: [C0301(line-too-long), ] Line too long (236/100)
projects/migrations/0148_auto_20190502_1636.py:23: [C0301(line-too-long), ] Line too long (180/100)
projects/migrations/0148_auto_20190502_1636.py:28: [C0301(line-too-long), ] Line too long (235/100)
projects/migrations/0148_auto_20190502_1636.py:1: [C0103(invalid-name), ] Module name "0148_auto_20190502_1636" doesn't conform to snake_case naming style
projects/migrations/0148_auto_20190502_1636.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0148_auto_20190502_1636.py:3: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0148_auto_20190502_1636.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0148_auto_20190502_1636.py:5: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0148_auto_20190502_1636.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0148_auto_20190502_1636.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0079_auto_20180329_1215
projects/migrations/0079_auto_20180329_1215.py:15: [W0511(fixme), ] TODO: fix this converting to RunPython operation in order to have correct model tables.
projects/migrations/0079_auto_20180329_1215.py:1: [C0103(invalid-name), ] Module name "0079_auto_20180329_1215" doesn't conform to snake_case naming style
projects/migrations/0079_auto_20180329_1215.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0079_auto_20180329_1215.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0079_auto_20180329_1215.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0079_auto_20180329_1215.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0110_auto_20180831_1738
projects/migrations/0110_auto_20180831_1738.py:21: [C0301(line-too-long), ] Line too long (226/100)
projects/migrations/0110_auto_20180831_1738.py:26: [C0301(line-too-long), ] Line too long (223/100)
projects/migrations/0110_auto_20180831_1738.py:1: [C0103(invalid-name), ] Module name "0110_auto_20180831_1738" doesn't conform to snake_case naming style
projects/migrations/0110_auto_20180831_1738.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0110_auto_20180831_1738.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0110_auto_20180831_1738.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0110_auto_20180831_1738.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0110_auto_20180831_1738.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0110_auto_20180831_1738.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0004_auto_20160913_1509
projects/migrations/0004_auto_20160913_1509.py:18: [C0301(line-too-long), ] Line too long (107/100)
projects/migrations/0004_auto_20160913_1509.py:1: [C0103(invalid-name), ] Module name "0004_auto_20160913_1509" doesn't conform to snake_case naming style
projects/migrations/0004_auto_20160913_1509.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0004_auto_20160913_1509.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0004_auto_20160913_1509.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0004_auto_20160913_1509.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0069_auto_20170511_1139
projects/migrations/0069_auto_20170511_1139.py:24: [C0301(line-too-long), ] Line too long (178/100)
projects/migrations/0069_auto_20170511_1139.py:1: [C0103(invalid-name), ] Module name "0069_auto_20170511_1139" doesn't conform to snake_case naming style
projects/migrations/0069_auto_20170511_1139.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0069_auto_20170511_1139.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0069_auto_20170511_1139.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0069_auto_20170511_1139.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0069_auto_20170511_1139.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0052_merge_20170309_1435
projects/migrations/0052_merge_20170309_1435.py:1: [C0103(invalid-name), ] Module name "0052_merge_20170309_1435" doesn't conform to snake_case naming style
projects/migrations/0052_merge_20170309_1435.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0052_merge_20170309_1435.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0052_merge_20170309_1435.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0052_merge_20170309_1435.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0036_auto_20161229_1657
projects/migrations/0036_auto_20161229_1657.py:18: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0036_auto_20161229_1657.py:23: [C0301(line-too-long), ] Line too long (121/100)
projects/migrations/0036_auto_20161229_1657.py:1: [C0103(invalid-name), ] Module name "0036_auto_20161229_1657" doesn't conform to snake_case naming style
projects/migrations/0036_auto_20161229_1657.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0036_auto_20161229_1657.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0036_auto_20161229_1657.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0036_auto_20161229_1657.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0098_auto_20180620_1435
projects/migrations/0098_auto_20180620_1435.py:1: [C0103(invalid-name), ] Module name "0098_auto_20180620_1435" doesn't conform to snake_case naming style
projects/migrations/0098_auto_20180620_1435.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0098_auto_20180620_1435.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0098_auto_20180620_1435.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0098_auto_20180620_1435.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0054_ordering_matrix_views
projects/migrations/0054_ordering_matrix_views.py:1: [C0103(invalid-name), ] Module name "0054_ordering_matrix_views" doesn't conform to snake_case naming style
projects/migrations/0054_ordering_matrix_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0054_ordering_matrix_views.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0054_ordering_matrix_views.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0054_ordering_matrix_views.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0022_merge_20161102_0955
projects/migrations/0022_merge_20161102_0955.py:1: [C0103(invalid-name), ] Module name "0022_merge_20161102_0955" doesn't conform to snake_case naming style
projects/migrations/0022_merge_20161102_0955.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0022_merge_20161102_0955.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0022_merge_20161102_0955.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0022_merge_20161102_0955.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0133_merge_20181207_1004
projects/migrations/0133_merge_20181207_1004.py:1: [C0103(invalid-name), ] Module name "0133_merge_20181207_1004" doesn't conform to snake_case naming style
projects/migrations/0133_merge_20181207_1004.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0133_merge_20181207_1004.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0133_merge_20181207_1004.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0133_merge_20181207_1004.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0056_auto_20170321_1530
projects/migrations/0056_auto_20170321_1530.py:17: [C0301(line-too-long), ] Line too long (374/100)
projects/migrations/0056_auto_20170321_1530.py:21: [C0301(line-too-long), ] Line too long (187/100)
projects/migrations/0056_auto_20170321_1530.py:1: [C0103(invalid-name), ] Module name "0056_auto_20170321_1530" doesn't conform to snake_case naming style
projects/migrations/0056_auto_20170321_1530.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0056_auto_20170321_1530.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0056_auto_20170321_1530.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0056_auto_20170321_1530.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0110_auto_20180910_1451
projects/migrations/0110_auto_20180910_1451.py:20: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0110_auto_20180910_1451.py:25: [C0301(line-too-long), ] Line too long (157/100)
projects/migrations/0110_auto_20180910_1451.py:1: [C0103(invalid-name), ] Module name "0110_auto_20180910_1451" doesn't conform to snake_case naming style
projects/migrations/0110_auto_20180910_1451.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0110_auto_20180910_1451.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0110_auto_20180910_1451.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0110_auto_20180910_1451.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0110_auto_20180910_1451.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0110_auto_20180910_1451.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0131_merge_20181206_1715
projects/migrations/0131_merge_20181206_1715.py:1: [C0103(invalid-name), ] Module name "0131_merge_20181206_1715" doesn't conform to snake_case naming style
projects/migrations/0131_merge_20181206_1715.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0131_merge_20181206_1715.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0131_merge_20181206_1715.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0131_merge_20181206_1715.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0110_auto_20180829_1047
projects/migrations/0110_auto_20180829_1047.py:21: [C0301(line-too-long), ] Line too long (129/100)
projects/migrations/0110_auto_20180829_1047.py:26: [C0301(line-too-long), ] Line too long (232/100)
projects/migrations/0110_auto_20180829_1047.py:32: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0110_auto_20180829_1047.py:37: [C0301(line-too-long), ] Line too long (149/100)
projects/migrations/0110_auto_20180829_1047.py:43: [C0301(line-too-long), ] Line too long (206/100)
projects/migrations/0110_auto_20180829_1047.py:1: [C0103(invalid-name), ] Module name "0110_auto_20180829_1047" doesn't conform to snake_case naming style
projects/migrations/0110_auto_20180829_1047.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0110_auto_20180829_1047.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0110_auto_20180829_1047.py:6: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
projects/migrations/0110_auto_20180829_1047.py:7: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0110_auto_20180829_1047.py:8: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0110_auto_20180829_1047.py:11: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0110_auto_20180829_1047.py:11: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0127_historyitem_object_repr
projects/migrations/0127_historyitem_object_repr.py:18: [C0301(line-too-long), ] Line too long (106/100)
projects/migrations/0127_historyitem_object_repr.py:1: [C0103(invalid-name), ] Module name "0127_historyitem_object_repr" doesn't conform to snake_case naming style
projects/migrations/0127_historyitem_object_repr.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0127_historyitem_object_repr.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0127_historyitem_object_repr.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0127_historyitem_object_repr.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0081_auto_20180412_1125
projects/migrations/0081_auto_20180412_1125.py:18: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0081_auto_20180412_1125.py:23: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0081_auto_20180412_1125.py:1: [C0103(invalid-name), ] Module name "0081_auto_20180412_1125" doesn't conform to snake_case naming style
projects/migrations/0081_auto_20180412_1125.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0081_auto_20180412_1125.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0081_auto_20180412_1125.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0081_auto_20180412_1125.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0133_merge_20181220_1058
projects/migrations/0133_merge_20181220_1058.py:1: [C0103(invalid-name), ] Module name "0133_merge_20181220_1058" doesn't conform to snake_case naming style
projects/migrations/0133_merge_20181220_1058.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0133_merge_20181220_1058.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0133_merge_20181220_1058.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0133_merge_20181220_1058.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0026_roleaction_value
projects/migrations/0026_roleaction_value.py:1: [C0103(invalid-name), ] Module name "0026_roleaction_value" doesn't conform to snake_case naming style
projects/migrations/0026_roleaction_value.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0026_roleaction_value.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0026_roleaction_value.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0026_roleaction_value.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0068_merge_20170505_0957
projects/migrations/0068_merge_20170505_0957.py:1: [C0103(invalid-name), ] Module name "0068_merge_20170505_0957" doesn't conform to snake_case naming style
projects/migrations/0068_merge_20170505_0957.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0068_merge_20170505_0957.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0068_merge_20170505_0957.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0068_merge_20170505_0957.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0061_merge_20170403_1042
projects/migrations/0061_merge_20170403_1042.py:1: [C0103(invalid-name), ] Module name "0061_merge_20170403_1042" doesn't conform to snake_case naming style
projects/migrations/0061_merge_20170403_1042.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0061_merge_20170403_1042.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0061_merge_20170403_1042.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0061_merge_20170403_1042.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0052_auto_20170315_1612
projects/migrations/0052_auto_20170315_1612.py:17: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0052_auto_20170315_1612.py:1: [C0103(invalid-name), ] Module name "0052_auto_20170315_1612" doesn't conform to snake_case naming style
projects/migrations/0052_auto_20170315_1612.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0052_auto_20170315_1612.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0052_auto_20170315_1612.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0052_auto_20170315_1612.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix
projects/migrations/0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix.py:1: [C0103(invalid-name), ] Module name "0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix" doesn't conform to snake_case naming style
projects/migrations/0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0046_auto_20170210_1732
projects/migrations/0046_auto_20170210_1732.py:24: [C0301(line-too-long), ] Line too long (130/100)
projects/migrations/0046_auto_20170210_1732.py:1: [C0103(invalid-name), ] Module name "0046_auto_20170210_1732" doesn't conform to snake_case naming style
projects/migrations/0046_auto_20170210_1732.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0046_auto_20170210_1732.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0046_auto_20170210_1732.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0046_auto_20170210_1732.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0046_auto_20170210_1732.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0051_auto_20170307_1804
projects/migrations/0051_auto_20170307_1804.py:20: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0051_auto_20170307_1804.py:25: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0051_auto_20170307_1804.py:30: [C0301(line-too-long), ] Line too long (135/100)
projects/migrations/0051_auto_20170307_1804.py:1: [C0103(invalid-name), ] Module name "0051_auto_20170307_1804" doesn't conform to snake_case naming style
projects/migrations/0051_auto_20170307_1804.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0051_auto_20170307_1804.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0051_auto_20170307_1804.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0051_auto_20170307_1804.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0051_auto_20170307_1804.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0051_auto_20170307_1804.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0135_merge_20190118_1411
projects/migrations/0135_merge_20190118_1411.py:1: [C0103(invalid-name), ] Module name "0135_merge_20190118_1411" doesn't conform to snake_case naming style
projects/migrations/0135_merge_20190118_1411.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0135_merge_20190118_1411.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0135_merge_20190118_1411.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0135_merge_20190118_1411.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0094_auto_20180606_1753
projects/migrations/0094_auto_20180606_1753.py:19: [C0301(line-too-long), ] Line too long (173/100)
projects/migrations/0094_auto_20180606_1753.py:24: [C0301(line-too-long), ] Line too long (204/100)
projects/migrations/0094_auto_20180606_1753.py:29: [C0301(line-too-long), ] Line too long (186/100)
projects/migrations/0094_auto_20180606_1753.py:34: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0094_auto_20180606_1753.py:39: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0094_auto_20180606_1753.py:44: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0094_auto_20180606_1753.py:1: [C0103(invalid-name), ] Module name "0094_auto_20180606_1753" doesn't conform to snake_case naming style
projects/migrations/0094_auto_20180606_1753.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0094_auto_20180606_1753.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0094_auto_20180606_1753.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0094_auto_20180606_1753.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0094_auto_20180606_1753.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0066_merge_20170503_1533
projects/migrations/0066_merge_20170503_1533.py:1: [C0103(invalid-name), ] Module name "0066_merge_20170503_1533" doesn't conform to snake_case naming style
projects/migrations/0066_merge_20170503_1533.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0066_merge_20170503_1533.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0066_merge_20170503_1533.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0066_merge_20170503_1533.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0045_merge_20170130_1515
projects/migrations/0045_merge_20170130_1515.py:1: [C0103(invalid-name), ] Module name "0045_merge_20170130_1515" doesn't conform to snake_case naming style
projects/migrations/0045_merge_20170130_1515.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0045_merge_20170130_1515.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0045_merge_20170130_1515.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0045_merge_20170130_1515.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0143_auto_20190327_0910
projects/migrations/0143_auto_20190327_0910.py:16: [C0301(line-too-long), ] Line too long (185/100)
projects/migrations/0143_auto_20190327_0910.py:21: [C0301(line-too-long), ] Line too long (164/100)
projects/migrations/0143_auto_20190327_0910.py:26: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0143_auto_20190327_0910.py:31: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0143_auto_20190327_0910.py:36: [C0301(line-too-long), ] Line too long (177/100)
projects/migrations/0143_auto_20190327_0910.py:41: [C0301(line-too-long), ] Line too long (156/100)
projects/migrations/0143_auto_20190327_0910.py:46: [C0301(line-too-long), ] Line too long (185/100)
projects/migrations/0143_auto_20190327_0910.py:51: [C0301(line-too-long), ] Line too long (164/100)
projects/migrations/0143_auto_20190327_0910.py:56: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0143_auto_20190327_0910.py:61: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0143_auto_20190327_0910.py:66: [C0301(line-too-long), ] Line too long (177/100)
projects/migrations/0143_auto_20190327_0910.py:71: [C0301(line-too-long), ] Line too long (156/100)
projects/migrations/0143_auto_20190327_0910.py:76: [C0301(line-too-long), ] Line too long (185/100)
projects/migrations/0143_auto_20190327_0910.py:81: [C0301(line-too-long), ] Line too long (164/100)
projects/migrations/0143_auto_20190327_0910.py:86: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0143_auto_20190327_0910.py:91: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0143_auto_20190327_0910.py:96: [C0301(line-too-long), ] Line too long (177/100)
projects/migrations/0143_auto_20190327_0910.py:101: [C0301(line-too-long), ] Line too long (156/100)
projects/migrations/0143_auto_20190327_0910.py:1: [C0103(invalid-name), ] Module name "0143_auto_20190327_0910" doesn't conform to snake_case naming style
projects/migrations/0143_auto_20190327_0910.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0143_auto_20190327_0910.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0143_auto_20190327_0910.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0143_auto_20190327_0910.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0086_auto_20180517_1230
projects/migrations/0086_auto_20180517_1230.py:17: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0086_auto_20180517_1230.py:1: [C0103(invalid-name), ] Module name "0086_auto_20180517_1230" doesn't conform to snake_case naming style
projects/migrations/0086_auto_20180517_1230.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0086_auto_20180517_1230.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0086_auto_20180517_1230.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0086_auto_20180517_1230.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0141_auto_20190208_1205
projects/migrations/0141_auto_20190208_1205.py:19: [C0301(line-too-long), ] Line too long (226/100)
projects/migrations/0141_auto_20190208_1205.py:24: [C0301(line-too-long), ] Line too long (227/100)
projects/migrations/0141_auto_20190208_1205.py:29: [C0301(line-too-long), ] Line too long (224/100)
projects/migrations/0141_auto_20190208_1205.py:1: [C0103(invalid-name), ] Module name "0141_auto_20190208_1205" doesn't conform to snake_case naming style
projects/migrations/0141_auto_20190208_1205.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0141_auto_20190208_1205.py:3: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0141_auto_20190208_1205.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0141_auto_20190208_1205.py:5: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0141_auto_20190208_1205.py:6: [E0611(no-name-in-module), ] No name 'fields' in module 'mptt'
projects/migrations/0141_auto_20190208_1205.py:6: [E0401(import-error), ] Unable to import 'mptt.fields'
projects/migrations/0141_auto_20190208_1205.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0141_auto_20190208_1205.py:19: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0141_auto_20190208_1205.py:29: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0141_auto_20190208_1205.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0024_jobtype_help_url
projects/migrations/0024_jobtype_help_url.py:1: [C0103(invalid-name), ] Module name "0024_jobtype_help_url" doesn't conform to snake_case naming style
projects/migrations/0024_jobtype_help_url.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0024_jobtype_help_url.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0024_jobtype_help_url.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0024_jobtype_help_url.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0103_merge_20180709_0934
projects/migrations/0103_merge_20180709_0934.py:1: [C0103(invalid-name), ] Module name "0103_merge_20180709_0934" doesn't conform to snake_case naming style
projects/migrations/0103_merge_20180709_0934.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0103_merge_20180709_0934.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0103_merge_20180709_0934.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0103_merge_20180709_0934.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0122_migrate_subscription_method
projects/migrations/0122_migrate_subscription_method.py:34: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0122_migrate_subscription_method.py:35: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0122_migrate_subscription_method.py:36: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0122_migrate_subscription_method.py:49: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0122_migrate_subscription_method.py:1: [C0103(invalid-name), ] Module name "0122_migrate_subscription_method" doesn't conform to snake_case naming style
projects/migrations/0122_migrate_subscription_method.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0122_migrate_subscription_method.py:7: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0122_migrate_subscription_method.py:8: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0122_migrate_subscription_method.py:9: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0122_migrate_subscription_method.py:13: [C0111(missing-docstring), needs_fix] Missing function docstring
projects/migrations/0122_migrate_subscription_method.py:13: [R1710(inconsistent-return-statements), needs_fix] Either all return statements in a function should return an expression, or none of them should.
projects/migrations/0122_migrate_subscription_method.py:18: [C0111(missing-docstring), fix_subscription_method] Missing function docstring
projects/migrations/0122_migrate_subscription_method.py:21: [W0613(unused-argument), fix_subscription_method.user_full_name] Unused argument 'sender'
projects/migrations/0122_migrate_subscription_method.py:21: [W0613(unused-argument), fix_subscription_method.user_full_name] Unused argument 'signal'
projects/migrations/0122_migrate_subscription_method.py:21: [W0613(unused-argument), fix_subscription_method.user_full_name] Unused argument 'created'
projects/migrations/0122_migrate_subscription_method.py:21: [W0613(unused-argument), fix_subscription_method.user_full_name] Unused argument 'args'
projects/migrations/0122_migrate_subscription_method.py:21: [W0613(unused-argument), fix_subscription_method.user_full_name] Unused argument 'kwargs'
projects/migrations/0122_migrate_subscription_method.py:43: [C0103(invalid-name), fix_subscription_method] Variable name "NotificationSubscription" doesn't conform to snake_case naming style
projects/migrations/0122_migrate_subscription_method.py:44: [R1702(too-many-nested-blocks), fix_subscription_method] Too many nested blocks (6/5)
projects/migrations/0122_migrate_subscription_method.py:18: [W0613(unused-argument), fix_subscription_method] Unused argument 'schema_editor'
projects/migrations/0122_migrate_subscription_method.py:62: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0122_migrate_subscription_method.py:62: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
projects/migrations/0122_migrate_subscription_method.py:7: [C0411(wrong-import-order), ] third party import "from django.conf import settings" should be placed before "from sol_notifications.utils import get_notificationevent_classes"
projects/migrations/0122_migrate_subscription_method.py:8: [C0411(wrong-import-order), ] third party import "from django.db import migrations" should be placed before "from sol_notifications.utils import get_notificationevent_classes"
projects/migrations/0122_migrate_subscription_method.py:9: [C0411(wrong-import-order), ] third party import "from django.db import models" should be placed before "from sol_notifications.utils import get_notificationevent_classes"
************* Module projects.migrations.0062_ordering_matrix_views
projects/migrations/0062_ordering_matrix_views.py:1: [C0103(invalid-name), ] Module name "0062_ordering_matrix_views" doesn't conform to snake_case naming style
projects/migrations/0062_ordering_matrix_views.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0062_ordering_matrix_views.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0062_ordering_matrix_views.py:7: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0062_ordering_matrix_views.py:7: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0100_merge_20180705_1007
projects/migrations/0100_merge_20180705_1007.py:1: [C0103(invalid-name), ] Module name "0100_merge_20180705_1007" doesn't conform to snake_case naming style
projects/migrations/0100_merge_20180705_1007.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0100_merge_20180705_1007.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0100_merge_20180705_1007.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0100_merge_20180705_1007.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0094_auto_20180531_0944
projects/migrations/0094_auto_20180531_0944.py:18: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0094_auto_20180531_0944.py:23: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0094_auto_20180531_0944.py:26: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0094_auto_20180531_0944.py:1: [C0103(invalid-name), ] Module name "0094_auto_20180531_0944" doesn't conform to snake_case naming style
projects/migrations/0094_auto_20180531_0944.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0094_auto_20180531_0944.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0094_auto_20180531_0944.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0094_auto_20180531_0944.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0096_auto_20180628_1513
projects/migrations/0096_auto_20180628_1513.py:19: [C0301(line-too-long), ] Line too long (211/100)
projects/migrations/0096_auto_20180628_1513.py:24: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0096_auto_20180628_1513.py:1: [C0103(invalid-name), ] Module name "0096_auto_20180628_1513" doesn't conform to snake_case naming style
projects/migrations/0096_auto_20180628_1513.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0096_auto_20180628_1513.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0096_auto_20180628_1513.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0096_auto_20180628_1513.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0096_auto_20180628_1513.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0083_auto_20180419_1805
projects/migrations/0083_auto_20180419_1805.py:23: [C0301(line-too-long), ] Line too long (235/100)
projects/migrations/0083_auto_20180419_1805.py:28: [C0301(line-too-long), ] Line too long (274/100)
projects/migrations/0083_auto_20180419_1805.py:1: [C0103(invalid-name), ] Module name "0083_auto_20180419_1805" doesn't conform to snake_case naming style
projects/migrations/0083_auto_20180419_1805.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0083_auto_20180419_1805.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0083_auto_20180419_1805.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0083_auto_20180419_1805.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0083_auto_20180419_1805.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0126_auto_20181106_1421
projects/migrations/0126_auto_20181106_1421.py:19: [C0301(line-too-long), ] Line too long (270/100)
projects/migrations/0126_auto_20181106_1421.py:1: [C0103(invalid-name), ] Module name "0126_auto_20181106_1421" doesn't conform to snake_case naming style
projects/migrations/0126_auto_20181106_1421.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0126_auto_20181106_1421.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
projects/migrations/0126_auto_20181106_1421.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0126_auto_20181106_1421.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0126_auto_20181106_1421.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0128_merge_20181113_1645
projects/migrations/0128_merge_20181113_1645.py:1: [C0103(invalid-name), ] Module name "0128_merge_20181113_1645" doesn't conform to snake_case naming style
projects/migrations/0128_merge_20181113_1645.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0128_merge_20181113_1645.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0128_merge_20181113_1645.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0128_merge_20181113_1645.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0147_auto_20190502_1434
projects/migrations/0147_auto_20190502_1434.py:18: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0147_auto_20190502_1434.py:23: [C0301(line-too-long), ] Line too long (167/100)
projects/migrations/0147_auto_20190502_1434.py:28: [C0301(line-too-long), ] Line too long (268/100)
projects/migrations/0147_auto_20190502_1434.py:1: [C0103(invalid-name), ] Module name "0147_auto_20190502_1434" doesn't conform to snake_case naming style
projects/migrations/0147_auto_20190502_1434.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0147_auto_20190502_1434.py:3: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0147_auto_20190502_1434.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0147_auto_20190502_1434.py:5: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0147_auto_20190502_1434.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0147_auto_20190502_1434.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
projects/migrations/0147_auto_20190502_1434.py:3: [W0611(unused-import), ] Unused settings imported from django.conf
************* Module projects.migrations.0010_auto_20160929_0942
projects/migrations/0010_auto_20160929_0942.py:30: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0010_auto_20160929_0942.py:36: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0010_auto_20160929_0942.py:1: [C0103(invalid-name), ] Module name "0010_auto_20160929_0942" doesn't conform to snake_case naming style
projects/migrations/0010_auto_20160929_0942.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0010_auto_20160929_0942.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0010_auto_20160929_0942.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0010_auto_20160929_0942.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0010_auto_20160929_0942.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0028_auto_20161214_1446
projects/migrations/0028_auto_20161214_1446.py:43: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0028_auto_20161214_1446.py:1: [C0103(invalid-name), ] Module name "0028_auto_20161214_1446" doesn't conform to snake_case naming style
projects/migrations/0028_auto_20161214_1446.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0028_auto_20161214_1446.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0028_auto_20161214_1446.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0028_auto_20161214_1446.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0028_auto_20161214_1446.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0057_merge_20170324_0926
projects/migrations/0057_merge_20170324_0926.py:1: [C0103(invalid-name), ] Module name "0057_merge_20170324_0926" doesn't conform to snake_case naming style
projects/migrations/0057_merge_20170324_0926.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0057_merge_20170324_0926.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0057_merge_20170324_0926.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0057_merge_20170324_0926.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0050_auto_20170303_1036
projects/migrations/0050_auto_20170303_1036.py:19: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:31: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:33: [C0301(line-too-long), ] Line too long (166/100)
projects/migrations/0050_auto_20170303_1036.py:44: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:57: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:59: [C0301(line-too-long), ] Line too long (166/100)
projects/migrations/0050_auto_20170303_1036.py:70: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:72: [C0301(line-too-long), ] Line too long (169/100)
projects/migrations/0050_auto_20170303_1036.py:83: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:85: [C0301(line-too-long), ] Line too long (173/100)
projects/migrations/0050_auto_20170303_1036.py:96: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0050_auto_20170303_1036.py:97: [C0301(line-too-long), ] Line too long (104/100)
projects/migrations/0050_auto_20170303_1036.py:99: [C0301(line-too-long), ] Line too long (164/100)
projects/migrations/0050_auto_20170303_1036.py:100: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0050_auto_20170303_1036.py:101: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0050_auto_20170303_1036.py:102: [C0301(line-too-long), ] Line too long (170/100)
projects/migrations/0050_auto_20170303_1036.py:103: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0050_auto_20170303_1036.py:104: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0050_auto_20170303_1036.py:115: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0050_auto_20170303_1036.py:1: [C0103(invalid-name), ] Module name "0050_auto_20170303_1036" doesn't conform to snake_case naming style
projects/migrations/0050_auto_20170303_1036.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0050_auto_20170303_1036.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0050_auto_20170303_1036.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0050_auto_20170303_1036.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0050_auto_20170303_1036.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0077_job_project_year
projects/migrations/0077_job_project_year.py:19: [C0301(line-too-long), ] Line too long (313/100)
projects/migrations/0077_job_project_year.py:1: [C0103(invalid-name), ] Module name "0077_job_project_year" doesn't conform to snake_case naming style
projects/migrations/0077_job_project_year.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0077_job_project_year.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
projects/migrations/0077_job_project_year.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0077_job_project_year.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0077_job_project_year.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0111_auto_20180829_1215
projects/migrations/0111_auto_20180829_1215.py:17: [C0301(line-too-long), ] Line too long (144/100)
projects/migrations/0111_auto_20180829_1215.py:22: [C0301(line-too-long), ] Line too long (102/100)
projects/migrations/0111_auto_20180829_1215.py:28: [C0301(line-too-long), ] Line too long (110/100)
projects/migrations/0111_auto_20180829_1215.py:1: [C0103(invalid-name), ] Module name "0111_auto_20180829_1215" doesn't conform to snake_case naming style
projects/migrations/0111_auto_20180829_1215.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0111_auto_20180829_1215.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0111_auto_20180829_1215.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0111_auto_20180829_1215.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0070_auto_20170516_1704
projects/migrations/0070_auto_20170516_1704.py:17: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0070_auto_20170516_1704.py:1: [C0103(invalid-name), ] Module name "0070_auto_20170516_1704" doesn't conform to snake_case naming style
projects/migrations/0070_auto_20170516_1704.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0070_auto_20170516_1704.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0070_auto_20170516_1704.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0070_auto_20170516_1704.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0018_auto_20161026_1227
projects/migrations/0018_auto_20161026_1227.py:1: [C0103(invalid-name), ] Module name "0018_auto_20161026_1227" doesn't conform to snake_case naming style
projects/migrations/0018_auto_20161026_1227.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0018_auto_20161026_1227.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0018_auto_20161026_1227.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0018_auto_20161026_1227.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0049_auto_20170301_1531
projects/migrations/0049_auto_20170301_1531.py:1: [C0103(invalid-name), ] Module name "0049_auto_20170301_1531" doesn't conform to snake_case naming style
projects/migrations/0049_auto_20170301_1531.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0049_auto_20170301_1531.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0049_auto_20170301_1531.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0049_auto_20170301_1531.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0139_auto_20190312_1601
projects/migrations/0139_auto_20190312_1601.py:1: [C0103(invalid-name), ] Module name "0139_auto_20190312_1601" doesn't conform to snake_case naming style
projects/migrations/0139_auto_20190312_1601.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0139_auto_20190312_1601.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0139_auto_20190312_1601.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0139_auto_20190312_1601.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0129_merge_20181116_1032
projects/migrations/0129_merge_20181116_1032.py:1: [C0103(invalid-name), ] Module name "0129_merge_20181116_1032" doesn't conform to snake_case naming style
projects/migrations/0129_merge_20181116_1032.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0129_merge_20181116_1032.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0129_merge_20181116_1032.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0129_merge_20181116_1032.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0032_auto_20161216_1432
projects/migrations/0032_auto_20161216_1432.py:19: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0032_auto_20161216_1432.py:1: [C0103(invalid-name), ] Module name "0032_auto_20161216_1432" doesn't conform to snake_case naming style
projects/migrations/0032_auto_20161216_1432.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0032_auto_20161216_1432.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0032_auto_20161216_1432.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0032_auto_20161216_1432.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0032_auto_20161216_1432.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0136_merge_20181227_1014
projects/migrations/0136_merge_20181227_1014.py:1: [C0103(invalid-name), ] Module name "0136_merge_20181227_1014" doesn't conform to snake_case naming style
projects/migrations/0136_merge_20181227_1014.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0136_merge_20181227_1014.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0136_merge_20181227_1014.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0136_merge_20181227_1014.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0041_notificationevent_type
projects/migrations/0041_notificationevent_type.py:1: [C0103(invalid-name), ] Module name "0041_notificationevent_type" doesn't conform to snake_case naming style
projects/migrations/0041_notificationevent_type.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0041_notificationevent_type.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0041_notificationevent_type.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0041_notificationevent_type.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0083_orangebqatask
projects/migrations/0083_orangebqatask.py:13: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0083_orangebqatask.py:25: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0083_orangebqatask.py:1: [C0103(invalid-name), ] Module name "0083_orangebqatask" doesn't conform to snake_case naming style
projects/migrations/0083_orangebqatask.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0083_orangebqatask.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0083_orangebqatask.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0083_orangebqatask.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0119_remove_notificationevent_description
projects/migrations/0119_remove_notificationevent_description.py:1: [C0103(invalid-name), ] Module name "0119_remove_notificationevent_description" doesn't conform to snake_case naming style
projects/migrations/0119_remove_notificationevent_description.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0119_remove_notificationevent_description.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0119_remove_notificationevent_description.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0119_remove_notificationevent_description.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0019_auto_20161103_1128
projects/migrations/0019_auto_20161103_1128.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0019_auto_20161103_1128.py:22: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0019_auto_20161103_1128.py:23: [C0301(line-too-long), ] Line too long (165/100)
projects/migrations/0019_auto_20161103_1128.py:39: [C0301(line-too-long), ] Line too long (152/100)
projects/migrations/0019_auto_20161103_1128.py:1: [C0103(invalid-name), ] Module name "0019_auto_20161103_1128" doesn't conform to snake_case naming style
projects/migrations/0019_auto_20161103_1128.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0019_auto_20161103_1128.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0019_auto_20161103_1128.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0019_auto_20161103_1128.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0019_auto_20161103_1128.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0019_auto_20161103_1128.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0106_auto_20180718_1830
projects/migrations/0106_auto_20180718_1830.py:18: [C0301(line-too-long), ] Line too long (543/100)
projects/migrations/0106_auto_20180718_1830.py:23: [C0301(line-too-long), ] Line too long (350/100)
projects/migrations/0106_auto_20180718_1830.py:1: [C0103(invalid-name), ] Module name "0106_auto_20180718_1830" doesn't conform to snake_case naming style
projects/migrations/0106_auto_20180718_1830.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0106_auto_20180718_1830.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0106_auto_20180718_1830.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0106_auto_20180718_1830.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0080_ganttstasktypes_mandatory
projects/migrations/0080_ganttstasktypes_mandatory.py:18: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0080_ganttstasktypes_mandatory.py:1: [C0103(invalid-name), ] Module name "0080_ganttstasktypes_mandatory" doesn't conform to snake_case naming style
projects/migrations/0080_ganttstasktypes_mandatory.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0080_ganttstasktypes_mandatory.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0080_ganttstasktypes_mandatory.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0080_ganttstasktypes_mandatory.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0065_field_help_text
projects/migrations/0065_field_help_text.py:1: [C0103(invalid-name), ] Module name "0065_field_help_text" doesn't conform to snake_case naming style
projects/migrations/0065_field_help_text.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0065_field_help_text.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0065_field_help_text.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0065_field_help_text.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0111_auto_20180831_1743
projects/migrations/0111_auto_20180831_1743.py:19: [C0301(line-too-long), ] Line too long (221/100)
projects/migrations/0111_auto_20180831_1743.py:24: [C0301(line-too-long), ] Line too long (223/100)
projects/migrations/0111_auto_20180831_1743.py:29: [C0301(line-too-long), ] Line too long (223/100)
projects/migrations/0111_auto_20180831_1743.py:1: [C0103(invalid-name), ] Module name "0111_auto_20180831_1743" doesn't conform to snake_case naming style
projects/migrations/0111_auto_20180831_1743.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0111_auto_20180831_1743.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0111_auto_20180831_1743.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0111_auto_20180831_1743.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0111_auto_20180831_1743.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0014_auto_20161011_1524
projects/migrations/0014_auto_20161011_1524.py:1: [C0103(invalid-name), ] Module name "0014_auto_20161011_1524" doesn't conform to snake_case naming style
projects/migrations/0014_auto_20161011_1524.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0014_auto_20161011_1524.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0014_auto_20161011_1524.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0014_auto_20161011_1524.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0127_merge_20181030_1540
projects/migrations/0127_merge_20181030_1540.py:1: [C0103(invalid-name), ] Module name "0127_merge_20181030_1540" doesn't conform to snake_case naming style
projects/migrations/0127_merge_20181030_1540.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0127_merge_20181030_1540.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0127_merge_20181030_1540.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0127_merge_20181030_1540.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0131_merge_20181214_1619
projects/migrations/0131_merge_20181214_1619.py:1: [C0103(invalid-name), ] Module name "0131_merge_20181214_1619" doesn't conform to snake_case naming style
projects/migrations/0131_merge_20181214_1619.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0131_merge_20181214_1619.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0131_merge_20181214_1619.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0131_merge_20181214_1619.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0151_merge_20190516_1822
projects/migrations/0151_merge_20190516_1822.py:1: [C0103(invalid-name), ] Module name "0151_merge_20190516_1822" doesn't conform to snake_case naming style
projects/migrations/0151_merge_20190516_1822.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0151_merge_20190516_1822.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0151_merge_20190516_1822.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0151_merge_20190516_1822.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0126_documentfield
projects/migrations/0126_documentfield.py:20: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0126_documentfield.py:22: [C0301(line-too-long), ] Line too long (180/100)
projects/migrations/0126_documentfield.py:23: [C0301(line-too-long), ] Line too long (201/100)
projects/migrations/0126_documentfield.py:1: [C0103(invalid-name), ] Module name "0126_documentfield" doesn't conform to snake_case naming style
projects/migrations/0126_documentfield.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0126_documentfield.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0126_documentfield.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0126_documentfield.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0126_documentfield.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0128_merge_20181106_1522
projects/migrations/0128_merge_20181106_1522.py:1: [C0103(invalid-name), ] Module name "0128_merge_20181106_1522" doesn't conform to snake_case naming style
projects/migrations/0128_merge_20181106_1522.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0128_merge_20181106_1522.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0128_merge_20181106_1522.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0128_merge_20181106_1522.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0126_auto_20181023_0923
projects/migrations/0126_auto_20181023_0923.py:20: [C0301(line-too-long), ] Line too long (209/100)
projects/migrations/0126_auto_20181023_0923.py:25: [C0301(line-too-long), ] Line too long (210/100)
projects/migrations/0126_auto_20181023_0923.py:1: [C0103(invalid-name), ] Module name "0126_auto_20181023_0923" doesn't conform to snake_case naming style
projects/migrations/0126_auto_20181023_0923.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0126_auto_20181023_0923.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0126_auto_20181023_0923.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0126_auto_20181023_0923.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0126_auto_20181023_0923.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0149_merge_20190502_1844
projects/migrations/0149_merge_20190502_1844.py:1: [C0103(invalid-name), ] Module name "0149_merge_20190502_1844" doesn't conform to snake_case naming style
projects/migrations/0149_merge_20190502_1844.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0149_merge_20190502_1844.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0149_merge_20190502_1844.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0149_merge_20190502_1844.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0008_auto_20160927_0743
projects/migrations/0008_auto_20160927_0743.py:18: [C0301(line-too-long), ] Line too long (596/100)
projects/migrations/0008_auto_20160927_0743.py:1: [C0103(invalid-name), ] Module name "0008_auto_20160927_0743" doesn't conform to snake_case naming style
projects/migrations/0008_auto_20160927_0743.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0008_auto_20160927_0743.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0008_auto_20160927_0743.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0008_auto_20160927_0743.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0123_merge_20181012_1630
projects/migrations/0123_merge_20181012_1630.py:1: [C0103(invalid-name), ] Module name "0123_merge_20181012_1630" doesn't conform to snake_case naming style
projects/migrations/0123_merge_20181012_1630.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0123_merge_20181012_1630.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0123_merge_20181012_1630.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0123_merge_20181012_1630.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0132_auto_20181219_1141
projects/migrations/0132_auto_20181219_1141.py:21: [C0301(line-too-long), ] Line too long (124/100)
projects/migrations/0132_auto_20181219_1141.py:23: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0132_auto_20181219_1141.py:25: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0132_auto_20181219_1141.py:1: [C0103(invalid-name), ] Module name "0132_auto_20181219_1141" doesn't conform to snake_case naming style
projects/migrations/0132_auto_20181219_1141.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0132_auto_20181219_1141.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0132_auto_20181219_1141.py:6: [E0401(import-error), ] Unable to import 'django.db.migrations'
projects/migrations/0132_auto_20181219_1141.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0132_auto_20181219_1141.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0017_auto_20161013_1742
projects/migrations/0017_auto_20161013_1742.py:1: [C0103(invalid-name), ] Module name "0017_auto_20161013_1742" doesn't conform to snake_case naming style
projects/migrations/0017_auto_20161013_1742.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0017_auto_20161013_1742.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0017_auto_20161013_1742.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0017_auto_20161013_1742.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0134_merge_20181207_2216
projects/migrations/0134_merge_20181207_2216.py:1: [C0103(invalid-name), ] Module name "0134_merge_20181207_2216" doesn't conform to snake_case naming style
projects/migrations/0134_merge_20181207_2216.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0134_merge_20181207_2216.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0134_merge_20181207_2216.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0134_merge_20181207_2216.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0002_auto_20160905_1415
projects/migrations/0002_auto_20160905_1415.py:25: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0002_auto_20160905_1415.py:30: [C0301(line-too-long), ] Line too long (217/100)
projects/migrations/0002_auto_20160905_1415.py:35: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0002_auto_20160905_1415.py:40: [C0301(line-too-long), ] Line too long (196/100)
projects/migrations/0002_auto_20160905_1415.py:45: [C0301(line-too-long), ] Line too long (218/100)
projects/migrations/0002_auto_20160905_1415.py:50: [C0301(line-too-long), ] Line too long (131/100)
projects/migrations/0002_auto_20160905_1415.py:55: [C0301(line-too-long), ] Line too long (206/100)
projects/migrations/0002_auto_20160905_1415.py:60: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0002_auto_20160905_1415.py:65: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0002_auto_20160905_1415.py:70: [C0301(line-too-long), ] Line too long (156/100)
projects/migrations/0002_auto_20160905_1415.py:75: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0002_auto_20160905_1415.py:80: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0002_auto_20160905_1415.py:85: [C0301(line-too-long), ] Line too long (192/100)
projects/migrations/0002_auto_20160905_1415.py:90: [C0301(line-too-long), ] Line too long (129/100)
projects/migrations/0002_auto_20160905_1415.py:95: [C0301(line-too-long), ] Line too long (128/100)
projects/migrations/0002_auto_20160905_1415.py:100: [C0301(line-too-long), ] Line too long (107/100)
projects/migrations/0002_auto_20160905_1415.py:105: [C0301(line-too-long), ] Line too long (193/100)
projects/migrations/0002_auto_20160905_1415.py:110: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0002_auto_20160905_1415.py:120: [C0301(line-too-long), ] Line too long (128/100)
projects/migrations/0002_auto_20160905_1415.py:125: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0002_auto_20160905_1415.py:130: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0002_auto_20160905_1415.py:135: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0002_auto_20160905_1415.py:140: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0002_auto_20160905_1415.py:145: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0002_auto_20160905_1415.py:150: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0002_auto_20160905_1415.py:155: [C0301(line-too-long), ] Line too long (204/100)
projects/migrations/0002_auto_20160905_1415.py:160: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0002_auto_20160905_1415.py:165: [C0301(line-too-long), ] Line too long (205/100)
projects/migrations/0002_auto_20160905_1415.py:170: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0002_auto_20160905_1415.py:175: [C0301(line-too-long), ] Line too long (200/100)
projects/migrations/0002_auto_20160905_1415.py:180: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0002_auto_20160905_1415.py:185: [C0301(line-too-long), ] Line too long (201/100)
projects/migrations/0002_auto_20160905_1415.py:190: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0002_auto_20160905_1415.py:195: [C0301(line-too-long), ] Line too long (203/100)
projects/migrations/0002_auto_20160905_1415.py:200: [C0301(line-too-long), ] Line too long (149/100)
projects/migrations/0002_auto_20160905_1415.py:205: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0002_auto_20160905_1415.py:210: [C0301(line-too-long), ] Line too long (204/100)
projects/migrations/0002_auto_20160905_1415.py:215: [C0301(line-too-long), ] Line too long (199/100)
projects/migrations/0002_auto_20160905_1415.py:220: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0002_auto_20160905_1415.py:225: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0002_auto_20160905_1415.py:230: [C0301(line-too-long), ] Line too long (200/100)
projects/migrations/0002_auto_20160905_1415.py:235: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0002_auto_20160905_1415.py:240: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0002_auto_20160905_1415.py:1: [C0103(invalid-name), ] Module name "0002_auto_20160905_1415" doesn't conform to snake_case naming style
projects/migrations/0002_auto_20160905_1415.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0002_auto_20160905_1415.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0002_auto_20160905_1415.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0002_auto_20160905_1415.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0002_auto_20160905_1415.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0002_auto_20160905_1415.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0030_auto_20161215_1426
projects/migrations/0030_auto_20161215_1426.py:19: [C0301(line-too-long), ] Line too long (127/100)
projects/migrations/0030_auto_20161215_1426.py:1: [C0103(invalid-name), ] Module name "0030_auto_20161215_1426" doesn't conform to snake_case naming style
projects/migrations/0030_auto_20161215_1426.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0030_auto_20161215_1426.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0030_auto_20161215_1426.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0030_auto_20161215_1426.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0030_auto_20161215_1426.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0108_merge_20180724_1416
projects/migrations/0108_merge_20180724_1416.py:1: [C0103(invalid-name), ] Module name "0108_merge_20180724_1416" doesn't conform to snake_case naming style
projects/migrations/0108_merge_20180724_1416.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0108_merge_20180724_1416.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0108_merge_20180724_1416.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0108_merge_20180724_1416.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0088_orderingdelegation
projects/migrations/0088_orderingdelegation.py:23: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0088_orderingdelegation.py:24: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0088_orderingdelegation.py:25: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0088_orderingdelegation.py:26: [C0301(line-too-long), ] Line too long (126/100)
projects/migrations/0088_orderingdelegation.py:27: [C0301(line-too-long), ] Line too long (161/100)
projects/migrations/0088_orderingdelegation.py:28: [C0301(line-too-long), ] Line too long (244/100)
projects/migrations/0088_orderingdelegation.py:29: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0088_orderingdelegation.py:30: [C0301(line-too-long), ] Line too long (175/100)
projects/migrations/0088_orderingdelegation.py:31: [C0301(line-too-long), ] Line too long (256/100)
projects/migrations/0088_orderingdelegation.py:32: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0088_orderingdelegation.py:33: [C0301(line-too-long), ] Line too long (178/100)
projects/migrations/0088_orderingdelegation.py:41: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0088_orderingdelegation.py:42: [C0301(line-too-long), ] Line too long (221/100)
projects/migrations/0088_orderingdelegation.py:1: [C0103(invalid-name), ] Module name "0088_orderingdelegation" doesn't conform to snake_case naming style
projects/migrations/0088_orderingdelegation.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0088_orderingdelegation.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0088_orderingdelegation.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0088_orderingdelegation.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0088_orderingdelegation.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0088_orderingdelegation.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0112_notificationevent_context
projects/migrations/0112_notificationevent_context.py:19: [C0301(line-too-long), ] Line too long (199/100)
projects/migrations/0112_notificationevent_context.py:1: [C0103(invalid-name), ] Module name "0112_notificationevent_context" doesn't conform to snake_case naming style
projects/migrations/0112_notificationevent_context.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0112_notificationevent_context.py:5: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
projects/migrations/0112_notificationevent_context.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0112_notificationevent_context.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0112_notificationevent_context.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0091_merge_20180524_0846
projects/migrations/0091_merge_20180524_0846.py:1: [C0103(invalid-name), ] Module name "0091_merge_20180524_0846" doesn't conform to snake_case naming style
projects/migrations/0091_merge_20180524_0846.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0091_merge_20180524_0846.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0091_merge_20180524_0846.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0091_merge_20180524_0846.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0129_auto_20181212_1144
projects/migrations/0129_auto_20181212_1144.py:23: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0129_auto_20181212_1144.py:1: [C0103(invalid-name), ] Module name "0129_auto_20181212_1144" doesn't conform to snake_case naming style
projects/migrations/0129_auto_20181212_1144.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0129_auto_20181212_1144.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0129_auto_20181212_1144.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0129_auto_20181212_1144.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0129_auto_20181212_1144.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0060_merge_20170327_1451
projects/migrations/0060_merge_20170327_1451.py:1: [C0103(invalid-name), ] Module name "0060_merge_20170327_1451" doesn't conform to snake_case naming style
projects/migrations/0060_merge_20170327_1451.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0060_merge_20170327_1451.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0060_merge_20170327_1451.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0060_merge_20170327_1451.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0133_merge_20181207_2210
projects/migrations/0133_merge_20181207_2210.py:1: [C0103(invalid-name), ] Module name "0133_merge_20181207_2210" doesn't conform to snake_case naming style
projects/migrations/0133_merge_20181207_2210.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0133_merge_20181207_2210.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0133_merge_20181207_2210.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0133_merge_20181207_2210.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0127_linked_jobs_add_base_sol_fields
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:26: [C0301(line-too-long), ] Line too long (219/100)
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:31: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:36: [C0301(line-too-long), ] Line too long (230/100)
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:1: [C0103(invalid-name), ] Module name "0127_linked_jobs_add_base_sol_fields" doesn't conform to snake_case naming style
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0127_linked_jobs_add_base_sol_fields.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0099_merge_20180625_1718
projects/migrations/0099_merge_20180625_1718.py:1: [C0103(invalid-name), ] Module name "0099_merge_20180625_1718" doesn't conform to snake_case naming style
projects/migrations/0099_merge_20180625_1718.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0099_merge_20180625_1718.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0099_merge_20180625_1718.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0099_merge_20180625_1718.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0078_auto_20180327_1553
projects/migrations/0078_auto_20180327_1553.py:31: [C0326(bad-whitespace), ] Exactly one space required after comma
            """,reverse_sql=migrations.RunSQL.noop),
               ^
projects/migrations/0078_auto_20180327_1553.py:1: [C0103(invalid-name), ] Module name "0078_auto_20180327_1553" doesn't conform to snake_case naming style
projects/migrations/0078_auto_20180327_1553.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0078_auto_20180327_1553.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0078_auto_20180327_1553.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0078_auto_20180327_1553.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0129_auto_20181207_0922
projects/migrations/0129_auto_20181207_0922.py:19: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0129_auto_20181207_0922.py:1: [C0103(invalid-name), ] Module name "0129_auto_20181207_0922" doesn't conform to snake_case naming style
projects/migrations/0129_auto_20181207_0922.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0129_auto_20181207_0922.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0129_auto_20181207_0922.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0129_auto_20181207_0922.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0129_auto_20181207_0922.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0019_auto_20161028_1601
projects/migrations/0019_auto_20161028_1601.py:18: [C0301(line-too-long), ] Line too long (576/100)
projects/migrations/0019_auto_20161028_1601.py:20: [C0301(line-too-long), ] Line too long (105/100)
projects/migrations/0019_auto_20161028_1601.py:1: [C0103(invalid-name), ] Module name "0019_auto_20161028_1601" doesn't conform to snake_case naming style
projects/migrations/0019_auto_20161028_1601.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0019_auto_20161028_1601.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0019_auto_20161028_1601.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0019_auto_20161028_1601.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0130_merge_20181207_1841
projects/migrations/0130_merge_20181207_1841.py:1: [C0103(invalid-name), ] Module name "0130_merge_20181207_1841" doesn't conform to snake_case naming style
projects/migrations/0130_merge_20181207_1841.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0130_merge_20181207_1841.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0130_merge_20181207_1841.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0130_merge_20181207_1841.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0102_auto_20180704_1713
projects/migrations/0102_auto_20180704_1713.py:13: [C0330(bad-continuation), ] Wrong hanging indentation.
     }, {
    |^  |
projects/migrations/0102_auto_20180704_1713.py:14: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
        'name': 'mandatory-close-real-date-start',
        ^|
projects/migrations/0102_auto_20180704_1713.py:15: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
        'label': 'Mandatory close for real date start',
        ^|
projects/migrations/0102_auto_20180704_1713.py:17: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
        'name': 'moves-planned',
        ^|
projects/migrations/0102_auto_20180704_1713.py:18: [C0330(bad-continuation), ] Wrong hanging indentation (add 1 space).
        'label': 'Moves Planned',
        ^|
projects/migrations/0102_auto_20180704_1713.py:19: [C0330(bad-continuation), ] Wrong hanging indentation.
    }, {
    ^|   |
projects/migrations/0102_auto_20180704_1713.py:1: [C0103(invalid-name), ] Module name "0102_auto_20180704_1713" doesn't conform to snake_case naming style
projects/migrations/0102_auto_20180704_1713.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0102_auto_20180704_1713.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0102_auto_20180704_1713.py:29: [C0111(missing-docstring), insert_data] Missing function docstring
projects/migrations/0102_auto_20180704_1713.py:30: [C0103(invalid-name), insert_data] Variable name "TaskLinkProperty" doesn't conform to snake_case naming style
projects/migrations/0102_auto_20180704_1713.py:29: [W0613(unused-argument), insert_data] Unused argument 'schema_editor'
projects/migrations/0102_auto_20180704_1713.py:35: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0102_auto_20180704_1713.py:35: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0150_merge_20190516_1141
projects/migrations/0150_merge_20190516_1141.py:1: [C0103(invalid-name), ] Module name "0150_merge_20190516_1141" doesn't conform to snake_case naming style
projects/migrations/0150_merge_20190516_1141.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0150_merge_20190516_1141.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0150_merge_20190516_1141.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0150_merge_20190516_1141.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0122_merge_20181001_1859
projects/migrations/0122_merge_20181001_1859.py:1: [C0103(invalid-name), ] Module name "0122_merge_20181001_1859" doesn't conform to snake_case naming style
projects/migrations/0122_merge_20181001_1859.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0122_merge_20181001_1859.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0122_merge_20181001_1859.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0122_merge_20181001_1859.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0098_auto_20180626_0910
projects/migrations/0098_auto_20180626_0910.py:20: [C0301(line-too-long), ] Line too long (206/100)
projects/migrations/0098_auto_20180626_0910.py:25: [C0301(line-too-long), ] Line too long (204/100)
projects/migrations/0098_auto_20180626_0910.py:30: [C0301(line-too-long), ] Line too long (211/100)
projects/migrations/0098_auto_20180626_0910.py:1: [C0103(invalid-name), ] Module name "0098_auto_20180626_0910" doesn't conform to snake_case naming style
projects/migrations/0098_auto_20180626_0910.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0098_auto_20180626_0910.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0098_auto_20180626_0910.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0098_auto_20180626_0910.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0098_auto_20180626_0910.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0147_auto_20190419_1708
projects/migrations/0147_auto_20190419_1708.py:1: [C0103(invalid-name), ] Module name "0147_auto_20190419_1708" doesn't conform to snake_case naming style
projects/migrations/0147_auto_20190419_1708.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0147_auto_20190419_1708.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0147_auto_20190419_1708.py:14: [C0111(missing-docstring), insert_data] Missing function docstring
projects/migrations/0147_auto_20190419_1708.py:15: [C0103(invalid-name), insert_data] Variable name "TaskLinkProperty" doesn't conform to snake_case naming style
projects/migrations/0147_auto_20190419_1708.py:14: [W0613(unused-argument), insert_data] Unused argument 'schema_editor'
projects/migrations/0147_auto_20190419_1708.py:20: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0147_auto_20190419_1708.py:20: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0128_auto_20181212_1049
projects/migrations/0128_auto_20181212_1049.py:24: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0128_auto_20181212_1049.py:25: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0128_auto_20181212_1049.py:26: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0128_auto_20181212_1049.py:27: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0128_auto_20181212_1049.py:30: [C0301(line-too-long), ] Line too long (187/100)
projects/migrations/0128_auto_20181212_1049.py:31: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0128_auto_20181212_1049.py:32: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0128_auto_20181212_1049.py:34: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0128_auto_20181212_1049.py:35: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0128_auto_20181212_1049.py:36: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0128_auto_20181212_1049.py:37: [C0301(line-too-long), ] Line too long (242/100)
projects/migrations/0128_auto_20181212_1049.py:38: [C0301(line-too-long), ] Line too long (200/100)
projects/migrations/0128_auto_20181212_1049.py:88: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0128_auto_20181212_1049.py:93: [C0301(line-too-long), ] Line too long (882/100)
projects/migrations/0128_auto_20181212_1049.py:98: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0128_auto_20181212_1049.py:103: [C0301(line-too-long), ] Line too long (239/100)
projects/migrations/0128_auto_20181212_1049.py:1: [C0103(invalid-name), ] Module name "0128_auto_20181212_1049" doesn't conform to snake_case naming style
projects/migrations/0128_auto_20181212_1049.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0128_auto_20181212_1049.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0128_auto_20181212_1049.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0128_auto_20181212_1049.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0128_auto_20181212_1049.py:13: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0128_auto_20181212_1049.py:13: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0003_auto_20160908_1456
projects/migrations/0003_auto_20160908_1456.py:1: [C0103(invalid-name), ] Module name "0003_auto_20160908_1456" doesn't conform to snake_case naming style
projects/migrations/0003_auto_20160908_1456.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0003_auto_20160908_1456.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0003_auto_20160908_1456.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0003_auto_20160908_1456.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0127_merge_20181206_1204
projects/migrations/0127_merge_20181206_1204.py:1: [C0103(invalid-name), ] Module name "0127_merge_20181206_1204" doesn't conform to snake_case naming style
projects/migrations/0127_merge_20181206_1204.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0127_merge_20181206_1204.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0127_merge_20181206_1204.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0127_merge_20181206_1204.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0117_notificationevent_description_to_notificationeventsusers_content
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:1: [C0103(invalid-name), ] Module name "0117_notificationevent_description_to_notificationeventsusers_content" doesn't conform to snake_case naming style
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:8: [C0111(missing-docstring), copy_description_to_content] Missing function docstring
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:9: [C0103(invalid-name), copy_description_to_content] Variable name "NotificationEvent" doesn't conform to snake_case naming style
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:10: [C0103(invalid-name), copy_description_to_content] Variable name "NotificationEventsUsers" doesn't conform to snake_case naming style
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:15: [W0702(bare-except), copy_description_to_content] No exception type(s) specified
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:13: [W0212(protected-access), copy_description_to_content] Access to a protected member _meta of a client class
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:14: [W0212(protected-access), copy_description_to_content] Access to a protected member _meta of a client class
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:8: [W0613(unused-argument), copy_description_to_content] Unused argument 'schema_editor'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:13: [W0612(unused-variable), copy_description_to_content] Unused variable 'description_field'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:14: [W0612(unused-variable), copy_description_to_content] Unused variable 'content_field'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:22: [C0111(missing-docstring), reverse_copy_description_to_content] Missing function docstring
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:23: [C0103(invalid-name), reverse_copy_description_to_content] Variable name "NotificationEvent" doesn't conform to snake_case naming style
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:24: [C0103(invalid-name), reverse_copy_description_to_content] Variable name "NotificationEventsUsers" doesn't conform to snake_case naming style
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:29: [W0702(bare-except), reverse_copy_description_to_content] No exception type(s) specified
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:27: [W0212(protected-access), reverse_copy_description_to_content] Access to a protected member _meta of a client class
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:28: [W0212(protected-access), reverse_copy_description_to_content] Access to a protected member _meta of a client class
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:22: [W0613(unused-argument), reverse_copy_description_to_content] Unused argument 'schema_editor'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:27: [W0612(unused-variable), reverse_copy_description_to_content] Unused variable 'description_field'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:28: [W0612(unused-variable), reverse_copy_description_to_content] Unused variable 'content_field'
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:36: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:36: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
projects/migrations/0117_notificationevent_description_to_notificationeventsusers_content.py:5: [W0611(unused-import), ] Unused models imported from django.db
************* Module projects.migrations.0042_auto_20170116_1711
projects/migrations/0042_auto_20170116_1711.py:1: [C0103(invalid-name), ] Module name "0042_auto_20170116_1711" doesn't conform to snake_case naming style
projects/migrations/0042_auto_20170116_1711.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0042_auto_20170116_1711.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0042_auto_20170116_1711.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0042_auto_20170116_1711.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0134_auto_20181227_1023
projects/migrations/0134_auto_20181227_1023.py:18: [C0301(line-too-long), ] Line too long (916/100)
projects/migrations/0134_auto_20181227_1023.py:1: [C0103(invalid-name), ] Module name "0134_auto_20181227_1023" doesn't conform to snake_case naming style
projects/migrations/0134_auto_20181227_1023.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0134_auto_20181227_1023.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0134_auto_20181227_1023.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0134_auto_20181227_1023.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0126_auto_20181113_0942
projects/migrations/0126_auto_20181113_0942.py:19: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0126_auto_20181113_0942.py:1: [C0103(invalid-name), ] Module name "0126_auto_20181113_0942" doesn't conform to snake_case naming style
projects/migrations/0126_auto_20181113_0942.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0126_auto_20181113_0942.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0126_auto_20181113_0942.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0126_auto_20181113_0942.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0126_auto_20181113_0942.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0039_auto_20170111_1619
projects/migrations/0039_auto_20170111_1619.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0039_auto_20170111_1619.py:35: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0039_auto_20170111_1619.py:38: [C0301(line-too-long), ] Line too long (182/100)
projects/migrations/0039_auto_20170111_1619.py:39: [C0301(line-too-long), ] Line too long (200/100)
projects/migrations/0039_auto_20170111_1619.py:51: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0039_auto_20170111_1619.py:54: [C0301(line-too-long), ] Line too long (198/100)
projects/migrations/0039_auto_20170111_1619.py:66: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0039_auto_20170111_1619.py:1: [C0103(invalid-name), ] Module name "0039_auto_20170111_1619" doesn't conform to snake_case naming style
projects/migrations/0039_auto_20170111_1619.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0039_auto_20170111_1619.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0039_auto_20170111_1619.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0039_auto_20170111_1619.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0039_auto_20170111_1619.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0039_auto_20170111_1619.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0125_auto_20181127_1009
projects/migrations/0125_auto_20181127_1009.py:18: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0125_auto_20181127_1009.py:1: [C0103(invalid-name), ] Module name "0125_auto_20181127_1009" doesn't conform to snake_case naming style
projects/migrations/0125_auto_20181127_1009.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0125_auto_20181127_1009.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0125_auto_20181127_1009.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0125_auto_20181127_1009.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0106_auto_20180717_1542
projects/migrations/0106_auto_20180717_1542.py:1: [C0103(invalid-name), ] Module name "0106_auto_20180717_1542" doesn't conform to snake_case naming style
projects/migrations/0106_auto_20180717_1542.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0106_auto_20180717_1542.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0106_auto_20180717_1542.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0106_auto_20180717_1542.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0113_auto_20180907_0953
projects/migrations/0113_auto_20180907_0953.py:18: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0113_auto_20180907_0953.py:23: [C0301(line-too-long), ] Line too long (222/100)
projects/migrations/0113_auto_20180907_0953.py:28: [C0301(line-too-long), ] Line too long (224/100)
projects/migrations/0113_auto_20180907_0953.py:33: [C0301(line-too-long), ] Line too long (224/100)
projects/migrations/0113_auto_20180907_0953.py:1: [C0103(invalid-name), ] Module name "0113_auto_20180907_0953" doesn't conform to snake_case naming style
projects/migrations/0113_auto_20180907_0953.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0113_auto_20180907_0953.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0113_auto_20180907_0953.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0113_auto_20180907_0953.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0113_auto_20180907_0953.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0086_auto_20180510_1535
projects/migrations/0086_auto_20180510_1535.py:20: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0086_auto_20180510_1535.py:36: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0086_auto_20180510_1535.py:41: [C0301(line-too-long), ] Line too long (118/100)
projects/migrations/0086_auto_20180510_1535.py:62: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0086_auto_20180510_1535.py:1: [C0103(invalid-name), ] Module name "0086_auto_20180510_1535" doesn't conform to snake_case naming style
projects/migrations/0086_auto_20180510_1535.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0086_auto_20180510_1535.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0086_auto_20180510_1535.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0086_auto_20180510_1535.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0086_auto_20180510_1535.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0086_auto_20180510_1535.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0125_merge_20181113_0942
projects/migrations/0125_merge_20181113_0942.py:1: [C0103(invalid-name), ] Module name "0125_merge_20181113_0942" doesn't conform to snake_case naming style
projects/migrations/0125_merge_20181113_0942.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0125_merge_20181113_0942.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0125_merge_20181113_0942.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0125_merge_20181113_0942.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0132_auto_20181206_1720
projects/migrations/0132_auto_20181206_1720.py:19: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0132_auto_20181206_1720.py:1: [C0103(invalid-name), ] Module name "0132_auto_20181206_1720" doesn't conform to snake_case naming style
projects/migrations/0132_auto_20181206_1720.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0132_auto_20181206_1720.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0132_auto_20181206_1720.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0132_auto_20181206_1720.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0132_auto_20181206_1720.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0107_merge_20180719_1757
projects/migrations/0107_merge_20180719_1757.py:1: [C0103(invalid-name), ] Module name "0107_merge_20180719_1757" doesn't conform to snake_case naming style
projects/migrations/0107_merge_20180719_1757.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0107_merge_20180719_1757.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0107_merge_20180719_1757.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0107_merge_20180719_1757.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0147_merge_20190429_1452
projects/migrations/0147_merge_20190429_1452.py:1: [C0103(invalid-name), ] Module name "0147_merge_20190429_1452" doesn't conform to snake_case naming style
projects/migrations/0147_merge_20190429_1452.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0147_merge_20190429_1452.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0147_merge_20190429_1452.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0147_merge_20190429_1452.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0124_auto_20181012_1651
projects/migrations/0124_auto_20181012_1651.py:18: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0124_auto_20181012_1651.py:1: [C0103(invalid-name), ] Module name "0124_auto_20181012_1651" doesn't conform to snake_case naming style
projects/migrations/0124_auto_20181012_1651.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0124_auto_20181012_1651.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0124_auto_20181012_1651.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0124_auto_20181012_1651.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0125_merge_20181106_1421
projects/migrations/0125_merge_20181106_1421.py:1: [C0103(invalid-name), ] Module name "0125_merge_20181106_1421" doesn't conform to snake_case naming style
projects/migrations/0125_merge_20181106_1421.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0125_merge_20181106_1421.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0125_merge_20181106_1421.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0125_merge_20181106_1421.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0023_auto_20161121_1409
projects/migrations/0023_auto_20161121_1409.py:20: [C0301(line-too-long), ] Line too long (186/100)
projects/migrations/0023_auto_20161121_1409.py:1: [C0103(invalid-name), ] Module name "0023_auto_20161121_1409" doesn't conform to snake_case naming style
projects/migrations/0023_auto_20161121_1409.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0023_auto_20161121_1409.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0023_auto_20161121_1409.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0023_auto_20161121_1409.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0023_auto_20161121_1409.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0096_auto_20180620_1554
projects/migrations/0096_auto_20180620_1554.py:18: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0096_auto_20180620_1554.py:23: [C0301(line-too-long), ] Line too long (192/100)
projects/migrations/0096_auto_20180620_1554.py:1: [C0103(invalid-name), ] Module name "0096_auto_20180620_1554" doesn't conform to snake_case naming style
projects/migrations/0096_auto_20180620_1554.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0096_auto_20180620_1554.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0096_auto_20180620_1554.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0096_auto_20180620_1554.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0096_auto_20180620_1554.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0124_merge_20181022_1102
projects/migrations/0124_merge_20181022_1102.py:1: [C0103(invalid-name), ] Module name "0124_merge_20181022_1102" doesn't conform to snake_case naming style
projects/migrations/0124_merge_20181022_1102.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0124_merge_20181022_1102.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0124_merge_20181022_1102.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0124_merge_20181022_1102.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0100_merge_20180703_1429
projects/migrations/0100_merge_20180703_1429.py:1: [C0103(invalid-name), ] Module name "0100_merge_20180703_1429" doesn't conform to snake_case naming style
projects/migrations/0100_merge_20180703_1429.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0100_merge_20180703_1429.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0100_merge_20180703_1429.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0100_merge_20180703_1429.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0059_auto_20170328_1437
projects/migrations/0059_auto_20170328_1437.py:20: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0059_auto_20170328_1437.py:25: [C0301(line-too-long), ] Line too long (192/100)
projects/migrations/0059_auto_20170328_1437.py:30: [C0301(line-too-long), ] Line too long (196/100)
projects/migrations/0059_auto_20170328_1437.py:35: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0059_auto_20170328_1437.py:40: [C0301(line-too-long), ] Line too long (200/100)
projects/migrations/0059_auto_20170328_1437.py:45: [C0301(line-too-long), ] Line too long (201/100)
projects/migrations/0059_auto_20170328_1437.py:50: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0059_auto_20170328_1437.py:55: [C0301(line-too-long), ] Line too long (198/100)
projects/migrations/0059_auto_20170328_1437.py:60: [C0301(line-too-long), ] Line too long (201/100)
projects/migrations/0059_auto_20170328_1437.py:65: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0059_auto_20170328_1437.py:70: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0059_auto_20170328_1437.py:75: [C0301(line-too-long), ] Line too long (192/100)
projects/migrations/0059_auto_20170328_1437.py:80: [C0301(line-too-long), ] Line too long (189/100)
projects/migrations/0059_auto_20170328_1437.py:85: [C0301(line-too-long), ] Line too long (190/100)
projects/migrations/0059_auto_20170328_1437.py:90: [C0301(line-too-long), ] Line too long (203/100)
projects/migrations/0059_auto_20170328_1437.py:95: [C0301(line-too-long), ] Line too long (204/100)
projects/migrations/0059_auto_20170328_1437.py:100: [C0301(line-too-long), ] Line too long (214/100)
projects/migrations/0059_auto_20170328_1437.py:105: [C0301(line-too-long), ] Line too long (215/100)
projects/migrations/0059_auto_20170328_1437.py:110: [C0301(line-too-long), ] Line too long (193/100)
projects/migrations/0059_auto_20170328_1437.py:115: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0059_auto_20170328_1437.py:120: [C0301(line-too-long), ] Line too long (190/100)
projects/migrations/0059_auto_20170328_1437.py:125: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0059_auto_20170328_1437.py:130: [C0301(line-too-long), ] Line too long (193/100)
projects/migrations/0059_auto_20170328_1437.py:135: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0059_auto_20170328_1437.py:140: [C0301(line-too-long), ] Line too long (196/100)
projects/migrations/0059_auto_20170328_1437.py:145: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0059_auto_20170328_1437.py:150: [C0301(line-too-long), ] Line too long (190/100)
projects/migrations/0059_auto_20170328_1437.py:155: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0059_auto_20170328_1437.py:160: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0059_auto_20170328_1437.py:165: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0059_auto_20170328_1437.py:170: [C0301(line-too-long), ] Line too long (190/100)
projects/migrations/0059_auto_20170328_1437.py:175: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0059_auto_20170328_1437.py:1: [C0103(invalid-name), ] Module name "0059_auto_20170328_1437" doesn't conform to snake_case naming style
projects/migrations/0059_auto_20170328_1437.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0059_auto_20170328_1437.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0059_auto_20170328_1437.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0059_auto_20170328_1437.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0059_auto_20170328_1437.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0059_auto_20170328_1437.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0138_merge_20190111_1140
projects/migrations/0138_merge_20190111_1140.py:1: [C0103(invalid-name), ] Module name "0138_merge_20190111_1140" doesn't conform to snake_case naming style
projects/migrations/0138_merge_20190111_1140.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0138_merge_20190111_1140.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0138_merge_20190111_1140.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0138_merge_20190111_1140.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0126_FAKE_linked_jobs
projects/migrations/0126_FAKE_linked_jobs.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0126_FAKE_linked_jobs.py:37: [C0301(line-too-long), ] Line too long (181/100)
projects/migrations/0126_FAKE_linked_jobs.py:42: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0126_FAKE_linked_jobs.py:1: [C0103(invalid-name), ] Module name "0126_FAKE_linked_jobs" doesn't conform to snake_case naming style
projects/migrations/0126_FAKE_linked_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0126_FAKE_linked_jobs.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0126_FAKE_linked_jobs.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0126_FAKE_linked_jobs.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0126_FAKE_linked_jobs.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0126_FAKE_linked_jobs.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0025_auto_20161128_1439
projects/migrations/0025_auto_20161128_1439.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0025_auto_20161128_1439.py:25: [C0301(line-too-long), ] Line too long (213/100)
projects/migrations/0025_auto_20161128_1439.py:26: [C0301(line-too-long), ] Line too long (215/100)
projects/migrations/0025_auto_20161128_1439.py:27: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0025_auto_20161128_1439.py:1: [C0103(invalid-name), ] Module name "0025_auto_20161128_1439" doesn't conform to snake_case naming style
projects/migrations/0025_auto_20161128_1439.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0025_auto_20161128_1439.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0025_auto_20161128_1439.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0025_auto_20161128_1439.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0025_auto_20161128_1439.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0025_auto_20161128_1439.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0005_auto_20160923_1339
projects/migrations/0005_auto_20160923_1339.py:1: [C0103(invalid-name), ] Module name "0005_auto_20160923_1339" doesn't conform to snake_case naming style
projects/migrations/0005_auto_20160923_1339.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0005_auto_20160923_1339.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0005_auto_20160923_1339.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0005_auto_20160923_1339.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0136_auto_20190110_1542
projects/migrations/0136_auto_20190110_1542.py:32: [C0301(line-too-long), ] Line too long (232/100)
projects/migrations/0136_auto_20190110_1542.py:1: [C0103(invalid-name), ] Module name "0136_auto_20190110_1542" doesn't conform to snake_case naming style
projects/migrations/0136_auto_20190110_1542.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0136_auto_20190110_1542.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0136_auto_20190110_1542.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0136_auto_20190110_1542.py:7: [E0611(no-name-in-module), ] No name 'fields' in module 'mptt'
projects/migrations/0136_auto_20190110_1542.py:7: [E0401(import-error), ] Unable to import 'mptt.fields'
projects/migrations/0136_auto_20190110_1542.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0136_auto_20190110_1542.py:32: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0136_auto_20190110_1542.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0037_auto_20161229_1710
projects/migrations/0037_auto_20161229_1710.py:18: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0037_auto_20161229_1710.py:1: [C0103(invalid-name), ] Module name "0037_auto_20161229_1710" doesn't conform to snake_case naming style
projects/migrations/0037_auto_20161229_1710.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0037_auto_20161229_1710.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0037_auto_20161229_1710.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0037_auto_20161229_1710.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0072_auto_20170629_1018
projects/migrations/0072_auto_20170629_1018.py:23: [C0301(line-too-long), ] Line too long (106/100)
projects/migrations/0072_auto_20170629_1018.py:28: [C0301(line-too-long), ] Line too long (205/100)
projects/migrations/0072_auto_20170629_1018.py:38: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0072_auto_20170629_1018.py:43: [C0301(line-too-long), ] Line too long (222/100)
projects/migrations/0072_auto_20170629_1018.py:53: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0072_auto_20170629_1018.py:63: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0072_auto_20170629_1018.py:68: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:73: [C0301(line-too-long), ] Line too long (228/100)
projects/migrations/0072_auto_20170629_1018.py:78: [C0301(line-too-long), ] Line too long (211/100)
projects/migrations/0072_auto_20170629_1018.py:83: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:88: [C0301(line-too-long), ] Line too long (239/100)
projects/migrations/0072_auto_20170629_1018.py:98: [C0301(line-too-long), ] Line too long (217/100)
projects/migrations/0072_auto_20170629_1018.py:108: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0072_auto_20170629_1018.py:113: [C0301(line-too-long), ] Line too long (151/100)
projects/migrations/0072_auto_20170629_1018.py:118: [C0301(line-too-long), ] Line too long (212/100)
projects/migrations/0072_auto_20170629_1018.py:123: [C0301(line-too-long), ] Line too long (245/100)
projects/migrations/0072_auto_20170629_1018.py:128: [C0301(line-too-long), ] Line too long (239/100)
projects/migrations/0072_auto_20170629_1018.py:133: [C0301(line-too-long), ] Line too long (241/100)
projects/migrations/0072_auto_20170629_1018.py:138: [C0301(line-too-long), ] Line too long (218/100)
projects/migrations/0072_auto_20170629_1018.py:143: [C0301(line-too-long), ] Line too long (245/100)
projects/migrations/0072_auto_20170629_1018.py:148: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0072_auto_20170629_1018.py:153: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0072_auto_20170629_1018.py:158: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:163: [C0301(line-too-long), ] Line too long (217/100)
projects/migrations/0072_auto_20170629_1018.py:168: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:173: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:178: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:183: [C0301(line-too-long), ] Line too long (228/100)
projects/migrations/0072_auto_20170629_1018.py:188: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:193: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0072_auto_20170629_1018.py:198: [C0301(line-too-long), ] Line too long (139/100)
projects/migrations/0072_auto_20170629_1018.py:203: [C0301(line-too-long), ] Line too long (650/100)
projects/migrations/0072_auto_20170629_1018.py:208: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:213: [C0301(line-too-long), ] Line too long (222/100)
projects/migrations/0072_auto_20170629_1018.py:218: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:223: [C0301(line-too-long), ] Line too long (209/100)
projects/migrations/0072_auto_20170629_1018.py:228: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:233: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:238: [C0301(line-too-long), ] Line too long (206/100)
projects/migrations/0072_auto_20170629_1018.py:243: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:248: [C0301(line-too-long), ] Line too long (233/100)
projects/migrations/0072_auto_20170629_1018.py:253: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:258: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0072_auto_20170629_1018.py:263: [C0301(line-too-long), ] Line too long (160/100)
projects/migrations/0072_auto_20170629_1018.py:268: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:273: [C0301(line-too-long), ] Line too long (226/100)
projects/migrations/0072_auto_20170629_1018.py:278: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:283: [C0301(line-too-long), ] Line too long (213/100)
projects/migrations/0072_auto_20170629_1018.py:288: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:293: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:298: [C0301(line-too-long), ] Line too long (209/100)
projects/migrations/0072_auto_20170629_1018.py:303: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:308: [C0301(line-too-long), ] Line too long (237/100)
projects/migrations/0072_auto_20170629_1018.py:313: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:318: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0072_auto_20170629_1018.py:323: [C0301(line-too-long), ] Line too long (160/100)
projects/migrations/0072_auto_20170629_1018.py:328: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:333: [C0301(line-too-long), ] Line too long (223/100)
projects/migrations/0072_auto_20170629_1018.py:338: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:343: [C0301(line-too-long), ] Line too long (210/100)
projects/migrations/0072_auto_20170629_1018.py:348: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:353: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:358: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:363: [C0301(line-too-long), ] Line too long (234/100)
projects/migrations/0072_auto_20170629_1018.py:368: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:373: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0072_auto_20170629_1018.py:378: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0072_auto_20170629_1018.py:383: [C0301(line-too-long), ] Line too long (160/100)
projects/migrations/0072_auto_20170629_1018.py:388: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:393: [C0301(line-too-long), ] Line too long (227/100)
projects/migrations/0072_auto_20170629_1018.py:398: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:403: [C0301(line-too-long), ] Line too long (214/100)
projects/migrations/0072_auto_20170629_1018.py:408: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:413: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:418: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:423: [C0301(line-too-long), ] Line too long (238/100)
projects/migrations/0072_auto_20170629_1018.py:428: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:433: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0072_auto_20170629_1018.py:438: [C0301(line-too-long), ] Line too long (211/100)
projects/migrations/0072_auto_20170629_1018.py:443: [C0301(line-too-long), ] Line too long (160/100)
projects/migrations/0072_auto_20170629_1018.py:448: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:453: [C0301(line-too-long), ] Line too long (217/100)
projects/migrations/0072_auto_20170629_1018.py:458: [C0301(line-too-long), ] Line too long (149/100)
projects/migrations/0072_auto_20170629_1018.py:463: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:468: [C0301(line-too-long), ] Line too long (228/100)
projects/migrations/0072_auto_20170629_1018.py:473: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:478: [C0301(line-too-long), ] Line too long (164/100)
projects/migrations/0072_auto_20170629_1018.py:483: [C0301(line-too-long), ] Line too long (192/100)
projects/migrations/0072_auto_20170629_1018.py:488: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:493: [C0301(line-too-long), ] Line too long (271/100)
projects/migrations/0072_auto_20170629_1018.py:498: [C0301(line-too-long), ] Line too long (165/100)
projects/migrations/0072_auto_20170629_1018.py:503: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:508: [C0301(line-too-long), ] Line too long (151/100)
projects/migrations/0072_auto_20170629_1018.py:513: [C0301(line-too-long), ] Line too long (170/100)
projects/migrations/0072_auto_20170629_1018.py:518: [C0301(line-too-long), ] Line too long (213/100)
projects/migrations/0072_auto_20170629_1018.py:523: [C0301(line-too-long), ] Line too long (375/100)
projects/migrations/0072_auto_20170629_1018.py:528: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0072_auto_20170629_1018.py:533: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0072_auto_20170629_1018.py:538: [C0301(line-too-long), ] Line too long (220/100)
projects/migrations/0072_auto_20170629_1018.py:543: [C0301(line-too-long), ] Line too long (231/100)
projects/migrations/0072_auto_20170629_1018.py:548: [C0301(line-too-long), ] Line too long (152/100)
projects/migrations/0072_auto_20170629_1018.py:553: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:558: [C0301(line-too-long), ] Line too long (197/100)
projects/migrations/0072_auto_20170629_1018.py:563: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0072_auto_20170629_1018.py:568: [C0301(line-too-long), ] Line too long (137/100)
projects/migrations/0072_auto_20170629_1018.py:573: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:578: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:583: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0072_auto_20170629_1018.py:588: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:593: [C0301(line-too-long), ] Line too long (215/100)
projects/migrations/0072_auto_20170629_1018.py:598: [C0301(line-too-long), ] Line too long (131/100)
projects/migrations/0072_auto_20170629_1018.py:603: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0072_auto_20170629_1018.py:608: [C0301(line-too-long), ] Line too long (186/100)
projects/migrations/0072_auto_20170629_1018.py:613: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0072_auto_20170629_1018.py:618: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:623: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0072_auto_20170629_1018.py:628: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0072_auto_20170629_1018.py:633: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0072_auto_20170629_1018.py:638: [C0301(line-too-long), ] Line too long (170/100)
projects/migrations/0072_auto_20170629_1018.py:643: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:648: [C0301(line-too-long), ] Line too long (226/100)
projects/migrations/0072_auto_20170629_1018.py:653: [C0301(line-too-long), ] Line too long (118/100)
projects/migrations/0072_auto_20170629_1018.py:658: [C0301(line-too-long), ] Line too long (184/100)
projects/migrations/0072_auto_20170629_1018.py:663: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0072_auto_20170629_1018.py:668: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:673: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0072_auto_20170629_1018.py:678: [C0301(line-too-long), ] Line too long (151/100)
projects/migrations/0072_auto_20170629_1018.py:683: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:688: [C0301(line-too-long), ] Line too long (166/100)
projects/migrations/0072_auto_20170629_1018.py:693: [C0301(line-too-long), ] Line too long (130/100)
projects/migrations/0072_auto_20170629_1018.py:698: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0072_auto_20170629_1018.py:703: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0072_auto_20170629_1018.py:708: [C0301(line-too-long), ] Line too long (168/100)
projects/migrations/0072_auto_20170629_1018.py:713: [C0301(line-too-long), ] Line too long (173/100)
projects/migrations/0072_auto_20170629_1018.py:718: [C0301(line-too-long), ] Line too long (185/100)
projects/migrations/0072_auto_20170629_1018.py:723: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:728: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:733: [C0301(line-too-long), ] Line too long (229/100)
projects/migrations/0072_auto_20170629_1018.py:738: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0072_auto_20170629_1018.py:743: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0072_auto_20170629_1018.py:748: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0072_auto_20170629_1018.py:753: [C0301(line-too-long), ] Line too long (209/100)
projects/migrations/0072_auto_20170629_1018.py:758: [C0301(line-too-long), ] Line too long (186/100)
projects/migrations/0072_auto_20170629_1018.py:763: [C0301(line-too-long), ] Line too long (230/100)
projects/migrations/0072_auto_20170629_1018.py:768: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:773: [C0301(line-too-long), ] Line too long (240/100)
projects/migrations/0072_auto_20170629_1018.py:778: [C0301(line-too-long), ] Line too long (192/100)
projects/migrations/0072_auto_20170629_1018.py:783: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:788: [C0301(line-too-long), ] Line too long (240/100)
projects/migrations/0072_auto_20170629_1018.py:793: [C0301(line-too-long), ] Line too long (210/100)
projects/migrations/0072_auto_20170629_1018.py:798: [C0301(line-too-long), ] Line too long (243/100)
projects/migrations/0072_auto_20170629_1018.py:803: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:808: [C0301(line-too-long), ] Line too long (251/100)
projects/migrations/0072_auto_20170629_1018.py:813: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:818: [C0301(line-too-long), ] Line too long (219/100)
projects/migrations/0072_auto_20170629_1018.py:823: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:828: [C0301(line-too-long), ] Line too long (212/100)
projects/migrations/0072_auto_20170629_1018.py:833: [C0301(line-too-long), ] Line too long (199/100)
projects/migrations/0072_auto_20170629_1018.py:838: [C0301(line-too-long), ] Line too long (218/100)
projects/migrations/0072_auto_20170629_1018.py:843: [C0301(line-too-long), ] Line too long (169/100)
projects/migrations/0072_auto_20170629_1018.py:848: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:853: [C0301(line-too-long), ] Line too long (230/100)
projects/migrations/0072_auto_20170629_1018.py:858: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0072_auto_20170629_1018.py:863: [C0301(line-too-long), ] Line too long (225/100)
projects/migrations/0072_auto_20170629_1018.py:868: [C0301(line-too-long), ] Line too long (168/100)
projects/migrations/0072_auto_20170629_1018.py:873: [C0301(line-too-long), ] Line too long (225/100)
projects/migrations/0072_auto_20170629_1018.py:883: [C0301(line-too-long), ] Line too long (179/100)
projects/migrations/0072_auto_20170629_1018.py:888: [C0301(line-too-long), ] Line too long (231/100)
projects/migrations/0072_auto_20170629_1018.py:893: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:898: [C0301(line-too-long), ] Line too long (216/100)
projects/migrations/0072_auto_20170629_1018.py:903: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:908: [C0301(line-too-long), ] Line too long (227/100)
projects/migrations/0072_auto_20170629_1018.py:913: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0072_auto_20170629_1018.py:918: [C0301(line-too-long), ] Line too long (218/100)
projects/migrations/0072_auto_20170629_1018.py:923: [C0301(line-too-long), ] Line too long (219/100)
projects/migrations/0072_auto_20170629_1018.py:928: [C0301(line-too-long), ] Line too long (249/100)
projects/migrations/0072_auto_20170629_1018.py:943: [C0301(line-too-long), ] Line too long (180/100)
projects/migrations/0072_auto_20170629_1018.py:948: [C0301(line-too-long), ] Line too long (204/100)
projects/migrations/0072_auto_20170629_1018.py:953: [C0301(line-too-long), ] Line too long (182/100)
projects/migrations/0072_auto_20170629_1018.py:958: [C0301(line-too-long), ] Line too long (235/100)
projects/migrations/0072_auto_20170629_1018.py:963: [C0301(line-too-long), ] Line too long (118/100)
projects/migrations/0072_auto_20170629_1018.py:968: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0072_auto_20170629_1018.py:973: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0072_auto_20170629_1018.py:978: [C0301(line-too-long), ] Line too long (160/100)
projects/migrations/0072_auto_20170629_1018.py:983: [C0301(line-too-long), ] Line too long (237/100)
projects/migrations/0072_auto_20170629_1018.py:988: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0072_auto_20170629_1018.py:993: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0072_auto_20170629_1018.py:998: [C0301(line-too-long), ] Line too long (135/100)
projects/migrations/0072_auto_20170629_1018.py:1003: [C0301(line-too-long), ] Line too long (243/100)
projects/migrations/0072_auto_20170629_1018.py:1008: [C0301(line-too-long), ] Line too long (312/100)
projects/migrations/0072_auto_20170629_1018.py:1013: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0072_auto_20170629_1018.py:1018: [C0301(line-too-long), ] Line too long (266/100)
projects/migrations/0072_auto_20170629_1018.py:1023: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:1028: [C0301(line-too-long), ] Line too long (219/100)
projects/migrations/0072_auto_20170629_1018.py:1033: [C0301(line-too-long), ] Line too long (135/100)
projects/migrations/0072_auto_20170629_1018.py:1038: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0072_auto_20170629_1018.py:1043: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:1048: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0072_auto_20170629_1018.py:1053: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0072_auto_20170629_1018.py:1058: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:1063: [C0301(line-too-long), ] Line too long (230/100)
projects/migrations/0072_auto_20170629_1018.py:1068: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0072_auto_20170629_1018.py:1073: [C0301(line-too-long), ] Line too long (188/100)
projects/migrations/0072_auto_20170629_1018.py:1078: [C0301(line-too-long), ] Line too long (223/100)
projects/migrations/0072_auto_20170629_1018.py:1083: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0072_auto_20170629_1018.py:1088: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:1093: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0072_auto_20170629_1018.py:1098: [C0301(line-too-long), ] Line too long (151/100)
projects/migrations/0072_auto_20170629_1018.py:1103: [C0301(line-too-long), ] Line too long (166/100)
projects/migrations/0072_auto_20170629_1018.py:1108: [C0301(line-too-long), ] Line too long (130/100)
projects/migrations/0072_auto_20170629_1018.py:1113: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0072_auto_20170629_1018.py:1118: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0072_auto_20170629_1018.py:1123: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0072_auto_20170629_1018.py:1128: [C0301(line-too-long), ] Line too long (111/100)
projects/migrations/0072_auto_20170629_1018.py:1133: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0072_auto_20170629_1018.py:1138: [C0301(line-too-long), ] Line too long (206/100)
projects/migrations/0072_auto_20170629_1018.py:1143: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:1148: [C0301(line-too-long), ] Line too long (205/100)
projects/migrations/0072_auto_20170629_1018.py:1153: [C0301(line-too-long), ] Line too long (152/100)
projects/migrations/0072_auto_20170629_1018.py:1158: [C0301(line-too-long), ] Line too long (206/100)
projects/migrations/0072_auto_20170629_1018.py:1168: [C0301(line-too-long), ] Line too long (333/100)
projects/migrations/0072_auto_20170629_1018.py:1173: [C0301(line-too-long), ] Line too long (170/100)
projects/migrations/0072_auto_20170629_1018.py:1178: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:1183: [C0301(line-too-long), ] Line too long (320/100)
projects/migrations/0072_auto_20170629_1018.py:1188: [C0301(line-too-long), ] Line too long (154/100)
projects/migrations/0072_auto_20170629_1018.py:1193: [C0301(line-too-long), ] Line too long (143/100)
projects/migrations/0072_auto_20170629_1018.py:1198: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:1203: [C0301(line-too-long), ] Line too long (169/100)
projects/migrations/0072_auto_20170629_1018.py:1208: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0072_auto_20170629_1018.py:1213: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:1218: [C0301(line-too-long), ] Line too long (222/100)
projects/migrations/0072_auto_20170629_1018.py:1223: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:1228: [C0301(line-too-long), ] Line too long (233/100)
projects/migrations/0072_auto_20170629_1018.py:1233: [C0301(line-too-long), ] Line too long (191/100)
projects/migrations/0072_auto_20170629_1018.py:1238: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0072_auto_20170629_1018.py:1243: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0072_auto_20170629_1018.py:1248: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:1253: [C0301(line-too-long), ] Line too long (216/100)
projects/migrations/0072_auto_20170629_1018.py:1258: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0072_auto_20170629_1018.py:1263: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0072_auto_20170629_1018.py:1268: [C0301(line-too-long), ] Line too long (189/100)
projects/migrations/0072_auto_20170629_1018.py:1273: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0072_auto_20170629_1018.py:1278: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0072_auto_20170629_1018.py:1283: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0072_auto_20170629_1018.py:1288: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0072_auto_20170629_1018.py:1293: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:1298: [C0301(line-too-long), ] Line too long (170/100)
projects/migrations/0072_auto_20170629_1018.py:1303: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:1308: [C0301(line-too-long), ] Line too long (227/100)
projects/migrations/0072_auto_20170629_1018.py:1313: [C0301(line-too-long), ] Line too long (119/100)
projects/migrations/0072_auto_20170629_1018.py:1318: [C0301(line-too-long), ] Line too long (185/100)
projects/migrations/0072_auto_20170629_1018.py:1323: [C0301(line-too-long), ] Line too long (262/100)
projects/migrations/0072_auto_20170629_1018.py:1328: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0072_auto_20170629_1018.py:1333: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0072_auto_20170629_1018.py:1338: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0072_auto_20170629_1018.py:1343: [C0301(line-too-long), ] Line too long (151/100)
projects/migrations/0072_auto_20170629_1018.py:1348: [C0301(line-too-long), ] Line too long (166/100)
projects/migrations/0072_auto_20170629_1018.py:1353: [C0301(line-too-long), ] Line too long (130/100)
projects/migrations/0072_auto_20170629_1018.py:1358: [C0301(line-too-long), ] Line too long (134/100)
projects/migrations/0072_auto_20170629_1018.py:1363: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0072_auto_20170629_1018.py:1368: [C0301(line-too-long), ] Line too long (168/100)
projects/migrations/0072_auto_20170629_1018.py:1373: [C0301(line-too-long), ] Line too long (179/100)
projects/migrations/0072_auto_20170629_1018.py:1378: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0072_auto_20170629_1018.py:1383: [C0301(line-too-long), ] Line too long (240/100)
projects/migrations/0072_auto_20170629_1018.py:1388: [C0301(line-too-long), ] Line too long (198/100)
projects/migrations/0072_auto_20170629_1018.py:1393: [C0301(line-too-long), ] Line too long (198/100)
projects/migrations/0072_auto_20170629_1018.py:1398: [C0301(line-too-long), ] Line too long (243/100)
projects/migrations/0072_auto_20170629_1018.py:1403: [C0301(line-too-long), ] Line too long (220/100)
projects/migrations/0072_auto_20170629_1018.py:1408: [C0301(line-too-long), ] Line too long (173/100)
projects/migrations/0072_auto_20170629_1018.py:1413: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0072_auto_20170629_1018.py:1418: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:1423: [C0301(line-too-long), ] Line too long (220/100)
projects/migrations/0072_auto_20170629_1018.py:1428: [C0301(line-too-long), ] Line too long (137/100)
projects/migrations/0072_auto_20170629_1018.py:1433: [C0301(line-too-long), ] Line too long (213/100)
projects/migrations/0072_auto_20170629_1018.py:1438: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0072_auto_20170629_1018.py:1443: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:1448: [C0301(line-too-long), ] Line too long (231/100)
projects/migrations/0072_auto_20170629_1018.py:1453: [C0301(line-too-long), ] Line too long (124/100)
projects/migrations/0072_auto_20170629_1018.py:1458: [C0301(line-too-long), ] Line too long (219/100)
projects/migrations/0072_auto_20170629_1018.py:1463: [C0301(line-too-long), ] Line too long (195/100)
projects/migrations/0072_auto_20170629_1018.py:1468: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0072_auto_20170629_1018.py:1473: [C0301(line-too-long), ] Line too long (205/100)
projects/migrations/0072_auto_20170629_1018.py:1478: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0072_auto_20170629_1018.py:1488: [C0301(line-too-long), ] Line too long (152/100)
projects/migrations/0072_auto_20170629_1018.py:1498: [C0301(line-too-long), ] Line too long (214/100)
projects/migrations/0072_auto_20170629_1018.py:1503: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0072_auto_20170629_1018.py:1508: [C0301(line-too-long), ] Line too long (216/100)
projects/migrations/0072_auto_20170629_1018.py:1513: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0072_auto_20170629_1018.py:1518: [C0301(line-too-long), ] Line too long (231/100)
projects/migrations/0072_auto_20170629_1018.py:1523: [C0301(line-too-long), ] Line too long (137/100)
projects/migrations/0072_auto_20170629_1018.py:1528: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0072_auto_20170629_1018.py:1533: [C0301(line-too-long), ] Line too long (227/100)
projects/migrations/0072_auto_20170629_1018.py:1538: [C0301(line-too-long), ] Line too long (119/100)
projects/migrations/0072_auto_20170629_1018.py:1: [C0302(too-many-lines), ] Too many lines in module (1540/1000)
projects/migrations/0072_auto_20170629_1018.py:1: [C0103(invalid-name), ] Module name "0072_auto_20170629_1018" doesn't conform to snake_case naming style
projects/migrations/0072_auto_20170629_1018.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0072_auto_20170629_1018.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0072_auto_20170629_1018.py:6: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields'
projects/migrations/0072_auto_20170629_1018.py:7: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
projects/migrations/0072_auto_20170629_1018.py:8: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0072_auto_20170629_1018.py:9: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0072_auto_20170629_1018.py:10: [E0611(no-name-in-module), ] No name 'fields' in module 'mptt'
projects/migrations/0072_auto_20170629_1018.py:10: [E0401(import-error), ] Unable to import 'mptt.fields'
projects/migrations/0072_auto_20170629_1018.py:13: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0072_auto_20170629_1018.py:863: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0072_auto_20170629_1018.py:1078: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0072_auto_20170629_1018.py:13: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0112_auto_20180904_0927
projects/migrations/0112_auto_20180904_0927.py:19: [C0301(line-too-long), ] Line too long (268/100)
projects/migrations/0112_auto_20180904_0927.py:1: [C0103(invalid-name), ] Module name "0112_auto_20180904_0927" doesn't conform to snake_case naming style
projects/migrations/0112_auto_20180904_0927.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0112_auto_20180904_0927.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0112_auto_20180904_0927.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0112_auto_20180904_0927.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0112_auto_20180904_0927.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0122_taskblockhistory_block_job
projects/migrations/0122_taskblockhistory_block_job.py:1: [C0103(invalid-name), ] Module name "0122_taskblockhistory_block_job" doesn't conform to snake_case naming style
projects/migrations/0122_taskblockhistory_block_job.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0122_taskblockhistory_block_job.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0122_taskblockhistory_block_job.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0122_taskblockhistory_block_job.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0145_set_costs_units_defaults
projects/migrations/0145_set_costs_units_defaults.py:1: [C0103(invalid-name), ] Module name "0145_set_costs_units_defaults" doesn't conform to snake_case naming style
projects/migrations/0145_set_costs_units_defaults.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0145_set_costs_units_defaults.py:4: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0145_set_costs_units_defaults.py:5: [E0401(import-error), ] Unable to import 'django.db.models'
projects/migrations/0145_set_costs_units_defaults.py:8: [C0111(missing-docstring), set_costs_units_defaults] Missing function docstring
projects/migrations/0145_set_costs_units_defaults.py:8: [R0914(too-many-locals), set_costs_units_defaults] Too many local variables (16/15)
projects/migrations/0145_set_costs_units_defaults.py:9: [C0103(invalid-name), set_costs_units_defaults] Variable name "Job" doesn't conform to snake_case naming style
projects/migrations/0145_set_costs_units_defaults.py:10: [C0103(invalid-name), set_costs_units_defaults] Variable name "Task" doesn't conform to snake_case naming style
projects/migrations/0145_set_costs_units_defaults.py:11: [C0103(invalid-name), set_costs_units_defaults] Variable name "GanttsTaskTypes" doesn't conform to snake_case naming style
projects/migrations/0145_set_costs_units_defaults.py:37: [W0212(protected-access), set_costs_units_defaults] Access to a protected member _meta of a client class
projects/migrations/0145_set_costs_units_defaults.py:41: [W0212(protected-access), set_costs_units_defaults] Access to a protected member _meta of a client class
projects/migrations/0145_set_costs_units_defaults.py:45: [W0212(protected-access), set_costs_units_defaults] Access to a protected member _meta of a client class
projects/migrations/0145_set_costs_units_defaults.py:8: [W0613(unused-argument), set_costs_units_defaults] Unused argument 'schema_editor'
projects/migrations/0145_set_costs_units_defaults.py:50: [C0111(missing-docstring), reverse_set_costs_units_defaults] Missing function docstring
projects/migrations/0145_set_costs_units_defaults.py:50: [W0613(unused-argument), reverse_set_costs_units_defaults] Unused argument 'apps'
projects/migrations/0145_set_costs_units_defaults.py:50: [W0613(unused-argument), reverse_set_costs_units_defaults] Unused argument 'schema_editor'
projects/migrations/0145_set_costs_units_defaults.py:54: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0145_set_costs_units_defaults.py:54: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
projects/migrations/0145_set_costs_units_defaults.py:4: [W0611(unused-import), ] Unused models imported from django.db
************* Module projects.migrations.0067_auto_20170504_1604
projects/migrations/0067_auto_20170504_1604.py:17: [C0301(line-too-long), ] Line too long (161/100)
projects/migrations/0067_auto_20170504_1604.py:21: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0067_auto_20170504_1604.py:25: [C0301(line-too-long), ] Line too long (147/100)
projects/migrations/0067_auto_20170504_1604.py:29: [C0301(line-too-long), ] Line too long (130/100)
projects/migrations/0067_auto_20170504_1604.py:33: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0067_auto_20170504_1604.py:41: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0067_auto_20170504_1604.py:1: [C0103(invalid-name), ] Module name "0067_auto_20170504_1604" doesn't conform to snake_case naming style
projects/migrations/0067_auto_20170504_1604.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0067_auto_20170504_1604.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0067_auto_20170504_1604.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0067_auto_20170504_1604.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0053_auto_20170310_1647
projects/migrations/0053_auto_20170310_1647.py:19: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0053_auto_20170310_1647.py:36: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0053_auto_20170310_1647.py:1: [C0103(invalid-name), ] Module name "0053_auto_20170310_1647" doesn't conform to snake_case naming style
projects/migrations/0053_auto_20170310_1647.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0053_auto_20170310_1647.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0053_auto_20170310_1647.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0053_auto_20170310_1647.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0053_auto_20170310_1647.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0035_auto_20161229_1430
projects/migrations/0035_auto_20161229_1430.py:1: [C0103(invalid-name), ] Module name "0035_auto_20161229_1430" doesn't conform to snake_case naming style
projects/migrations/0035_auto_20161229_1430.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0035_auto_20161229_1430.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0035_auto_20161229_1430.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0035_auto_20161229_1430.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0023_report_reportcolumns
projects/migrations/0023_report_reportcolumns.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0023_report_reportcolumns.py:23: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0023_report_reportcolumns.py:26: [C0301(line-too-long), ] Line too long (158/100)
projects/migrations/0023_report_reportcolumns.py:37: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0023_report_reportcolumns.py:41: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0023_report_reportcolumns.py:1: [C0103(invalid-name), ] Module name "0023_report_reportcolumns" doesn't conform to snake_case naming style
projects/migrations/0023_report_reportcolumns.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0023_report_reportcolumns.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0023_report_reportcolumns.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0023_report_reportcolumns.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0023_report_reportcolumns.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0023_report_reportcolumns.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0090_merge_20180522_1205
projects/migrations/0090_merge_20180522_1205.py:1: [C0103(invalid-name), ] Module name "0090_merge_20180522_1205" doesn't conform to snake_case naming style
projects/migrations/0090_merge_20180522_1205.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0090_merge_20180522_1205.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0090_merge_20180522_1205.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0090_merge_20180522_1205.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0048_auto_20170307_1642
projects/migrations/0048_auto_20170307_1642.py:20: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0048_auto_20170307_1642.py:25: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0048_auto_20170307_1642.py:30: [C0301(line-too-long), ] Line too long (143/100)
projects/migrations/0048_auto_20170307_1642.py:35: [C0301(line-too-long), ] Line too long (147/100)
projects/migrations/0048_auto_20170307_1642.py:40: [C0301(line-too-long), ] Line too long (183/100)
projects/migrations/0048_auto_20170307_1642.py:45: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0048_auto_20170307_1642.py:50: [C0301(line-too-long), ] Line too long (140/100)
projects/migrations/0048_auto_20170307_1642.py:55: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0048_auto_20170307_1642.py:60: [C0301(line-too-long), ] Line too long (143/100)
projects/migrations/0048_auto_20170307_1642.py:65: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0048_auto_20170307_1642.py:70: [C0301(line-too-long), ] Line too long (193/100)
projects/migrations/0048_auto_20170307_1642.py:75: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0048_auto_20170307_1642.py:80: [C0301(line-too-long), ] Line too long (166/100)
projects/migrations/0048_auto_20170307_1642.py:85: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0048_auto_20170307_1642.py:90: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0048_auto_20170307_1642.py:95: [C0301(line-too-long), ] Line too long (154/100)
projects/migrations/0048_auto_20170307_1642.py:100: [C0301(line-too-long), ] Line too long (154/100)
projects/migrations/0048_auto_20170307_1642.py:105: [C0301(line-too-long), ] Line too long (165/100)
projects/migrations/0048_auto_20170307_1642.py:110: [C0301(line-too-long), ] Line too long (189/100)
projects/migrations/0048_auto_20170307_1642.py:115: [C0301(line-too-long), ] Line too long (187/100)
projects/migrations/0048_auto_20170307_1642.py:120: [C0301(line-too-long), ] Line too long (147/100)
projects/migrations/0048_auto_20170307_1642.py:125: [C0301(line-too-long), ] Line too long (146/100)
projects/migrations/0048_auto_20170307_1642.py:130: [C0301(line-too-long), ] Line too long (190/100)
projects/migrations/0048_auto_20170307_1642.py:135: [C0301(line-too-long), ] Line too long (145/100)
projects/migrations/0048_auto_20170307_1642.py:140: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0048_auto_20170307_1642.py:145: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0048_auto_20170307_1642.py:150: [C0301(line-too-long), ] Line too long (144/100)
projects/migrations/0048_auto_20170307_1642.py:155: [C0301(line-too-long), ] Line too long (172/100)
projects/migrations/0048_auto_20170307_1642.py:160: [C0301(line-too-long), ] Line too long (232/100)
projects/migrations/0048_auto_20170307_1642.py:165: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0048_auto_20170307_1642.py:1: [C0103(invalid-name), ] Module name "0048_auto_20170307_1642" doesn't conform to snake_case naming style
projects/migrations/0048_auto_20170307_1642.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0048_auto_20170307_1642.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0048_auto_20170307_1642.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0048_auto_20170307_1642.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0048_auto_20170307_1642.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0048_auto_20170307_1642.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0071_auto_20170530_1449
projects/migrations/0071_auto_20170530_1449.py:17: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0071_auto_20170530_1449.py:1: [C0103(invalid-name), ] Module name "0071_auto_20170530_1449" doesn't conform to snake_case naming style
projects/migrations/0071_auto_20170530_1449.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0071_auto_20170530_1449.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0071_auto_20170530_1449.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0071_auto_20170530_1449.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0084_auto_20180219_0941
projects/migrations/0084_auto_20180219_0941.py:27: [C0301(line-too-long), ] Line too long (190/100)
projects/migrations/0084_auto_20180219_0941.py:32: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0084_auto_20180219_0941.py:34: [C0301(line-too-long), ] Line too long (107/100)
projects/migrations/0084_auto_20180219_0941.py:1: [C0103(invalid-name), ] Module name "0084_auto_20180219_0941" doesn't conform to snake_case naming style
projects/migrations/0084_auto_20180219_0941.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0084_auto_20180219_0941.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0084_auto_20180219_0941.py:6: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
projects/migrations/0084_auto_20180219_0941.py:7: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0084_auto_20180219_0941.py:8: [E0401(import-error), ] Unable to import 'django.db.migrations'
projects/migrations/0084_auto_20180219_0941.py:11: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0084_auto_20180219_0941.py:11: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0121_auto_20180917_0959
projects/migrations/0121_auto_20180917_0959.py:29: [C0301(line-too-long), ] Line too long (237/100)
projects/migrations/0121_auto_20180917_0959.py:34: [C0301(line-too-long), ] Line too long (856/100)
projects/migrations/0121_auto_20180917_0959.py:1: [C0103(invalid-name), ] Module name "0121_auto_20180917_0959" doesn't conform to snake_case naming style
projects/migrations/0121_auto_20180917_0959.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0121_auto_20180917_0959.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0121_auto_20180917_0959.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0121_auto_20180917_0959.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0130_merge_20181127_1512
projects/migrations/0130_merge_20181127_1512.py:1: [C0103(invalid-name), ] Module name "0130_merge_20181127_1512" doesn't conform to snake_case naming style
projects/migrations/0130_merge_20181127_1512.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0130_merge_20181127_1512.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0130_merge_20181127_1512.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0130_merge_20181127_1512.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0043_auto_20170118_1454
projects/migrations/0043_auto_20170118_1454.py:23: [C0301(line-too-long), ] Line too long (218/100)
projects/migrations/0043_auto_20170118_1454.py:1: [C0103(invalid-name), ] Module name "0043_auto_20170118_1454" doesn't conform to snake_case naming style
projects/migrations/0043_auto_20170118_1454.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0043_auto_20170118_1454.py:5: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields'
projects/migrations/0043_auto_20170118_1454.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0043_auto_20170118_1454.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0043_auto_20170118_1454.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0059_auto_20170322_0921
projects/migrations/0059_auto_20170322_0921.py:23: [C0301(line-too-long), ] Line too long (174/100)
projects/migrations/0059_auto_20170322_0921.py:1: [C0103(invalid-name), ] Module name "0059_auto_20170322_0921" doesn't conform to snake_case naming style
projects/migrations/0059_auto_20170322_0921.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0059_auto_20170322_0921.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0059_auto_20170322_0921.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0059_auto_20170322_0921.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0059_auto_20170322_0921.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0115_auto_20180910_1130
projects/migrations/0115_auto_20180910_1130.py:18: [C0301(line-too-long), ] Line too long (196/100)
projects/migrations/0115_auto_20180910_1130.py:30: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0115_auto_20180910_1130.py:1: [C0103(invalid-name), ] Module name "0115_auto_20180910_1130" doesn't conform to snake_case naming style
projects/migrations/0115_auto_20180910_1130.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0115_auto_20180910_1130.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0115_auto_20180910_1130.py:6: [E0401(import-error), ] Unable to import 'django.db.models.manager'
projects/migrations/0115_auto_20180910_1130.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0115_auto_20180910_1130.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0012_auto_20161006_1526
projects/migrations/0012_auto_20161006_1526.py:19: [C0301(line-too-long), ] Line too long (153/100)
projects/migrations/0012_auto_20161006_1526.py:1: [C0103(invalid-name), ] Module name "0012_auto_20161006_1526" doesn't conform to snake_case naming style
projects/migrations/0012_auto_20161006_1526.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0012_auto_20161006_1526.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0012_auto_20161006_1526.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0012_auto_20161006_1526.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0012_auto_20161006_1526.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0122_historyitem_created_by_admin_app
projects/migrations/0122_historyitem_created_by_admin_app.py:1: [C0103(invalid-name), ] Module name "0122_historyitem_created_by_admin_app" doesn't conform to snake_case naming style
projects/migrations/0122_historyitem_created_by_admin_app.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0122_historyitem_created_by_admin_app.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0122_historyitem_created_by_admin_app.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0122_historyitem_created_by_admin_app.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0135_merge_20181224_1057
projects/migrations/0135_merge_20181224_1057.py:1: [C0103(invalid-name), ] Module name "0135_merge_20181224_1057" doesn't conform to snake_case naming style
projects/migrations/0135_merge_20181224_1057.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0135_merge_20181224_1057.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0135_merge_20181224_1057.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0135_merge_20181224_1057.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0076_auto_20180320_1128
projects/migrations/0076_auto_20180320_1128.py:18: [C0301(line-too-long), ] Line too long (136/100)
projects/migrations/0076_auto_20180320_1128.py:1: [C0103(invalid-name), ] Module name "0076_auto_20180320_1128" doesn't conform to snake_case naming style
projects/migrations/0076_auto_20180320_1128.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0076_auto_20180320_1128.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0076_auto_20180320_1128.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0076_auto_20180320_1128.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0137_auto_20190110_1552
projects/migrations/0137_auto_20190110_1552.py:1: [C0103(invalid-name), ] Module name "0137_auto_20190110_1552" doesn't conform to snake_case naming style
projects/migrations/0137_auto_20190110_1552.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0137_auto_20190110_1552.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0137_auto_20190110_1552.py:7: [E0611(no-name-in-module), ] No name 'DocumentCategory' in module 'projects.models'
projects/migrations/0137_auto_20190110_1552.py:10: [C0111(missing-docstring), forward_rebuild_tree] Missing function docstring
projects/migrations/0137_auto_20190110_1552.py:10: [W0613(unused-argument), forward_rebuild_tree] Unused argument 'apps'
projects/migrations/0137_auto_20190110_1552.py:10: [W0613(unused-argument), forward_rebuild_tree] Unused argument 'schema_editor'
projects/migrations/0137_auto_20190110_1552.py:14: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0137_auto_20190110_1552.py:14: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0120_merge_20180917_0947
projects/migrations/0120_merge_20180917_0947.py:1: [C0103(invalid-name), ] Module name "0120_merge_20180917_0947" doesn't conform to snake_case naming style
projects/migrations/0120_merge_20180917_0947.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0120_merge_20180917_0947.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0120_merge_20180917_0947.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0120_merge_20180917_0947.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0038_auto_20170110_1724
projects/migrations/0038_auto_20170110_1724.py:18: [C0301(line-too-long), ] Line too long (592/100)
projects/migrations/0038_auto_20170110_1724.py:1: [C0103(invalid-name), ] Module name "0038_auto_20170110_1724" doesn't conform to snake_case naming style
projects/migrations/0038_auto_20170110_1724.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0038_auto_20170110_1724.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0038_auto_20170110_1724.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0038_auto_20170110_1724.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0001_initial
projects/migrations/0001_initial.py:25: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:29: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:30: [C0301(line-too-long), ] Line too long (611/100)
projects/migrations/0001_initial.py:31: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0001_initial.py:43: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:46: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0001_initial.py:48: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:51: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0001_initial.py:62: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:65: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0001_initial.py:67: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:70: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0001_initial.py:81: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:84: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0001_initial.py:86: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:89: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0001_initial.py:100: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:103: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0001_initial.py:105: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:108: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0001_initial.py:119: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:123: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:124: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0001_initial.py:136: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:137: [C0301(line-too-long), ] Line too long (110/100)
projects/migrations/0001_initial.py:138: [C0301(line-too-long), ] Line too long (139/100)
projects/migrations/0001_initial.py:139: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0001_initial.py:150: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:151: [C0301(line-too-long), ] Line too long (157/100)
projects/migrations/0001_initial.py:162: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:165: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0001_initial.py:166: [C0301(line-too-long), ] Line too long (111/100)
projects/migrations/0001_initial.py:167: [C0301(line-too-long), ] Line too long (139/100)
projects/migrations/0001_initial.py:168: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0001_initial.py:169: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0001_initial.py:170: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0001_initial.py:171: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0001_initial.py:172: [C0301(line-too-long), ] Line too long (118/100)
projects/migrations/0001_initial.py:173: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0001_initial.py:174: [C0301(line-too-long), ] Line too long (105/100)
projects/migrations/0001_initial.py:175: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:176: [C0301(line-too-long), ] Line too long (110/100)
projects/migrations/0001_initial.py:178: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:179: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:191: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:208: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:221: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:225: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:226: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:231: [C0301(line-too-long), ] Line too long (210/100)
projects/migrations/0001_initial.py:232: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0001_initial.py:233: [C0301(line-too-long), ] Line too long (151/100)
projects/migrations/0001_initial.py:234: [C0301(line-too-long), ] Line too long (212/100)
projects/migrations/0001_initial.py:235: [C0301(line-too-long), ] Line too long (171/100)
projects/migrations/0001_initial.py:247: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:264: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:277: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:280: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0001_initial.py:281: [C0301(line-too-long), ] Line too long (181/100)
projects/migrations/0001_initial.py:293: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:296: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0001_initial.py:297: [C0301(line-too-long), ] Line too long (111/100)
projects/migrations/0001_initial.py:298: [C0301(line-too-long), ] Line too long (139/100)
projects/migrations/0001_initial.py:299: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0001_initial.py:300: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0001_initial.py:301: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0001_initial.py:302: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0001_initial.py:303: [C0301(line-too-long), ] Line too long (118/100)
projects/migrations/0001_initial.py:304: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0001_initial.py:305: [C0301(line-too-long), ] Line too long (105/100)
projects/migrations/0001_initial.py:306: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:307: [C0301(line-too-long), ] Line too long (110/100)
projects/migrations/0001_initial.py:309: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:314: [C0301(line-too-long), ] Line too long (210/100)
projects/migrations/0001_initial.py:315: [C0301(line-too-long), ] Line too long (212/100)
projects/migrations/0001_initial.py:316: [C0301(line-too-long), ] Line too long (159/100)
projects/migrations/0001_initial.py:317: [C0301(line-too-long), ] Line too long (171/100)
projects/migrations/0001_initial.py:329: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:331: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:334: [C0301(line-too-long), ] Line too long (131/100)
projects/migrations/0001_initial.py:346: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:347: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0001_initial.py:349: [C0301(line-too-long), ] Line too long (165/100)
projects/migrations/0001_initial.py:350: [C0301(line-too-long), ] Line too long (155/100)
projects/migrations/0001_initial.py:362: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:364: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:365: [C0301(line-too-long), ] Line too long (122/100)
projects/migrations/0001_initial.py:377: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:380: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0001_initial.py:381: [C0301(line-too-long), ] Line too long (111/100)
projects/migrations/0001_initial.py:382: [C0301(line-too-long), ] Line too long (139/100)
projects/migrations/0001_initial.py:383: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0001_initial.py:384: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0001_initial.py:385: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0001_initial.py:386: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0001_initial.py:387: [C0301(line-too-long), ] Line too long (118/100)
projects/migrations/0001_initial.py:388: [C0301(line-too-long), ] Line too long (109/100)
projects/migrations/0001_initial.py:389: [C0301(line-too-long), ] Line too long (105/100)
projects/migrations/0001_initial.py:390: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:391: [C0301(line-too-long), ] Line too long (110/100)
projects/migrations/0001_initial.py:393: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:394: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:395: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0001_initial.py:396: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0001_initial.py:397: [C0301(line-too-long), ] Line too long (149/100)
projects/migrations/0001_initial.py:398: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0001_initial.py:399: [C0301(line-too-long), ] Line too long (209/100)
projects/migrations/0001_initial.py:400: [C0301(line-too-long), ] Line too long (156/100)
projects/migrations/0001_initial.py:412: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:413: [C0301(line-too-long), ] Line too long (180/100)
projects/migrations/0001_initial.py:414: [C0301(line-too-long), ] Line too long (154/100)
projects/migrations/0001_initial.py:415: [C0301(line-too-long), ] Line too long (154/100)
projects/migrations/0001_initial.py:426: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:430: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:431: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0001_initial.py:432: [C0301(line-too-long), ] Line too long (129/100)
projects/migrations/0001_initial.py:433: [C0301(line-too-long), ] Line too long (112/100)
projects/migrations/0001_initial.py:434: [C0301(line-too-long), ] Line too long (211/100)
projects/migrations/0001_initial.py:435: [C0301(line-too-long), ] Line too long (157/100)
projects/migrations/0001_initial.py:436: [C0301(line-too-long), ] Line too long (213/100)
projects/migrations/0001_initial.py:437: [C0301(line-too-long), ] Line too long (245/100)
projects/migrations/0001_initial.py:449: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0001_initial.py:453: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0001_initial.py:455: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0001_initial.py:456: [C0301(line-too-long), ] Line too long (209/100)
projects/migrations/0001_initial.py:468: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0001_initial.py:473: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0001_initial.py:478: [C0301(line-too-long), ] Line too long (115/100)
projects/migrations/0001_initial.py:483: [C0301(line-too-long), ] Line too long (193/100)
projects/migrations/0001_initial.py:488: [C0301(line-too-long), ] Line too long (194/100)
projects/migrations/0001_initial.py:493: [C0301(line-too-long), ] Line too long (152/100)
projects/migrations/0001_initial.py:498: [C0301(line-too-long), ] Line too long (157/100)
projects/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
projects/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields.jsonb'
projects/migrations/0001_initial.py:7: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0001_initial.py:8: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0001_initial.py:9: [E0611(no-name-in-module), ] No name 'fields' in module 'mptt'
projects/migrations/0001_initial.py:9: [E0401(import-error), ] Unable to import 'mptt.fields'
projects/migrations/0001_initial.py:12: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0001_initial.py:235: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0001_initial.py:317: [E1101(no-member), Migration] Module 'mptt' has no 'fields' member
projects/migrations/0001_initial.py:12: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0116_notificationeventsusers_content
projects/migrations/0116_notificationeventsusers_content.py:18: [C0301(line-too-long), ] Line too long (148/100)
projects/migrations/0116_notificationeventsusers_content.py:1: [C0103(invalid-name), ] Module name "0116_notificationeventsusers_content" doesn't conform to snake_case naming style
projects/migrations/0116_notificationeventsusers_content.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0116_notificationeventsusers_content.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0116_notificationeventsusers_content.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0116_notificationeventsusers_content.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0096_changelog
projects/migrations/0096_changelog.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0096_changelog.py:22: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0096_changelog.py:23: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0096_changelog.py:25: [C0301(line-too-long), ] Line too long (102/100)
projects/migrations/0096_changelog.py:26: [C0301(line-too-long), ] Line too long (235/100)
projects/migrations/0096_changelog.py:27: [C0301(line-too-long), ] Line too long (247/100)
projects/migrations/0096_changelog.py:1: [C0103(invalid-name), ] Module name "0096_changelog" doesn't conform to snake_case naming style
projects/migrations/0096_changelog.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0096_changelog.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0096_changelog.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0096_changelog.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0096_changelog.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0096_changelog.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0031_merge_20161216_1026
projects/migrations/0031_merge_20161216_1026.py:1: [C0103(invalid-name), ] Module name "0031_merge_20161216_1026" doesn't conform to snake_case naming style
projects/migrations/0031_merge_20161216_1026.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0031_merge_20161216_1026.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0031_merge_20161216_1026.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0031_merge_20161216_1026.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0073_auto_20180215_0858
projects/migrations/0073_auto_20180215_0858.py:18: [C0301(line-too-long), ] Line too long (672/100)
projects/migrations/0073_auto_20180215_0858.py:1: [C0103(invalid-name), ] Module name "0073_auto_20180215_0858" doesn't conform to snake_case naming style
projects/migrations/0073_auto_20180215_0858.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0073_auto_20180215_0858.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0073_auto_20180215_0858.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0073_auto_20180215_0858.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0133_auto_20190115_1717
projects/migrations/0133_auto_20190115_1717.py:1: [C0103(invalid-name), ] Module name "0133_auto_20190115_1717" doesn't conform to snake_case naming style
projects/migrations/0133_auto_20190115_1717.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0133_auto_20190115_1717.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0133_auto_20190115_1717.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0133_auto_20190115_1717.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0099_merge_20180628_1826
projects/migrations/0099_merge_20180628_1826.py:1: [C0103(invalid-name), ] Module name "0099_merge_20180628_1826" doesn't conform to snake_case naming style
projects/migrations/0099_merge_20180628_1826.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0099_merge_20180628_1826.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0099_merge_20180628_1826.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0099_merge_20180628_1826.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0101_merge_20180705_1036
projects/migrations/0101_merge_20180705_1036.py:1: [C0103(invalid-name), ] Module name "0101_merge_20180705_1036" doesn't conform to snake_case naming style
projects/migrations/0101_merge_20180705_1036.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0101_merge_20180705_1036.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0101_merge_20180705_1036.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0101_merge_20180705_1036.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0097_auto_20180621_1538
projects/migrations/0097_auto_20180621_1538.py:1: [C0103(invalid-name), ] Module name "0097_auto_20180621_1538" doesn't conform to snake_case naming style
projects/migrations/0097_auto_20180621_1538.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0097_auto_20180621_1538.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0097_auto_20180621_1538.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0097_auto_20180621_1538.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0028_merge_20161207_1214
projects/migrations/0028_merge_20161207_1214.py:1: [C0103(invalid-name), ] Module name "0028_merge_20161207_1214" doesn't conform to snake_case naming style
projects/migrations/0028_merge_20161207_1214.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0028_merge_20161207_1214.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0028_merge_20161207_1214.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0028_merge_20161207_1214.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0140_auto_20190424_1537
projects/migrations/0140_auto_20190424_1537.py:19: [C0301(line-too-long), ] Line too long (168/100)
projects/migrations/0140_auto_20190424_1537.py:24: [C0301(line-too-long), ] Line too long (142/100)
projects/migrations/0140_auto_20190424_1537.py:29: [C0301(line-too-long), ] Line too long (131/100)
projects/migrations/0140_auto_20190424_1537.py:1: [C0103(invalid-name), ] Module name "0140_auto_20190424_1537" doesn't conform to snake_case naming style
projects/migrations/0140_auto_20190424_1537.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0140_auto_20190424_1537.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0140_auto_20190424_1537.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0140_auto_20190424_1537.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0140_auto_20190424_1537.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0109_auto_20180725_1420
projects/migrations/0109_auto_20180725_1420.py:1: [C0103(invalid-name), ] Module name "0109_auto_20180725_1420" doesn't conform to snake_case naming style
projects/migrations/0109_auto_20180725_1420.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0109_auto_20180725_1420.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0109_auto_20180725_1420.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0109_auto_20180725_1420.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0064_auto_20170421_1756
projects/migrations/0064_auto_20170421_1756.py:22: [C0301(line-too-long), ] Line too long (117/100)
projects/migrations/0064_auto_20170421_1756.py:28: [C0301(line-too-long), ] Line too long (202/100)
projects/migrations/0064_auto_20170421_1756.py:38: [C0301(line-too-long), ] Line too long (203/100)
projects/migrations/0064_auto_20170421_1756.py:1: [C0103(invalid-name), ] Module name "0064_auto_20170421_1756" doesn't conform to snake_case naming style
projects/migrations/0064_auto_20170421_1756.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0064_auto_20170421_1756.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0064_auto_20170421_1756.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0064_auto_20170421_1756.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0064_auto_20170421_1756.py:8: [E0401(import-error), ] Unable to import 'django.utils.timezone'
projects/migrations/0064_auto_20170421_1756.py:11: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0064_auto_20170421_1756.py:11: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0006_auto_20160926_0755
projects/migrations/0006_auto_20160926_0755.py:1: [C0103(invalid-name), ] Module name "0006_auto_20160926_0755" doesn't conform to snake_case naming style
projects/migrations/0006_auto_20160926_0755.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0006_auto_20160926_0755.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0006_auto_20160926_0755.py:6: [E0401(import-error), ] Unable to import 'django.db.models.manager'
projects/migrations/0006_auto_20160926_0755.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0006_auto_20160926_0755.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0093_merge_20180530_1814
projects/migrations/0093_merge_20180530_1814.py:1: [C0103(invalid-name), ] Module name "0093_merge_20180530_1814" doesn't conform to snake_case naming style
projects/migrations/0093_merge_20180530_1814.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0093_merge_20180530_1814.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0093_merge_20180530_1814.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0093_merge_20180530_1814.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0137_merge_20181227_1027
projects/migrations/0137_merge_20181227_1027.py:1: [C0103(invalid-name), ] Module name "0137_merge_20181227_1027" doesn't conform to snake_case naming style
projects/migrations/0137_merge_20181227_1027.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0137_merge_20181227_1027.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0137_merge_20181227_1027.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0137_merge_20181227_1027.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice
projects/migrations/0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice.py:53: [C0301(line-too-long), ] Line too long (113/100)
projects/migrations/0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice.py:1: [C0103(invalid-name), ] Module name "0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice" doesn't conform to snake_case naming style
projects/migrations/0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice.py:13: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice.py:13: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0034_historyitem
projects/migrations/0034_historyitem.py:22: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0034_historyitem.py:25: [C0301(line-too-long), ] Line too long (116/100)
projects/migrations/0034_historyitem.py:26: [C0301(line-too-long), ] Line too long (101/100)
projects/migrations/0034_historyitem.py:29: [C0301(line-too-long), ] Line too long (131/100)
projects/migrations/0034_historyitem.py:30: [C0301(line-too-long), ] Line too long (156/100)
projects/migrations/0034_historyitem.py:1: [C0103(invalid-name), ] Module name "0034_historyitem" doesn't conform to snake_case naming style
projects/migrations/0034_historyitem.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0034_historyitem.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0034_historyitem.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0034_historyitem.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0034_historyitem.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0034_historyitem.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0101_auto_20180704_1526
projects/migrations/0101_auto_20180704_1526.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0101_auto_20180704_1526.py:22: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0101_auto_20180704_1526.py:23: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0101_auto_20180704_1526.py:24: [C0301(line-too-long), ] Line too long (234/100)
projects/migrations/0101_auto_20180704_1526.py:25: [C0301(line-too-long), ] Line too long (246/100)
projects/migrations/0101_auto_20180704_1526.py:37: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0101_auto_20180704_1526.py:38: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0101_auto_20180704_1526.py:39: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0101_auto_20180704_1526.py:40: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0101_auto_20180704_1526.py:41: [C0301(line-too-long), ] Line too long (123/100)
projects/migrations/0101_auto_20180704_1526.py:42: [C0301(line-too-long), ] Line too long (242/100)
projects/migrations/0101_auto_20180704_1526.py:43: [C0301(line-too-long), ] Line too long (254/100)
projects/migrations/0101_auto_20180704_1526.py:54: [C0301(line-too-long), ] Line too long (120/100)
projects/migrations/0101_auto_20180704_1526.py:59: [C0301(line-too-long), ] Line too long (474/100)
projects/migrations/0101_auto_20180704_1526.py:64: [C0301(line-too-long), ] Line too long (462/100)
projects/migrations/0101_auto_20180704_1526.py:69: [C0301(line-too-long), ] Line too long (127/100)
projects/migrations/0101_auto_20180704_1526.py:74: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0101_auto_20180704_1526.py:79: [C0301(line-too-long), ] Line too long (207/100)
projects/migrations/0101_auto_20180704_1526.py:1: [C0103(invalid-name), ] Module name "0101_auto_20180704_1526" doesn't conform to snake_case naming style
projects/migrations/0101_auto_20180704_1526.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0101_auto_20180704_1526.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0101_auto_20180704_1526.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0101_auto_20180704_1526.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0101_auto_20180704_1526.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0101_auto_20180704_1526.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0104_auto_20180710_1120
projects/migrations/0104_auto_20180710_1120.py:18: [C0301(line-too-long), ] Line too long (800/100)
projects/migrations/0104_auto_20180710_1120.py:23: [C0301(line-too-long), ] Line too long (220/100)
projects/migrations/0104_auto_20180710_1120.py:28: [C0301(line-too-long), ] Line too long (208/100)
projects/migrations/0104_auto_20180710_1120.py:1: [C0103(invalid-name), ] Module name "0104_auto_20180710_1120" doesn't conform to snake_case naming style
projects/migrations/0104_auto_20180710_1120.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0104_auto_20180710_1120.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0104_auto_20180710_1120.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0104_auto_20180710_1120.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0007_auto_20160926_1401
projects/migrations/0007_auto_20160926_1401.py:19: [C0301(line-too-long), ] Line too long (165/100)
projects/migrations/0007_auto_20160926_1401.py:24: [C0301(line-too-long), ] Line too long (169/100)
projects/migrations/0007_auto_20160926_1401.py:1: [C0103(invalid-name), ] Module name "0007_auto_20160926_1401" doesn't conform to snake_case naming style
projects/migrations/0007_auto_20160926_1401.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0007_auto_20160926_1401.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0007_auto_20160926_1401.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0007_auto_20160926_1401.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0007_auto_20160926_1401.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0144_auto_20190327_1214
projects/migrations/0144_auto_20190327_1214.py:16: [C0301(line-too-long), ] Line too long (176/100)
projects/migrations/0144_auto_20190327_1214.py:21: [C0301(line-too-long), ] Line too long (162/100)
projects/migrations/0144_auto_20190327_1214.py:1: [C0103(invalid-name), ] Module name "0144_auto_20190327_1214" doesn't conform to snake_case naming style
projects/migrations/0144_auto_20190327_1214.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0144_auto_20190327_1214.py:3: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0144_auto_20190327_1214.py:6: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0144_auto_20190327_1214.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0058_auto_20170324_0927
projects/migrations/0058_auto_20170324_0927.py:17: [C0301(line-too-long), ] Line too long (121/100)
projects/migrations/0058_auto_20170324_0927.py:21: [C0301(line-too-long), ] Line too long (144/100)
projects/migrations/0058_auto_20170324_0927.py:25: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0058_auto_20170324_0927.py:1: [C0103(invalid-name), ] Module name "0058_auto_20170324_0927" doesn't conform to snake_case naming style
projects/migrations/0058_auto_20170324_0927.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0058_auto_20170324_0927.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0058_auto_20170324_0927.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0058_auto_20170324_0927.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0016_auto_20161013_1048
projects/migrations/0016_auto_20161013_1048.py:19: [C0301(line-too-long), ] Line too long (157/100)
projects/migrations/0016_auto_20161013_1048.py:1: [C0103(invalid-name), ] Module name "0016_auto_20161013_1048" doesn't conform to snake_case naming style
projects/migrations/0016_auto_20161013_1048.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0016_auto_20161013_1048.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0016_auto_20161013_1048.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0016_auto_20161013_1048.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0016_auto_20161013_1048.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0135_auto_20190110_1506
projects/migrations/0135_auto_20190110_1506.py:21: [C0301(line-too-long), ] Line too long (114/100)
projects/migrations/0135_auto_20190110_1506.py:22: [C0301(line-too-long), ] Line too long (125/100)
projects/migrations/0135_auto_20190110_1506.py:23: [C0301(line-too-long), ] Line too long (132/100)
projects/migrations/0135_auto_20190110_1506.py:24: [C0301(line-too-long), ] Line too long (133/100)
projects/migrations/0135_auto_20190110_1506.py:25: [C0301(line-too-long), ] Line too long (238/100)
projects/migrations/0135_auto_20190110_1506.py:26: [C0301(line-too-long), ] Line too long (250/100)
projects/migrations/0135_auto_20190110_1506.py:38: [C0301(line-too-long), ] Line too long (150/100)
projects/migrations/0135_auto_20190110_1506.py:1: [C0103(invalid-name), ] Module name "0135_auto_20190110_1506" doesn't conform to snake_case naming style
projects/migrations/0135_auto_20190110_1506.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0135_auto_20190110_1506.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0135_auto_20190110_1506.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0135_auto_20190110_1506.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0135_auto_20190110_1506.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0135_auto_20190110_1506.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0095_taskoffer_provider_name
projects/migrations/0095_taskoffer_provider_name.py:1: [C0103(invalid-name), ] Module name "0095_taskoffer_provider_name" doesn't conform to snake_case naming style
projects/migrations/0095_taskoffer_provider_name.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0095_taskoffer_provider_name.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0095_taskoffer_provider_name.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0095_taskoffer_provider_name.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0046_auto_20170217_1522
projects/migrations/0046_auto_20170217_1522.py:20: [C0301(line-too-long), ] Line too long (137/100)
projects/migrations/0046_auto_20170217_1522.py:25: [C0301(line-too-long), ] Line too long (141/100)
projects/migrations/0046_auto_20170217_1522.py:30: [C0301(line-too-long), ] Line too long (138/100)
projects/migrations/0046_auto_20170217_1522.py:1: [C0103(invalid-name), ] Module name "0046_auto_20170217_1522" doesn't conform to snake_case naming style
projects/migrations/0046_auto_20170217_1522.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0046_auto_20170217_1522.py:5: [E0401(import-error), ] Unable to import 'django.conf'
projects/migrations/0046_auto_20170217_1522.py:6: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0046_auto_20170217_1522.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
projects/migrations/0046_auto_20170217_1522.py:10: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0046_auto_20170217_1522.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0089_auto_20180522_1135
projects/migrations/0089_auto_20180522_1135.py:28: [C0301(line-too-long), ] Line too long (108/100)
projects/migrations/0089_auto_20180522_1135.py:1: [C0103(invalid-name), ] Module name "0089_auto_20180522_1135" doesn't conform to snake_case naming style
projects/migrations/0089_auto_20180522_1135.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0089_auto_20180522_1135.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0089_auto_20180522_1135.py:9: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0089_auto_20180522_1135.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.migrations.0044_auto_20170125_1749
projects/migrations/0044_auto_20170125_1749.py:1: [C0103(invalid-name), ] Module name "0044_auto_20170125_1749" doesn't conform to snake_case naming style
projects/migrations/0044_auto_20170125_1749.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/migrations/0044_auto_20170125_1749.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/migrations/0044_auto_20170125_1749.py:8: [C0111(missing-docstring), Migration] Missing class docstring
projects/migrations/0044_auto_20170125_1749.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module projects.utils.ordering_api_client
projects/utils/ordering_api_client.py:48: [R1707(trailing-comma-tuple), ] Disallow trailing comma tuple
projects/utils/ordering_api_client.py:118: [C0330(bad-continuation), ] Wrong hanging indentation (add 3 spaces).
         'user': self.settings['login']['payload']['__ac_name'],
         ^  |
projects/utils/ordering_api_client.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/utils/ordering_api_client.py:8: [E0401(import-error), ] Unable to import 'django.conf'
projects/utils/ordering_api_client.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/utils/ordering_api_client.py:14: [C0111(missing-docstring), OrderingAPIClient] Missing class docstring
projects/utils/ordering_api_client.py:14: [R0205(useless-object-inheritance), OrderingAPIClient] Class 'OrderingAPIClient' inherits from object, can be safely removed from bases in python3
projects/utils/ordering_api_client.py:34: [C0111(missing-docstring), OrderingAPIClient.do_encode_data] Missing method docstring
projects/utils/ordering_api_client.py:38: [C0111(missing-docstring), OrderingAPIClient.do_parse_response] Missing method docstring
projects/utils/ordering_api_client.py:42: [C0111(missing-docstring), OrderingAPIClient.get_param_from_file] Missing method docstring
projects/utils/ordering_api_client.py:50: [C0111(missing-docstring), OrderingAPIClient.perform_call] Missing method docstring
projects/utils/ordering_api_client.py:65: [C0111(missing-docstring), OrderingAPIClient.manage_unauthorized] Missing method docstring
projects/utils/ordering_api_client.py:83: [C0111(missing-docstring), OrderingAPIClient.is_logged_in] Missing method docstring
projects/utils/ordering_api_client.py:86: [C0111(missing-docstring), OrderingAPIClient.login] Missing method docstring
projects/utils/ordering_api_client.py:86: [W0613(unused-argument), OrderingAPIClient.login] Unused argument 'kwargs'
projects/utils/ordering_api_client.py:100: [C0111(missing-docstring), OrderingAPIClient.check_file] Missing method docstring
projects/utils/ordering_api_client.py:114: [C0111(missing-docstring), OrderingAPIClient.create] Missing method docstring
projects/utils/ordering_api_client.py:6: [C0411(wrong-import-order), ] standard import "from urllib.parse import urlsplit" should be placed before "import requests"
************* Module projects.utils.__init__
projects/utils/__init__.py:177: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                Q(technical_name__startswith="orange_site")
            |   ^
projects/utils/__init__.py:178: [C0330(bad-continuation), ] Wrong hanging indentation (remove 8 spaces).
                    | Q(technical_name__startswith="emplazamiento"),
            |       ^
projects/utils/__init__.py:199: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    | Q(dynamic_fields_instances__technical_name__startswith="emplazamiento"),
                |   ^
projects/utils/__init__.py:209: [C0301(line-too-long), ] Line too long (105/100)
projects/utils/__init__.py:214: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                                | Q(technical_name__startswith="emplazamiento"),
                            |   ^
projects/utils/__init__.py:227: [C0301(line-too-long), ] Line too long (108/100)
************* Module projects.utils
projects/utils/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/utils/__init__.py:5: [E0401(import-error), ] Unable to import 'django.db'
projects/utils/__init__.py:6: [E0401(import-error), ] Unable to import 'django.db.models'
projects/utils/__init__.py:7: [E0401(import-error), ] Unable to import 'django.db.models.functions'
projects/utils/__init__.py:11: [C0111(missing-docstring), get_daterange_distribution] Missing function docstring
projects/utils/__init__.py:12: [R1705(no-else-return), get_daterange_distribution] Unnecessary "elif" after "return"
projects/utils/__init__.py:41: [C0103(invalid-name), ] Constant name "_project_root_cache" doesn't conform to UPPER_CASE naming style
projects/utils/__init__.py:44: [C0111(missing-docstring), get_projects_roots] Missing function docstring
projects/utils/__init__.py:53: [W0212(protected-access), get_projects_roots] Access to a protected member _meta of a client class
projects/utils/__init__.py:59: [C0111(missing-docstring), get_budgets] Missing function docstring
projects/utils/__init__.py:82: [C0111(missing-docstring), get_projects_ancestors] Missing function docstring
projects/utils/__init__.py:106: [C0111(missing-docstring), get_jobtype_ancestors] Missing function docstring
projects/utils/__init__.py:124: [C0103(invalid-name), get_next_technical_name] Argument name "qs" doesn't conform to snake_case naming style
projects/utils/__init__.py:124: [C0111(missing-docstring), get_next_technical_name] Missing function docstring
projects/utils/__init__.py:152: [C0111(missing-docstring), get_ordering_code1] Missing function docstring
projects/utils/__init__.py:165: [C0111(missing-docstring), get_ordering_code3] Missing function docstring
projects/utils/__init__.py:165: [R0912(too-many-branches), get_ordering_code3] Too many branches (13/12)
projects/utils/__init__.py:237: [C0111(missing-docstring), get_projects_breadcrumbs] Missing function docstring
projects/utils/__init__.py:245: [C0111(missing-docstring), get_job_projects_breadcrumbs] Missing function docstring
projects/utils/__init__.py:248: [C0111(missing-docstring), get_current_history] Missing function docstring
************* Module projects.notifications.overrides
projects/notifications/overrides.py:23: [C0301(line-too-long), ] Line too long (143/100)
projects/notifications/overrides.py:59: [C0305(trailing-newlines), ] Trailing newlines
projects/notifications/overrides.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/notifications/overrides.py:3: [E0401(import-error), ] Unable to import 'rest_framework.response'
projects/notifications/overrides.py:7: [C0111(missing-docstring), get_app_notificationeventtypes] Missing function docstring
projects/notifications/overrides.py:12: [W0612(unused-variable), get_app_notificationeventtypes] Unused variable 'event_class_name'
projects/notifications/overrides.py:40: [C0111(missing-docstring), get_notifications_views] Missing function docstring
projects/notifications/overrides.py:41: [E0401(import-error), get_notifications_views] Unable to import 'rest_framework.decorators'
projects/notifications/overrides.py:47: [W0613(unused-argument), get_notifications_views.get_notificationeventtypes] Unused argument 'request'
projects/notifications/overrides.py:47: [W0613(unused-argument), get_notifications_views.get_notificationeventtypes] Unused argument 'args'
projects/notifications/overrides.py:47: [W0613(unused-argument), get_notifications_views.get_notificationeventtypes] Unused argument 'kwargs'
projects/notifications/overrides.py:3: [C0411(wrong-import-order), ] third party import "from rest_framework.response import Response" should be placed before "from sol_notifications.utils import get_notificationevent_classes"
************* Module projects.notifications.__init__
projects/notifications/__init__.py:27: [C0301(line-too-long), ] Line too long (108/100)
projects/notifications/__init__.py:123: [C0301(line-too-long), ] Line too long (103/100)
projects/notifications/__init__.py:139: [C0301(line-too-long), ] Line too long (104/100)
projects/notifications/__init__.py:207: [C0301(line-too-long), ] Line too long (104/100)
projects/notifications/__init__.py:216: [C0301(line-too-long), ] Line too long (186/100)
projects/notifications/__init__.py:237: [C0301(line-too-long), ] Line too long (194/100)
projects/notifications/__init__.py:269: [C0301(line-too-long), ] Line too long (103/100)
projects/notifications/__init__.py:285: [C0301(line-too-long), ] Line too long (105/100)
projects/notifications/__init__.py:321: [C0301(line-too-long), ] Line too long (114/100)
projects/notifications/__init__.py:334: [C0301(line-too-long), ] Line too long (122/100)
projects/notifications/__init__.py:373: [C0301(line-too-long), ] Line too long (122/100)
projects/notifications/__init__.py:380: [C0301(line-too-long), ] Line too long (186/100)
projects/notifications/__init__.py:380: [C0326(bad-whitespace), ] Exactly one space required after comma
    def get_context(self, task_id, task_name, task_type,  job_id, job_name, job_type, new_owner_id, job_owner_id, job_status, projects, project_year, company_id, company_name, **kwargs):
                                                       ^
projects/notifications/__init__.py:402: [C0301(line-too-long), ] Line too long (194/100)
projects/notifications/__init__.py:402: [C0326(bad-whitespace), ] Exactly one space required after comma
    def get_event_listeners(self, task_id, task_name, task_type,  job_id, job_name, job_type, new_owner_id, job_owner_id, job_status, projects, project_year, company_id, company_name, **kwargs):
                                                               ^
projects/notifications/__init__.py:453: [C0301(line-too-long), ] Line too long (173/100)
projects/notifications/__init__.py:453: [C0326(bad-whitespace), ] Exactly one space required after comma
    def get_context(self, task_id, task_name, task_owner_id, task_type, company_id, company_name, job_id, job_name, job_type, job_status, projects, project_year,  **kwargs):
                                                                                                                                                                ^
projects/notifications/__init__.py:472: [C0301(line-too-long), ] Line too long (181/100)
projects/notifications/__init__.py:472: [C0326(bad-whitespace), ] Exactly one space required after comma
    def get_event_listeners(self, task_id, task_name, task_owner_id, task_type, company_id, company_name, job_id, job_name, job_type, job_status, projects, project_year,  **kwargs):
                                                                                                                                                                        ^
projects/notifications/__init__.py:516: [C0301(line-too-long), ] Line too long (109/100)
projects/notifications/__init__.py:558: [C0301(line-too-long), ] Line too long (105/100)
projects/notifications/__init__.py:576: [C0301(line-too-long), ] Line too long (101/100)
projects/notifications/__init__.py:578: [C0301(line-too-long), ] Line too long (125/100)
projects/notifications/__init__.py:602: [C0301(line-too-long), ] Line too long (102/100)
projects/notifications/__init__.py:635: [C0301(line-too-long), ] Line too long (120/100)
projects/notifications/__init__.py:652: [C0301(line-too-long), ] Line too long (112/100)
projects/notifications/__init__.py:702: [C0301(line-too-long), ] Line too long (111/100)
projects/notifications/__init__.py:741: [C0301(line-too-long), ] Line too long (111/100)
projects/notifications/__init__.py:803: [C0301(line-too-long), ] Line too long (101/100)
************* Module projects.notifications
projects/notifications/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
projects/notifications/__init__.py:4: [E0401(import-error), ] Unable to import 'cached_property'
projects/notifications/__init__.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
projects/notifications/__init__.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
projects/notifications/__init__.py:13: [C0111(missing-docstring), subscribe_distribution_list] Missing function docstring
projects/notifications/__init__.py:24: [C0111(missing-docstring), get_company_users_pk_qs] Missing function docstring
projects/notifications/__init__.py:30: [C0111(missing-docstring), NewNoteRecipentEvent] Missing class docstring
projects/notifications/__init__.py:66: [E1101(no-member), NewNoteRecipentEvent.get_event_listeners] Method 'note' has no 'note_recipients' member
projects/notifications/__init__.py:67: [E1101(no-member), NewNoteRecipentEvent.get_event_listeners] Method 'note' has no 'created_by' member
projects/notifications/__init__.py:72: [C0111(missing-docstring), NoteAddedOwnerNotificationEvent] Missing class docstring
projects/notifications/__init__.py:108: [R0913(too-many-arguments), NoteAddedOwnerNotificationEvent.get_context] Too many arguments (9/5)
projects/notifications/__init__.py:108: [W0221(arguments-differ), NoteAddedOwnerNotificationEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:136: [R0913(too-many-arguments), NoteAddedOwnerNotificationEvent.get_event_listeners] Too many arguments (9/5)
projects/notifications/__init__.py:136: [R0914(too-many-locals), NoteAddedOwnerNotificationEvent.get_event_listeners] Too many local variables (16/15)
projects/notifications/__init__.py:136: [W0221(arguments-differ), NoteAddedOwnerNotificationEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:143: [W0143(comparison-with-callable), NoteAddedOwnerNotificationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:150: [W0143(comparison-with-callable), NoteAddedOwnerNotificationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:137: [W0613(unused-argument), NoteAddedOwnerNotificationEvent.get_event_listeners] Unused argument 'note_id'
projects/notifications/__init__.py:139: [W0613(unused-argument), NoteAddedOwnerNotificationEvent.get_event_listeners] Unused argument 'object_id'
projects/notifications/__init__.py:139: [W0613(unused-argument), NoteAddedOwnerNotificationEvent.get_event_listeners] Unused argument 'object_str'
projects/notifications/__init__.py:139: [W0613(unused-argument), NoteAddedOwnerNotificationEvent.get_event_listeners] Unused argument 'object_model_name'
projects/notifications/__init__.py:139: [W0613(unused-argument), NoteAddedOwnerNotificationEvent.get_event_listeners] Unused argument 'body'
projects/notifications/__init__.py:162: [R0205(useless-object-inheritance), ProjectsEventMixin] Class 'ProjectsEventMixin' inherits from object, can be safely removed from bases in python3
projects/notifications/__init__.py:166: [C0111(missing-docstring), ProjectsEventMixin.event_information] Missing method docstring
projects/notifications/__init__.py:162: [R0903(too-few-public-methods), ProjectsEventMixin] Too few public methods (1/2)
projects/notifications/__init__.py:178: [C0111(missing-docstring), TaskOpenedEvent] Missing class docstring
projects/notifications/__init__.py:216: [R0913(too-many-arguments), TaskOpenedEvent.get_context] Too many arguments (14/5)
projects/notifications/__init__.py:216: [R0914(too-many-locals), TaskOpenedEvent.get_context] Too many local variables (16/15)
projects/notifications/__init__.py:216: [W0221(arguments-differ), TaskOpenedEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:237: [R0913(too-many-arguments), TaskOpenedEvent.get_event_listeners] Too many arguments (14/5)
projects/notifications/__init__.py:237: [R0914(too-many-locals), TaskOpenedEvent.get_event_listeners] Too many local variables (20/15)
projects/notifications/__init__.py:237: [W0221(arguments-differ), TaskOpenedEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:239: [W0143(comparison-with-callable), TaskOpenedEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:244: [W0143(comparison-with-callable), TaskOpenedEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:250: [W0143(comparison-with-callable), TaskOpenedEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'task_name'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'task_type'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'job_name'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'job_type'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'job_status'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'projects'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'project_year'
projects/notifications/__init__.py:237: [W0613(unused-argument), TaskOpenedEvent.get_event_listeners] Unused argument 'company_name'
projects/notifications/__init__.py:262: [C0111(missing-docstring), TaskClosedEvent] Missing class docstring
projects/notifications/__init__.py:278: [C0111(missing-docstring), TaskReopenedEvent] Missing class docstring
projects/notifications/__init__.py:293: [C0111(missing-docstring), JobAssignationEvent] Missing class docstring
projects/notifications/__init__.py:321: [R0913(too-many-arguments), JobAssignationEvent.get_context] Too many arguments (8/5)
projects/notifications/__init__.py:321: [W0221(arguments-differ), JobAssignationEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:321: [W0613(unused-argument), JobAssignationEvent.get_context] Unused argument 'job_status'
projects/notifications/__init__.py:334: [R0913(too-many-arguments), JobAssignationEvent.get_event_listeners] Too many arguments (8/5)
projects/notifications/__init__.py:334: [W0221(arguments-differ), JobAssignationEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:336: [W0143(comparison-with-callable), JobAssignationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:334: [W0613(unused-argument), JobAssignationEvent.get_event_listeners] Unused argument 'job_name'
projects/notifications/__init__.py:334: [W0613(unused-argument), JobAssignationEvent.get_event_listeners] Unused argument 'job_type'
projects/notifications/__init__.py:334: [W0613(unused-argument), JobAssignationEvent.get_event_listeners] Unused argument 'job_status'
projects/notifications/__init__.py:334: [W0613(unused-argument), JobAssignationEvent.get_event_listeners] Unused argument 'projects'
projects/notifications/__init__.py:334: [W0613(unused-argument), JobAssignationEvent.get_event_listeners] Unused argument 'project_year'
projects/notifications/__init__.py:343: [C0111(missing-docstring), TaskAssignationEvent] Missing class docstring
projects/notifications/__init__.py:380: [R0913(too-many-arguments), TaskAssignationEvent.get_context] Too many arguments (14/5)
projects/notifications/__init__.py:380: [R0914(too-many-locals), TaskAssignationEvent.get_context] Too many local variables (17/15)
projects/notifications/__init__.py:380: [W0221(arguments-differ), TaskAssignationEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:402: [R0913(too-many-arguments), TaskAssignationEvent.get_event_listeners] Too many arguments (14/5)
projects/notifications/__init__.py:402: [R0914(too-many-locals), TaskAssignationEvent.get_event_listeners] Too many local variables (20/15)
projects/notifications/__init__.py:402: [W0221(arguments-differ), TaskAssignationEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:404: [W0143(comparison-with-callable), TaskAssignationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:409: [W0143(comparison-with-callable), TaskAssignationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:415: [W0143(comparison-with-callable), TaskAssignationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'task_name'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'task_type'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'job_name'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'job_type'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'job_status'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'projects'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'project_year'
projects/notifications/__init__.py:402: [W0613(unused-argument), TaskAssignationEvent.get_event_listeners] Unused argument 'company_name'
projects/notifications/__init__.py:426: [C0111(missing-docstring), TaskBlockCreationEvent] Missing class docstring
projects/notifications/__init__.py:453: [R0913(too-many-arguments), TaskBlockCreationEvent.get_context] Too many arguments (13/5)
projects/notifications/__init__.py:453: [W0221(arguments-differ), TaskBlockCreationEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:453: [W0613(unused-argument), TaskBlockCreationEvent.get_context] Unused argument 'company_id'
projects/notifications/__init__.py:472: [R0913(too-many-arguments), TaskBlockCreationEvent.get_event_listeners] Too many arguments (13/5)
projects/notifications/__init__.py:472: [R0914(too-many-locals), TaskBlockCreationEvent.get_event_listeners] Too many local variables (18/15)
projects/notifications/__init__.py:472: [W0221(arguments-differ), TaskBlockCreationEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:474: [W0143(comparison-with-callable), TaskBlockCreationEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'task_name'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'task_type'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'company_id'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'company_name'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'job_name'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'job_type'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'job_status'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'projects'
projects/notifications/__init__.py:472: [W0613(unused-argument), TaskBlockCreationEvent.get_event_listeners] Unused argument 'project_year'
projects/notifications/__init__.py:482: [C0111(missing-docstring), TaskBlockEndEvent] Missing class docstring
projects/notifications/__init__.py:509: [C0111(missing-docstring), JobLinkedEvent] Missing class docstring
projects/notifications/__init__.py:536: [R0913(too-many-arguments), JobLinkedEvent.get_context] Too many arguments (11/5)
projects/notifications/__init__.py:536: [W0221(arguments-differ), JobLinkedEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:557: [R0913(too-many-arguments), JobLinkedEvent.get_event_listeners] Too many arguments (11/5)
projects/notifications/__init__.py:557: [R0914(too-many-locals), JobLinkedEvent.get_event_listeners] Too many local variables (16/15)
projects/notifications/__init__.py:557: [W0221(arguments-differ), JobLinkedEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:563: [W0143(comparison-with-callable), JobLinkedEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:565: [W0143(comparison-with-callable), JobLinkedEvent.get_event_listeners] Comparing against a callable, did you omit the parenthesis?
projects/notifications/__init__.py:558: [W0613(unused-argument), JobLinkedEvent.get_event_listeners] Unused argument 'job_name'
projects/notifications/__init__.py:558: [W0613(unused-argument), JobLinkedEvent.get_event_listeners] Unused argument 'job_type'
projects/notifications/__init__.py:558: [W0613(unused-argument), JobLinkedEvent.get_event_listeners] Unused argument 'job_status'
projects/notifications/__init__.py:558: [W0613(unused-argument), JobLinkedEvent.get_event_listeners] Unused argument 'projects'
projects/notifications/__init__.py:558: [W0613(unused-argument), JobLinkedEvent.get_event_listeners] Unused argument 'project_year'
projects/notifications/__init__.py:559: [W0613(unused-argument), JobLinkedEvent.get_event_listeners] Unused argument 'linked_job_name'
projects/notifications/__init__.py:573: [C0111(missing-docstring), BaseTaskLinkedEvent] Missing class docstring
projects/notifications/__init__.py:575: [C0111(missing-docstring), BaseTaskLinkedEvent.get_context] Missing method docstring
projects/notifications/__init__.py:575: [R0913(too-many-arguments), BaseTaskLinkedEvent.get_context] Too many arguments (21/5)
projects/notifications/__init__.py:575: [R0914(too-many-locals), BaseTaskLinkedEvent.get_context] Too many local variables (23/15)
projects/notifications/__init__.py:584: [E1101(no-member), BaseTaskLinkedEvent.get_context] Instance of 'BaseTaskLinkedEvent' has no 'created_by_id' member
projects/notifications/__init__.py:585: [E1101(no-member), BaseTaskLinkedEvent.get_context] Instance of 'BaseTaskLinkedEvent' has no 'created_by' member
projects/notifications/__init__.py:595: [E1101(no-member), BaseTaskLinkedEvent.get_context] Instance of 'BaseTaskLinkedEvent' has no 'app_settings' member
projects/notifications/__init__.py:602: [E1101(no-member), BaseTaskLinkedEvent.get_context] Instance of 'BaseTaskLinkedEvent' has no 'app_settings' member
projects/notifications/__init__.py:576: [W0613(unused-argument), BaseTaskLinkedEvent.get_context] Unused argument 'task_company_id'
projects/notifications/__init__.py:577: [W0613(unused-argument), BaseTaskLinkedEvent.get_context] Unused argument 'job_type'
projects/notifications/__init__.py:578: [W0613(unused-argument), BaseTaskLinkedEvent.get_context] Unused argument 'target_task_company_id'
projects/notifications/__init__.py:578: [W0613(unused-argument), BaseTaskLinkedEvent.get_context] Unused argument 'target_task_company_name'
projects/notifications/__init__.py:575: [W0613(unused-argument), BaseTaskLinkedEvent.get_context] Unused argument 'kwargs'
projects/notifications/__init__.py:606: [C0111(missing-docstring), BaseTaskLinkedEvent.get_event_listeners] Missing method docstring
projects/notifications/__init__.py:614: [E1101(no-member), BaseTaskLinkedEvent.get_event_listeners] Instance of 'BaseTaskLinkedEvent' has no 'created_by_id' member
projects/notifications/__init__.py:619: [E1101(no-member), BaseTaskLinkedEvent.get_event_listeners] Instance of 'BaseTaskLinkedEvent' has no 'created_by_id' member
projects/notifications/__init__.py:624: [E1101(no-member), BaseTaskLinkedEvent.get_event_listeners] Instance of 'BaseTaskLinkedEvent' has no 'created_by_id' member
projects/notifications/__init__.py:629: [E1101(no-member), BaseTaskLinkedEvent.get_event_listeners] Instance of 'BaseTaskLinkedEvent' has no 'created_by_id' member
projects/notifications/__init__.py:636: [E1101(no-member), BaseTaskLinkedEvent.get_event_listeners] Instance of 'BaseTaskLinkedEvent' has no 'created_by_id' member
projects/notifications/__init__.py:606: [W0613(unused-argument), BaseTaskLinkedEvent.get_event_listeners] Unused argument 'args'
projects/notifications/__init__.py:606: [R0912(too-many-branches), BaseTaskLinkedEvent.get_event_listeners] Too many branches (16/12)
projects/notifications/__init__.py:645: [C0111(missing-docstring), TaskLinkedEvent] Missing class docstring
projects/notifications/__init__.py:695: [C0111(missing-docstring), LinkedTaskClosedEvent] Missing class docstring
projects/notifications/__init__.py:730: [C0111(missing-docstring), LinkedTaskBlockUnblockEvent] Missing class docstring
projects/notifications/__init__.py:768: [W0221(arguments-differ), LinkedTaskBlockUnblockEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:775: [C0111(missing-docstring), ChangeLogEvent] Missing class docstring
projects/notifications/__init__.py:794: [W0221(arguments-differ), ChangeLogEvent.get_context] Parameters differ from overridden 'get_context' method
projects/notifications/__init__.py:794: [W0613(unused-argument), ChangeLogEvent.get_context] Unused argument 'user_ids'
projects/notifications/__init__.py:803: [W0221(arguments-differ), ChangeLogEvent.get_event_listeners] Parameters differ from overridden 'get_event_listeners' method
projects/notifications/__init__.py:803: [W0613(unused-argument), ChangeLogEvent.get_event_listeners] Unused argument 'changelog_text'
projects/notifications/__init__.py:803: [W0613(unused-argument), ChangeLogEvent.get_event_listeners] Unused argument 'link_url'
projects/notifications/__init__.py:803: [W0613(unused-argument), ChangeLogEvent.get_event_listeners] Unused argument 'link_text'
************* Module orange.tests
orange/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange.urls
orange/urls.py:29: [C0301(line-too-long), ] Line too long (112/100)
orange/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange/urls.py:3: [E0401(import-error), ] Unable to import 'django.conf'
orange/urls.py:8: [E0401(import-error), ] Unable to import 'rest_framework_bulk.routes'
orange/urls.py:10: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange/urls.py:14: [C0103(invalid-name), ] Constant name "base_pattern" doesn't conform to UPPER_CASE naming style
orange/urls.py:15: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
orange/urls.py:8: [C0411(wrong-import-order), ] third party import "from rest_framework_bulk.routes import BulkRouter" should be placed before "from sol.api.lib import RestifyModels"
************* Module orange.apps
orange/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange/apps.py:6: [C0111(missing-docstring), OrangeConfig] Missing class docstring
orange/apps.py:9: [C0111(missing-docstring), OrangeConfig.ready] Missing method docstring
orange/apps.py:12: [W0613(unused-argument), OrangeConfig.ready.has_periodic_email_permission] Unused argument 'cls'
orange/apps.py:9: [R0201(no-self-use), OrangeConfig.ready] Method could be a function
orange/apps.py:6: [R0903(too-few-public-methods), OrangeConfig] Too few public methods (1/2)
************* Module orange.views
orange/views.py:74: [C0301(line-too-long), ] Line too long (118/100)
orange/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/views.py:4: [E0401(import-error), ] Unable to import 'rest_framework.views'
orange/views.py:5: [E0401(import-error), ] Unable to import 'django.conf'
orange/views.py:6: [E0401(import-error), ] Unable to import 'django.http'
orange/views.py:8: [E0401(import-error), ] Unable to import 'django'
orange/views.py:9: [E0611(no-name-in-module), ] No name 'filters' in module 'url_filter'
orange/views.py:9: [E0401(import-error), ] Unable to import 'url_filter.filters'
orange/views.py:13: [E0401(import-error), ] Unable to import 'rest_framework'
orange/views.py:14: [E0401(import-error), ] Unable to import 'rest_framework.response'
orange/views.py:15: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
orange/views.py:18: [W0401(wildcard-import), ] Wildcard import orange.serializers
orange/views.py:23: [C0111(missing-docstring), ConfigPeriodicSupervisorsEmail] Missing class docstring
orange/views.py:28: [C0111(missing-docstring), ConfigPeriodicSupervisorsEmail.get] Missing method docstring
orange/views.py:34: [W0702(bare-except), ConfigPeriodicSupervisorsEmail.get] No exception type(s) specified
orange/views.py:28: [W0613(unused-argument), ConfigPeriodicSupervisorsEmail.get] Unused argument 'args'
orange/views.py:28: [W0613(unused-argument), ConfigPeriodicSupervisorsEmail.get] Unused argument 'kwargs'
orange/views.py:42: [C0111(missing-docstring), ConfigPeriodicSupervisorsEmail.post] Missing method docstring
orange/views.py:59: [W0703(broad-except), ConfigPeriodicSupervisorsEmail.post] Catching too general exception Exception
orange/views.py:59: [C0103(invalid-name), ConfigPeriodicSupervisorsEmail.post] Variable name "e" doesn't conform to snake_case naming style
orange/views.py:42: [W0613(unused-argument), ConfigPeriodicSupervisorsEmail.post] Unused argument 'args'
orange/views.py:42: [W0613(unused-argument), ConfigPeriodicSupervisorsEmail.post] Unused argument 'kwargs'
orange/views.py:69: [C0111(missing-docstring), DistributionListFilterSet] Missing class docstring
orange/views.py:72: [C0111(missing-docstring), DistributionListFilterSet.Meta] Missing class docstring
orange/views.py:73: [E0601(used-before-assignment), DistributionListFilterSet.Meta] Using variable 'DistributionListViewSet' before assignment
orange/views.py:72: [R0903(too-few-public-methods), DistributionListFilterSet.Meta] Too few public methods (0/2)
orange/views.py:69: [R0903(too-few-public-methods), DistributionListFilterSet] Too few public methods (0/2)
orange/views.py:77: [C0111(missing-docstring), DistributionListViewSet] Missing class docstring
orange/views.py:77: [R0903(too-few-public-methods), DistributionListViewSet] Too few public methods (0/2)
orange/views.py:18: [W0614(unused-wildcard-import), ] Unused import DistributionListSerializer from wildcard import
orange/views.py:18: [W0614(unused-wildcard-import), ] Unused import serializers from wildcard import
orange/views.py:13: [C0411(wrong-import-order), ] third party import "from rest_framework import status" should be placed before "from sol.api.url_filter import ModelFilterSet"
orange/views.py:14: [C0411(wrong-import-order), ] third party import "from rest_framework.response import Response" should be placed before "from sol.api.url_filter import ModelFilterSet"
orange/views.py:15: [C0411(wrong-import-order), ] third party import "from rest_framework.exceptions import PermissionDenied" should be placed before "from sol.api.url_filter import ModelFilterSet"
orange/views.py:13: [C0412(ungrouped-imports), ] Imports from package rest_framework are not grouped
************* Module orange.serializers
orange/serializers.py:8: [C0304(missing-final-newline), ] Final newline missing
orange/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/serializers.py:2: [E0401(import-error), ] Unable to import 'rest_framework'
orange/serializers.py:7: [C0111(missing-docstring), DistributionListSerializer] Missing class docstring
orange/serializers.py:7: [E0602(undefined-variable), DistributionListSerializer] Undefined variable 'DistributionListSerializer'
orange/serializers.py:7: [R0903(too-few-public-methods), DistributionListSerializer] Too few public methods (0/2)
orange/serializers.py:2: [C0411(wrong-import-order), ] third party import "from rest_framework import serializers" should be placed before "from sol.api.lib import RestifyModels"
************* Module orange.admin
orange/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/admin.py:1: [E0401(import-error), ] Unable to import 'django.contrib'
orange/admin.py:1: [W0611(unused-import), ] Unused admin imported from django.contrib
************* Module orange
orange/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/__init__.py:3: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange.async_jobs
orange/async_jobs.py:34: [C0301(line-too-long), ] Line too long (134/100)
orange/async_jobs.py:36: [C0301(line-too-long), ] Line too long (119/100)
orange/async_jobs.py:55: [C0305(trailing-newlines), ] Trailing newlines
orange/async_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/async_jobs.py:4: [E0401(import-error), ] Unable to import 'django.contrib.auth'
orange/async_jobs.py:5: [E0401(import-error), ] Unable to import 'django.core.mail'
orange/async_jobs.py:6: [E0401(import-error), ] Unable to import 'django.conf'
orange/async_jobs.py:8: [E0401(import-error), ] Unable to import 'django.template'
orange/async_jobs.py:9: [E0401(import-error), ] Unable to import 'django.core.mail'
orange/async_jobs.py:9: [W0404(reimported), ] Reimport 'EmailMessage' (imported line 5)
orange/async_jobs.py:12: [C0111(missing-docstring), PeriodicSupervisorsEmail] Missing class docstring
orange/async_jobs.py:12: [R0205(useless-object-inheritance), PeriodicSupervisorsEmail] Class 'PeriodicSupervisorsEmail' inherits from object, can be safely removed from bases in python3
orange/async_jobs.py:38: [W0703(broad-except), PeriodicSupervisorsEmail.__init__] Catching too general exception Exception
orange/async_jobs.py:12: [R0903(too-few-public-methods), PeriodicSupervisorsEmail] Too few public methods (1/2)
orange/async_jobs.py:8: [C0411(wrong-import-order), ] third party import "from django.template import Template, Context" should be placed before "from sol.utils.registries import job_registry"
orange/async_jobs.py:9: [C0411(wrong-import-order), ] third party import "from django.core.mail import EmailMessage" should be placed before "from sol.utils.registries import job_registry"
orange/async_jobs.py:8: [C0412(ungrouped-imports), ] Imports from package django are not grouped
************* Module orange.models_api
orange/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/models_api.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
orange/models_api.py:5: [E0401(import-error), ] Unable to import 'rest_framework.settings'
orange/models_api.py:10: [W0401(wildcard-import), ] Wildcard import orange.models
orange/models_api.py:13: [C0111(missing-docstring), get_queryset_distributionlist] Missing function docstring
orange/models_api.py:13: [W0613(unused-argument), get_queryset_distributionlist] Unused argument 'request'
orange/models_api.py:18: [C0111(missing-docstring), get_queryset_distributionlist_viewset] Missing function docstring
orange/models_api.py:19: [C0103(invalid-name), get_queryset_distributionlist_viewset] Variable name "qs" doesn't conform to snake_case naming style
orange/models_api.py:23: [C0111(missing-docstring), get_api_config] Missing function docstring
orange/models_api.py:23: [W0613(unused-argument), get_api_config] Unused argument 'app_models'
orange/models_api.py:29: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
orange/models_api.py:4: [W0611(unused-import), ] Unused Prefetch imported from django.db.models
orange/models_api.py:5: [W0611(unused-import), ] Unused api_settings imported from rest_framework.settings
orange/models_api.py:8: [W0611(unused-import), ] Unused SolContentTypeSerializerMixin imported from sol.api.contenttypes
orange/models_api.py:8: [W0611(unused-import), ] Unused ContentTypeDjangoFilterBackend imported from sol.api.contenttypes
orange/models_api.py:9: [W0611(unused-import), ] Unused DjangoFilterBackend imported from sol.api.url_filter
orange/models_api.py:10: [W0614(unused-wildcard-import), ] Unused import models from wildcard import
orange/models_api.py:10: [W0614(unused-wildcard-import), ] Unused import settings from wildcard import
orange/models_api.py:10: [W0614(unused-wildcard-import), ] Unused import BaseSolModel from wildcard import
orange/models_api.py:10: [W0614(unused-wildcard-import), ] Unused import PermissionsSolModel from wildcard import
************* Module orange.models
orange/models.py:14: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                              models.PROTECT,
                              ^    |
orange/models.py:15: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                              blank=False,
                              ^    |
orange/models.py:16: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                              null=False,
                              ^    |
orange/models.py:17: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                              related_name='supervisor_distribution_lists',
                              ^    |
orange/models.py:18: [C0330(bad-continuation), ] Wrong continued indentation (add 5 spaces).
                              help_text='The supervisor owner of the current distribution list')
                              ^    |
orange/models.py:21: [C0330(bad-continuation), ] Wrong continued indentation (remove 7 spaces).
                                   help_text='Note')
                            |      ^
orange/models.py:27: [C0305(trailing-newlines), ] Trailing newlines
orange/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange/models.py:4: [E0401(import-error), ] Unable to import 'django.conf'
orange/models.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange/models.py:10: [C0111(missing-docstring), DistributionList] Missing class docstring
orange/models.py:5: [W0611(unused-import), ] Unused PermissionsSolModel imported from sol.models
orange/models.py:6: [C0411(wrong-import-order), ] third party import "from django.utils.translation import ugettext_lazy as _" should be placed before "from sol.models import BaseSolModel, PermissionsSolModel"
orange/models.py:6: [C0412(ungrouped-imports), ] Imports from package django are not grouped
************* Module orange.migrations.0002_create_system_user
orange/migrations/0002_create_system_user.py:1: [C0103(invalid-name), ] Module name "0002_create_system_user" doesn't conform to snake_case naming style
orange/migrations/0002_create_system_user.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/migrations/0002_create_system_user.py:5: [E0401(import-error), ] Unable to import 'django.conf'
orange/migrations/0002_create_system_user.py:6: [E0401(import-error), ] Unable to import 'django.contrib.auth'
orange/migrations/0002_create_system_user.py:7: [E0401(import-error), ] Unable to import 'django.core.exceptions'
orange/migrations/0002_create_system_user.py:8: [E0401(import-error), ] Unable to import 'django.db'
orange/migrations/0002_create_system_user.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange/migrations/0002_create_system_user.py:10: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
orange/migrations/0002_create_system_user.py:13: [C0111(missing-docstring), create_system_user] Missing function docstring
orange/migrations/0002_create_system_user.py:13: [W0613(unused-argument), create_system_user] Unused argument 'schema_editor'
orange/migrations/0002_create_system_user.py:31: [C0111(missing-docstring), delete_create_system_user] Missing function docstring
orange/migrations/0002_create_system_user.py:31: [W0613(unused-argument), delete_create_system_user] Unused argument 'schema_editor'
orange/migrations/0002_create_system_user.py:45: [C0111(missing-docstring), Migration] Missing class docstring
orange/migrations/0002_create_system_user.py:45: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
orange/migrations/0002_create_system_user.py:8: [W0611(unused-import), ] Unused models imported from django.db
************* Module orange.migrations.0001_initial
orange/migrations/0001_initial.py:22: [C0301(line-too-long), ] Line too long (114/100)
orange/migrations/0001_initial.py:23: [C0301(line-too-long), ] Line too long (125/100)
orange/migrations/0001_initial.py:24: [C0301(line-too-long), ] Line too long (132/100)
orange/migrations/0001_initial.py:25: [C0301(line-too-long), ] Line too long (140/100)
orange/migrations/0001_initial.py:26: [C0301(line-too-long), ] Line too long (105/100)
orange/migrations/0001_initial.py:27: [C0301(line-too-long), ] Line too long (240/100)
orange/migrations/0001_initial.py:28: [C0301(line-too-long), ] Line too long (252/100)
orange/migrations/0001_initial.py:29: [C0301(line-too-long), ] Line too long (237/100)
orange/migrations/0001_initial.py:30: [C0301(line-too-long), ] Line too long (141/100)
orange/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.conf'
orange/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.db'
orange/migrations/0001_initial.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
orange/migrations/0001_initial.py:10: [C0111(missing-docstring), Migration] Missing class docstring
orange/migrations/0001_initial.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_dynamicreports.utils
sol_dynamicreports/utils.py:13: [C0301(line-too-long), ] Line too long (114/100)
sol_dynamicreports/utils.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/utils.py:3: [E0401(import-error), ] Unable to import 'django.conf'
sol_dynamicreports/utils.py:4: [E0401(import-error), ] Unable to import 'django.utils'
sol_dynamicreports/utils.py:5: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol_dynamicreports/utils.py:51: [C0111(missing-docstring), get_reports_view_class] Missing function docstring
sol_dynamicreports/utils.py:64: [C0111(missing-docstring), get_reports_fields] Missing function docstring
sol_dynamicreports/utils.py:82: [C0111(missing-docstring), get_columns_fields_labels_dict] Missing function docstring
sol_dynamicreports/utils.py:87: [W0612(unused-variable), get_columns_fields_labels_dict] Unused variable 'model_config'
sol_dynamicreports/utils.py:98: [C0111(missing-docstring), force_str_empty_if_none] Missing function docstring
sol_dynamicreports/utils.py:102: [C0111(missing-docstring), parse_url_filters] Missing function docstring
sol_dynamicreports/utils.py:1: [W0611(unused-import), ] Unused defaultdict imported from collections
************* Module sol_dynamicreports.apps
sol_dynamicreports/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol_dynamicreports/apps.py:6: [C0111(missing-docstring), SolDynamicReportsConfig] Missing class docstring
sol_dynamicreports/apps.py:6: [R0903(too-few-public-methods), SolDynamicReportsConfig] Too few public methods (0/2)
************* Module sol_dynamicreports.mixins
sol_dynamicreports/mixins.py:30: [C0301(line-too-long), ] Line too long (107/100)
sol_dynamicreports/mixins.py:32: [C0301(line-too-long), ] Line too long (107/100)
sol_dynamicreports/mixins.py:56: [C0301(line-too-long), ] Line too long (102/100)
sol_dynamicreports/mixins.py:67: [C0301(line-too-long), ] Line too long (114/100)
sol_dynamicreports/mixins.py:82: [C0301(line-too-long), ] Line too long (104/100)
sol_dynamicreports/mixins.py:198: [C0301(line-too-long), ] Line too long (113/100)
sol_dynamicreports/mixins.py:244: [C0301(line-too-long), ] Line too long (114/100)
sol_dynamicreports/mixins.py:343: [C0301(line-too-long), ] Line too long (105/100)
sol_dynamicreports/mixins.py:357: [C0301(line-too-long), ] Line too long (102/100)
sol_dynamicreports/mixins.py:381: [C0301(line-too-long), ] Line too long (119/100)
sol_dynamicreports/mixins.py:393: [C0301(line-too-long), ] Line too long (103/100)
sol_dynamicreports/mixins.py:410: [C0301(line-too-long), ] Line too long (114/100)
sol_dynamicreports/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/mixins.py:6: [E0401(import-error), ] Unable to import 'croniter'
sol_dynamicreports/mixins.py:7: [E0401(import-error), ] Unable to import 'django'
sol_dynamicreports/mixins.py:8: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_dynamicreports/mixins.py:9: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol_dynamicreports/mixins.py:10: [E0401(import-error), ] Unable to import 'django.utils'
sol_dynamicreports/mixins.py:11: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol_dynamicreports/mixins.py:12: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_dynamicreports/mixins.py:13: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_dynamicreports/mixins.py:14: [E0401(import-error), ] Unable to import 'rest_framework'
sol_dynamicreports/mixins.py:15: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol_dynamicreports/mixins.py:16: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol_dynamicreports/mixins.py:17: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol_dynamicreports/mixins.py:18: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_dynamicreports/mixins.py:19: [E0401(import-error), ] Unable to import 'rest_framework'
sol_dynamicreports/mixins.py:20: [E0611(no-name-in-module), ] No name 'filters' in module 'url_filter'
sol_dynamicreports/mixins.py:20: [E0401(import-error), ] Unable to import 'url_filter.filters'
sol_dynamicreports/mixins.py:37: [C0111(missing-docstring), ReportViewSetMixin] Missing class docstring
sol_dynamicreports/mixins.py:37: [R0205(useless-object-inheritance), ReportViewSetMixin] Class 'ReportViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_dynamicreports/mixins.py:39: [C0111(missing-docstring), ReportViewSetMixin.clone] Missing method docstring
sol_dynamicreports/mixins.py:39: [W0613(unused-argument), ReportViewSetMixin.clone] Unused argument 'args'
sol_dynamicreports/mixins.py:39: [W0613(unused-argument), ReportViewSetMixin.clone] Unused argument 'kwargs'
sol_dynamicreports/mixins.py:52: [W0212(protected-access), ReportViewSetMixin.types] Access to a protected member _meta of a client class
sol_dynamicreports/mixins.py:49: [W0613(unused-argument), ReportViewSetMixin.types] Unused argument 'request'
sol_dynamicreports/mixins.py:49: [W0613(unused-argument), ReportViewSetMixin.types] Unused argument 'args'
sol_dynamicreports/mixins.py:49: [W0613(unused-argument), ReportViewSetMixin.types] Unused argument 'kwargs'
sol_dynamicreports/mixins.py:68: [C0103(invalid-name), ReportViewSetMixin.as_excel] Argument name "pk" doesn't conform to snake_case naming style
sol_dynamicreports/mixins.py:68: [W1113(keyword-arg-before-vararg), ReportViewSetMixin.as_excel] Keyword argument before variable positional arguments list in the definition of as_excel function
sol_dynamicreports/mixins.py:75: [W0212(protected-access), ReportViewSetMixin.as_excel] Access to a protected member _meta of a client class
sol_dynamicreports/mixins.py:79: [R1705(no-else-return), ReportViewSetMixin.as_excel] Unnecessary "else" after "return"
sol_dynamicreports/mixins.py:68: [W0613(unused-argument), ReportViewSetMixin.as_excel] Unused argument 'pk'
sol_dynamicreports/mixins.py:68: [W0613(unused-argument), ReportViewSetMixin.as_excel] Unused argument 'args'
sol_dynamicreports/mixins.py:68: [W0613(unused-argument), ReportViewSetMixin.as_excel] Unused argument 'kwargs'
sol_dynamicreports/mixins.py:91: [C0103(invalid-name), ReportViewSetMixin.send_report] Argument name "pk" doesn't conform to snake_case naming style
sol_dynamicreports/mixins.py:91: [W1113(keyword-arg-before-vararg), ReportViewSetMixin.send_report] Keyword argument before variable positional arguments list in the definition of send_report function
sol_dynamicreports/mixins.py:91: [R0914(too-many-locals), ReportViewSetMixin.send_report] Too many local variables (24/15)
sol_dynamicreports/mixins.py:151: [W0212(protected-access), ReportViewSetMixin.send_report] Access to a protected member _meta of a client class
sol_dynamicreports/mixins.py:91: [R0912(too-many-branches), ReportViewSetMixin.send_report] Too many branches (23/12)
sol_dynamicreports/mixins.py:91: [R0915(too-many-statements), ReportViewSetMixin.send_report] Too many statements (65/50)
sol_dynamicreports/mixins.py:216: [W0613(unused-argument), ReportViewSetMixin.show_scheduled] Unused argument 'request'
sol_dynamicreports/mixins.py:216: [W0613(unused-argument), ReportViewSetMixin.show_scheduled] Unused argument 'args'
sol_dynamicreports/mixins.py:269: [W0613(unused-argument), ReportViewSetMixin.remove_schedulation] Unused argument 'args'
sol_dynamicreports/mixins.py:269: [W0613(unused-argument), ReportViewSetMixin.remove_schedulation] Unused argument 'kwargs'
sol_dynamicreports/mixins.py:269: [R0201(no-self-use), ReportViewSetMixin.remove_schedulation] Method could be a function
sol_dynamicreports/mixins.py:298: [C0111(missing-docstring), LabelFilter] Missing class docstring
sol_dynamicreports/mixins.py:302: [C0111(missing-docstring), LabelFilter.filter_icontains_for_django] Missing method docstring
sol_dynamicreports/mixins.py:304: [W0212(protected-access), LabelFilter.filter_icontains_for_django] Access to a protected member _meta of a client class
sol_dynamicreports/mixins.py:327: [C0103(invalid-name), LabelFilter.filter_icontains_for_django] Variable name "f" doesn't conform to snake_case naming style
sol_dynamicreports/mixins.py:320: [W0612(unused-variable), LabelFilter.filter_icontains_for_django] Unused variable 'model'
sol_dynamicreports/mixins.py:298: [R0903(too-few-public-methods), LabelFilter] Too few public methods (1/2)
sol_dynamicreports/mixins.py:331: [C0111(missing-docstring), ReportColumnsViewSetMixin] Missing class docstring
sol_dynamicreports/mixins.py:331: [R0205(useless-object-inheritance), ReportColumnsViewSetMixin] Class 'ReportColumnsViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_dynamicreports/mixins.py:340: [C0111(missing-docstring), ReportColumnsViewSetMixin.get_filter_set] Missing method docstring
sol_dynamicreports/mixins.py:356: [C0111(missing-docstring), ReportColumnsViewSetMixin.get_label_filter] Missing method docstring
sol_dynamicreports/mixins.py:367: [W0212(protected-access), ReportColumnsViewSetMixin.all] Access to a protected member _meta of a client class
sol_dynamicreports/mixins.py:374: [C0103(invalid-name), ReportColumnsViewSetMixin.all] Variable name "e" doesn't conform to snake_case naming style
sol_dynamicreports/mixins.py:380: [C0103(invalid-name), ReportColumnsViewSetMixin.all] Variable name "e" doesn't conform to snake_case naming style
sol_dynamicreports/mixins.py:361: [W0613(unused-argument), ReportColumnsViewSetMixin.all] Unused argument 'args'
sol_dynamicreports/mixins.py:361: [W0613(unused-argument), ReportColumnsViewSetMixin.all] Unused argument 'kwargs'
sol_dynamicreports/mixins.py:374: [W0612(unused-variable), ReportColumnsViewSetMixin.all] Unused variable 'e'
sol_dynamicreports/mixins.py:408: [C0111(missing-docstring), ReportSerializerMixin] Missing class docstring
sol_dynamicreports/mixins.py:408: [R0205(useless-object-inheritance), ReportSerializerMixin] Class 'ReportSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_dynamicreports/mixins.py:416: [C0111(missing-docstring), ReportSerializerMixin.to_internal_value] Missing method docstring
sol_dynamicreports/mixins.py:408: [R0903(too-few-public-methods), ReportSerializerMixin] Too few public methods (1/2)
sol_dynamicreports/mixins.py:421: [C0111(missing-docstring), ReportColumnsSerializerMixin] Missing class docstring
sol_dynamicreports/mixins.py:421: [R0205(useless-object-inheritance), ReportColumnsSerializerMixin] Class 'ReportColumnsSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_dynamicreports/mixins.py:427: [W0212(protected-access), ReportColumnsSerializerMixin._fields_labels_dict] Access to a protected member _meta of a client class
sol_dynamicreports/mixins.py:430: [C0111(missing-docstring), ReportColumnsSerializerMixin.get_label] Missing method docstring
sol_dynamicreports/mixins.py:421: [R0903(too-few-public-methods), ReportColumnsSerializerMixin] Too few public methods (1/2)
sol_dynamicreports/mixins.py:28: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
sol_dynamicreports/mixins.py:30: [C0412(ungrouped-imports), ] Imports from package sol_dynamicreports are not grouped
sol_dynamicreports/mixins.py:34: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module sol_dynamicreports.__init__
sol_dynamicreports/__init__.py:13: [W0511(fixme), ] TODO: add override for each report record, maybe.
************* Module sol_dynamicreports
sol_dynamicreports/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/__init__.py:3: [E0401(import-error), ] Unable to import 'django.conf'
sol_dynamicreports/__init__.py:5: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
sol_dynamicreports/__init__.py:26: [R0205(useless-object-inheritance), Settings] Class 'Settings' inherits from object, can be safely removed from bases in python3
sol_dynamicreports/__init__.py:26: [R0903(too-few-public-methods), Settings] Too few public methods (1/2)
sol_dynamicreports/__init__.py:47: [C0103(invalid-name), ] Constant name "settings" doesn't conform to UPPER_CASE naming style
************* Module sol_dynamicreports.async_jobs
sol_dynamicreports/async_jobs.py:80: [C0301(line-too-long), ] Line too long (101/100)
sol_dynamicreports/async_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/async_jobs.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol_dynamicreports/async_jobs.py:4: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_dynamicreports/async_jobs.py:5: [E0401(import-error), ] Unable to import 'django.core.mail'
sol_dynamicreports/async_jobs.py:6: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_dynamicreports/async_jobs.py:7: [E0401(import-error), ] Unable to import 'django_rq'
sol_dynamicreports/async_jobs.py:8: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol_dynamicreports/async_jobs.py:17: [C0103(invalid-name), ] Constant name "job_kwargs" doesn't conform to UPPER_CASE naming style
sol_dynamicreports/async_jobs.py:21: [C0111(missing-docstring), download_dynamic_report] Missing function docstring
sol_dynamicreports/async_jobs.py:21: [R0913(too-many-arguments), download_dynamic_report] Too many arguments (6/5)
sol_dynamicreports/async_jobs.py:75: [C0111(missing-docstring), send_dynamic_report] Missing function docstring
sol_dynamicreports/async_jobs.py:75: [W0613(unused-argument), send_dynamic_report] Unused argument 'args'
************* Module sol_dynamicreports.models_api
sol_dynamicreports/models_api.py:132: [W0511(fixme), ] TODO: implement bulk writes and remove these.
sol_dynamicreports/models_api.py:11: [C0301(line-too-long), ] Line too long (109/100)
sol_dynamicreports/models_api.py:41: [C0301(line-too-long), ] Line too long (107/100)
sol_dynamicreports/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/models_api.py:6: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_dynamicreports/models_api.py:7: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_dynamicreports/models_api.py:15: [C0111(missing-docstring), get_api_config] Missing function docstring
sol_dynamicreports/models_api.py:18: [C0103(invalid-name), get_api_config] Variable name "c" doesn't conform to snake_case naming style
sol_dynamicreports/models_api.py:30: [C0111(missing-docstring), get_callable_report] Missing function docstring
sol_dynamicreports/models_api.py:31: [W0613(unused-argument), get_callable_report.callable_func] Unused argument 'kwargs'
sol_dynamicreports/models_api.py:38: [C0111(missing-docstring), get_callable_reportcolumns] Missing function docstring
sol_dynamicreports/models_api.py:39: [W0613(unused-argument), get_callable_reportcolumns.callable_func] Unused argument 'kwargs'
sol_dynamicreports/models_api.py:46: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module sol_dynamicreports.models
sol_dynamicreports/models.py:20: [C0301(line-too-long), ] Line too long (111/100)
sol_dynamicreports/models.py:22: [C0301(line-too-long), ] Line too long (107/100)
sol_dynamicreports/models.py:29: [C0301(line-too-long), ] Line too long (115/100)
sol_dynamicreports/models.py:44: [C0301(line-too-long), ] Line too long (104/100)
sol_dynamicreports/models.py:48: [C0301(line-too-long), ] Line too long (113/100)
sol_dynamicreports/models.py:50: [C0301(line-too-long), ] Line too long (103/100)
sol_dynamicreports/models.py:94: [C0301(line-too-long), ] Line too long (110/100)
sol_dynamicreports/models.py:111: [C0301(line-too-long), ] Line too long (115/100)
sol_dynamicreports/models.py:177: [C0301(line-too-long), ] Line too long (109/100)
sol_dynamicreports/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/models.py:6: [E0401(import-error), ] Unable to import 'django.http'
sol_dynamicreports/models.py:7: [E0401(import-error), ] Unable to import 'django.utils.http'
sol_dynamicreports/models.py:8: [E0401(import-error), ] Unable to import 'django.conf'
sol_dynamicreports/models.py:9: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_dynamicreports/models.py:10: [E0401(import-error), ] Unable to import 'django.db'
sol_dynamicreports/models.py:11: [E0401(import-error), ] Unable to import 'django.db.models.signals'
sol_dynamicreports/models.py:12: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol_dynamicreports/models.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_dynamicreports/models.py:14: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields'
sol_dynamicreports/models.py:134: [C0103(invalid-name), Report.clone] Attribute name "pk" doesn't conform to snake_case naming style
sol_dynamicreports/models.py:53: [C0111(missing-docstring), Report.after_model_injected] Missing method docstring
sol_dynamicreports/models.py:56: [C0111(missing-docstring), Report.get_filterset] Missing method docstring
sol_dynamicreports/models.py:72: [C0111(missing-docstring), Report.filters_as_dict] Missing method docstring
sol_dynamicreports/models.py:75: [C0111(missing-docstring), Report.get_report_file_path] Missing method docstring
sol_dynamicreports/models.py:79: [C0111(missing-docstring), Report.get_report_filename] Missing method docstring
sol_dynamicreports/models.py:87: [C0111(missing-docstring), Report.is_valid_for_get_file] Missing method docstring
sol_dynamicreports/models.py:87: [W0613(unused-argument), Report.is_valid_for_get_file] Unused argument 'args'
sol_dynamicreports/models.py:87: [W0613(unused-argument), Report.is_valid_for_get_file] Unused argument 'kwargs'
sol_dynamicreports/models.py:90: [C0111(missing-docstring), Report.get_file] Missing method docstring
sol_dynamicreports/models.py:90: [R0914(too-many-locals), Report.get_file] Too many local variables (16/15)
sol_dynamicreports/models.py:112: [C0103(invalid-name), Report.get_file] Variable name "qd" doesn't conform to snake_case naming style
sol_dynamicreports/models.py:116: [W0212(protected-access), Report.get_file] Access to a protected member _request of a client class
sol_dynamicreports/models.py:90: [W0613(unused-argument), Report.get_file] Unused argument 'kwargs'
sol_dynamicreports/models.py:131: [W0102(dangerous-default-value), Report.clone] Dangerous default value {} as argument
sol_dynamicreports/models.py:131: [C0111(missing-docstring), Report.clone] Missing method docstring
sol_dynamicreports/models.py:149: [C0111(missing-docstring), Report.Meta] Missing class docstring
sol_dynamicreports/models.py:149: [R0903(too-few-public-methods), Report.Meta] Too few public methods (0/2)
sol_dynamicreports/models.py:134: [W0201(attribute-defined-outside-init), Report.clone] Attribute 'pk' defined outside __init__
sol_dynamicreports/models.py:158: [C0111(missing-docstring), delete_scheduled_reports] Missing function docstring
sol_dynamicreports/models.py:158: [W0613(unused-argument), delete_scheduled_reports] Unused argument 'sender'
sol_dynamicreports/models.py:158: [W0613(unused-argument), delete_scheduled_reports] Unused argument 'kwargs'
sol_dynamicreports/models.py:184: [C0111(missing-docstring), ReportColumns.Meta] Missing class docstring
sol_dynamicreports/models.py:184: [R0903(too-few-public-methods), ReportColumns.Meta] Too few public methods (0/2)
sol_dynamicreports/models.py:24: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module sol_dynamicreports.permissions.report
sol_dynamicreports/permissions/report.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_dynamicreports/permissions/report.py:4: [E0401(import-error), ] Unable to import 'django.apps'
sol_dynamicreports/permissions/report.py:5: [E0401(import-error), ] Unable to import 'django.db.models'
sol_dynamicreports/permissions/report.py:10: [C0111(missing-docstring), BaseReportPermissionsMixin] Missing class docstring
sol_dynamicreports/permissions/report.py:19: [C0111(missing-docstring), BaseReportPermissionsMixin.permissions_filter] Missing method docstring
sol_dynamicreports/permissions/report.py:24: [C0111(missing-docstring), BaseReportPermissionsMixin.has_read_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:24: [W0613(unused-argument), BaseReportPermissionsMixin.has_read_permission] Unused argument 'request'
sol_dynamicreports/permissions/report.py:31: [C0111(missing-docstring), BaseReportPermissionsMixin.has_create_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:41: [C0111(missing-docstring), BaseReportPermissionsMixin.has_write_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:50: [C0111(missing-docstring), BaseReportPermissionsMixin.has_object_read_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:56: [C0111(missing-docstring), BaseReportPermissionsMixin.has_object_write_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:66: [C0111(missing-docstring), BaseReportPermissionsMixin.has_only_owner_can_edit_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:76: [C0111(missing-docstring), BaseReportPermissionsMixin.has_clone_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:83: [C0111(missing-docstring), ReportsAppPermissionsMixin] Missing class docstring
sol_dynamicreports/permissions/report.py:83: [R0205(useless-object-inheritance), ReportsAppPermissionsMixin] Class 'ReportsAppPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol_dynamicreports/permissions/report.py:87: [C0111(missing-docstring), ReportsAppPermissionsMixin.has_can_create_report_permission] Missing method docstring
sol_dynamicreports/permissions/report.py:83: [R0903(too-few-public-methods), ReportsAppPermissionsMixin] Too few public methods (1/2)
sol_dynamicreports/permissions/report.py:98: [C0111(missing-docstring), BaseReportColumnsPermissionsMixin] Missing class docstring
sol_dynamicreports/permissions/report.py:100: [C0111(missing-docstring), BaseReportColumnsPermissionsMixin.permissions_filter] Missing method docstring
************* Module sol_docs.tests
sol_docs/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
sol_docs/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module sol_docs.utils
sol_docs/utils.py:8: [C0301(line-too-long), ] Line too long (105/100)
sol_docs/utils.py:9: [C0301(line-too-long), ] Line too long (115/100)
sol_docs/utils.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/utils.py:3: [E0401(import-error), ] Unable to import 'django.contrib.staticfiles'
sol_docs/utils.py:7: [C0111(missing-docstring), get_mimetype_icon_path] Missing function docstring
************* Module sol_docs.apps
sol_docs/apps.py:17: [C0301(line-too-long), ] Line too long (115/100)
sol_docs/apps.py:26: [C0301(line-too-long), ] Line too long (114/100)
sol_docs/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/apps.py:6: [E0401(import-error), ] Unable to import 'django.apps'
sol_docs/apps.py:7: [E0401(import-error), ] Unable to import 'django.conf'
sol_docs/apps.py:11: [C0111(missing-docstring), SolDocsConfig] Missing class docstring
sol_docs/apps.py:15: [C0111(missing-docstring), SolDocsConfig.ready] Missing method docstring
sol_docs/apps.py:15: [R0201(no-self-use), SolDocsConfig.ready] Method could be a function
sol_docs/apps.py:11: [R0903(too-few-public-methods), SolDocsConfig] Too few public methods (1/2)
************* Module sol_docs.mixins
sol_docs/mixins.py:192: [W0511(fixme), ] TODO: use @revision.mapping.delete after upgrade
sol_docs/mixins.py:279: [W0511(fixme), ] TODO: do not use current user email in from, because of spam policies same domain check of sender and from.
sol_docs/mixins.py:31: [C0301(line-too-long), ] Line too long (114/100)
sol_docs/mixins.py:41: [C0301(line-too-long), ] Line too long (114/100)
sol_docs/mixins.py:55: [C0301(line-too-long), ] Line too long (117/100)
sol_docs/mixins.py:77: [C0301(line-too-long), ] Line too long (114/100)
sol_docs/mixins.py:85: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/mixins.py:120: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/mixins.py:133: [C0301(line-too-long), ] Line too long (144/100)
sol_docs/mixins.py:136: [C0301(line-too-long), ] Line too long (121/100)
sol_docs/mixins.py:147: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/mixins.py:149: [C0301(line-too-long), ] Line too long (144/100)
sol_docs/mixins.py:152: [C0301(line-too-long), ] Line too long (121/100)
sol_docs/mixins.py:177: [C0301(line-too-long), ] Line too long (121/100)
sol_docs/mixins.py:206: [C0301(line-too-long), ] Line too long (145/100)
sol_docs/mixins.py:209: [C0301(line-too-long), ] Line too long (121/100)
sol_docs/mixins.py:223: [C0301(line-too-long), ] Line too long (109/100)
sol_docs/mixins.py:230: [C0301(line-too-long), ] Line too long (111/100)
sol_docs/mixins.py:259: [C0301(line-too-long), ] Line too long (104/100)
sol_docs/mixins.py:279: [C0301(line-too-long), ] Line too long (117/100)
sol_docs/mixins.py:280: [C0301(line-too-long), ] Line too long (112/100)
sol_docs/mixins.py:306: [C0301(line-too-long), ] Line too long (115/100)
sol_docs/mixins.py:309: [C0301(line-too-long), ] Line too long (104/100)
sol_docs/mixins.py:326: [C0301(line-too-long), ] Line too long (144/100)
sol_docs/mixins.py:329: [C0301(line-too-long), ] Line too long (121/100)
sol_docs/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/mixins.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_docs/mixins.py:6: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_docs/mixins.py:7: [E0401(import-error), ] Unable to import 'django.core.mail'
sol_docs/mixins.py:8: [E0401(import-error), ] Unable to import 'django.core.validators'
sol_docs/mixins.py:9: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol_docs/mixins.py:10: [E0401(import-error), ] Unable to import 'django.db'
sol_docs/mixins.py:11: [E0401(import-error), ] Unable to import 'django.db.models'
sol_docs/mixins.py:12: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol_docs/mixins.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_docs/mixins.py:14: [E0401(import-error), ] Unable to import 'django.utils'
sol_docs/mixins.py:15: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_docs/mixins.py:16: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol_docs/mixins.py:17: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol_docs/mixins.py:18: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_docs/mixins.py:19: [E0401(import-error), ] Unable to import 'rest_framework'
sol_docs/mixins.py:20: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol_docs/mixins.py:28: [C0111(missing-docstring), DocumentCategoryDocumentSerializerMixin] Missing class docstring
sol_docs/mixins.py:28: [R0205(useless-object-inheritance), DocumentCategoryDocumentSerializerMixin] Class 'DocumentCategoryDocumentSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_docs/mixins.py:28: [R0903(too-few-public-methods), DocumentCategoryDocumentSerializerMixin] Too few public methods (0/2)
sol_docs/mixins.py:38: [C0111(missing-docstring), DocumentRevisionSerializerMixin] Missing class docstring
sol_docs/mixins.py:38: [R0205(useless-object-inheritance), DocumentRevisionSerializerMixin] Class 'DocumentRevisionSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_docs/mixins.py:61: [C0111(missing-docstring), DocumentRevisionSerializerMixin.save] Missing method docstring
sol_docs/mixins.py:67: [R0205(useless-object-inheritance), DocumentSerializerMixin] Class 'DocumentSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_docs/mixins.py:83: [C0111(missing-docstring), DocumentSerializerMixin.get_revision_serializer_class] Missing method docstring
sol_docs/mixins.py:84: [W0212(protected-access), DocumentSerializerMixin.get_revision_serializer_class] Access to a protected member _meta of a client class
sol_docs/mixins.py:90: [C0111(missing-docstring), DocumentSerializerMixin.create] Missing method docstring
sol_docs/mixins.py:98: [C0111(missing-docstring), DocumentSerializerMixin.update] Missing method docstring
sol_docs/mixins.py:105: [C0111(missing-docstring), DocumentSerializerMixin.save_active_revision] Missing method docstring
sol_docs/mixins.py:125: [C0111(missing-docstring), DocumentSerializerMixin.destroy_active_revision] Missing method docstring
sol_docs/mixins.py:129: [C0111(missing-docstring), BaseDocumentRevisionViewSetMixin] Missing class docstring
sol_docs/mixins.py:129: [R0205(useless-object-inheritance), BaseDocumentRevisionViewSetMixin] Class 'BaseDocumentRevisionViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_docs/mixins.py:130: [C0111(missing-docstring), BaseDocumentRevisionViewSetMixin.get_document_revision_object] Missing method docstring
sol_docs/mixins.py:134: [C0103(invalid-name), BaseDocumentRevisionViewSetMixin.thumbnail] Argument name "pk" doesn't conform to snake_case naming style
sol_docs/mixins.py:134: [W1113(keyword-arg-before-vararg), BaseDocumentRevisionViewSetMixin.thumbnail] Keyword argument before variable positional arguments list in the definition of thumbnail function
sol_docs/mixins.py:134: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.thumbnail] Unused argument 'request'
sol_docs/mixins.py:134: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.thumbnail] Unused argument 'pk'
sol_docs/mixins.py:134: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.thumbnail] Unused argument 'args'
sol_docs/mixins.py:134: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.thumbnail] Unused argument 'kwargs'
sol_docs/mixins.py:150: [C0103(invalid-name), BaseDocumentRevisionViewSetMixin.file] Argument name "pk" doesn't conform to snake_case naming style
sol_docs/mixins.py:150: [W1113(keyword-arg-before-vararg), BaseDocumentRevisionViewSetMixin.file] Keyword argument before variable positional arguments list in the definition of file function
sol_docs/mixins.py:150: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.file] Unused argument 'request'
sol_docs/mixins.py:150: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.file] Unused argument 'pk'
sol_docs/mixins.py:150: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.file] Unused argument 'args'
sol_docs/mixins.py:150: [W0613(unused-argument), BaseDocumentRevisionViewSetMixin.file] Unused argument 'kwargs'
sol_docs/mixins.py:166: [C0111(missing-docstring), DocumentRevisionViewSetMixin] Missing class docstring
sol_docs/mixins.py:170: [C0111(missing-docstring), DocumentViewSetMixin] Missing class docstring
sol_docs/mixins.py:175: [W0613(unused-argument), DocumentViewSetMixin.revision] Unused argument 'args'
sol_docs/mixins.py:175: [W0613(unused-argument), DocumentViewSetMixin.revision] Unused argument 'kwargs'
sol_docs/mixins.py:207: [W0613(unused-argument), DocumentViewSetMixin.files] Unused argument 'args'
sol_docs/mixins.py:207: [W0613(unused-argument), DocumentViewSetMixin.files] Unused argument 'kwargs'
sol_docs/mixins.py:242: [C0103(invalid-name), DocumentViewSetMixin.send_email] Argument name "pk" doesn't conform to snake_case naming style
sol_docs/mixins.py:242: [W1113(keyword-arg-before-vararg), DocumentViewSetMixin.send_email] Keyword argument before variable positional arguments list in the definition of send_email function
sol_docs/mixins.py:252: [C0103(invalid-name), DocumentViewSetMixin.send_email] Variable name "to" doesn't conform to snake_case naming style
sol_docs/mixins.py:286: [W0212(protected-access), DocumentViewSetMixin.send_email] Access to a protected member _mimetype of a client class
sol_docs/mixins.py:294: [C0103(invalid-name), DocumentViewSetMixin.send_email] Variable name "e" doesn't conform to snake_case naming style
sol_docs/mixins.py:242: [W0613(unused-argument), DocumentViewSetMixin.send_email] Unused argument 'pk'
sol_docs/mixins.py:242: [W0613(unused-argument), DocumentViewSetMixin.send_email] Unused argument 'args'
sol_docs/mixins.py:242: [W0613(unused-argument), DocumentViewSetMixin.send_email] Unused argument 'kwargs'
sol_docs/mixins.py:300: [C0111(missing-docstring), DocumentCategoryViewSetMixin] Missing class docstring
sol_docs/mixins.py:300: [R0205(useless-object-inheritance), DocumentCategoryViewSetMixin] Class 'DocumentCategoryViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_docs/mixins.py:302: [W0613(unused-argument), DocumentCategoryViewSetMixin.get_tree] Unused argument 'args'
sol_docs/mixins.py:302: [W0613(unused-argument), DocumentCategoryViewSetMixin.get_tree] Unused argument 'kwargs'
sol_docs/mixins.py:300: [R0903(too-few-public-methods), DocumentCategoryViewSetMixin] Too few public methods (1/2)
sol_docs/mixins.py:325: [C0111(missing-docstring), DocumentCategoryDocumentViewSetMixin] Missing class docstring
sol_docs/mixins.py:325: [R0205(useless-object-inheritance), DocumentCategoryDocumentViewSetMixin] Class 'DocumentCategoryDocumentViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_docs/mixins.py:327: [C0103(invalid-name), DocumentCategoryDocumentViewSetMixin.files] Argument name "pk" doesn't conform to snake_case naming style
sol_docs/mixins.py:327: [W1113(keyword-arg-before-vararg), DocumentCategoryDocumentViewSetMixin.files] Keyword argument before variable positional arguments list in the definition of files function
sol_docs/mixins.py:327: [W0613(unused-argument), DocumentCategoryDocumentViewSetMixin.files] Unused argument 'pk'
sol_docs/mixins.py:327: [W0613(unused-argument), DocumentCategoryDocumentViewSetMixin.files] Unused argument 'args'
sol_docs/mixins.py:327: [W0613(unused-argument), DocumentCategoryDocumentViewSetMixin.files] Unused argument 'kwargs'
sol_docs/mixins.py:325: [R0903(too-few-public-methods), DocumentCategoryDocumentViewSetMixin] Too few public methods (1/2)
************* Module sol_docs.admin
sol_docs/admin.py:19: [C0301(line-too-long), ] Line too long (104/100)
sol_docs/admin.py:20: [C0301(line-too-long), ] Line too long (108/100)
sol_docs/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/admin.py:1: [E0401(import-error), ] Unable to import 'django.contrib'
sol_docs/admin.py:2: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_docs/admin.py:5: [C0111(missing-docstring), DocumentCategoryAdminMixin] Missing class docstring
sol_docs/admin.py:5: [R0205(useless-object-inheritance), DocumentCategoryAdminMixin] Class 'DocumentCategoryAdminMixin' inherits from object, can be safely removed from bases in python3
sol_docs/admin.py:9: [C0111(missing-docstring), DocumentCategoryAdminMixin.formfield_for_foreignkey] Missing method docstring
sol_docs/admin.py:11: [W0212(protected-access), DocumentCategoryAdminMixin.formfield_for_foreignkey] Access to a protected member _meta of a client class
sol_docs/admin.py:17: [W0212(protected-access), DocumentCategoryAdminMixin.formfield_for_foreignkey] Access to a protected member _meta of a client class
sol_docs/admin.py:29: [W0613(unused-argument), DocumentCategoryAdminMixin.has_delete_permission] Unused argument 'request'
sol_docs/admin.py:29: [W0613(unused-argument), DocumentCategoryAdminMixin.has_delete_permission] Unused argument 'obj'
sol_docs/admin.py:29: [R0201(no-self-use), DocumentCategoryAdminMixin.has_delete_permission] Method could be a function
sol_docs/admin.py:1: [W0611(unused-import), ] Unused admin imported from django.contrib
************* Module sol_docs.massive_operations
sol_docs/massive_operations.py:16: [C0301(line-too-long), ] Line too long (115/100)
sol_docs/massive_operations.py:38: [C0301(line-too-long), ] Line too long (102/100)
sol_docs/massive_operations.py:40: [C0301(line-too-long), ] Line too long (105/100)
sol_docs/massive_operations.py:86: [C0301(line-too-long), ] Line too long (104/100)
sol_docs/massive_operations.py:87: [C0301(line-too-long), ] Line too long (104/100)
sol_docs/massive_operations.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/massive_operations.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_docs/massive_operations.py:6: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_docs/massive_operations.py:7: [E0401(import-error), ] Unable to import 'django.db.models'
sol_docs/massive_operations.py:8: [E0401(import-error), ] Unable to import 'django.db.models.functions'
sol_docs/massive_operations.py:101: [W0702(bare-except), move_document] No exception type(s) specified
sol_docs/massive_operations.py:40: [W0612(unused-variable), move_document] Unused variable 'original_thumbnail_file_path'
sol_docs/massive_operations.py:11: [W0611(unused-import), ] Unused get_file_path imported from sol_docs.models
************* Module sol_docs
sol_docs/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/__init__.py:3: [E0401(import-error), ] Unable to import 'django.conf'
sol_docs/__init__.py:5: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
sol_docs/__init__.py:70: [R0205(useless-object-inheritance), Settings] Class 'Settings' inherits from object, can be safely removed from bases in python3
sol_docs/__init__.py:70: [R0903(too-few-public-methods), Settings] Too few public methods (1/2)
sol_docs/__init__.py:92: [C0103(invalid-name), ] Constant name "settings" doesn't conform to UPPER_CASE naming style
************* Module sol_docs.models_api
sol_docs/models_api.py:37: [C0301(line-too-long), ] Line too long (112/100)
sol_docs/models_api.py:92: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/models_api.py:101: [C0301(line-too-long), ] Line too long (111/100)
sol_docs/models_api.py:295: [C0301(line-too-long), ] Line too long (114/100)
sol_docs/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/models_api.py:7: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_docs/models_api.py:8: [E0401(import-error), ] Unable to import 'django.db.models'
sol_docs/models_api.py:9: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_docs/models_api.py:10: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_docs/models_api.py:11: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
sol_docs/models_api.py:31: [C0111(missing-docstring), get_api_config] Missing function docstring
sol_docs/models_api.py:34: [C0103(invalid-name), get_api_config] Variable name "c" doesn't conform to snake_case naming style
sol_docs/models_api.py:59: [C0111(missing-docstring), get_queryset_document_revisions] Missing function docstring
sol_docs/models_api.py:73: [C0111(missing-docstring), get_callable_documents_revisions_viewset] Missing function docstring
sol_docs/models_api.py:74: [W0613(unused-argument), get_callable_documents_revisions_viewset.callable_func] Unused argument 'kwargs'
sol_docs/models_api.py:80: [C0111(missing-docstring), get_queryset_documents] Missing function docstring
sol_docs/models_api.py:120: [C0111(missing-docstring), get_callable_documents_viewset] Missing function docstring
sol_docs/models_api.py:121: [W0613(unused-argument), get_callable_documents_viewset.callable_func] Unused argument 'kwargs'
sol_docs/models_api.py:126: [C0111(missing-docstring), get_queryset_document_categories] Missing function docstring
sol_docs/models_api.py:126: [R0913(too-many-arguments), get_queryset_document_categories] Too many arguments (6/5)
sol_docs/models_api.py:141: [C0103(invalid-name), get_queryset_document_categories] Variable name "qs" doesn't conform to snake_case naming style
sol_docs/models_api.py:154: [C0103(invalid-name), get_queryset_document_categories] Variable name "qs" doesn't conform to snake_case naming style
sol_docs/models_api.py:159: [C0111(missing-docstring), get_callable_document_categories_viewset] Missing function docstring
sol_docs/models_api.py:168: [C0103(invalid-name), get_callable_document_categories_viewset.callable_func] Variable name "qs" doesn't conform to snake_case naming style
sol_docs/models_api.py:160: [W0613(unused-argument), get_callable_document_categories_viewset.callable_func] Unused argument 'kwargs'
sol_docs/models_api.py:181: [C0103(invalid-name), ] Constant name "config_revisions" doesn't conform to UPPER_CASE naming style
sol_docs/models_api.py:291: [C0103(invalid-name), ] Constant name "config_documents" doesn't conform to UPPER_CASE naming style
sol_docs/models_api.py:421: [C0103(invalid-name), ] Constant name "config_documentcategories" doesn't conform to UPPER_CASE naming style
sol_docs/models_api.py:453: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
sol_docs/models_api.py:26: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module sol_docs.models
sol_docs/models.py:228: [W0511(fixme), ] TODO: move these in a specific validator(s)? Problems are extra queries and concurrency issues.
sol_docs/models.py:265: [W0511(fixme), ] TODO: maybe make delete_document default easily configurable.
sol_docs/models.py:330: [W0511(fixme), ] TODO: move these in a specific validator(s)? Problems are extra queries and concurrency issues.
sol_docs/models.py:351: [W0511(fixme), ] TODO: maybe make delete_document default easily configurable.
sol_docs/models.py:421: [W0511(fixme), ] TODO: maybe convert to copy of physical files.
sol_docs/models.py:31: [C0301(line-too-long), ] Line too long (108/100)
sol_docs/models.py:41: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/models.py:57: [C0301(line-too-long), ] Line too long (116/100)
sol_docs/models.py:106: [C0301(line-too-long), ] Line too long (101/100)
sol_docs/models.py:145: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/models.py:149: [C0301(line-too-long), ] Line too long (114/100)
sol_docs/models.py:150: [C0301(line-too-long), ] Line too long (106/100)
sol_docs/models.py:190: [C0301(line-too-long), ] Line too long (120/100)
sol_docs/models.py:228: [C0301(line-too-long), ] Line too long (109/100)
sol_docs/models.py:242: [C0301(line-too-long), ] Line too long (113/100)
sol_docs/models.py:255: [C0301(line-too-long), ] Line too long (108/100)
sol_docs/models.py:330: [C0301(line-too-long), ] Line too long (109/100)
sol_docs/models.py:333: [C0301(line-too-long), ] Line too long (106/100)
sol_docs/models.py:337: [C0301(line-too-long), ] Line too long (107/100)
sol_docs/models.py:342: [C0301(line-too-long), ] Line too long (111/100)
sol_docs/models.py:375: [C0301(line-too-long), ] Line too long (119/100)
sol_docs/models.py:381: [C0301(line-too-long), ] Line too long (116/100)
sol_docs/models.py:458: [C0301(line-too-long), ] Line too long (118/100)
sol_docs/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/models.py:6: [E0401(import-error), ] Unable to import 'django.apps'
sol_docs/models.py:7: [E0401(import-error), ] Unable to import 'django.conf'
sol_docs/models.py:8: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.fields'
sol_docs/models.py:9: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_docs/models.py:10: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol_docs/models.py:11: [E0401(import-error), ] Unable to import 'django.core.files.base'
sol_docs/models.py:12: [E0401(import-error), ] Unable to import 'django.core.files.uploadedfile'
sol_docs/models.py:13: [E0401(import-error), ] Unable to import 'django.db'
sol_docs/models.py:14: [E0401(import-error), ] Unable to import 'django.db.models'
sol_docs/models.py:15: [E0401(import-error), ] Unable to import 'django.db.models.functions'
sol_docs/models.py:16: [E0401(import-error), ] Unable to import 'django.db.models.signals'
sol_docs/models.py:17: [E0401(import-error), ] Unable to import 'django.forms'
sol_docs/models.py:18: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol_docs/models.py:19: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol_docs/models.py:20: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_docs/models.py:21: [E0611(no-name-in-module), ] No name 'fields' in module 'mptt'
sol_docs/models.py:21: [E0401(import-error), ] Unable to import 'mptt.fields'
sol_docs/models.py:22: [E0611(no-name-in-module), ] No name 'managers' in module 'mptt'
sol_docs/models.py:22: [E0401(import-error), ] Unable to import 'mptt.managers'
sol_docs/models.py:23: [E0611(no-name-in-module), ] No name 'models' in module 'mptt'
sol_docs/models.py:23: [E0401(import-error), ] Unable to import 'mptt.models'
sol_docs/models.py:24: [E0611(no-name-in-module), ] No name 'querysets' in module 'mptt'
sol_docs/models.py:24: [E0401(import-error), ] Unable to import 'mptt.querysets'
sol_docs/models.py:35: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
sol_docs/models.py:38: [C0111(missing-docstring), get_filename] Missing function docstring
sol_docs/models.py:48: [C0111(missing-docstring), get_file_path] Missing function docstring
sol_docs/models.py:53: [W0212(protected-access), get_file_path] Access to a protected member _meta of a client class
sol_docs/models.py:54: [W0212(protected-access), get_file_path] Access to a protected member _meta of a client class
sol_docs/models.py:48: [W0613(unused-argument), get_file_path] Unused argument 'filename'
sol_docs/models.py:60: [C0111(missing-docstring), get_thumbnail_path] Missing function docstring
sol_docs/models.py:64: [C0111(missing-docstring), delete_document_revision_files] Missing function docstring
sol_docs/models.py:74: [W0703(broad-except), delete_document_revision_files] Catching too general exception Exception
sol_docs/models.py:74: [C0103(invalid-name), delete_document_revision_files] Variable name "e" doesn't conform to snake_case naming style
sol_docs/models.py:64: [W0613(unused-argument), delete_document_revision_files] Unused argument 'sender'
sol_docs/models.py:64: [W0613(unused-argument), delete_document_revision_files] Unused argument 'kwargs'
sol_docs/models.py:74: [W0612(unused-variable), delete_document_revision_files] Unused variable 'e'
sol_docs/models.py:93: [C0111(missing-docstring), MimeTypeNotConfiguredError] Missing class docstring
sol_docs/models.py:98: [C0111(missing-docstring), DocumentRevision] Missing class docstring
sol_docs/models.py:131: [C0111(missing-docstring), DocumentRevision.Meta] Missing class docstring
sol_docs/models.py:131: [R0903(too-few-public-methods), DocumentRevision.Meta] Too few public methods (0/2)
sol_docs/models.py:140: [C0111(missing-docstring), DocumentRevision.after_model_injected] Missing method docstring
sol_docs/models.py:144: [C0111(missing-docstring), DocumentRevision.mime_type_mini_icon_url] Missing method docstring
sol_docs/models.py:152: [W0212(protected-access), DocumentRevision.mime_type_mini_icon_url] Access to a protected member _mimetype of a client class
sol_docs/models.py:195: [W0703(broad-except), DocumentRevision.refresh_thumbnail] Catching too general exception Exception
sol_docs/models.py:177: [W0212(protected-access), DocumentRevision.refresh_thumbnail] Access to a protected member _mimetype of a client class
sol_docs/models.py:195: [C0103(invalid-name), DocumentRevision.refresh_thumbnail] Variable name "e" doesn't conform to snake_case naming style
sol_docs/models.py:204: [W0212(protected-access), DocumentRevision.refresh_thumbnail] Access to a protected member _mimetype of a client class
sol_docs/models.py:207: [C0111(missing-docstring), DocumentRevision.get_revision_number] Missing method docstring
sol_docs/models.py:215: [C0111(missing-docstring), DocumentRevision.is_max_revision_number_reached] Missing method docstring
sol_docs/models.py:224: [W0221(arguments-differ), DocumentRevision.save] Parameters differ from overridden 'save' method
sol_docs/models.py:263: [W0221(arguments-differ), DocumentRevision.delete] Parameters differ from overridden 'delete' method
sol_docs/models.py:431: [C0103(invalid-name), Document.move_document] Attribute name "pk" doesn't conform to snake_case naming style
sol_docs/models.py:281: [C0111(missing-docstring), Document] Missing class docstring
sol_docs/models.py:281: [R0901(too-many-ancestors), Document] Too many ancestors (8/7)
sol_docs/models.py:281: [R0902(too-many-instance-attributes), Document] Too many instance attributes (8/7)
sol_docs/models.py:300: [C0111(missing-docstring), Document.Meta] Missing class docstring
sol_docs/models.py:300: [R0903(too-few-public-methods), Document.Meta] Too few public methods (0/2)
sol_docs/models.py:308: [C0111(missing-docstring), Document.get_document_number] Missing method docstring
sol_docs/models.py:318: [C0111(missing-docstring), Document.is_max_document_number_reached] Missing method docstring
sol_docs/models.py:327: [W0221(arguments-differ), Document.save] Parameters differ from overridden 'save' method
sol_docs/models.py:349: [C0111(missing-docstring), Document.delete_active_revision] Missing method docstring
sol_docs/models.py:356: [W0221(arguments-differ), Document.delete] Parameters differ from overridden 'delete' method
sol_docs/models.py:360: [C0111(missing-docstring), Document.copy_document] Missing method docstring
sol_docs/models.py:367: [R0913(too-many-arguments), Document.move_document] Too many arguments (7/5)
sol_docs/models.py:367: [R0914(too-many-locals), Document.move_document] Too many local variables (20/15)
sol_docs/models.py:397: [W0212(protected-access), Document.move_document] Access to a protected member _meta of a client class
sol_docs/models.py:398: [W0212(protected-access), Document.move_document] Access to a protected member _meta of a client class
sol_docs/models.py:405: [W0212(protected-access), Document.move_document] Access to a protected member _meta of a client class
sol_docs/models.py:367: [R1710(inconsistent-return-statements), Document.move_document] Either all return statements in a function should return an expression, or none of them should.
sol_docs/models.py:426: [W0201(attribute-defined-outside-init), Document.move_document] Attribute 'file' defined outside __init__
sol_docs/models.py:428: [W0201(attribute-defined-outside-init), Document.move_document] Attribute 'filename' defined outside __init__
sol_docs/models.py:431: [W0201(attribute-defined-outside-init), Document.move_document] Attribute 'pk' defined outside __init__
sol_docs/models.py:445: [C0111(missing-docstring), DocumentCategoryQuerySet] Missing class docstring
sol_docs/models.py:449: [C0111(missing-docstring), DocumentCategoryManager] Missing class docstring
sol_docs/models.py:449: [R0903(too-few-public-methods), DocumentCategoryManager] Too few public methods (0/2)
sol_docs/models.py:453: [C0111(missing-docstring), DocumentCategory] Missing class docstring
sol_docs/models.py:480: [C0111(missing-docstring), DocumentCategory.root] Missing method docstring
sol_docs/models.py:483: [C0111(missing-docstring), DocumentCategory.Meta] Missing class docstring
sol_docs/models.py:483: [R0903(too-few-public-methods), DocumentCategory.Meta] Too few public methods (0/2)
sol_docs/models.py:491: [C0111(missing-docstring), DocumentCategory.MPTTMeta] Missing class docstring
sol_docs/models.py:491: [R0903(too-few-public-methods), DocumentCategory.MPTTMeta] Too few public methods (0/2)
sol_docs/models.py:14: [W0611(unused-import), ] Unused Count imported from django.db.models
************* Module sol_docs.permissions.documentcategory
sol_docs/permissions/documentcategory.py:36: [C0301(line-too-long), ] Line too long (109/100)
sol_docs/permissions/documentcategory.py:43: [C0301(line-too-long), ] Line too long (108/100)
sol_docs/permissions/documentcategory.py:49: [C0305(trailing-newlines), ] Trailing newlines
sol_docs/permissions/documentcategory.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/permissions/documentcategory.py:5: [E0401(import-error), ] Unable to import 'django.apps'
sol_docs/permissions/documentcategory.py:9: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin] Missing class docstring
sol_docs/permissions/documentcategory.py:13: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin.has_read_permission] Missing method docstring
sol_docs/permissions/documentcategory.py:13: [W0613(unused-argument), BaseDocumentCategoryPermissionsMixin.has_read_permission] Unused argument 'request'
sol_docs/permissions/documentcategory.py:17: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin.has_write_permission] Missing method docstring
sol_docs/permissions/documentcategory.py:17: [W0613(unused-argument), BaseDocumentCategoryPermissionsMixin.has_write_permission] Unused argument 'request'
sol_docs/permissions/documentcategory.py:20: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin.has_object_read_permission] Missing method docstring
sol_docs/permissions/documentcategory.py:20: [W0613(unused-argument), BaseDocumentCategoryPermissionsMixin.has_object_read_permission] Unused argument 'request'
sol_docs/permissions/documentcategory.py:20: [R0201(no-self-use), BaseDocumentCategoryPermissionsMixin.has_object_read_permission] Method could be a function
sol_docs/permissions/documentcategory.py:23: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin.has_object_docs_add_permission] Missing method docstring
sol_docs/permissions/documentcategory.py:35: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin.has_object_files_permission] Missing method docstring
sol_docs/permissions/documentcategory.py:42: [C0111(missing-docstring), BaseDocumentCategoryPermissionsMixin.has_object_files_add_permission] Missing method docstring
************* Module sol_docs.permissions.document
sol_docs/permissions/document.py:58: [C0301(line-too-long), ] Line too long (103/100)
sol_docs/permissions/document.py:89: [C0301(line-too-long), ] Line too long (103/100)
sol_docs/permissions/document.py:112: [C0301(line-too-long), ] Line too long (105/100)
sol_docs/permissions/document.py:121: [C0301(line-too-long), ] Line too long (120/100)
sol_docs/permissions/document.py:144: [C0301(line-too-long), ] Line too long (119/100)
sol_docs/permissions/document.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_docs/permissions/document.py:5: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_docs/permissions/document.py:15: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin] Missing class docstring
sol_docs/permissions/document.py:15: [R0205(useless-object-inheritance), BaseDocumentCommonPermissionsMixin] Class 'BaseDocumentCommonPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol_docs/permissions/document.py:21: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_read_permission] Missing method docstring
sol_docs/permissions/document.py:21: [W0613(unused-argument), BaseDocumentCommonPermissionsMixin.has_read_permission] Unused argument 'request'
sol_docs/permissions/document.py:28: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_write_permission] Missing method docstring
sol_docs/permissions/document.py:28: [W0613(unused-argument), BaseDocumentCommonPermissionsMixin.has_write_permission] Unused argument 'request'
sol_docs/permissions/document.py:35: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_create_permission] Missing method docstring
sol_docs/permissions/document.py:35: [W0613(unused-argument), BaseDocumentCommonPermissionsMixin.has_create_permission] Unused argument 'content_type'
sol_docs/permissions/document.py:35: [W0613(unused-argument), BaseDocumentCommonPermissionsMixin.has_create_permission] Unused argument 'object_id'
sol_docs/permissions/document.py:35: [W0613(unused-argument), BaseDocumentCommonPermissionsMixin.has_create_permission] Unused argument 'category_id'
sol_docs/permissions/document.py:41: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_object_read_permission] Missing method docstring
sol_docs/permissions/document.py:47: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_object_retrieve_permission] Missing method docstring
sol_docs/permissions/document.py:53: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_object_write_permission] Missing method docstring
sol_docs/permissions/document.py:63: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_object_destroy_permission] Missing method docstring
sol_docs/permissions/document.py:73: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.has_object_file_permission] Missing method docstring
sol_docs/permissions/document.py:84: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.document_content_type] Missing method docstring
sol_docs/permissions/document.py:88: [C0111(missing-docstring), BaseDocumentCommonPermissionsMixin.document_content_object] Missing method docstring
sol_docs/permissions/document.py:92: [C0111(missing-docstring), BaseDocumentPermissionsMixin] Missing class docstring
sol_docs/permissions/document.py:101: [C0111(missing-docstring), BaseDocumentPermissionsMixin.permissions_filter] Missing method docstring
sol_docs/permissions/document.py:117: [W0212(protected-access), BaseDocumentPermissionsMixin.permissions_filter] Access to a protected member _meta of a client class
sol_docs/permissions/document.py:128: [C0111(missing-docstring), BaseDocumentPermissionsMixin.has_revision_permission] Missing method docstring
sol_docs/permissions/document.py:128: [W0613(unused-argument), BaseDocumentPermissionsMixin.has_revision_permission] Unused argument 'request'
sol_docs/permissions/document.py:134: [C0111(missing-docstring), BaseDocumentPermissionsMixin.has_object_revision_permission] Missing method docstring
sol_docs/permissions/document.py:143: [C0111(missing-docstring), BaseDocumentPermissionsMixin.has_files_permission] Missing method docstring
sol_docs/permissions/document.py:151: [C0111(missing-docstring), BaseDocumentPermissionsMixin.has_object_send_email_permission] Missing method docstring
sol_docs/permissions/document.py:162: [C0111(missing-docstring), BaseDocumentRevisionPermissionsMixin] Missing class docstring
sol_docs/permissions/document.py:182: [C0111(missing-docstring), DocumentContainerPermissionsMixin] Missing class docstring
sol_docs/permissions/document.py:182: [R0205(useless-object-inheritance), DocumentContainerPermissionsMixin] Class 'DocumentContainerPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol_docs/permissions/document.py:186: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_docs_add_permission] Missing method docstring
sol_docs/permissions/document.py:196: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_docs_send_email_permission] Missing method docstring
sol_docs/permissions/document.py:205: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_object_docs_send_email_permission] Missing method docstring
sol_docs/permissions/document.py:210: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_docs_edit_permission] Missing method docstring
sol_docs/permissions/document.py:220: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_docs_download_permission] Missing method docstring
sol_docs/permissions/document.py:229: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_object_docs_download_permission] Missing method docstring
sol_docs/permissions/document.py:234: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_docs_delete_permission] Missing method docstring
sol_docs/permissions/document.py:243: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_object_docs_delete_permission] Missing method docstring
sol_docs/permissions/document.py:248: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_docs_approve_reject_permission] Missing method docstring
sol_docs/permissions/document.py:257: [C0111(missing-docstring), DocumentContainerPermissionsMixin.has_object_docs_approve_reject_permission] Missing method docstring
sol_docs/permissions/document.py:5: [W0611(unused-import), ] Unused ContentType imported from django.contrib.contenttypes.models
************* Module orange_legal.tests
orange_legal/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_legal/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_legal.urls
orange_legal/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_legal/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_legal/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_legal/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_legal/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_legal.apps
orange_legal/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_legal/apps.py:6: [C0111(missing-docstring), OrangeLegalConfig] Missing class docstring
orange_legal/apps.py:6: [R0903(too-few-public-methods), OrangeLegalConfig] Too few public methods (0/2)
************* Module orange_legal.views
orange_legal/views.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_legal/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_legal/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_legal.serializers
orange_legal/serializers.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_legal/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_legal
orange_legal/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_legal.models_api
orange_legal/models_api.py:10: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            'supervision_contract__idazsup'
        |   ^
orange_legal/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_legal/models_api.py:8: [C0103(invalid-name), get_queryset_task] Argument name "qs" doesn't conform to snake_case naming style
orange_legal/models_api.py:8: [C0111(missing-docstring), get_queryset_task] Missing function docstring
orange_legal/models_api.py:16: [C0111(missing-docstring), get_queryset_task_viewset] Missing function docstring
orange_legal/models_api.py:20: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_legal.models
orange_legal/models.py:15: [C0301(line-too-long), ] Line too long (113/100)
orange_legal/models.py:20: [C0301(line-too-long), ] Line too long (114/100)
orange_legal/models.py:35: [C0301(line-too-long), ] Line too long (110/100)
orange_legal/models.py:35: [C0326(bad-whitespace), ] Exactly one space required after comma
    taskid = models.ForeignKey('LegalTask', models.DO_NOTHING, db_column='idattivita',  blank=True, null=True,
                                                                                     ^
orange_legal/models.py:37: [C0301(line-too-long), ] Line too long (116/100)
orange_legal/models.py:41: [C0301(line-too-long), ] Line too long (112/100)
orange_legal/models.py:43: [C0301(line-too-long), ] Line too long (106/100)
orange_legal/models.py:45: [C0301(line-too-long), ] Line too long (104/100)
orange_legal/models.py:48: [C0301(line-too-long), ] Line too long (107/100)
orange_legal/models.py:49: [C0301(line-too-long), ] Line too long (113/100)
orange_legal/models.py:51: [C0301(line-too-long), ] Line too long (107/100)
orange_legal/models.py:53: [C0301(line-too-long), ] Line too long (115/100)
orange_legal/models.py:99: [C0301(line-too-long), ] Line too long (120/100)
orange_legal/models.py:135: [C0301(line-too-long), ] Line too long (112/100)
orange_legal/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange_legal/models.py:4: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_legal/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_legal/models.py:9: [C0111(missing-docstring), LegalTask] Missing class docstring
orange_legal/models.py:26: [C0111(missing-docstring), LegalTask.Meta] Missing class docstring
orange_legal/models.py:26: [R0903(too-few-public-methods), LegalTask.Meta] Too few public methods (0/2)
orange_legal/models.py:9: [R0903(too-few-public-methods), LegalTask] Too few public methods (1/2)
orange_legal/models.py:33: [C0111(missing-docstring), LegalSupervision] Missing class docstring
orange_legal/models.py:61: [C0111(missing-docstring), LegalSupervision.Meta] Missing class docstring
orange_legal/models.py:61: [R0903(too-few-public-methods), LegalSupervision.Meta] Too few public methods (0/2)
orange_legal/models.py:33: [R0903(too-few-public-methods), LegalSupervision] Too few public methods (1/2)
orange_legal/models.py:68: [C0111(missing-docstring), LegalState] Missing class docstring
orange_legal/models.py:75: [C0111(missing-docstring), LegalState.Meta] Missing class docstring
orange_legal/models.py:75: [R0903(too-few-public-methods), LegalState.Meta] Too few public methods (0/2)
orange_legal/models.py:68: [R0903(too-few-public-methods), LegalState] Too few public methods (1/2)
orange_legal/models.py:82: [C0111(missing-docstring), LegalIntermedState] Missing class docstring
orange_legal/models.py:89: [C0111(missing-docstring), LegalIntermedState.Meta] Missing class docstring
orange_legal/models.py:89: [R0903(too-few-public-methods), LegalIntermedState.Meta] Too few public methods (0/2)
orange_legal/models.py:82: [R0903(too-few-public-methods), LegalIntermedState] Too few public methods (1/2)
orange_legal/models.py:96: [C0111(missing-docstring), LegalWorks] Missing class docstring
orange_legal/models.py:108: [C0111(missing-docstring), LegalWorks.Meta] Missing class docstring
orange_legal/models.py:108: [R0903(too-few-public-methods), LegalWorks.Meta] Too few public methods (0/2)
orange_legal/models.py:96: [R0903(too-few-public-methods), LegalWorks] Too few public methods (1/2)
orange_legal/models.py:115: [C0111(missing-docstring), LegalWorksTypes] Missing class docstring
orange_legal/models.py:124: [C0111(missing-docstring), LegalWorksTypes.Meta] Missing class docstring
orange_legal/models.py:124: [R0903(too-few-public-methods), LegalWorksTypes.Meta] Too few public methods (0/2)
orange_legal/models.py:115: [R0903(too-few-public-methods), LegalWorksTypes] Too few public methods (1/2)
orange_legal/models.py:131: [C0111(missing-docstring), LegalSupervisionContract] Missing class docstring
orange_legal/models.py:141: [C0111(missing-docstring), LegalSupervisionContract.Meta] Missing class docstring
orange_legal/models.py:141: [R0903(too-few-public-methods), LegalSupervisionContract.Meta] Too few public methods (0/2)
orange_legal/models.py:131: [R0903(too-few-public-methods), LegalSupervisionContract] Too few public methods (1/2)
orange_legal/models.py:148: [C0111(missing-docstring), LegalCompanies] Missing class docstring
orange_legal/models.py:168: [C0111(missing-docstring), LegalCompanies.Meta] Missing class docstring
orange_legal/models.py:168: [R0903(too-few-public-methods), LegalCompanies.Meta] Too few public methods (0/2)
orange_legal/models.py:148: [R0903(too-few-public-methods), LegalCompanies] Too few public methods (1/2)
orange_legal/models.py:6: [W0611(unused-import), ] Unused Device imported from orange_sites.models
************* Module orange_legal.migrations.0001_initial
orange_legal/migrations/0001_initial.py:19: [C0301(line-too-long), ] Line too long (102/100)
orange_legal/migrations/0001_initial.py:44: [C0301(line-too-long), ] Line too long (123/100)
orange_legal/migrations/0001_initial.py:45: [C0301(line-too-long), ] Line too long (107/100)
orange_legal/migrations/0001_initial.py:57: [C0301(line-too-long), ] Line too long (117/100)
orange_legal/migrations/0001_initial.py:58: [C0301(line-too-long), ] Line too long (101/100)
orange_legal/migrations/0001_initial.py:72: [C0301(line-too-long), ] Line too long (132/100)
orange_legal/migrations/0001_initial.py:73: [C0301(line-too-long), ] Line too long (134/100)
orange_legal/migrations/0001_initial.py:74: [C0301(line-too-long), ] Line too long (144/100)
orange_legal/migrations/0001_initial.py:75: [C0301(line-too-long), ] Line too long (145/100)
orange_legal/migrations/0001_initial.py:76: [C0301(line-too-long), ] Line too long (136/100)
orange_legal/migrations/0001_initial.py:77: [C0301(line-too-long), ] Line too long (134/100)
orange_legal/migrations/0001_initial.py:78: [C0301(line-too-long), ] Line too long (123/100)
orange_legal/migrations/0001_initial.py:79: [C0301(line-too-long), ] Line too long (129/100)
orange_legal/migrations/0001_initial.py:80: [C0301(line-too-long), ] Line too long (110/100)
orange_legal/migrations/0001_initial.py:81: [C0301(line-too-long), ] Line too long (110/100)
orange_legal/migrations/0001_initial.py:82: [C0301(line-too-long), ] Line too long (110/100)
orange_legal/migrations/0001_initial.py:94: [C0301(line-too-long), ] Line too long (101/100)
orange_legal/migrations/0001_initial.py:108: [C0301(line-too-long), ] Line too long (103/100)
orange_legal/migrations/0001_initial.py:111: [C0301(line-too-long), ] Line too long (101/100)
orange_legal/migrations/0001_initial.py:141: [C0301(line-too-long), ] Line too long (115/100)
orange_legal/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_legal/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_legal/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_legal/migrations/0001_initial.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_legal/migrations/0001_initial.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_notes.apps
sol_notes/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol_notes/apps.py:6: [C0111(missing-docstring), SolNotesConfig] Missing class docstring
sol_notes/apps.py:6: [R0903(too-few-public-methods), SolNotesConfig] Too few public methods (0/2)
************* Module sol_notes.mixins
sol_notes/mixins.py:15: [C0301(line-too-long), ] Line too long (119/100)
sol_notes/mixins.py:31: [C0301(line-too-long), ] Line too long (117/100)
sol_notes/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/mixins.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol_notes/mixins.py:4: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol_notes/mixins.py:9: [C0111(missing-docstring), NoteSerializerMixin] Missing class docstring
sol_notes/mixins.py:9: [R0205(useless-object-inheritance), NoteSerializerMixin] Class 'NoteSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_notes/mixins.py:11: [C0111(missing-docstring), NoteSerializerMixin.recipient_event_class] Missing method docstring
sol_notes/mixins.py:14: [W0212(protected-access), NoteSerializerMixin.recipient_event_class] Access to a protected member _meta of a client class
sol_notes/mixins.py:18: [C0111(missing-docstring), NoteSerializerMixin.create_recipients] Missing method docstring
sol_notes/mixins.py:18: [W1113(keyword-arg-before-vararg), NoteSerializerMixin.create_recipients] Keyword argument before variable positional arguments list in the definition of create_recipients function
sol_notes/mixins.py:22: [W0212(protected-access), NoteSerializerMixin.create_recipients] Access to a protected member _meta of a client class
sol_notes/mixins.py:32: [E1101(no-member), NoteSerializerMixin.create_recipients] Method 'recipient_event_class' has no 'fire_event' member
sol_notes/mixins.py:34: [W0212(protected-access), NoteSerializerMixin.create_recipients] Access to a protected member _meta of a client class
sol_notes/mixins.py:40: [C0111(missing-docstring), NoteSerializerMixin.create] Missing method docstring
************* Module sol_notes.__init__
sol_notes/__init__.py:3: [C0304(missing-final-newline), ] Final newline missing
************* Module sol_notes
sol_notes/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/__init__.py:3: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module sol_notes.models_api
sol_notes/models_api.py:66: [C0301(line-too-long), ] Line too long (114/100)
sol_notes/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/models_api.py:5: [E0401(import-error), ] Unable to import 'django.db.models'
sol_notes/models_api.py:6: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_notes/models_api.py:7: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_notes/models_api.py:26: [C0103(invalid-name), get_api_config] Variable name "c" doesn't conform to snake_case naming style
sol_notes/models_api.py:39: [C0111(missing-docstring), get_callable_note] Missing function docstring
sol_notes/models_api.py:40: [W0613(unused-argument), get_callable_note.callable_func] Unused argument 'kwargs'
sol_notes/models_api.py:61: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module sol_notes.models
sol_notes/models.py:43: [C0301(line-too-long), ] Line too long (116/100)
sol_notes/models.py:49: [C0301(line-too-long), ] Line too long (109/100)
sol_notes/models.py:54: [C0301(line-too-long), ] Line too long (105/100)
sol_notes/models.py:58: [C0301(line-too-long), ] Line too long (112/100)
sol_notes/models.py:60: [C0301(line-too-long), ] Line too long (119/100)
sol_notes/models.py:81: [C0301(line-too-long), ] Line too long (104/100)
sol_notes/models.py:92: [C0301(line-too-long), ] Line too long (106/100)
sol_notes/models.py:93: [C0301(line-too-long), ] Line too long (120/100)
sol_notes/models.py:104: [C0301(line-too-long), ] Line too long (115/100)
sol_notes/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/models.py:3: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_notes/models.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
sol_notes/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol_notes/models.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_notes/models.py:7: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.fields'
sol_notes/models.py:8: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_notes/models.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_notes/models.py:14: [C0111(missing-docstring), NoteQuerySet] Missing class docstring
sol_notes/models.py:15: [C0111(missing-docstring), NoteQuerySet.prefetch_note_recipients] Missing method docstring
sol_notes/models.py:18: [W0212(protected-access), NoteQuerySet.prefetch_note_recipients] Access to a protected member _meta of a client class
sol_notes/models.py:71: [C0111(missing-docstring), Note.Meta] Missing class docstring
sol_notes/models.py:71: [R0903(too-few-public-methods), Note.Meta] Too few public methods (0/2)
sol_notes/models.py:95: [C0111(missing-docstring), NoteRecipient.Meta] Missing class docstring
sol_notes/models.py:95: [R0903(too-few-public-methods), NoteRecipient.Meta] Too few public methods (0/2)
sol_notes/models.py:80: [R0903(too-few-public-methods), NoteRecipient] Too few public methods (0/2)
sol_notes/models.py:117: [C0111(missing-docstring), NoteRead.Meta] Missing class docstring
sol_notes/models.py:117: [R0903(too-few-public-methods), NoteRead.Meta] Too few public methods (0/2)
sol_notes/models.py:103: [R0903(too-few-public-methods), NoteRead] Too few public methods (0/2)
sol_notes/models.py:135: [C0111(missing-docstring), NoteCategory.Meta] Missing class docstring
sol_notes/models.py:135: [R0903(too-few-public-methods), NoteCategory.Meta] Too few public methods (0/2)
sol_notes/models.py:125: [R0903(too-few-public-methods), NoteCategory] Too few public methods (0/2)
************* Module sol_notes.permissions.note
sol_notes/permissions/note.py:23: [C0301(line-too-long), ] Line too long (110/100)
sol_notes/permissions/note.py:100: [C0301(line-too-long), ] Line too long (110/100)
sol_notes/permissions/note.py:102: [C0301(line-too-long), ] Line too long (114/100)
sol_notes/permissions/note.py:126: [C0301(line-too-long), ] Line too long (114/100)
sol_notes/permissions/note.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/permissions/note.py:13: [C0111(missing-docstring), BaseNotePermissionsMixin] Missing class docstring
sol_notes/permissions/note.py:22: [C0111(missing-docstring), BaseNotePermissionsMixin.permissions_filter] Missing method docstring
sol_notes/permissions/note.py:28: [C0111(missing-docstring), BaseNotePermissionsMixin.has_read_permission] Missing method docstring
sol_notes/permissions/note.py:28: [W0613(unused-argument), BaseNotePermissionsMixin.has_read_permission] Unused argument 'request'
sol_notes/permissions/note.py:34: [C0111(missing-docstring), BaseNotePermissionsMixin.has_object_read_permission] Missing method docstring
sol_notes/permissions/note.py:41: [C0111(missing-docstring), BaseNotePermissionsMixin.has_write_permission] Missing method docstring
sol_notes/permissions/note.py:41: [W0613(unused-argument), BaseNotePermissionsMixin.has_write_permission] Unused argument 'request'
sol_notes/permissions/note.py:44: [C0111(missing-docstring), BaseNotePermissionsMixin.has_object_write_permission] Missing method docstring
sol_notes/permissions/note.py:51: [C0111(missing-docstring), BaseNotePermissionsMixin.has_create_permission] Missing method docstring
sol_notes/permissions/note.py:67: [C0111(missing-docstring), BaseNotePermissionsMixin.has_object_retrieve_permission] Missing method docstring
sol_notes/permissions/note.py:80: [C0111(missing-docstring), BaseNotePermissionsMixin.has_object_destroy_permission] Missing method docstring
sol_notes/permissions/note.py:94: [C0111(missing-docstring), NoteContainerPermissionsMixin] Missing class docstring
sol_notes/permissions/note.py:94: [R0205(useless-object-inheritance), NoteContainerPermissionsMixin] Class 'NoteContainerPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol_notes/permissions/note.py:98: [C0111(missing-docstring), NoteContainerPermissionsMixin.has_notes_add_permission] Missing method docstring
sol_notes/permissions/note.py:112: [C0111(missing-docstring), NoteContainerPermissionsMixin.has_object_notes_add_permission] Missing method docstring
sol_notes/permissions/note.py:124: [C0111(missing-docstring), NoteContainerPermissionsMixin.has_notes_delete_permission] Missing method docstring
sol_notes/permissions/note.py:136: [C0111(missing-docstring), NoteContainerPermissionsMixin.has_object_notes_delete_permission] Missing method docstring
************* Module sol_notes.notifications.__init__
sol_notes/notifications/__init__.py:54: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    'content_type',
                |   ^
sol_notes/notifications/__init__.py:55: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                    'created_by',
                |   ^
************* Module sol_notes.notifications
sol_notes/notifications/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notes/notifications/__init__.py:4: [E0401(import-error), ] Unable to import 'django.apps'
sol_notes/notifications/__init__.py:5: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol_notes/notifications/__init__.py:10: [C0111(missing-docstring), BaseNewNoteRecipientEvent] Missing class docstring
sol_notes/notifications/__init__.py:43: [C0111(missing-docstring), BaseNewNoteRecipientEvent.note_id] Missing method docstring
sol_notes/notifications/__init__.py:44: [E1101(no-member), BaseNewNoteRecipientEvent.note_id] Method 'note' has no 'pk' member
sol_notes/notifications/__init__.py:49: [C0111(missing-docstring), BaseNewNoteRecipientEvent.note] Missing method docstring
sol_notes/notifications/__init__.py:61: [E1101(no-member), BaseNewNoteRecipientEvent.get_context] Method 'note' has no 'content_object' member
sol_notes/notifications/__init__.py:63: [W0212(protected-access), BaseNewNoteRecipientEvent.get_context] Access to a protected member _meta of a client class
sol_notes/notifications/__init__.py:63: [E1101(no-member), BaseNewNoteRecipientEvent.get_context] Method 'note' has no 'content_object' member
sol_notes/notifications/__init__.py:64: [E1101(no-member), BaseNewNoteRecipientEvent.get_context] Method 'note' has no 'content_object' member
sol_notes/notifications/__init__.py:66: [E1101(no-member), BaseNewNoteRecipientEvent.get_context] Method 'note' has no 'content_type' member
sol_notes/notifications/__init__.py:72: [E1101(no-member), BaseNewNoteRecipientEvent.get_context] Method 'note' has no 'subject' member
sol_notes/notifications/__init__.py:73: [E1101(no-member), BaseNewNoteRecipientEvent.get_context] Method 'note' has no 'body' member
sol_notes/notifications/__init__.py:90: [E1101(no-member), BaseNewNoteRecipientEvent.get_event_listeners] Method 'note' has no 'note_recipients' member
sol_notes/notifications/__init__.py:91: [E1101(no-member), BaseNewNoteRecipientEvent.get_event_listeners] Method 'note' has no 'created_by' member
************* Module orange_brise.tests
orange_brise/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
orange_brise/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module orange_brise.urls
orange_brise/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
orange_brise/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
orange_brise/urls.py:8: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
orange_brise/urls.py:13: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
orange_brise/urls.py:14: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
************* Module orange_brise.apps
orange_brise/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
orange_brise/apps.py:6: [C0111(missing-docstring), OrangeBriseConfig] Missing class docstring
orange_brise/apps.py:6: [R0903(too-few-public-methods), OrangeBriseConfig] Too few public methods (0/2)
************* Module orange_brise.views
orange_brise/views.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_brise/views.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/views.py:3: [W0401(wildcard-import), ] Wildcard import serializers
orange_brise/views.py:4: [C0411(wrong-import-order), ] first party import "from sol.api.lib import RestifyModels" should be placed before "from .serializers import *"
************* Module orange_brise.serializers
orange_brise/serializers.py:7: [C0304(missing-final-newline), ] Final newline missing
orange_brise/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
************* Module orange_brise
orange_brise/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module orange_brise.models_api
orange_brise/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/models_api.py:4: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
orange_brise/models_api.py:8: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module orange_brise.models
orange_brise/models.py:15: [C0326(bad-whitespace), ] Exactly one space required after comma
    lot_long = models.CharField(_('Lot Long'),  blank=True, null=True, max_length=256)
                                             ^
orange_brise/models.py:16: [C0326(bad-whitespace), ] Exactly one space required after comma
    lot = models.CharField(_('Lot'),  blank=True, null=True, max_length=256)
                                   ^
orange_brise/models.py:17: [C0326(bad-whitespace), ] Exactly one space required after comma
    type = models.CharField(_('Type'),  blank=True, null=True, max_length=256)
                                     ^
orange_brise/models.py:18: [C0326(bad-whitespace), ] Exactly one space required after comma
    activity = models.CharField(_('Activity'),  blank=True, null=True, max_length=256)
                                             ^
orange_brise/models.py:19: [C0326(bad-whitespace), ] Exactly one space required after comma
    size = models.CharField(_('Size'),  blank=True, null=True, max_length=256)
                                     ^
orange_brise/models.py:20: [C0326(bad-whitespace), ] Exactly one space required after comma
    identifier_3 = models.CharField(_('Identifier 3'),  blank=True, null=True, max_length=256)
                                                     ^
orange_brise/models.py:21: [C0326(bad-whitespace), ] Exactly one space required after comma
    budget_year = models.CharField(_('Budget Year'),  blank=True, null=True, max_length=256)
                                                   ^
orange_brise/models.py:22: [C0326(bad-whitespace), ] Exactly one space required after comma
    t0 = models.CharField(_('T0'),  blank=True, null=True, max_length=256)
                                 ^
orange_brise/models.py:23: [C0326(bad-whitespace), ] Exactly one space required after comma
    project = models.CharField(_('Project'),  blank=True, null=True, max_length=256)
                                           ^
orange_brise/models.py:24: [C0326(bad-whitespace), ] Exactly one space required after comma
    subproject = models.CharField(_('Subproject'),  blank=True, null=True, max_length=256)
                                                 ^
orange_brise/models.py:26: [C0326(bad-whitespace), ] Exactly one space required after comma
    additional_data = models.CharField(_('Additional Data'),  blank=True, null=True, max_length=256)
                                                           ^
orange_brise/models.py:27: [C0326(bad-whitespace), ] Exactly one space required after comma
    status = models.CharField(_('Status'),  blank=True, null=True, max_length=256)
                                         ^
orange_brise/models.py:28: [C0326(bad-whitespace), ] Exactly one space required after comma
    result = models.CharField(_('Result'),  blank=True, null=True, max_length=256)
                                         ^
orange_brise/models.py:29: [C0301(line-too-long), ] Line too long (110/100)
orange_brise/models.py:29: [C0326(bad-whitespace), ] Exactly one space required after comma
    fist_group_activated = models.CharField(_('Fist group Activsted'),  blank=True, null=True, max_length=256)
                                                                     ^
orange_brise/models.py:30: [C0326(bad-whitespace), ] Exactly one space required after comma
    owner = models.CharField(_('Owner'),  blank=True, null=True, max_length=256)
                                       ^
orange_brise/models.py:37: [C0326(bad-whitespace), ] Exactly one space required after comma
    creator_group = models.CharField(_('Creator Group'),  blank=True, null=True, max_length=256)
                                                       ^
orange_brise/models.py:38: [C0326(bad-whitespace), ] Exactly one space required after comma
    creator_user = models.CharField(_('Ceator User'),  blank=True, null=True, max_length=256)
                                                    ^
orange_brise/models.py:39: [C0301(line-too-long), ] Line too long (106/100)
orange_brise/models.py:39: [C0326(bad-whitespace), ] Exactly one space required after comma
    creator_user_login = models.CharField(_('Creator User Login'),  blank=True, null=True, max_length=256)
                                                                 ^
orange_brise/models.py:40: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/models.py:40: [C0326(bad-whitespace), ] Exactly one space required after comma
    third_party_reference = models.CharField(_('Fist Party Reference'),  blank=True, null=True, max_length=256)
                                                                      ^
orange_brise/models.py:42: [C0301(line-too-long), ] Line too long (108/100)
orange_brise/models.py:42: [C0326(bad-whitespace), ] Exactly one space required after comma
    processing_priority = models.CharField(_('Processing Priority'),  blank=True, null=True, max_length=256)
                                                                   ^
orange_brise/models.py:43: [C0326(bad-whitespace), ] Exactly one space required after comma
    ticket_ponente = models.CharField(_('Ticket Ponente'),  blank=True, null=True, max_length=256)
                                                         ^
orange_brise/models.py:60: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/models.py:62: [C0326(bad-whitespace), ] Exactly one space required after comma
    freeze_label = models.CharField(_('Freeze Label'),  blank=True, null=True, max_length=256)
                                                     ^
orange_brise/models.py:87: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/models.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/models.py:3: [E0401(import-error), ] Unable to import 'django.db'
orange_brise/models.py:4: [E0401(import-error), ] Unable to import 'django.utils.encoding'
orange_brise/models.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
orange_brise/models.py:48: [C0111(missing-docstring), BriseTicket.Meta] Missing class docstring
orange_brise/models.py:48: [R0903(too-few-public-methods), BriseTicket.Meta] Too few public methods (0/2)
orange_brise/models.py:8: [R0903(too-few-public-methods), BriseTicket] Too few public methods (1/2)
orange_brise/models.py:70: [C0111(missing-docstring), BriseTicketFreezes.Meta] Missing class docstring
orange_brise/models.py:70: [R0903(too-few-public-methods), BriseTicketFreezes.Meta] Too few public methods (0/2)
orange_brise/models.py:54: [R0903(too-few-public-methods), BriseTicketFreezes] Too few public methods (1/2)
orange_brise/models.py:93: [C0111(missing-docstring), BriseTicketContract.Meta] Missing class docstring
orange_brise/models.py:93: [R0903(too-few-public-methods), BriseTicketContract.Meta] Too few public methods (0/2)
orange_brise/models.py:76: [R0903(too-few-public-methods), BriseTicketContract] Too few public methods (1/2)
************* Module orange_brise.data_exchange.input.excel_brise
orange_brise/data_exchange/input/excel_brise.py:187: [C0301(line-too-long), ] Line too long (103/100)
orange_brise/data_exchange/input/excel_brise.py:189: [C0301(line-too-long), ] Line too long (101/100)
orange_brise/data_exchange/input/excel_brise.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/data_exchange/input/excel_brise.py:10: [C0111(missing-docstring), BriseImporterXlsx] Missing class docstring
orange_brise/data_exchange/input/excel_brise.py:179: [C0111(missing-docstring), BriseImporterXlsx.import_rows] Missing method docstring
************* Module orange_brise.data_exchange.input.excel_tarifa_wo
orange_brise/data_exchange/input/excel_tarifa_wo.py:22: [C0303(trailing-whitespace), ] Trailing whitespace
orange_brise/data_exchange/input/excel_tarifa_wo.py:53: [C0303(trailing-whitespace), ] Trailing whitespace
orange_brise/data_exchange/input/excel_tarifa_wo.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/data_exchange/input/excel_tarifa_wo.py:11: [C0111(missing-docstring), TarifaImporterXlsx] Missing class docstring
orange_brise/data_exchange/input/excel_tarifa_wo.py:64: [C0111(missing-docstring), TarifaImporterXlsx.import_rows] Missing method docstring
orange_brise/data_exchange/input/excel_tarifa_wo.py:3: [W0611(unused-import), ] Unused load_workbook imported from openpyxl
************* Module orange_brise.data_exchange.input.__init__
orange_brise/data_exchange/input/__init__.py:39: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/data_exchange/input/__init__.py:65: [C0326(bad-whitespace), ] Exactly one space required after comma
            data = self.get_data(row,headers_index)
                                    ^
************* Module orange_brise.data_exchange.input
orange_brise/data_exchange/input/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/data_exchange/input/__init__.py:5: [E0401(import-error), ] Unable to import 'django.core.exceptions'
orange_brise/data_exchange/input/__init__.py:20: [C0103(invalid-name), BaseImporterXlsx.__init__] Attribute name "wb" doesn't conform to snake_case naming style
orange_brise/data_exchange/input/__init__.py:8: [C0111(missing-docstring), BaseImporterXlsx] Missing class docstring
orange_brise/data_exchange/input/__init__.py:8: [R0205(useless-object-inheritance), BaseImporterXlsx] Class 'BaseImporterXlsx' inherits from object, can be safely removed from bases in python3
orange_brise/data_exchange/input/__init__.py:21: [W0703(broad-except), BaseImporterXlsx.__init__] Catching too general exception Exception
orange_brise/data_exchange/input/__init__.py:21: [C0103(invalid-name), BaseImporterXlsx.__init__] Variable name "e" doesn't conform to snake_case naming style
orange_brise/data_exchange/input/__init__.py:26: [C0111(missing-docstring), BaseImporterXlsx.failed] Missing method docstring
orange_brise/data_exchange/input/__init__.py:29: [C0111(missing-docstring), BaseImporterXlsx.process_headers] Missing method docstring
orange_brise/data_exchange/input/__init__.py:30: [W0612(unused-variable), BaseImporterXlsx.process_headers] Unused variable 'row_index'
orange_brise/data_exchange/input/__init__.py:33: [W0612(unused-variable), BaseImporterXlsx.process_headers] Unused variable 'key'
orange_brise/data_exchange/input/__init__.py:43: [C0103(invalid-name), BaseImporterXlsx.work] Argument name "ws" doesn't conform to snake_case naming style
orange_brise/data_exchange/input/__init__.py:43: [C0111(missing-docstring), BaseImporterXlsx.work] Missing method docstring
orange_brise/data_exchange/input/__init__.py:43: [R0913(too-many-arguments), BaseImporterXlsx.work] Too many arguments (6/5)
orange_brise/data_exchange/input/__init__.py:74: [C0111(missing-docstring), BaseImporterXlsx.get_data] Missing method docstring
orange_brise/data_exchange/input/__init__.py:74: [R0201(no-self-use), BaseImporterXlsx.get_data] Method could be a function
************* Module orange_brise.management.commands.import_brise
orange_brise/management/commands/import_brise.py:32: [C0301(line-too-long), ] Line too long (108/100)
orange_brise/management/commands/import_brise.py:40: [C0301(line-too-long), ] Line too long (103/100)
orange_brise/management/commands/import_brise.py:59: [C0301(line-too-long), ] Line too long (104/100)
orange_brise/management/commands/import_brise.py:64: [C0301(line-too-long), ] Line too long (106/100)
orange_brise/management/commands/import_brise.py:87: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/management/commands/import_brise.py:114: [C0301(line-too-long), ] Line too long (104/100)
orange_brise/management/commands/import_brise.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/management/commands/import_brise.py:3: [E0401(import-error), ] Unable to import 'django.core.management.base'
orange_brise/management/commands/import_brise.py:4: [E0401(import-error), ] Unable to import 'django.utils'
orange_brise/management/commands/import_brise.py:5: [E0401(import-error), ] Unable to import 'django.core.mail'
orange_brise/management/commands/import_brise.py:14: [C0111(missing-docstring), Command] Missing class docstring
orange_brise/management/commands/import_brise.py:20: [C0111(missing-docstring), Command.add_arguments] Missing method docstring
orange_brise/management/commands/import_brise.py:20: [R0201(no-self-use), Command.add_arguments] Method could be a function
orange_brise/management/commands/import_brise.py:31: [C0111(missing-docstring), Command.import_tarifa] Missing method docstring
orange_brise/management/commands/import_brise.py:31: [W0613(unused-argument), Command.import_tarifa] Unused argument 'args'
orange_brise/management/commands/import_brise.py:31: [W0613(unused-argument), Command.import_tarifa] Unused argument 'kwargs'
orange_brise/management/commands/import_brise.py:63: [C0111(missing-docstring), Command.import_brise] Missing method docstring
orange_brise/management/commands/import_brise.py:63: [R0914(too-many-locals), Command.import_brise] Too many local variables (19/15)
orange_brise/management/commands/import_brise.py:73: [C0103(invalid-name), Command.import_brise] Variable name "r" doesn't conform to snake_case naming style
orange_brise/management/commands/import_brise.py:63: [W0613(unused-argument), Command.import_brise] Unused argument 'args'
orange_brise/management/commands/import_brise.py:63: [W0613(unused-argument), Command.import_brise] Unused argument 'kwargs'
orange_brise/management/commands/import_brise.py:119: [C0111(missing-docstring), Command.check_lockfile] Missing method docstring
orange_brise/management/commands/import_brise.py:121: [R1703(simplifiable-if-statement), Command.check_lockfile] The if statement can be replaced with 'return bool(test)'
orange_brise/management/commands/import_brise.py:121: [R1705(no-else-return), Command.check_lockfile] Unnecessary "else" after "return"
orange_brise/management/commands/import_brise.py:126: [C0111(missing-docstring), Command.do_import] Missing method docstring
orange_brise/management/commands/import_brise.py:126: [W0622(redefined-builtin), Command.do_import] Redefining built-in 'type'
orange_brise/management/commands/import_brise.py:140: [W0703(broad-except), Command.do_import] Catching too general exception Exception
orange_brise/management/commands/import_brise.py:140: [C0103(invalid-name), Command.do_import] Variable name "e" doesn't conform to snake_case naming style
orange_brise/management/commands/import_brise.py:154: [C0111(missing-docstring), Command.match_file] Missing method docstring
orange_brise/management/commands/import_brise.py:156: [W0622(redefined-builtin), Command.match_file] Redefining built-in 'type'
orange_brise/management/commands/import_brise.py:165: [C0111(missing-docstring), Command.handle] Missing method docstring
orange_brise/management/commands/import_brise.py:173: [W0622(redefined-builtin), Command.handle] Redefining built-in 'type'
orange_brise/management/commands/import_brise.py:165: [W0613(unused-argument), Command.handle] Unused argument 'args'
orange_brise/management/commands/import_brise.py:3: [C0411(wrong-import-order), ] third party import "from django.core.management.base import BaseCommand" should be placed before "import settings"
orange_brise/management/commands/import_brise.py:4: [C0411(wrong-import-order), ] third party import "from django.utils import timezone" should be placed before "import settings"
orange_brise/management/commands/import_brise.py:5: [C0411(wrong-import-order), ] third party import "from django.core.mail import EmailMessage" should be placed before "import settings"
orange_brise/management/commands/import_brise.py:10: [C0411(wrong-import-order), ] standard import "from os import listdir" should be placed before "from django.core.management.base import BaseCommand"
orange_brise/management/commands/import_brise.py:11: [C0411(wrong-import-order), ] standard import "from os.path import isfile, join" should be placed before "from django.core.management.base import BaseCommand"
************* Module orange_brise.migrations.0002_auto_20170216_1008
orange_brise/migrations/0002_auto_20170216_1008.py:1: [C0103(invalid-name), ] Module name "0002_auto_20170216_1008" doesn't conform to snake_case naming style
orange_brise/migrations/0002_auto_20170216_1008.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/migrations/0002_auto_20170216_1008.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_brise/migrations/0002_auto_20170216_1008.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_brise/migrations/0002_auto_20170216_1008.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_brise.migrations.0001_initial
orange_brise/migrations/0001_initial.py:20: [C0301(line-too-long), ] Line too long (114/100)
orange_brise/migrations/0001_initial.py:39: [C0301(line-too-long), ] Line too long (114/100)
orange_brise/migrations/0001_initial.py:41: [C0301(line-too-long), ] Line too long (105/100)
orange_brise/migrations/0001_initial.py:52: [C0301(line-too-long), ] Line too long (113/100)
orange_brise/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
orange_brise/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_brise/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
orange_brise/migrations/0001_initial.py:9: [C0111(missing-docstring), Migration] Missing class docstring
orange_brise/migrations/0001_initial.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_brise.migrations.0004_auto_20180503_0909
orange_brise/migrations/0004_auto_20180503_0909.py:1: [C0103(invalid-name), ] Module name "0004_auto_20180503_0909" doesn't conform to snake_case naming style
orange_brise/migrations/0004_auto_20180503_0909.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/migrations/0004_auto_20180503_0909.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_brise/migrations/0004_auto_20180503_0909.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_brise/migrations/0004_auto_20180503_0909.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module orange_brise.migrations.0003_briseticket_briseticketcontract_briseticketfreezes
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:18: [C0301(line-too-long), ] Line too long (118/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:19: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:20: [C0301(line-too-long), ] Line too long (101/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:21: [C0301(line-too-long), ] Line too long (103/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:22: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:23: [C0301(line-too-long), ] Line too long (103/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:24: [C0301(line-too-long), ] Line too long (119/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:25: [C0301(line-too-long), ] Line too long (117/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:27: [C0301(line-too-long), ] Line too long (109/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:28: [C0301(line-too-long), ] Line too long (115/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:29: [C0301(line-too-long), ] Line too long (101/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:30: [C0301(line-too-long), ] Line too long (125/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:31: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:32: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:33: [C0301(line-too-long), ] Line too long (135/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:34: [C0301(line-too-long), ] Line too long (105/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:35: [C0301(line-too-long), ] Line too long (109/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:36: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:37: [C0301(line-too-long), ] Line too long (109/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:38: [C0301(line-too-long), ] Line too long (115/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:40: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:41: [C0301(line-too-long), ] Line too long (121/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:42: [C0301(line-too-long), ] Line too long (118/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:43: [C0301(line-too-long), ] Line too long (131/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:44: [C0301(line-too-long), ] Line too long (136/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:46: [C0301(line-too-long), ] Line too long (133/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:47: [C0301(line-too-long), ] Line too long (123/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:58: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:61: [C0301(line-too-long), ] Line too long (111/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:62: [C0301(line-too-long), ] Line too long (117/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:63: [C0301(line-too-long), ] Line too long (137/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:64: [C0301(line-too-long), ] Line too long (107/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:75: [C0301(line-too-long), ] Line too long (125/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:76: [C0301(line-too-long), ] Line too long (117/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:77: [C0301(line-too-long), ] Line too long (119/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:78: [C0301(line-too-long), ] Line too long (113/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:79: [C0301(line-too-long), ] Line too long (108/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:80: [C0301(line-too-long), ] Line too long (112/100)
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:1: [C0103(invalid-name), ] Module name "0003_briseticket_briseticketcontract_briseticketfreezes" doesn't conform to snake_case naming style
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:1: [C0111(missing-docstring), ] Missing module docstring
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:5: [E0401(import-error), ] Unable to import 'django.db'
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:8: [C0111(missing-docstring), Migration] Missing class docstring
orange_brise/migrations/0003_briseticket_briseticketcontract_briseticketfreezes.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.tests
sol_users/tests.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/tests.py:1: [E0401(import-error), ] Unable to import 'django.test'
sol_users/tests.py:1: [W0611(unused-import), ] Unused TestCase imported from django.test
************* Module sol_users.urls
sol_users/urls.py:13: [C0301(line-too-long), ] Line too long (101/100)
sol_users/urls.py:23: [C0301(line-too-long), ] Line too long (106/100)
sol_users/urls.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/urls.py:2: [E0401(import-error), ] Unable to import 'django.conf.urls'
sol_users/urls.py:3: [E0401(import-error), ] Unable to import 'rest_framework'
sol_users/urls.py:9: [C0103(invalid-name), ] Constant name "router" doesn't conform to UPPER_CASE naming style
sol_users/urls.py:17: [C0103(invalid-name), ] Constant name "app_pattern" doesn't conform to UPPER_CASE naming style
sol_users/urls.py:18: [C0103(invalid-name), ] Constant name "urlpatterns" doesn't conform to UPPER_CASE naming style
sol_users/urls.py:6: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
************* Module sol_users.apps
sol_users/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol_users/apps.py:6: [C0111(missing-docstring), SolUsersConfig] Missing class docstring
sol_users/apps.py:6: [R0903(too-few-public-methods), SolUsersConfig] Too few public methods (0/2)
************* Module sol_users.authentication
sol_users/authentication.py:111: [W0511(fixme), ] TODO: now last_login is the first activity of the day, to avoid multiple update query
sol_users/authentication.py:112: [C0301(line-too-long), ] Line too long (109/100)
sol_users/authentication.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/authentication.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/authentication.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/authentication.py:6: [E0401(import-error), ] Unable to import 'django.contrib.auth.models'
sol_users/authentication.py:7: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol_users/authentication.py:8: [E0401(import-error), ] Unable to import 'django.utils'
sol_users/authentication.py:9: [E0401(import-error), ] Unable to import 'django.utils.timezone'
sol_users/authentication.py:10: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_users/authentication.py:11: [E0401(import-error), ] Unable to import 'rest_framework'
sol_users/authentication.py:12: [E0401(import-error), ] Unable to import 'rest_framework.authentication'
sol_users/authentication.py:20: [C0111(missing-docstring), create_auth_token] Missing function docstring
sol_users/authentication.py:20: [W0613(unused-argument), create_auth_token] Unused argument 'serializer'
sol_users/authentication.py:27: [C0111(missing-docstring), ImpersonableAuthenticationMixin] Missing class docstring
sol_users/authentication.py:27: [R0205(useless-object-inheritance), ImpersonableAuthenticationMixin] Class 'ImpersonableAuthenticationMixin' inherits from object, can be safely removed from bases in python3
sol_users/authentication.py:30: [C0111(missing-docstring), ImpersonableAuthenticationMixin.get_impersonable_auth] Missing method docstring
sol_users/authentication.py:38: [C0103(invalid-name), ImpersonableAuthenticationMixin.get_impersonable_auth] Variable name "e" doesn't conform to snake_case naming style
sol_users/authentication.py:31: [W0612(unused-variable), ImpersonableAuthenticationMixin.get_impersonable_auth] Unused variable 'token'
sol_users/authentication.py:38: [W0612(unused-variable), ImpersonableAuthenticationMixin.get_impersonable_auth] Unused variable 'e'
sol_users/authentication.py:45: [C0111(missing-docstring), ImpersonableAuthenticationMixin.authenticate] Missing method docstring
sol_users/authentication.py:54: [C0111(missing-docstring), ImpersonableSessionAuthentication] Missing class docstring
sol_users/authentication.py:58: [C0111(missing-docstring), ImpersonableTokenAuthentication] Missing class docstring
sol_users/authentication.py:67: [C0111(missing-docstring), SolExpiringTokenAuthentication.authenticate_credentials] Missing method docstring
sol_users/authentication.py:70: [W0612(unused-variable), SolExpiringTokenAuthentication.authenticate_credentials] Unused variable 'user'
sol_users/authentication.py:109: [W0612(unused-variable), UserAuditLogTokenAuthentication.authenticate] Unused variable 'token'
************* Module sol_users.views
sol_users/views.py:30: [C0301(line-too-long), ] Line too long (116/100)
sol_users/views.py:76: [C0301(line-too-long), ] Line too long (112/100)
sol_users/views.py:86: [C0301(line-too-long), ] Line too long (114/100)
sol_users/views.py:107: [C0301(line-too-long), ] Line too long (116/100)
sol_users/views.py:143: [C0301(line-too-long), ] Line too long (103/100)
sol_users/views.py:221: [C0301(line-too-long), ] Line too long (105/100)
sol_users/views.py:239: [C0301(line-too-long), ] Line too long (107/100)
sol_users/views.py:292: [C0301(line-too-long), ] Line too long (101/100)
sol_users/views.py:339: [C0305(trailing-newlines), ] Trailing newlines
sol_users/views.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/views.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/views.py:7: [W0401(wildcard-import), ] Wildcard import sol_users.serializers
sol_users/views.py:11: [E0401(import-error), ] Unable to import 'django'
sol_users/views.py:12: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/views.py:13: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_users/views.py:14: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_users/views.py:15: [E0401(import-error), ] Unable to import 'django.apps'
sol_users/views.py:16: [E0401(import-error), ] Unable to import 'rest_framework'
sol_users/views.py:17: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol_users/views.py:23: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol_users/views.py:24: [E0401(import-error), ] Unable to import 'rest_framework.parsers'
sol_users/views.py:25: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol_users/views.py:26: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_users/views.py:27: [E0611(no-name-in-module), ] No name 'filters' in module 'url_filter'
sol_users/views.py:27: [E0401(import-error), ] Unable to import 'url_filter.filters'
sol_users/views.py:41: [C0111(missing-docstring), ZoneRevokeUserFilter] Missing class docstring
sol_users/views.py:43: [C0111(missing-docstring), ZoneRevokeUserFilter.filter_in_for_django] Missing method docstring
sol_users/views.py:43: [R0201(no-self-use), ZoneRevokeUserFilter.filter_in_for_django] Method could be a function
sol_users/views.py:41: [R0903(too-few-public-methods), ZoneRevokeUserFilter] Too few public methods (1/2)
sol_users/views.py:71: [C0111(missing-docstring), ManageUserFilterSet] Missing class docstring
sol_users/views.py:74: [C0111(missing-docstring), ManageUserFilterSet.Meta] Missing class docstring
sol_users/views.py:75: [E0601(used-before-assignment), ManageUserFilterSet.Meta] Using variable 'ManageUserViewSet' before assignment
sol_users/views.py:74: [R0903(too-few-public-methods), ManageUserFilterSet.Meta] Too few public methods (0/2)
sol_users/views.py:71: [R0903(too-few-public-methods), ManageUserFilterSet] Too few public methods (0/2)
sol_users/views.py:87: [C0111(missing-docstring), ManageUserViewSet.as_excel] Missing method docstring
sol_users/views.py:87: [W0613(unused-argument), ManageUserViewSet.as_excel] Unused argument 'args'
sol_users/views.py:87: [W0613(unused-argument), ManageUserViewSet.as_excel] Unused argument 'kwargs'
sol_users/views.py:101: [C0111(missing-docstring), ManageUserViewSet.import_excel] Missing method docstring
sol_users/views.py:101: [W0613(unused-argument), ManageUserViewSet.import_excel] Unused argument 'args'
sol_users/views.py:101: [W0613(unused-argument), ManageUserViewSet.import_excel] Unused argument 'kwargs'
sol_users/views.py:101: [R0201(no-self-use), ManageUserViewSet.import_excel] Method could be a function
sol_users/views.py:119: [W1113(keyword-arg-before-vararg), get_actions] Keyword argument before variable positional arguments list in the definition of get_actions function
sol_users/views.py:119: [W0613(unused-argument), get_actions] Unused argument 'request'
sol_users/views.py:119: [W0613(unused-argument), get_actions] Unused argument 'args'
sol_users/views.py:119: [W0613(unused-argument), get_actions] Unused argument 'kwargs'
sol_users/views.py:136: [W1113(keyword-arg-before-vararg), get_actions_roles] Keyword argument before variable positional arguments list in the definition of get_actions_roles function
sol_users/views.py:136: [W0613(unused-argument), get_actions_roles] Unused argument 'args'
sol_users/views.py:136: [W0613(unused-argument), get_actions_roles] Unused argument 'kwargs'
sol_users/views.py:152: [C0111(missing-docstring), ResourceViewSet] Missing class docstring
sol_users/views.py:162: [C0111(missing-docstring), ResourceViewSet.app_name] Missing method docstring
sol_users/views.py:169: [W0613(unused-argument), ResourceViewSet.list] Unused argument 'request'
sol_users/views.py:169: [W0613(unused-argument), ResourceViewSet.list] Unused argument 'args'
sol_users/views.py:169: [W0613(unused-argument), ResourceViewSet.list] Unused argument 'kwargs'
sol_users/views.py:189: [C0103(invalid-name), ResourceViewSet.retrieve] Argument name "pk" doesn't conform to snake_case naming style
sol_users/views.py:189: [W1113(keyword-arg-before-vararg), ResourceViewSet.retrieve] Keyword argument before variable positional arguments list in the definition of retrieve function
sol_users/views.py:198: [C1801(len-as-condition), ResourceViewSet.retrieve] Do not use `len(SEQUENCE)` to determine if a sequence is empty
sol_users/views.py:189: [W0613(unused-argument), ResourceViewSet.retrieve] Unused argument 'request'
sol_users/views.py:189: [W0613(unused-argument), ResourceViewSet.retrieve] Unused argument 'args'
sol_users/views.py:189: [W0613(unused-argument), ResourceViewSet.retrieve] Unused argument 'kwargs'
sol_users/views.py:208: [C0103(invalid-name), ResourceViewSet.user] Argument name "pk" doesn't conform to snake_case naming style
sol_users/views.py:208: [W1113(keyword-arg-before-vararg), ResourceViewSet.user] Keyword argument before variable positional arguments list in the definition of user function
sol_users/views.py:208: [W0613(unused-argument), ResourceViewSet.user] Unused argument 'args'
sol_users/views.py:208: [W0613(unused-argument), ResourceViewSet.user] Unused argument 'kwargs'
sol_users/views.py:226: [C0103(invalid-name), ResourceViewSet.group] Argument name "pk" doesn't conform to snake_case naming style
sol_users/views.py:226: [W1113(keyword-arg-before-vararg), ResourceViewSet.group] Keyword argument before variable positional arguments list in the definition of group function
sol_users/views.py:226: [W0613(unused-argument), ResourceViewSet.group] Unused argument 'args'
sol_users/views.py:226: [W0613(unused-argument), ResourceViewSet.group] Unused argument 'kwargs'
sol_users/views.py:243: [C0111(missing-docstring), ResourceViewSet.manage_revokes] Missing method docstring
sol_users/views.py:243: [R0913(too-many-arguments), ResourceViewSet.manage_revokes] Too many arguments (6/5)
sol_users/views.py:297: [C0111(missing-docstring), RoleViewSet] Missing class docstring
sol_users/views.py:301: [C0111(missing-docstring), RoleViewSet.app_name] Missing method docstring
sol_users/views.py:305: [C0111(missing-docstring), RoleViewSet.role_user_field_name] Missing method docstring
sol_users/views.py:309: [C0111(missing-docstring), RoleViewSet.role_user_field] Missing method docstring
sol_users/views.py:319: [C0111(missing-docstring), RoleViewSet.role_model] Missing method docstring
sol_users/views.py:320: [E1101(no-member), RoleViewSet.role_model] Method 'role_user_field' has no 'model' member
sol_users/views.py:325: [C0111(missing-docstring), RoleViewSet.get_queryset] Missing method docstring
sol_users/views.py:326: [E1101(no-member), RoleViewSet.get_queryset] Method 'role_model' has no 'objects' member
sol_users/views.py:328: [C0111(missing-docstring), RoleViewSet.get_serializer_class] Missing method docstring
sol_users/views.py:334: [C0111(missing-docstring), RoleViewSet.get_serializer_class.Meta] Missing class docstring
sol_users/views.py:334: [R0903(too-few-public-methods), RoleViewSet.get_serializer_class.Meta] Too few public methods (0/2)
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import UserSerializer from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import SolApplicationSerializer from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import transaction from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import AutoField from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import TextField from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import CharField from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import DRYPermissionsField from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import serializers from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import ModelSerializer from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import Serializer from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import SolPasswordResetSerializer from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import get_permissions_actions_from_class from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import get_revokes_fields_dict from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import roles_str_field_to_name from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import get_queryset_solapplication from wildcard import
sol_users/views.py:7: [W0614(unused-wildcard-import), ] Unused import revokes_str_field_to_name from wildcard import
sol_users/views.py:9: [C0411(wrong-import-order), ] standard import "import datetime" should be placed before "from django.db.models import QuerySet"
sol_users/views.py:11: [C0411(wrong-import-order), ] third party import "from django import forms" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:12: [C0411(wrong-import-order), ] third party import "from django.contrib.auth import get_user_model" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:13: [C0411(wrong-import-order), ] third party import "from django.utils.translation import ugettext_lazy as _" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:14: [C0411(wrong-import-order), ] third party import "from django.contrib.contenttypes.models import ContentType" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:15: [C0411(wrong-import-order), ] third party import "from django.apps import apps as django_apps" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:16: [C0411(wrong-import-order), ] third party import "from rest_framework import viewsets" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:17: [C0411(wrong-import-order), ] third party import "from rest_framework.decorators import api_view, parser_classes, permission_classes, action" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:23: [C0411(wrong-import-order), ] third party import "from rest_framework.exceptions import ParseError, NotFound, ValidationError" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:24: [C0411(wrong-import-order), ] third party import "from rest_framework.parsers import MultiPartParser, FormParser" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:25: [C0411(wrong-import-order), ] third party import "from rest_framework.response import Response" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:26: [C0411(wrong-import-order), ] third party import "from rest_framework.settings import api_settings" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:27: [C0411(wrong-import-order), ] third party import "from url_filter.filters import form_field_for_filter, CallableFilter" should be placed before "from sol.utils import set_throttle_scope"
sol_users/views.py:11: [C0412(ungrouped-imports), ] Imports from package django are not grouped
sol_users/views.py:29: [C0412(ungrouped-imports), ] Imports from package sol are not grouped
sol_users/views.py:32: [C0412(ungrouped-imports), ] Imports from package sol_users are not grouped
************* Module sol_users.serializers
sol_users/serializers.py:115: [W0511(fixme), ] TODO: log exception?
sol_users/serializers.py:39: [C0301(line-too-long), ] Line too long (104/100)
sol_users/serializers.py:56: [C0301(line-too-long), ] Line too long (102/100)
sol_users/serializers.py:66: [C0301(line-too-long), ] Line too long (119/100)
sol_users/serializers.py:76: [C0301(line-too-long), ] Line too long (112/100)
sol_users/serializers.py:102: [C0301(line-too-long), ] Line too long (112/100)
sol_users/serializers.py:109: [C0301(line-too-long), ] Line too long (110/100)
sol_users/serializers.py:117: [C0301(line-too-long), ] Line too long (115/100)
sol_users/serializers.py:129: [C0301(line-too-long), ] Line too long (111/100)
sol_users/serializers.py:135: [C0301(line-too-long), ] Line too long (109/100)
sol_users/serializers.py:144: [C0301(line-too-long), ] Line too long (114/100)
sol_users/serializers.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/serializers.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/serializers.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/serializers.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/serializers.py:7: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/serializers.py:8: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol_users/serializers.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_users/serializers.py:10: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_users/serializers.py:11: [E0401(import-error), ] Unable to import 'rest_framework'
sol_users/serializers.py:12: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol_users/serializers.py:13: [E0401(import-error), ] Unable to import 'rest_framework.serializers'
sol_users/serializers.py:31: [C0111(missing-docstring), UserSerializer] Missing class docstring
sol_users/serializers.py:31: [E0602(undefined-variable), UserSerializer] Undefined variable 'UserSerializer'
sol_users/serializers.py:37: [C0111(missing-docstring), UserSerializer.sol_applications] Missing method docstring
sol_users/serializers.py:41: [C0111(missing-docstring), UserSerializer.get_roles_fields_by_app] Missing method docstring
sol_users/serializers.py:44: [E1133(not-an-iterable), UserSerializer.get_roles_fields_by_app] Non-iterable value self.sol_applications is used in an iterating context
sol_users/serializers.py:41: [W0613(unused-argument), UserSerializer.get_roles_fields_by_app] Unused argument 'obj'
sol_users/serializers.py:47: [C0111(missing-docstring), UserSerializer.get_roles_by_app] Missing method docstring
sol_users/serializers.py:50: [E1133(not-an-iterable), UserSerializer.get_roles_by_app] Non-iterable value self.sol_applications is used in an iterating context
sol_users/serializers.py:53: [C0111(missing-docstring), UserSerializer.get_revokes_by_app] Missing method docstring
sol_users/serializers.py:53: [R0201(no-self-use), UserSerializer.get_revokes_by_app] Method could be a function
sol_users/serializers.py:63: [C0111(missing-docstring), UserSerializer.create] Missing method docstring
sol_users/serializers.py:87: [C0111(missing-docstring), UserSerializer.save] Missing method docstring
sol_users/serializers.py:113: [C0103(invalid-name), UserSerializer.save] Variable name "e" doesn't conform to snake_case naming style
sol_users/serializers.py:113: [W0612(unused-variable), UserSerializer.save] Unused variable 'e'
sol_users/serializers.py:123: [C0111(missing-docstring), SolApplicationSerializer] Missing class docstring
sol_users/serializers.py:123: [E0602(undefined-variable), SolApplicationSerializer] Undefined variable 'SolApplicationSerializer'
sol_users/serializers.py:126: [C0111(missing-docstring), SolApplicationSerializer.get_revokes] Missing method docstring
sol_users/serializers.py:129: [W0212(protected-access), SolApplicationSerializer.get_revokes] Access to a protected member _meta of a client class
sol_users/serializers.py:126: [R0201(no-self-use), SolApplicationSerializer.get_revokes] Method could be a function
sol_users/serializers.py:123: [R0903(too-few-public-methods), SolApplicationSerializer] Too few public methods (1/2)
sol_users/serializers.py:133: [R0903(too-few-public-methods), BaseRoleSerializer] Too few public methods (0/2)
sol_users/serializers.py:142: [C0111(missing-docstring), RoleSerializerMixin] Missing class docstring
sol_users/serializers.py:142: [R0205(useless-object-inheritance), RoleSerializerMixin] Class 'RoleSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_users/serializers.py:144: [E1101(no-member), RoleSerializerMixin.__init__] Class 'Meta' has no 'model' member
sol_users/serializers.py:150: [C0111(missing-docstring), RoleSerializerMixin.Meta] Missing class docstring
sol_users/serializers.py:150: [R0903(too-few-public-methods), RoleSerializerMixin.Meta] Too few public methods (0/2)
sol_users/serializers.py:142: [R0903(too-few-public-methods), RoleSerializerMixin] Too few public methods (0/2)
sol_users/serializers.py:18: [W0611(unused-import), ] Unused BaseRole imported from sol_users.models
************* Module sol_users.admin
sol_users/admin.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/admin.py:2: [E0401(import-error), ] Unable to import 'django.contrib'
sol_users/admin.py:3: [E0401(import-error), ] Unable to import 'django.contrib.auth.models'
sol_users/admin.py:11: [C0111(missing-docstring), CompanyAdmin] Missing class docstring
sol_users/admin.py:11: [R0903(too-few-public-methods), CompanyAdmin] Too few public methods (0/2)
sol_users/admin.py:3: [W0611(unused-import), ] Unused User imported from django.contrib.auth.models
************* Module sol_users
sol_users/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/__init__.py:1: [C0103(invalid-name), ] Constant name "default_app_config" doesn't conform to UPPER_CASE naming style
************* Module sol_users.password_validation
sol_users/password_validation.py:80: [C0301(line-too-long), ] Line too long (105/100)
sol_users/password_validation.py:85: [C0301(line-too-long), ] Line too long (104/100)
sol_users/password_validation.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/password_validation.py:3: [E0401(import-error), ] Unable to import 'django.core.exceptions'
sol_users/password_validation.py:6: [R0205(useless-object-inheritance), LowerAndUpperValidator] Class 'LowerAndUpperValidator' inherits from object, can be safely removed from bases in python3
sol_users/password_validation.py:14: [C0111(missing-docstring), LowerAndUpperValidator.validate] Missing method docstring
sol_users/password_validation.py:14: [W0613(unused-argument), LowerAndUpperValidator.validate] Unused argument 'user'
sol_users/password_validation.py:30: [C0111(missing-docstring), LowerAndUpperValidator.get_help_text] Missing method docstring
sol_users/password_validation.py:37: [R0205(useless-object-inheritance), LettersAndDigitsValidator] Class 'LettersAndDigitsValidator' inherits from object, can be safely removed from bases in python3
sol_users/password_validation.py:45: [C0111(missing-docstring), LettersAndDigitsValidator.validate] Missing method docstring
sol_users/password_validation.py:45: [W0613(unused-argument), LettersAndDigitsValidator.validate] Unused argument 'user'
sol_users/password_validation.py:61: [C0111(missing-docstring), LettersAndDigitsValidator.get_help_text] Missing method docstring
sol_users/password_validation.py:68: [R0205(useless-object-inheritance), NonAlphanumericValidator] Class 'NonAlphanumericValidator' inherits from object, can be safely removed from bases in python3
sol_users/password_validation.py:75: [C0111(missing-docstring), NonAlphanumericValidator.validate] Missing method docstring
sol_users/password_validation.py:75: [W0613(unused-argument), NonAlphanumericValidator.validate] Unused argument 'user'
sol_users/password_validation.py:84: [C0111(missing-docstring), NonAlphanumericValidator.get_help_text] Missing method docstring
************* Module sol_users.async_jobs
sol_users/async_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/async_jobs.py:4: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol_users/async_jobs.py:6: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/async_jobs.py:7: [E0401(import-error), ] Unable to import 'django.core.files.base'
sol_users/async_jobs.py:8: [E0401(import-error), ] Unable to import 'django_rq'
sol_users/async_jobs.py:22: [C0111(missing-docstring), export_users] Missing function docstring
sol_users/async_jobs.py:22: [R0913(too-many-arguments), export_users] Too many arguments (6/5)
sol_users/async_jobs.py:22: [R0914(too-many-locals), export_users] Too many local variables (20/15)
sol_users/async_jobs.py:93: [C0111(missing-docstring), import_users] Missing function docstring
************* Module sol_users.models_api
sol_users/models_api.py:329: [W0511(fixme), ] TODO: check if are required some prefetch_data() or select_related()
sol_users/models_api.py:105: [C0301(line-too-long), ] Line too long (111/100)
sol_users/models_api.py:108: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
            for field in fields
        |   ^
sol_users/models_api.py:131: [C0301(line-too-long), ] Line too long (101/100)
sol_users/models_api.py:132: [C0301(line-too-long), ] Line too long (107/100)
sol_users/models_api.py:133: [C0301(line-too-long), ] Line too long (112/100)
sol_users/models_api.py:433: [C0301(line-too-long), ] Line too long (115/100)
sol_users/models_api.py:555: [C0330(bad-continuation), ] Wrong continued indentation (add 17 spaces).
              + get_revokes_field_names(),
              ^                |
sol_users/models_api.py:575: [C0330(bad-continuation), ] Wrong hanging indentation (remove 2 spaces).
              # + get_revokes_field_names(),
            | ^
sol_users/models_api.py:636: [C0301(line-too-long), ] Line too long (104/100)
sol_users/models_api.py:691: [C0301(line-too-long), ] Line too long (104/100)
sol_users/models_api.py:702: [C0301(line-too-long), ] Line too long (120/100)
sol_users/models_api.py:739: [C0301(line-too-long), ] Line too long (126/100)
sol_users/models_api.py:772: [C0301(line-too-long), ] Line too long (127/100)
sol_users/models_api.py:805: [C0301(line-too-long), ] Line too long (113/100)
sol_users/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/models_api.py:7: [E0401(import-error), ] Unable to import 'django.apps'
sol_users/models_api.py:8: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/models_api.py:9: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/models_api.py:10: [E0401(import-error), ] Unable to import 'django.contrib.auth.models'
sol_users/models_api.py:11: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/models_api.py:12: [E0401(import-error), ] Unable to import 'dry_rest_permissions.generics'
sol_users/models_api.py:13: [E0401(import-error), ] Unable to import 'rest_framework.settings'
sol_users/models_api.py:14: [E0401(import-error), ] Unable to import 'rest_framework'
sol_users/models_api.py:15: [E0401(import-error), ] Unable to import 'rest_framework.viewsets'
sol_users/models_api.py:28: [C0111(missing-docstring), get_sol_applications] Missing function docstring
sol_users/models_api.py:40: [C0111(missing-docstring), roles_str_field_to_name] Missing function docstring
sol_users/models_api.py:44: [C0111(missing-docstring), roles_field_to_name] Missing function docstring
sol_users/models_api.py:49: [C0111(missing-docstring), get_roles_export_fields] Missing function docstring
sol_users/models_api.py:58: [W0702(bare-except), get_roles_export_fields] No exception type(s) specified
sol_users/models_api.py:64: [C0111(missing-docstring), get_roles_field_names] Missing function docstring
sol_users/models_api.py:74: [C0111(missing-docstring), get_roles_aggregations] Missing function docstring
sol_users/models_api.py:87: [C0111(missing-docstring), revokes_str_field_to_name] Missing function docstring
sol_users/models_api.py:91: [C0111(missing-docstring), revokes_field_to_name] Missing function docstring
sol_users/models_api.py:96: [C0111(missing-docstring), get_revokes_export_fields] Missing function docstring
sol_users/models_api.py:99: [W0702(bare-except), get_revokes_export_fields] No exception type(s) specified
sol_users/models_api.py:105: [W0212(protected-access), get_revokes_export_fields] Access to a protected member _meta of a client class
sol_users/models_api.py:114: [C0111(missing-docstring), get_revokes_field_names] Missing function docstring
sol_users/models_api.py:117: [W0702(bare-except), get_revokes_field_names] No exception type(s) specified
sol_users/models_api.py:123: [C0111(missing-docstring), get_revokes_fields_app_dict] Missing function docstring
sol_users/models_api.py:140: [C0111(missing-docstring), get_revokes_fields_dict] Missing function docstring
sol_users/models_api.py:145: [C0111(missing-docstring), get_revokes_fields] Missing function docstring
sol_users/models_api.py:150: [C0111(missing-docstring), get_revokes_aggregations] Missing function docstring
sol_users/models_api.py:156: [W0212(protected-access), get_revokes_aggregations] Access to a protected member _revoke_repr_field of a client class
sol_users/models_api.py:165: [C0111(missing-docstring), get_queryset_users] Missing function docstring
sol_users/models_api.py:165: [R0913(too-many-arguments), get_queryset_users] Too many arguments (6/5)
sol_users/models_api.py:171: [C0103(invalid-name), get_queryset_users] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:182: [C0103(invalid-name), get_queryset_users] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:190: [C0103(invalid-name), get_queryset_users] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:195: [C0103(invalid-name), get_queryset_users] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:214: [C0103(invalid-name), get_queryset_users] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:217: [C0103(invalid-name), get_queryset_users] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:222: [C0111(missing-docstring), get_queryset_users_viewset] Missing function docstring
sol_users/models_api.py:226: [C0111(missing-docstring), get_queryset_group] Missing function docstring
sol_users/models_api.py:228: [C0103(invalid-name), get_queryset_group] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:249: [C0103(invalid-name), get_queryset_group] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:252: [C0103(invalid-name), get_queryset_group] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:257: [C0111(missing-docstring), get_queryset_group_viewset] Missing function docstring
sol_users/models_api.py:261: [C0111(missing-docstring), get_queryset_solapplication] Missing function docstring
sol_users/models_api.py:262: [C0103(invalid-name), get_queryset_solapplication] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:265: [C0103(invalid-name), get_queryset_solapplication] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:270: [C0111(missing-docstring), get_queryset_solapplication_viewset] Missing function docstring
sol_users/models_api.py:274: [C0111(missing-docstring), get_queryset_userssolapplications] Missing function docstring
sol_users/models_api.py:275: [C0103(invalid-name), get_queryset_userssolapplications] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:278: [C0103(invalid-name), get_queryset_userssolapplications] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:283: [C0111(missing-docstring), get_queryset_userssolapplications_viewset] Missing function docstring
sol_users/models_api.py:287: [C0111(missing-docstring), get_queryset_groupssolapplications] Missing function docstring
sol_users/models_api.py:288: [C0103(invalid-name), get_queryset_groupssolapplications] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:291: [C0103(invalid-name), get_queryset_groupssolapplications] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:296: [C0111(missing-docstring), get_queryset_groupssolapplications_viewset] Missing function docstring
sol_users/models_api.py:300: [C0111(missing-docstring), get_queryset_company] Missing function docstring
sol_users/models_api.py:301: [C0103(invalid-name), get_queryset_company] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:304: [C0103(invalid-name), get_queryset_company] Variable name "qs" doesn't conform to snake_case naming style
sol_users/models_api.py:309: [C0111(missing-docstring), get_queryset_company_viewset] Missing function docstring
sol_users/models_api.py:320: [W0212(protected-access), get_api_config] Access to a protected member _meta of a client class
sol_users/models_api.py:322: [C0103(invalid-name), get_api_config] Variable name "c" doesn't conform to snake_case naming style
sol_users/models_api.py:354: [C0103(invalid-name), ] Constant name "config_to_inject" doesn't conform to UPPER_CASE naming style
sol_users/models_api.py:421: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
sol_users/models_api.py:422: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module sol_users.models
sol_users/models.py:43: [W0511(fixme), ] TODO: add PermissionsSolModel somehow...
sol_users/models.py:44: [C0301(line-too-long), ] Line too long (110/100)
sol_users/models.py:64: [C0301(line-too-long), ] Line too long (104/100)
sol_users/models.py:65: [C0301(line-too-long), ] Line too long (104/100)
sol_users/models.py:66: [C0301(line-too-long), ] Line too long (104/100)
sol_users/models.py:68: [C0301(line-too-long), ] Line too long (117/100)
sol_users/models.py:92: [C0301(line-too-long), ] Line too long (103/100)
sol_users/models.py:97: [C0301(line-too-long), ] Line too long (121/100)
sol_users/models.py:100: [C0301(line-too-long), ] Line too long (118/100)
sol_users/models.py:111: [C0301(line-too-long), ] Line too long (108/100)
sol_users/models.py:198: [C0301(line-too-long), ] Line too long (120/100)
sol_users/models.py:243: [C0301(line-too-long), ] Line too long (108/100)
sol_users/models.py:260: [C0301(line-too-long), ] Line too long (107/100)
sol_users/models.py:288: [C0301(line-too-long), ] Line too long (105/100)
sol_users/models.py:317: [C0301(line-too-long), ] Line too long (117/100)
sol_users/models.py:326: [C0301(line-too-long), ] Line too long (120/100)
sol_users/models.py:360: [C0301(line-too-long), ] Line too long (115/100)
sol_users/models.py:361: [C0301(line-too-long), ] Line too long (117/100)
sol_users/models.py:372: [C0301(line-too-long), ] Line too long (118/100)
sol_users/models.py:373: [C0301(line-too-long), ] Line too long (112/100)
sol_users/models.py:374: [C0301(line-too-long), ] Line too long (102/100)
sol_users/models.py:375: [C0301(line-too-long), ] Line too long (120/100)
sol_users/models.py:376: [C0301(line-too-long), ] Line too long (123/100)
sol_users/models.py:381: [C0301(line-too-long), ] Line too long (115/100)
sol_users/models.py:382: [C0301(line-too-long), ] Line too long (109/100)
sol_users/models.py:384: [C0301(line-too-long), ] Line too long (117/100)
sol_users/models.py:385: [C0301(line-too-long), ] Line too long (104/100)
sol_users/models.py:389: [C0301(line-too-long), ] Line too long (112/100)
sol_users/models.py:412: [C0301(line-too-long), ] Line too long (102/100)
sol_users/models.py:458: [C0301(line-too-long), ] Line too long (117/100)
sol_users/models.py:463: [C0301(line-too-long), ] Line too long (109/100)
sol_users/models.py:469: [C0301(line-too-long), ] Line too long (110/100)
sol_users/models.py:475: [C0301(line-too-long), ] Line too long (102/100)
sol_users/models.py:481: [C0301(line-too-long), ] Line too long (106/100)
sol_users/models.py:499: [C0301(line-too-long), ] Line too long (114/100)
sol_users/models.py:510: [C0301(line-too-long), ] Line too long (117/100)
sol_users/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/models.py:7: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/models.py:8: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/models.py:9: [E0401(import-error), ] Unable to import 'django.contrib.auth.models'
sol_users/models.py:10: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.fields'
sol_users/models.py:11: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_users/models.py:12: [E0401(import-error), ] Unable to import 'django.contrib.auth.models'
sol_users/models.py:13: [E0401(import-error), ] Unable to import 'django.core.validators'
sol_users/models.py:14: [E0401(import-error), ] Unable to import 'django.db'
sol_users/models.py:15: [E0401(import-error), ] Unable to import 'django.db.models.manager'
sol_users/models.py:16: [E0401(import-error), ] Unable to import 'django.utils'
sol_users/models.py:17: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_users/models.py:18: [E0401(import-error), ] Unable to import 'django.utils.encoding'
sol_users/models.py:19: [E0401(import-error), ] Unable to import 'rest_framework.authtoken.models'
sol_users/models.py:20: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol_users/models.py:45: [C0103(invalid-name), ] Constant name "_dummy" doesn't conform to UPPER_CASE naming style
sol_users/models.py:54: [W0107(unnecessary-pass), SolUserManager] Unnecessary pass statement
sol_users/models.py:51: [R0903(too-few-public-methods), SolUserManager] Too few public methods (0/2)
sol_users/models.py:57: [C0111(missing-docstring), User] Missing class docstring
sol_users/models.py:92: [W0221(arguments-differ), User.get_history_field_changes] Parameters differ from overridden 'get_history_field_changes' method
sol_users/models.py:110: [C0103(invalid-name), User.write_history_changes] Variable name "e" doesn't conform to snake_case naming style
sol_users/models.py:119: [C0111(missing-docstring), User.Meta] Missing class docstring
sol_users/models.py:119: [R0903(too-few-public-methods), User.Meta] Too few public methods (0/2)
sol_users/models.py:148: [C0111(missing-docstring), User.from_string] Missing method docstring
sol_users/models.py:148: [W0613(unused-argument), User.from_string] Unused argument 'kwargs'
sol_users/models.py:168: [C0111(missing-docstring), User.get_roles] Missing method docstring
sol_users/models.py:186: [C0111(missing-docstring), User.get_roles_names] Missing method docstring
sol_users/models.py:172: [W0201(attribute-defined-outside-init), User.get_roles] Attribute 'roles_cache' defined outside __init__
sol_users/models.py:188: [W0201(attribute-defined-outside-init), User.get_roles_names] Attribute 'roles_names_cache' defined outside __init__
sol_users/models.py:202: [C0111(missing-docstring), SolUser.Meta] Missing class docstring
sol_users/models.py:202: [R0903(too-few-public-methods), SolUser.Meta] Too few public methods (0/2)
sol_users/models.py:223: [C0111(missing-docstring), get_roles_for_anonymous_user] Missing function docstring
sol_users/models.py:223: [W0613(unused-argument), get_roles_for_anonymous_user] Unused argument 'self'
sol_users/models.py:223: [W0613(unused-argument), get_roles_for_anonymous_user] Unused argument 'app_label'
sol_users/models.py:249: [C0111(missing-docstring), SolApplication.from_string] Missing method docstring
sol_users/models.py:249: [W0613(unused-argument), SolApplication.from_string] Unused argument 'kwargs'
sol_users/models.py:252: [C0111(missing-docstring), SolApplication.Meta] Missing class docstring
sol_users/models.py:252: [R0903(too-few-public-methods), SolApplication.Meta] Too few public methods (0/2)
sol_users/models.py:281: [C0111(missing-docstring), GroupsSolApplications.Meta] Missing class docstring
sol_users/models.py:281: [R0903(too-few-public-methods), GroupsSolApplications.Meta] Too few public methods (0/2)
sol_users/models.py:309: [C0111(missing-docstring), UsersSolApplications.Meta] Missing class docstring
sol_users/models.py:309: [R0903(too-few-public-methods), UsersSolApplications.Meta] Too few public methods (0/2)
sol_users/models.py:341: [C0111(missing-docstring), BaseRole.from_string] Missing method docstring
sol_users/models.py:341: [W0613(unused-argument), BaseRole.from_string] Unused argument 'kwargs'
sol_users/models.py:345: [C0111(missing-docstring), BaseRole.after_model_injected] Missing method docstring
sol_users/models.py:347: [W0212(protected-access), BaseRole.after_model_injected] Access to a protected member _meta of a client class
sol_users/models.py:349: [C0111(missing-docstring), BaseRole.Meta] Missing class docstring
sol_users/models.py:349: [R0903(too-few-public-methods), BaseRole.Meta] Too few public methods (0/2)
sol_users/models.py:394: [C0111(missing-docstring), BaseRevoke.revokes_controller_related_name] Missing method docstring
sol_users/models.py:398: [C0111(missing-docstring), BaseRevoke.after_model_injected] Missing method docstring
sol_users/models.py:412: [C0111(missing-docstring), BaseRevoke.contribute_field_for_revoked_model] Missing method docstring
sol_users/models.py:436: [C0111(missing-docstring), BaseRevoke.Meta] Missing class docstring
sol_users/models.py:436: [R0903(too-few-public-methods), BaseRevoke.Meta] Too few public methods (0/2)
sol_users/models.py:486: [C0111(missing-docstring), Company.Meta] Missing class docstring
sol_users/models.py:486: [R0903(too-few-public-methods), Company.Meta] Too few public methods (0/2)
sol_users/models.py:493: [C0111(missing-docstring), Company.from_string] Missing method docstring
sol_users/models.py:493: [W0613(unused-argument), Company.from_string] Unused argument 'kwargs'
sol_users/models.py:516: [C0111(missing-docstring), BaseRoleAction.Meta] Missing class docstring
sol_users/models.py:516: [R0903(too-few-public-methods), BaseRoleAction.Meta] Too few public methods (0/2)
sol_users/models.py:537: [C0111(missing-docstring), SolExpiringToken.Meta] Missing class docstring
sol_users/models.py:537: [R0903(too-few-public-methods), SolExpiringToken.Meta] Too few public methods (0/2)
sol_users/models.py:542: [C0111(missing-docstring), SolExpiringToken.expired] Missing method docstring
sol_users/models.py:525: [R0903(too-few-public-methods), SolExpiringToken] Too few public methods (1/2)
************* Module sol_users.data_exchange.inbound.excel_users
sol_users/data_exchange/inbound/excel_users.py:99: [W0511(fixme), ] TODO: add check for incorrect passed applications, eg. typo.
sol_users/data_exchange/inbound/excel_users.py:135: [W0511(fixme), ] TODO: add check for incorrect passed roles, eg. typo.
sol_users/data_exchange/inbound/excel_users.py:168: [W0511(fixme), ] TODO: add check for incorrect passed revoked instances, eg. typo.
sol_users/data_exchange/inbound/excel_users.py:31: [C0301(line-too-long), ] Line too long (114/100)
sol_users/data_exchange/inbound/excel_users.py:84: [C0301(line-too-long), ] Line too long (107/100)
sol_users/data_exchange/inbound/excel_users.py:91: [C0301(line-too-long), ] Line too long (110/100)
sol_users/data_exchange/inbound/excel_users.py:118: [C0325(superfluous-parens), ] Unnecessary parens after 'in' keyword
sol_users/data_exchange/inbound/excel_users.py:213: [C0301(line-too-long), ] Line too long (104/100)
sol_users/data_exchange/inbound/excel_users.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/data_exchange/inbound/excel_users.py:4: [E0401(import-error), ] Unable to import 'django.contrib.contenttypes.models'
sol_users/data_exchange/inbound/excel_users.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/data_exchange/inbound/excel_users.py:6: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/data_exchange/inbound/excel_users.py:22: [C0111(missing-docstring), Empty] Missing class docstring
sol_users/data_exchange/inbound/excel_users.py:22: [R0205(useless-object-inheritance), Empty] Class 'Empty' inherits from object, can be safely removed from bases in python3
sol_users/data_exchange/inbound/excel_users.py:22: [R0903(too-few-public-methods), Empty] Too few public methods (0/2)
sol_users/data_exchange/inbound/excel_users.py:26: [C0111(missing-docstring), UserImporterExcel] Missing class docstring
sol_users/data_exchange/inbound/excel_users.py:46: [C0103(invalid-name), UserImporterExcel.__init__] Variable name "f" doesn't conform to snake_case naming style
sol_users/data_exchange/inbound/excel_users.py:64: [C0111(missing-docstring), UserImporterExcel.get_cached_instance] Missing method docstring
sol_users/data_exchange/inbound/excel_users.py:66: [W0212(protected-access), UserImporterExcel.get_cached_instance] Access to a protected member _meta of a client class
sol_users/data_exchange/inbound/excel_users.py:74: [W0221(arguments-differ), UserImporterExcel.process_field_value] Parameters differ from overridden 'process_field_value' method
sol_users/data_exchange/inbound/excel_users.py:83: [R0914(too-many-locals), UserImporterExcel.save_row] Too many local variables (36/15)
sol_users/data_exchange/inbound/excel_users.py:187: [R1718(consider-using-set-comprehension), UserImporterExcel.save_row] Consider using a set comprehension
sol_users/data_exchange/inbound/excel_users.py:194: [R1718(consider-using-set-comprehension), UserImporterExcel.save_row] Consider using a set comprehension
sol_users/data_exchange/inbound/excel_users.py:83: [R0912(too-many-branches), UserImporterExcel.save_row] Too many branches (19/12)
sol_users/data_exchange/inbound/excel_users.py:83: [R0915(too-many-statements), UserImporterExcel.save_row] Too many statements (59/50)
************* Module sol_users.management.__init__
sol_users/management/__init__.py:1: [C0304(missing-final-newline), ] Final newline missing
************* Module sol_users.management.commands.__init__
sol_users/management/commands/__init__.py:1: [C0304(missing-final-newline), ] Final newline missing
************* Module sol_users.management.commands.create_sol_superuser
sol_users/management/commands/create_sol_superuser.py:4: [C0301(line-too-long), ] Line too long (101/100)
sol_users/management/commands/create_sol_superuser.py:34: [C0301(line-too-long), ] Line too long (105/100)
sol_users/management/commands/create_sol_superuser.py:45: [C0301(line-too-long), ] Line too long (109/100)
sol_users/management/commands/create_sol_superuser.py:46: [C0301(line-too-long), ] Line too long (111/100)
sol_users/management/commands/create_sol_superuser.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/management/commands/create_sol_superuser.py:4: [E0401(import-error), ] Unable to import 'django.contrib.auth.management.commands.createsuperuser'
sol_users/management/commands/create_sol_superuser.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/management/commands/create_sol_superuser.py:10: [C0111(missing-docstring), Command] Missing class docstring
sol_users/management/commands/create_sol_superuser.py:17: [C0111(missing-docstring), Command.add_arguments] Missing method docstring
sol_users/management/commands/create_sol_superuser.py:25: [C0111(missing-docstring), Command.handle] Missing method docstring
sol_users/management/commands/create_sol_superuser.py:32: [W0212(protected-access), Command.handle] Access to a protected member _default_manager of a client class
sol_users/management/commands/create_sol_superuser.py:40: [C1801(len-as-condition), Command.handle] Do not use `len(SEQUENCE)` to determine if a sequence is empty
sol_users/management/commands/create_sol_superuser.py:34: [W0612(unused-variable), Command.handle] Unused variable 'sol_user_app'
sol_users/management/commands/create_sol_superuser.py:49: [C0111(missing-docstring), Command.get_input_data] Missing method docstring
************* Module sol_users.permissions.userssolapplications
sol_users/permissions/userssolapplications.py:8: [C0301(line-too-long), ] Line too long (106/100)
sol_users/permissions/userssolapplications.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/userssolapplications.py:8: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin] Missing class docstring
sol_users/permissions/userssolapplications.py:17: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/userssolapplications.py:17: [W0613(unused-argument), UsersSolApplicationsPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/userssolapplications.py:24: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/userssolapplications.py:24: [W0613(unused-argument), UsersSolApplicationsPermissionsMixin.has_create_permission] Unused argument 'request'
sol_users/permissions/userssolapplications.py:31: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/userssolapplications.py:31: [W0613(unused-argument), UsersSolApplicationsPermissionsMixin.has_write_permission] Unused argument 'request'
sol_users/permissions/userssolapplications.py:37: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/userssolapplications.py:43: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions.groupssolapplications
sol_users/permissions/groupssolapplications.py:8: [C0301(line-too-long), ] Line too long (107/100)
sol_users/permissions/groupssolapplications.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/groupssolapplications.py:8: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin] Missing class docstring
sol_users/permissions/groupssolapplications.py:17: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/groupssolapplications.py:17: [W0613(unused-argument), GroupsSolApplicationsPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/groupssolapplications.py:24: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/groupssolapplications.py:24: [W0613(unused-argument), GroupsSolApplicationsPermissionsMixin.has_create_permission] Unused argument 'request'
sol_users/permissions/groupssolapplications.py:31: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/groupssolapplications.py:31: [W0613(unused-argument), GroupsSolApplicationsPermissionsMixin.has_write_permission] Unused argument 'request'
sol_users/permissions/groupssolapplications.py:37: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/groupssolapplications.py:43: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions.group
sol_users/permissions/group.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/group.py:7: [C0111(missing-docstring), GroupPermissionsMixin] Missing class docstring
sol_users/permissions/group.py:16: [C0111(missing-docstring), GroupPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/group.py:16: [W0613(unused-argument), GroupPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/group.py:23: [C0111(missing-docstring), GroupPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/group.py:33: [C0111(missing-docstring), GroupPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/group.py:42: [C0111(missing-docstring), GroupPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/group.py:48: [C0111(missing-docstring), GroupPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions.company
sol_users/permissions/company.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/company.py:7: [C0111(missing-docstring), CompanyPermissionsMixin] Missing class docstring
sol_users/permissions/company.py:16: [C0111(missing-docstring), CompanyPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/company.py:16: [W0613(unused-argument), CompanyPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/company.py:23: [C0111(missing-docstring), CompanyPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/company.py:33: [C0111(missing-docstring), CompanyPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/company.py:42: [C0111(missing-docstring), CompanyPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/company.py:48: [C0111(missing-docstring), CompanyPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions.solapplication
sol_users/permissions/solapplication.py:10: [C0301(line-too-long), ] Line too long (102/100)
sol_users/permissions/solapplication.py:25: [C0301(line-too-long), ] Line too long (109/100)
sol_users/permissions/solapplication.py:48: [C0301(line-too-long), ] Line too long (115/100)
sol_users/permissions/solapplication.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/solapplication.py:4: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/permissions/solapplication.py:9: [R0205(useless-object-inheritance), SolApplicationTroughPermissionsMixin] Class 'SolApplicationTroughPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol_users/permissions/solapplication.py:13: [C0111(missing-docstring), SolApplicationTroughPermissionsMixin.permissions_filter] Missing method docstring
sol_users/permissions/solapplication.py:9: [R0903(too-few-public-methods), SolApplicationTroughPermissionsMixin] Too few public methods (1/2)
sol_users/permissions/solapplication.py:30: [C0111(missing-docstring), SolApplicationPermissionsMixin] Missing class docstring
sol_users/permissions/solapplication.py:47: [C0111(missing-docstring), SolApplicationPermissionsMixin.get_permissions_filter_annotations] Missing method docstring
sol_users/permissions/solapplication.py:65: [C0111(missing-docstring), SolApplicationPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/solapplication.py:65: [W0613(unused-argument), SolApplicationPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/solapplication.py:72: [C0111(missing-docstring), SolApplicationPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/solapplication.py:79: [C0111(missing-docstring), SolApplicationPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/solapplication.py:85: [C0111(missing-docstring), SolApplicationPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/solapplication.py:91: [C0111(missing-docstring), SolApplicationPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions.userssolapplication
sol_users/permissions/userssolapplication.py:8: [C0301(line-too-long), ] Line too long (106/100)
sol_users/permissions/userssolapplication.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/userssolapplication.py:8: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin] Missing class docstring
sol_users/permissions/userssolapplication.py:17: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/userssolapplication.py:17: [W0613(unused-argument), UsersSolApplicationsPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/userssolapplication.py:24: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/userssolapplication.py:24: [W0613(unused-argument), UsersSolApplicationsPermissionsMixin.has_create_permission] Unused argument 'request'
sol_users/permissions/userssolapplication.py:31: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/userssolapplication.py:31: [W0613(unused-argument), UsersSolApplicationsPermissionsMixin.has_write_permission] Unused argument 'request'
sol_users/permissions/userssolapplication.py:37: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/userssolapplication.py:43: [C0111(missing-docstring), UsersSolApplicationsPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions.groupssolapplication
sol_users/permissions/groupssolapplication.py:8: [C0301(line-too-long), ] Line too long (107/100)
sol_users/permissions/groupssolapplication.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/groupssolapplication.py:8: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin] Missing class docstring
sol_users/permissions/groupssolapplication.py:17: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/groupssolapplication.py:17: [W0613(unused-argument), GroupsSolApplicationsPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/groupssolapplication.py:24: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/groupssolapplication.py:24: [W0613(unused-argument), GroupsSolApplicationsPermissionsMixin.has_create_permission] Unused argument 'request'
sol_users/permissions/groupssolapplication.py:31: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/groupssolapplication.py:31: [W0613(unused-argument), GroupsSolApplicationsPermissionsMixin.has_write_permission] Unused argument 'request'
sol_users/permissions/groupssolapplication.py:37: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/groupssolapplication.py:43: [C0111(missing-docstring), GroupsSolApplicationsPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.permissions
sol_users/permissions/__init__.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/__init__.py:5: [E0401(import-error), ] Unable to import 'rest_framework.permissions'
sol_users/permissions/__init__.py:20: [C0111(missing-docstring), IsSuperUserForSolUsersApp.has_permission] Missing method docstring
sol_users/permissions/__init__.py:20: [R0201(no-self-use), IsSuperUserForSolUsersApp.has_permission] Method could be a function
sol_users/permissions/__init__.py:17: [R0903(too-few-public-methods), IsSuperUserForSolUsersApp] Too few public methods (1/2)
sol_users/permissions/__init__.py:31: [C0111(missing-docstring), AppPermissions] Missing class docstring
sol_users/permissions/__init__.py:40: [C0111(missing-docstring), AppPermissions.has_menu_users_permission] Missing method docstring
sol_users/permissions/__init__.py:50: [C0111(missing-docstring), AppPermissions.has_menu_groups_permission] Missing method docstring
sol_users/permissions/__init__.py:60: [C0111(missing-docstring), AppPermissions.has_menu_apps_permission] Missing method docstring
sol_users/permissions/__init__.py:70: [C0111(missing-docstring), AppPermissions.has_manage_users_app_permission] Missing method docstring
************* Module sol_users.permissions.user
sol_users/permissions/user.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/permissions/user.py:7: [C0111(missing-docstring), UserSerializerPermissionsMixin] Missing class docstring
sol_users/permissions/user.py:7: [R0205(useless-object-inheritance), UserSerializerPermissionsMixin] Class 'UserSerializerPermissionsMixin' inherits from object, can be safely removed from bases in python3
sol_users/permissions/user.py:8: [C0111(missing-docstring), UserSerializerPermissionsMixin.permissions_writable_fields] Missing method docstring
sol_users/permissions/user.py:8: [W0613(unused-argument), UserSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'writable_fields'
sol_users/permissions/user.py:8: [W0613(unused-argument), UserSerializerPermissionsMixin.permissions_writable_fields] Unused argument 'validated_data'
sol_users/permissions/user.py:7: [R0903(too-few-public-methods), UserSerializerPermissionsMixin] Too few public methods (1/2)
sol_users/permissions/user.py:22: [C0111(missing-docstring), UserPermissionsMixin] Missing class docstring
sol_users/permissions/user.py:31: [C0111(missing-docstring), UserPermissionsMixin.has_read_permission] Missing method docstring
sol_users/permissions/user.py:31: [W0613(unused-argument), UserPermissionsMixin.has_read_permission] Unused argument 'request'
sol_users/permissions/user.py:38: [C0111(missing-docstring), UserPermissionsMixin.has_create_permission] Missing method docstring
sol_users/permissions/user.py:48: [C0111(missing-docstring), UserPermissionsMixin.has_write_permission] Missing method docstring
sol_users/permissions/user.py:57: [C0111(missing-docstring), UserPermissionsMixin.has_object_read_permission] Missing method docstring
sol_users/permissions/user.py:63: [C0111(missing-docstring), UserPermissionsMixin.has_object_write_permission] Missing method docstring
************* Module sol_users.migrations.0022_auto_20181012_1651
sol_users/migrations/0022_auto_20181012_1651.py:18: [C0301(line-too-long), ] Line too long (122/100)
sol_users/migrations/0022_auto_20181012_1651.py:1: [C0103(invalid-name), ] Module name "0022_auto_20181012_1651" doesn't conform to snake_case naming style
sol_users/migrations/0022_auto_20181012_1651.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0022_auto_20181012_1651.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0022_auto_20181012_1651.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0022_auto_20181012_1651.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0027_merge_20181029_1112
sol_users/migrations/0027_merge_20181029_1112.py:1: [C0103(invalid-name), ] Module name "0027_merge_20181029_1112" doesn't conform to snake_case naming style
sol_users/migrations/0027_merge_20181029_1112.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0027_merge_20181029_1112.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0027_merge_20181029_1112.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0027_merge_20181029_1112.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0038_auto_20190208_1205
sol_users/migrations/0038_auto_20190208_1205.py:1: [C0103(invalid-name), ] Module name "0038_auto_20190208_1205" doesn't conform to snake_case naming style
sol_users/migrations/0038_auto_20190208_1205.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0038_auto_20190208_1205.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0038_auto_20190208_1205.py:6: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0038_auto_20190208_1205.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0035_merge_20190118_1411
sol_users/migrations/0035_merge_20190118_1411.py:1: [C0103(invalid-name), ] Module name "0035_merge_20190118_1411" doesn't conform to snake_case naming style
sol_users/migrations/0035_merge_20190118_1411.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0035_merge_20190118_1411.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0035_merge_20190118_1411.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0035_merge_20190118_1411.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0033_company_company_orange_legal
sol_users/migrations/0033_company_company_orange_legal.py:19: [C0301(line-too-long), ] Line too long (191/100)
sol_users/migrations/0033_company_company_orange_legal.py:1: [C0103(invalid-name), ] Module name "0033_company_company_orange_legal" doesn't conform to snake_case naming style
sol_users/migrations/0033_company_company_orange_legal.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0033_company_company_orange_legal.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0033_company_company_orange_legal.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0033_company_company_orange_legal.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0034_auto_20181227_1023
sol_users/migrations/0034_auto_20181227_1023.py:19: [C0301(line-too-long), ] Line too long (144/100)
sol_users/migrations/0034_auto_20181227_1023.py:25: [C0301(line-too-long), ] Line too long (282/100)
sol_users/migrations/0034_auto_20181227_1023.py:1: [C0103(invalid-name), ] Module name "0034_auto_20181227_1023" doesn't conform to snake_case naming style
sol_users/migrations/0034_auto_20181227_1023.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0034_auto_20181227_1023.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
sol_users/migrations/0034_auto_20181227_1023.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0034_auto_20181227_1023.py:9: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0034_auto_20181227_1023.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0040_auto_20190524_1250
sol_users/migrations/0040_auto_20190524_1250.py:19: [C0301(line-too-long), ] Line too long (108/100)
sol_users/migrations/0040_auto_20190524_1250.py:1: [C0103(invalid-name), ] Module name "0040_auto_20190524_1250" doesn't conform to snake_case naming style
sol_users/migrations/0040_auto_20190524_1250.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0040_auto_20190524_1250.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0040_auto_20190524_1250.py:6: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0040_auto_20190524_1250.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0030_historyitem_object_repr
sol_users/migrations/0030_historyitem_object_repr.py:18: [C0301(line-too-long), ] Line too long (106/100)
sol_users/migrations/0030_historyitem_object_repr.py:1: [C0103(invalid-name), ] Module name "0030_historyitem_object_repr" doesn't conform to snake_case naming style
sol_users/migrations/0030_historyitem_object_repr.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0030_historyitem_object_repr.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0030_historyitem_object_repr.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0030_historyitem_object_repr.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0023_soluser
sol_users/migrations/0023_soluser.py:1: [C0103(invalid-name), ] Module name "0023_soluser" doesn't conform to snake_case naming style
sol_users/migrations/0023_soluser.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0023_soluser.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth.models'
sol_users/migrations/0023_soluser.py:6: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_users/migrations/0023_soluser.py:7: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0023_soluser.py:10: [C0103(invalid-name), ] Constant name "models_info" doesn't conform to UPPER_CASE naming style
sol_users/migrations/0023_soluser.py:15: [C0111(missing-docstring), convert_user_ct] Missing function docstring
sol_users/migrations/0023_soluser.py:15: [W0613(unused-argument), convert_user_ct] Unused argument 'schema_editor'
sol_users/migrations/0023_soluser.py:36: [C0111(missing-docstring), forward_convert_user_ct] Missing function docstring
sol_users/migrations/0023_soluser.py:40: [C0111(missing-docstring), reverse_convert_user_ct] Missing function docstring
sol_users/migrations/0023_soluser.py:44: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0023_soluser.py:44: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0033_user_accepted_agreement_date
sol_users/migrations/0033_user_accepted_agreement_date.py:1: [C0103(invalid-name), ] Module name "0033_user_accepted_agreement_date" doesn't conform to snake_case naming style
sol_users/migrations/0033_user_accepted_agreement_date.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0033_user_accepted_agreement_date.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0033_user_accepted_agreement_date.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0033_user_accepted_agreement_date.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0024_assign_sol_users_to_super_users
sol_users/migrations/0024_assign_sol_users_to_super_users.py:17: [C0301(line-too-long), ] Line too long (105/100)
sol_users/migrations/0024_assign_sol_users_to_super_users.py:20: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0024_assign_sol_users_to_super_users.py:39: [C0301(line-too-long), ] Line too long (111/100)
sol_users/migrations/0024_assign_sol_users_to_super_users.py:1: [C0103(invalid-name), ] Module name "0024_assign_sol_users_to_super_users" doesn't conform to snake_case naming style
sol_users/migrations/0024_assign_sol_users_to_super_users.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0024_assign_sol_users_to_super_users.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:6: [E0401(import-error), ] Unable to import 'threadlocals.threadlocals'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:7: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:8: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:11: [C0111(missing-docstring), forward_assign_users_app_to_super_users] Missing function docstring
sol_users/migrations/0024_assign_sol_users_to_super_users.py:20: [W0212(protected-access), forward_assign_users_app_to_super_users] Access to a protected member _meta of a client class
sol_users/migrations/0024_assign_sol_users_to_super_users.py:11: [W0613(unused-argument), forward_assign_users_app_to_super_users] Unused argument 'schema_editor'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:28: [C0111(missing-docstring), reverse_assign_users_app_to_super_users] Missing function docstring
sol_users/migrations/0024_assign_sol_users_to_super_users.py:28: [W0613(unused-argument), reverse_assign_users_app_to_super_users] Unused argument 'apps'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:28: [W0613(unused-argument), reverse_assign_users_app_to_super_users] Unused argument 'schema_editor'
sol_users/migrations/0024_assign_sol_users_to_super_users.py:32: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0024_assign_sol_users_to_super_users.py:32: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
sol_users/migrations/0024_assign_sol_users_to_super_users.py:7: [W0611(unused-import), ] Unused models imported from django.db
sol_users/migrations/0024_assign_sol_users_to_super_users.py:7: [C0412(ungrouped-imports), ] Imports from package django are not grouped
************* Module sol_users.migrations.0023_auto_20181127_1009
sol_users/migrations/0023_auto_20181127_1009.py:18: [C0301(line-too-long), ] Line too long (134/100)
sol_users/migrations/0023_auto_20181127_1009.py:1: [C0103(invalid-name), ] Module name "0023_auto_20181127_1009" doesn't conform to snake_case naming style
sol_users/migrations/0023_auto_20181127_1009.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0023_auto_20181127_1009.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0023_auto_20181127_1009.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0023_auto_20181127_1009.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0033_merge_20181207_2209
sol_users/migrations/0033_merge_20181207_2209.py:1: [C0103(invalid-name), ] Module name "0033_merge_20181207_2209" doesn't conform to snake_case naming style
sol_users/migrations/0033_merge_20181207_2209.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0033_merge_20181207_2209.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0033_merge_20181207_2209.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0033_merge_20181207_2209.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0017_auto_20180312_0928
sol_users/migrations/0017_auto_20180312_0928.py:19: [C0301(line-too-long), ] Line too long (254/100)
sol_users/migrations/0017_auto_20180312_0928.py:1: [C0103(invalid-name), ] Module name "0017_auto_20180312_0928" doesn't conform to snake_case naming style
sol_users/migrations/0017_auto_20180312_0928.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0017_auto_20180312_0928.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
sol_users/migrations/0017_auto_20180312_0928.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0017_auto_20180312_0928.py:9: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0017_auto_20180312_0928.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0020_historyitem
sol_users/migrations/0020_historyitem.py:22: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0020_historyitem.py:26: [C0301(line-too-long), ] Line too long (120/100)
sol_users/migrations/0020_historyitem.py:27: [C0301(line-too-long), ] Line too long (128/100)
sol_users/migrations/0020_historyitem.py:30: [C0301(line-too-long), ] Line too long (179/100)
sol_users/migrations/0020_historyitem.py:31: [C0301(line-too-long), ] Line too long (171/100)
sol_users/migrations/0020_historyitem.py:1: [C0103(invalid-name), ] Module name "0020_historyitem" doesn't conform to snake_case naming style
sol_users/migrations/0020_historyitem.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0020_historyitem.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/migrations/0020_historyitem.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0020_historyitem.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
sol_users/migrations/0020_historyitem.py:10: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0020_historyitem.py:10: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0017_auto_20180604_1538
sol_users/migrations/0017_auto_20180604_1538.py:19: [C0301(line-too-long), ] Line too long (143/100)
sol_users/migrations/0017_auto_20180604_1538.py:24: [C0301(line-too-long), ] Line too long (277/100)
sol_users/migrations/0017_auto_20180604_1538.py:1: [C0103(invalid-name), ] Module name "0017_auto_20180604_1538" doesn't conform to snake_case naming style
sol_users/migrations/0017_auto_20180604_1538.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0017_auto_20180604_1538.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
sol_users/migrations/0017_auto_20180604_1538.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0017_auto_20180604_1538.py:9: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0017_auto_20180604_1538.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0028_auto_20181030_1559
sol_users/migrations/0028_auto_20181030_1559.py:1: [C0103(invalid-name), ] Module name "0028_auto_20181030_1559" doesn't conform to snake_case naming style
sol_users/migrations/0028_auto_20181030_1559.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0028_auto_20181030_1559.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0028_auto_20181030_1559.py:9: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0028_auto_20181030_1559.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0031_merge_20181113_1646
sol_users/migrations/0031_merge_20181113_1646.py:1: [C0103(invalid-name), ] Module name "0031_merge_20181113_1646" doesn't conform to snake_case naming style
sol_users/migrations/0031_merge_20181113_1646.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0031_merge_20181113_1646.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0031_merge_20181113_1646.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0031_merge_20181113_1646.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0015_auto_20170928_1805
sol_users/migrations/0015_auto_20170928_1805.py:18: [C0301(line-too-long), ] Line too long (144/100)
sol_users/migrations/0015_auto_20170928_1805.py:24: [C0301(line-too-long), ] Line too long (115/100)
sol_users/migrations/0015_auto_20170928_1805.py:30: [C0301(line-too-long), ] Line too long (133/100)
sol_users/migrations/0015_auto_20170928_1805.py:1: [C0103(invalid-name), ] Module name "0015_auto_20170928_1805" doesn't conform to snake_case naming style
sol_users/migrations/0015_auto_20170928_1805.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0015_auto_20170928_1805.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0015_auto_20170928_1805.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0015_auto_20170928_1805.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0036_merge_20190111_1140
sol_users/migrations/0036_merge_20190111_1140.py:1: [C0103(invalid-name), ] Module name "0036_merge_20190111_1140" doesn't conform to snake_case naming style
sol_users/migrations/0036_merge_20190111_1140.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0036_merge_20190111_1140.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0036_merge_20190111_1140.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0036_merge_20190111_1140.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0035_merge_20181227_1027
sol_users/migrations/0035_merge_20181227_1027.py:1: [C0103(invalid-name), ] Module name "0035_merge_20181227_1027" doesn't conform to snake_case naming style
sol_users/migrations/0035_merge_20181227_1027.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0035_merge_20181227_1027.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0035_merge_20181227_1027.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0035_merge_20181227_1027.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0032_merge_20181127_1512
sol_users/migrations/0032_merge_20181127_1512.py:1: [C0103(invalid-name), ] Module name "0032_merge_20181127_1512" doesn't conform to snake_case naming style
sol_users/migrations/0032_merge_20181127_1512.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0032_merge_20181127_1512.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0032_merge_20181127_1512.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0032_merge_20181127_1512.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0024_user_is_owner
sol_users/migrations/0024_user_is_owner.py:1: [C0103(invalid-name), ] Module name "0024_user_is_owner" doesn't conform to snake_case naming style
sol_users/migrations/0024_user_is_owner.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0024_user_is_owner.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0024_user_is_owner.py:8: [C0103(invalid-name), ] Constant name "is_owner_backup_query" doesn't conform to UPPER_CASE naming style
sol_users/migrations/0024_user_is_owner.py:12: [C0103(invalid-name), ] Constant name "is_owner_restore_query" doesn't conform to UPPER_CASE naming style
sol_users/migrations/0024_user_is_owner.py:18: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0024_user_is_owner.py:18: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0029_auto_20181106_1421
sol_users/migrations/0029_auto_20181106_1421.py:18: [C0301(line-too-long), ] Line too long (104/100)
sol_users/migrations/0029_auto_20181106_1421.py:22: [C0301(line-too-long), ] Line too long (104/100)
sol_users/migrations/0029_auto_20181106_1421.py:27: [C0301(line-too-long), ] Line too long (255/100)
sol_users/migrations/0029_auto_20181106_1421.py:32: [C0301(line-too-long), ] Line too long (270/100)
sol_users/migrations/0029_auto_20181106_1421.py:1: [C0103(invalid-name), ] Module name "0029_auto_20181106_1421" doesn't conform to snake_case naming style
sol_users/migrations/0029_auto_20181106_1421.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0029_auto_20181106_1421.py:5: [E0401(import-error), ] Unable to import 'django.core.validators'
sol_users/migrations/0029_auto_20181106_1421.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0029_auto_20181106_1421.py:9: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0029_auto_20181106_1421.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0029_auto_20181113_0942
sol_users/migrations/0029_auto_20181113_0942.py:18: [C0301(line-too-long), ] Line too long (104/100)
sol_users/migrations/0029_auto_20181113_0942.py:22: [C0301(line-too-long), ] Line too long (104/100)
sol_users/migrations/0029_auto_20181113_0942.py:27: [C0301(line-too-long), ] Line too long (175/100)
sol_users/migrations/0029_auto_20181113_0942.py:1: [C0103(invalid-name), ] Module name "0029_auto_20181113_0942" doesn't conform to snake_case naming style
sol_users/migrations/0029_auto_20181113_0942.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0029_auto_20181113_0942.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0029_auto_20181113_0942.py:6: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
sol_users/migrations/0029_auto_20181113_0942.py:9: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0029_auto_20181113_0942.py:9: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0037_merge_20190208_1116
sol_users/migrations/0037_merge_20190208_1116.py:1: [C0103(invalid-name), ] Module name "0037_merge_20190208_1116" doesn't conform to snake_case naming style
sol_users/migrations/0037_merge_20190208_1116.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0037_merge_20190208_1116.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0037_merge_20190208_1116.py:6: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0037_merge_20190208_1116.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0039_merge_20190524_1031
sol_users/migrations/0039_merge_20190524_1031.py:1: [C0103(invalid-name), ] Module name "0039_merge_20190524_1031" doesn't conform to snake_case naming style
sol_users/migrations/0039_merge_20190524_1031.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0039_merge_20190524_1031.py:3: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0039_merge_20190524_1031.py:6: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0039_merge_20190524_1031.py:6: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0017_company_company_orange_hunting
sol_users/migrations/0017_company_company_orange_hunting.py:19: [C0301(line-too-long), ] Line too long (176/100)
sol_users/migrations/0017_company_company_orange_hunting.py:1: [C0103(invalid-name), ] Module name "0017_company_company_orange_hunting" doesn't conform to snake_case naming style
sol_users/migrations/0017_company_company_orange_hunting.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0017_company_company_orange_hunting.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0017_company_company_orange_hunting.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0017_company_company_orange_hunting.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0019_auto_20180627_1228
sol_users/migrations/0019_auto_20180627_1228.py:18: [C0301(line-too-long), ] Line too long (180/100)
sol_users/migrations/0019_auto_20180627_1228.py:23: [C0301(line-too-long), ] Line too long (188/100)
sol_users/migrations/0019_auto_20180627_1228.py:28: [C0301(line-too-long), ] Line too long (188/100)
sol_users/migrations/0019_auto_20180627_1228.py:1: [C0103(invalid-name), ] Module name "0019_auto_20180627_1228" doesn't conform to snake_case naming style
sol_users/migrations/0019_auto_20180627_1228.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0019_auto_20180627_1228.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0019_auto_20180627_1228.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0019_auto_20180627_1228.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0025_remove_super_user_flag
sol_users/migrations/0025_remove_super_user_flag.py:12: [C0301(line-too-long), ] Line too long (111/100)
sol_users/migrations/0025_remove_super_user_flag.py:1: [C0103(invalid-name), ] Module name "0025_remove_super_user_flag" doesn't conform to snake_case naming style
sol_users/migrations/0025_remove_super_user_flag.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0025_remove_super_user_flag.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/migrations/0025_remove_super_user_flag.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0025_remove_super_user_flag.py:7: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/migrations/0025_remove_super_user_flag.py:10: [C0111(missing-docstring), forward_remove_super_user_flag] Missing function docstring
sol_users/migrations/0025_remove_super_user_flag.py:10: [W0613(unused-argument), forward_remove_super_user_flag] Unused argument 'schema_editor'
sol_users/migrations/0025_remove_super_user_flag.py:16: [C0111(missing-docstring), reverse_remove_super_user_flag] Missing function docstring
sol_users/migrations/0025_remove_super_user_flag.py:16: [W0613(unused-argument), reverse_remove_super_user_flag] Unused argument 'apps'
sol_users/migrations/0025_remove_super_user_flag.py:16: [W0613(unused-argument), reverse_remove_super_user_flag] Unused argument 'schema_editor'
sol_users/migrations/0025_remove_super_user_flag.py:20: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0025_remove_super_user_flag.py:20: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
sol_users/migrations/0025_remove_super_user_flag.py:6: [W0611(unused-import), ] Unused models imported from django.db
************* Module sol_users.migrations.0016_company_company_orange_ordering
sol_users/migrations/0016_company_company_orange_ordering.py:19: [C0301(line-too-long), ] Line too long (176/100)
sol_users/migrations/0016_company_company_orange_ordering.py:1: [C0103(invalid-name), ] Module name "0016_company_company_orange_ordering" doesn't conform to snake_case naming style
sol_users/migrations/0016_company_company_orange_ordering.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0016_company_company_orange_ordering.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0016_company_company_orange_ordering.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0016_company_company_orange_ordering.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0033_merge_20181227_1006
sol_users/migrations/0033_merge_20181227_1006.py:1: [C0103(invalid-name), ] Module name "0033_merge_20181227_1006" doesn't conform to snake_case naming style
sol_users/migrations/0033_merge_20181227_1006.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0033_merge_20181227_1006.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0033_merge_20181227_1006.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0033_merge_20181227_1006.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0016_auto_20180207_1416
sol_users/migrations/0016_auto_20180207_1416.py:18: [C0301(line-too-long), ] Line too long (150/100)
sol_users/migrations/0016_auto_20180207_1416.py:23: [C0301(line-too-long), ] Line too long (135/100)
sol_users/migrations/0016_auto_20180207_1416.py:1: [C0103(invalid-name), ] Module name "0016_auto_20180207_1416" doesn't conform to snake_case naming style
sol_users/migrations/0016_auto_20180207_1416.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0016_auto_20180207_1416.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0016_auto_20180207_1416.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0016_auto_20180207_1416.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0021_auto_20180912_1507
sol_users/migrations/0021_auto_20180912_1507.py:18: [C0301(line-too-long), ] Line too long (150/100)
sol_users/migrations/0021_auto_20180912_1507.py:23: [C0301(line-too-long), ] Line too long (134/100)
sol_users/migrations/0021_auto_20180912_1507.py:1: [C0103(invalid-name), ] Module name "0021_auto_20180912_1507" doesn't conform to snake_case naming style
sol_users/migrations/0021_auto_20180912_1507.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0021_auto_20180912_1507.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0021_auto_20180912_1507.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0021_auto_20180912_1507.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0001_initial
sol_users/migrations/0001_initial.py:38: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:39: [C0301(line-too-long), ] Line too long (118/100)
sol_users/migrations/0001_initial.py:51: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:52: [C0301(line-too-long), ] Line too long (140/100)
sol_users/migrations/0001_initial.py:53: [C0301(line-too-long), ] Line too long (156/100)
sol_users/migrations/0001_initial.py:65: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:67: [C0301(line-too-long), ] Line too long (103/100)
sol_users/migrations/0001_initial.py:68: [C0301(line-too-long), ] Line too long (196/100)
sol_users/migrations/0001_initial.py:69: [C0301(line-too-long), ] Line too long (329/100)
sol_users/migrations/0001_initial.py:70: [C0301(line-too-long), ] Line too long (103/100)
sol_users/migrations/0001_initial.py:71: [C0301(line-too-long), ] Line too long (101/100)
sol_users/migrations/0001_initial.py:72: [C0301(line-too-long), ] Line too long (103/100)
sol_users/migrations/0001_initial.py:73: [C0301(line-too-long), ] Line too long (165/100)
sol_users/migrations/0001_initial.py:74: [C0301(line-too-long), ] Line too long (203/100)
sol_users/migrations/0001_initial.py:75: [C0301(line-too-long), ] Line too long (117/100)
sol_users/migrations/0001_initial.py:81: [C0301(line-too-long), ] Line too long (149/100)
sol_users/migrations/0001_initial.py:82: [C0301(line-too-long), ] Line too long (266/100)
sol_users/migrations/0001_initial.py:83: [C0301(line-too-long), ] Line too long (176/100)
sol_users/migrations/0001_initial.py:84: [C0301(line-too-long), ] Line too long (229/100)
sol_users/migrations/0001_initial.py:99: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:100: [C0301(line-too-long), ] Line too long (207/100)
sol_users/migrations/0001_initial.py:101: [C0301(line-too-long), ] Line too long (216/100)
sol_users/migrations/0001_initial.py:110: [C0301(line-too-long), ] Line too long (148/100)
sol_users/migrations/0001_initial.py:115: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:116: [C0301(line-too-long), ] Line too long (211/100)
sol_users/migrations/0001_initial.py:125: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:126: [C0301(line-too-long), ] Line too long (150/100)
sol_users/migrations/0001_initial.py:127: [C0301(line-too-long), ] Line too long (193/100)
sol_users/migrations/0001_initial.py:128: [C0301(line-too-long), ] Line too long (174/100)
sol_users/migrations/0001_initial.py:129: [C0301(line-too-long), ] Line too long (357/100)
sol_users/migrations/0001_initial.py:130: [C0301(line-too-long), ] Line too long (341/100)
sol_users/migrations/0001_initial.py:142: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:143: [C0301(line-too-long), ] Line too long (122/100)
sol_users/migrations/0001_initial.py:144: [C0301(line-too-long), ] Line too long (158/100)
sol_users/migrations/0001_initial.py:145: [C0301(line-too-long), ] Line too long (179/100)
sol_users/migrations/0001_initial.py:158: [C0301(line-too-long), ] Line too long (114/100)
sol_users/migrations/0001_initial.py:159: [C0301(line-too-long), ] Line too long (125/100)
sol_users/migrations/0001_initial.py:160: [C0301(line-too-long), ] Line too long (132/100)
sol_users/migrations/0001_initial.py:161: [C0301(line-too-long), ] Line too long (144/100)
sol_users/migrations/0001_initial.py:162: [C0301(line-too-long), ] Line too long (155/100)
sol_users/migrations/0001_initial.py:163: [C0301(line-too-long), ] Line too long (237/100)
sol_users/migrations/0001_initial.py:164: [C0301(line-too-long), ] Line too long (249/100)
sol_users/migrations/0001_initial.py:165: [C0301(line-too-long), ] Line too long (200/100)
sol_users/migrations/0001_initial.py:177: [C0301(line-too-long), ] Line too long (112/100)
sol_users/migrations/0001_initial.py:179: [C0301(line-too-long), ] Line too long (221/100)
sol_users/migrations/0001_initial.py:190: [C0301(line-too-long), ] Line too long (190/100)
sol_users/migrations/0001_initial.py:1: [C0103(invalid-name), ] Module name "0001_initial" doesn't conform to snake_case naming style
sol_users/migrations/0001_initial.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0001_initial.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/migrations/0001_initial.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0001_initial.py:7: [E0401(import-error), ] Unable to import 'django.db.models.deletion'
sol_users/migrations/0001_initial.py:10: [C0103(invalid-name), ] Constant name "base_company_name" doesn't conform to UPPER_CASE naming style
sol_users/migrations/0001_initial.py:13: [C0111(missing-docstring), create_base_company] Missing function docstring
sol_users/migrations/0001_initial.py:13: [W0613(unused-argument), create_base_company] Unused argument 'schema_editor'
sol_users/migrations/0001_initial.py:19: [C0111(missing-docstring), delete_base_company] Missing function docstring
sol_users/migrations/0001_initial.py:19: [W0613(unused-argument), delete_base_company] Unused argument 'schema_editor'
sol_users/migrations/0001_initial.py:25: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0001_initial.py:25: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0018_company_company_orange_bqa
sol_users/migrations/0018_company_company_orange_bqa.py:19: [C0301(line-too-long), ] Line too long (168/100)
sol_users/migrations/0018_company_company_orange_bqa.py:1: [C0103(invalid-name), ] Module name "0018_company_company_orange_bqa" doesn't conform to snake_case naming style
sol_users/migrations/0018_company_company_orange_bqa.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0018_company_company_orange_bqa.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0018_company_company_orange_bqa.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0018_company_company_orange_bqa.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0032_merge_20181207_1842
sol_users/migrations/0032_merge_20181207_1842.py:1: [C0103(invalid-name), ] Module name "0032_merge_20181207_1842" doesn't conform to snake_case naming style
sol_users/migrations/0032_merge_20181207_1842.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0032_merge_20181207_1842.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0032_merge_20181207_1842.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0032_merge_20181207_1842.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0034_merge_20181227_1014
sol_users/migrations/0034_merge_20181227_1014.py:1: [C0103(invalid-name), ] Module name "0034_merge_20181227_1014" doesn't conform to snake_case naming style
sol_users/migrations/0034_merge_20181227_1014.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0034_merge_20181227_1014.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0034_merge_20181227_1014.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0034_merge_20181227_1014.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_users.migrations.0026_add_orange_super_users
sol_users/migrations/0026_add_orange_super_users.py:1: [C0103(invalid-name), ] Module name "0026_add_orange_super_users" doesn't conform to snake_case naming style
sol_users/migrations/0026_add_orange_super_users.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0026_add_orange_super_users.py:5: [E0401(import-error), ] Unable to import 'django.conf'
sol_users/migrations/0026_add_orange_super_users.py:6: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0026_add_orange_super_users.py:7: [E0401(import-error), ] Unable to import 'django.db.models'
sol_users/migrations/0026_add_orange_super_users.py:10: [C0111(missing-docstring), forward_remove_super_user_flag] Missing function docstring
sol_users/migrations/0026_add_orange_super_users.py:10: [W0613(unused-argument), forward_remove_super_user_flag] Unused argument 'schema_editor'
sol_users/migrations/0026_add_orange_super_users.py:17: [C0111(missing-docstring), reverse_remove_super_user_flag] Missing function docstring
sol_users/migrations/0026_add_orange_super_users.py:17: [W0613(unused-argument), reverse_remove_super_user_flag] Unused argument 'apps'
sol_users/migrations/0026_add_orange_super_users.py:17: [W0613(unused-argument), reverse_remove_super_user_flag] Unused argument 'schema_editor'
sol_users/migrations/0026_add_orange_super_users.py:21: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0026_add_orange_super_users.py:21: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
sol_users/migrations/0026_add_orange_super_users.py:6: [W0611(unused-import), ] Unused models imported from django.db
sol_users/migrations/0026_add_orange_super_users.py:7: [W0611(unused-import), ] Unused Q imported from django.db.models
************* Module sol_users.migrations.0034_auto_20190115_1717
sol_users/migrations/0034_auto_20190115_1717.py:1: [C0103(invalid-name), ] Module name "0034_auto_20190115_1717" doesn't conform to snake_case naming style
sol_users/migrations/0034_auto_20190115_1717.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_users/migrations/0034_auto_20190115_1717.py:5: [E0401(import-error), ] Unable to import 'django.db'
sol_users/migrations/0034_auto_20190115_1717.py:8: [C0111(missing-docstring), Migration] Missing class docstring
sol_users/migrations/0034_auto_20190115_1717.py:8: [R0903(too-few-public-methods), Migration] Too few public methods (0/2)
************* Module sol_notifications.utils
sol_notifications/utils.py:28: [C0301(line-too-long), ] Line too long (117/100)
sol_notifications/utils.py:34: [C0301(line-too-long), ] Line too long (114/100)
sol_notifications/utils.py:169: [C0301(line-too-long), ] Line too long (109/100)
sol_notifications/utils.py:171: [C0301(line-too-long), ] Line too long (103/100)
sol_notifications/utils.py:176: [C0301(line-too-long), ] Line too long (121/100)
sol_notifications/utils.py:189: [C0301(line-too-long), ] Line too long (116/100)
sol_notifications/utils.py:192: [C0301(line-too-long), ] Line too long (110/100)
sol_notifications/utils.py:193: [C0301(line-too-long), ] Line too long (121/100)
sol_notifications/utils.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notifications/utils.py:7: [E0401(import-error), ] Unable to import 'django.conf'
sol_notifications/utils.py:8: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_notifications/utils.py:9: [E0401(import-error), ] Unable to import 'django.db'
sol_notifications/utils.py:10: [E0401(import-error), ] Unable to import 'django.template'
sol_notifications/utils.py:11: [E0401(import-error), ] Unable to import 'django.template.loader'
sol_notifications/utils.py:12: [E0401(import-error), ] Unable to import 'django.utils.functional'
sol_notifications/utils.py:13: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol_notifications/utils.py:14: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_notifications/utils.py:15: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol_notifications/utils.py:21: [R0205(useless-object-inheritance), BaseSolNotificationEvent] Class 'BaseSolNotificationEvent' inherits from object, can be safely removed from bases in python3
sol_notifications/utils.py:111: [C0111(missing-docstring), BaseSolNotificationEvent.get_template] Missing method docstring
sol_notifications/utils.py:127: [C0111(missing-docstring), BaseSolNotificationEvent.render_template] Missing method docstring
sol_notifications/utils.py:137: [C0111(missing-docstring), BaseSolNotificationEvent.event_information] Missing method docstring
sol_notifications/utils.py:144: [C0111(missing-docstring), BaseSolNotificationEvent.get_event_data] Missing method docstring
sol_notifications/utils.py:146: [E1101(no-member), BaseSolNotificationEvent.get_event_data] Method 'event_information' has no 'get' member
sol_notifications/utils.py:198: [C0111(missing-docstring), BaseSolNotificationEvent.listeners] Missing method docstring
sol_notifications/utils.py:204: [C0111(missing-docstring), BaseSolNotificationEvent.get_listener_context] Missing method docstring
sol_notifications/utils.py:211: [C0111(missing-docstring), BaseSolNotificationEvent.get_class_path] Missing method docstring
sol_notifications/utils.py:215: [C0111(missing-docstring), BaseSolNotificationEvent.fire_event] Missing method docstring
sol_notifications/utils.py:224: [C0111(missing-docstring), is_notificationevent] Missing function docstring
sol_notifications/utils.py:231: [C0111(missing-docstring), get_notificationevent_classes] Missing function docstring
sol_notifications/utils.py:238: [C0111(missing-docstring), get_notificationevent_class_by_technicalname] Missing function docstring
sol_notifications/utils.py:241: [W0702(bare-except), get_notificationevent_class_by_technicalname] No exception type(s) specified
sol_notifications/utils.py:254: [C0111(missing-docstring), get_app_notificationeventtypes] Missing function docstring
sol_notifications/utils.py:259: [W0612(unused-variable), get_app_notificationeventtypes] Unused variable 'event_class_name'
sol_notifications/utils.py:278: [C0111(missing-docstring), get_notifications_views] Missing function docstring
sol_notifications/utils.py:279: [E0401(import-error), get_notifications_views] Unable to import 'rest_framework.decorators'
sol_notifications/utils.py:285: [W0613(unused-argument), get_notifications_views.get_notificationeventtypes] Unused argument 'request'
sol_notifications/utils.py:285: [W0613(unused-argument), get_notifications_views.get_notificationeventtypes] Unused argument 'args'
sol_notifications/utils.py:285: [W0613(unused-argument), get_notifications_views.get_notificationeventtypes] Unused argument 'kwargs'
************* Module sol_notifications.apps
sol_notifications/apps.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notifications/apps.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol_notifications/apps.py:6: [C0111(missing-docstring), SolNotificationsConfig] Missing class docstring
sol_notifications/apps.py:6: [R0903(too-few-public-methods), SolNotificationsConfig] Too few public methods (0/2)
************* Module sol_notifications.mixins
sol_notifications/mixins.py:42: [C0301(line-too-long), ] Line too long (104/100)
sol_notifications/mixins.py:48: [C0301(line-too-long), ] Line too long (104/100)
sol_notifications/mixins.py:71: [C0301(line-too-long), ] Line too long (119/100)
sol_notifications/mixins.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notifications/mixins.py:3: [E0401(import-error), ] Unable to import 'django.db.models'
sol_notifications/mixins.py:4: [E0401(import-error), ] Unable to import 'django.utils'
sol_notifications/mixins.py:5: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_notifications/mixins.py:6: [E0401(import-error), ] Unable to import 'rest_framework'
sol_notifications/mixins.py:7: [E0401(import-error), ] Unable to import 'rest_framework.decorators'
sol_notifications/mixins.py:8: [E0401(import-error), ] Unable to import 'rest_framework.exceptions'
sol_notifications/mixins.py:9: [E0401(import-error), ] Unable to import 'rest_framework.fields'
sol_notifications/mixins.py:10: [E0401(import-error), ] Unable to import 'rest_framework.response'
sol_notifications/mixins.py:11: [E0401(import-error), ] Unable to import 'rest_framework.serializers'
sol_notifications/mixins.py:17: [C0111(missing-docstring), NotificationEventsUsersSerializerMixin] Missing class docstring
sol_notifications/mixins.py:17: [R0205(useless-object-inheritance), NotificationEventsUsersSerializerMixin] Class 'NotificationEventsUsersSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_notifications/mixins.py:17: [R0903(too-few-public-methods), NotificationEventsUsersSerializerMixin] Too few public methods (0/2)
sol_notifications/mixins.py:23: [C0111(missing-docstring), NotificationEventsUsersViewSetMixin] Missing class docstring
sol_notifications/mixins.py:23: [R0205(useless-object-inheritance), NotificationEventsUsersViewSetMixin] Class 'NotificationEventsUsersViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_notifications/mixins.py:25: [W0613(unused-argument), NotificationEventsUsersViewSetMixin.mark_all_read] Unused argument 'request'
sol_notifications/mixins.py:25: [W0613(unused-argument), NotificationEventsUsersViewSetMixin.mark_all_read] Unused argument 'args'
sol_notifications/mixins.py:25: [W0613(unused-argument), NotificationEventsUsersViewSetMixin.mark_all_read] Unused argument 'kwargs'
sol_notifications/mixins.py:23: [R0903(too-few-public-methods), NotificationEventsUsersViewSetMixin] Too few public methods (1/2)
sol_notifications/mixins.py:38: [C0111(missing-docstring), NotificationSubscriptionSerializerMixin] Missing class docstring
sol_notifications/mixins.py:38: [R0205(useless-object-inheritance), NotificationSubscriptionSerializerMixin] Class 'NotificationSubscriptionSerializerMixin' inherits from object, can be safely removed from bases in python3
sol_notifications/mixins.py:42: [W0212(protected-access), NotificationSubscriptionSerializerMixin.__init__] Access to a protected member _meta of a client class
sol_notifications/mixins.py:47: [C0111(missing-docstring), NotificationSubscriptionSerializerMixin.validate_type] Missing method docstring
sol_notifications/mixins.py:48: [W0212(protected-access), NotificationSubscriptionSerializerMixin.validate_type] Access to a protected member _meta of a client class
sol_notifications/mixins.py:55: [C0111(missing-docstring), NotificationSubscriptionSerializerMixin.validate] Missing method docstring
sol_notifications/mixins.py:69: [C0111(missing-docstring), NotificationSubscriptionViewSetMixin] Missing class docstring
sol_notifications/mixins.py:69: [R0205(useless-object-inheritance), NotificationSubscriptionViewSetMixin] Class 'NotificationSubscriptionViewSetMixin' inherits from object, can be safely removed from bases in python3
sol_notifications/mixins.py:69: [R0903(too-few-public-methods), NotificationSubscriptionViewSetMixin] Too few public methods (1/2)
************* Module sol_notifications.async_jobs
sol_notifications/async_jobs.py:18: [W0511(fixme), ] TODO: maybe remove this and implement a switch to shape merge behaviour, see below..
sol_notifications/async_jobs.py:60: [W0511(fixme), ] TODO: remove different management for subscriptions: they should be more flexible but easy to manage.
sol_notifications/async_jobs.py:107: [W0511(fixme), ] TODO: when listener_context is empty, we are sending the same exact message to everyone.
sol_notifications/async_jobs.py:120: [W0511(fixme), ] TODO: Here a row is not created when 'on_screen' is off and i think this is wrong for obvious reasons.
sol_notifications/async_jobs.py:121: [W0511(fixme), ] TODO: Implementing a many to many between NotificationEvent and NotificationEventsUsers would save
sol_notifications/async_jobs.py:32: [C0301(line-too-long), ] Line too long (103/100)
sol_notifications/async_jobs.py:33: [C0301(line-too-long), ] Line too long (102/100)
sol_notifications/async_jobs.py:60: [C0301(line-too-long), ] Line too long (111/100)
sol_notifications/async_jobs.py:82: [C0301(line-too-long), ] Line too long (124/100)
sol_notifications/async_jobs.py:107: [C0301(line-too-long), ] Line too long (106/100)
sol_notifications/async_jobs.py:117: [C0301(line-too-long), ] Line too long (116/100)
sol_notifications/async_jobs.py:120: [C0301(line-too-long), ] Line too long (112/100)
sol_notifications/async_jobs.py:121: [C0301(line-too-long), ] Line too long (108/100)
sol_notifications/async_jobs.py:127: [C0301(line-too-long), ] Line too long (112/100)
sol_notifications/async_jobs.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notifications/async_jobs.py:3: [E0401(import-error), ] Unable to import 'django.apps'
sol_notifications/async_jobs.py:4: [E0401(import-error), ] Unable to import 'django.conf'
sol_notifications/async_jobs.py:5: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_notifications/async_jobs.py:6: [E0401(import-error), ] Unable to import 'django.core.mail'
sol_notifications/async_jobs.py:7: [E0401(import-error), ] Unable to import 'django.db.models'
sol_notifications/async_jobs.py:8: [E0401(import-error), ] Unable to import 'django.utils.module_loading'
sol_notifications/async_jobs.py:9: [E0401(import-error), ] Unable to import 'django_rq'
sol_notifications/async_jobs.py:13: [C0111(missing-docstring), manage_notification_event] Missing function docstring
sol_notifications/async_jobs.py:13: [R0914(too-many-locals), manage_notification_event] Too many local variables (35/15)
sol_notifications/async_jobs.py:37: [W0212(protected-access), manage_notification_event] Access to a protected member _meta of a client class
sol_notifications/async_jobs.py:57: [R1702(too-many-nested-blocks), manage_notification_event] Too many nested blocks (6/5)
sol_notifications/async_jobs.py:57: [R1702(too-many-nested-blocks), manage_notification_event] Too many nested blocks (6/5)
sol_notifications/async_jobs.py:116: [W0702(bare-except), manage_notification_event] No exception type(s) specified
sol_notifications/async_jobs.py:13: [R0912(too-many-branches), manage_notification_event] Too many branches (22/12)
sol_notifications/async_jobs.py:13: [R0915(too-many-statements), manage_notification_event] Too many statements (61/50)
************* Module sol_notifications.models_api
sol_notifications/models_api.py:21: [C0301(line-too-long), ] Line too long (115/100)
sol_notifications/models_api.py:24: [C0301(line-too-long), ] Line too long (117/100)
sol_notifications/models_api.py:55: [C0301(line-too-long), ] Line too long (101/100)
sol_notifications/models_api.py:58: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                user=self.request.user,
            |   ^
sol_notifications/models_api.py:59: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                deleted=False,
            |   ^
sol_notifications/models_api.py:60: [C0330(bad-continuation), ] Wrong hanging indentation (remove 4 spaces).
                notification_event__type__in=visible_types,
            |   ^
sol_notifications/models_api.py:78: [C0301(line-too-long), ] Line too long (102/100)
sol_notifications/models_api.py:135: [C0301(line-too-long), ] Line too long (107/100)
sol_notifications/models_api.py:151: [C0301(line-too-long), ] Line too long (101/100)
sol_notifications/models_api.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notifications/models_api.py:15: [C0111(missing-docstring), get_api_config] Missing function docstring
sol_notifications/models_api.py:18: [C0103(invalid-name), get_api_config] Variable name "c" doesn't conform to snake_case naming style
sol_notifications/models_api.py:29: [C0111(missing-docstring), get_callable_notificationeventsusers] Missing function docstring
sol_notifications/models_api.py:31: [W0212(protected-access), get_callable_notificationeventsusers.callable_func] Access to a protected member _meta of a client class
sol_notifications/models_api.py:33: [W0212(protected-access), get_callable_notificationeventsusers.callable_func] Access to a protected member _meta of a client class
sol_notifications/models_api.py:30: [W0613(unused-argument), get_callable_notificationeventsusers.callable_func] Unused argument 'kwargs'
sol_notifications/models_api.py:66: [C0111(missing-docstring), get_callable_notificationsubscription] Missing function docstring
sol_notifications/models_api.py:67: [W0613(unused-argument), get_callable_notificationsubscription.callable_func] Unused argument 'kwargs'
sol_notifications/models_api.py:73: [C0103(invalid-name), ] Constant name "config" doesn't conform to UPPER_CASE naming style
************* Module sol_notifications.models
sol_notifications/models.py:65: [W0511(fixme), ] TODO: not tested. Verify stale objects in old queryset, maybe this should be a manager only method.
sol_notifications/models.py:32: [C0301(line-too-long), ] Line too long (116/100)
sol_notifications/models.py:50: [C0301(line-too-long), ] Line too long (110/100)
sol_notifications/models.py:53: [C0301(line-too-long), ] Line too long (103/100)
sol_notifications/models.py:65: [C0301(line-too-long), ] Line too long (109/100)
sol_notifications/models.py:77: [C0301(line-too-long), ] Line too long (101/100)
sol_notifications/models.py:106: [C0301(line-too-long), ] Line too long (107/100)
sol_notifications/models.py:110: [C0301(line-too-long), ] Line too long (110/100)
sol_notifications/models.py:135: [C0301(line-too-long), ] Line too long (112/100)
sol_notifications/models.py:146: [C0301(line-too-long), ] Line too long (113/100)
sol_notifications/models.py:172: [C0301(line-too-long), ] Line too long (107/100)
sol_notifications/models.py:176: [C0301(line-too-long), ] Line too long (114/100)
sol_notifications/models.py:1: [C0111(missing-docstring), ] Missing module docstring
sol_notifications/models.py:6: [E0401(import-error), ] Unable to import 'django.contrib.auth'
sol_notifications/models.py:7: [E0401(import-error), ] Unable to import 'django.contrib.postgres.fields'
sol_notifications/models.py:8: [E0401(import-error), ] Unable to import 'django.db'
sol_notifications/models.py:9: [E0401(import-error), ] Unable to import 'django.utils.translation'
sol_notifications/models.py:14: [C0103(invalid-name), ] Constant name "logger" doesn't conform to UPPER_CASE naming style
sol_notifications/models.py:55: [C0111(missing-docstring), NotificationEvent.Meta] Missing class docstring
sol_notifications/models.py:55: [R0903(too-few-public-methods), NotificationEvent.Meta] Too few public methods (0/2)
sol_notifications/models.py:24: [R0903(too-few-public-methods), NotificationEvent] Too few public methods (1/2)
sol_notifications/models.py:63: [C0111(missing-docstring), BaseNotificationEventsUsersQuerySet] Missing class docstring
sol_notifications/models.py:64: [C0111(missing-docstring), BaseNotificationEventsUsersQuerySet.rebuild_content] Missing method docstring
sol_notifications/models.py:63: [R0903(too-few-public-methods), BaseNotificationEventsUsersQuerySet] Too few public methods (1/2)
sol_notifications/models.py:77: [C0111(missing-docstring), BaseNotificationEventsUsers] Missing class docstring
sol_notifications/models.py:78: [C0111(missing-docstring), BaseNotificationEventsUsers.get_queryset] Missing method docstring
sol_notifications/models.py:77: [R0903(too-few-public-methods), BaseNotificationEventsUsers] Too few public methods (1/2)
sol_notifications/models.py:116: [C0111(missing-docstring), NotificationEventsUsers.event_context] Missing method docstring
sol_notifications/models.py:130: [C0111(missing-docstring), NotificationEventsUsers.event_content] Missing method docstring
sol_notifications/models.py:145: [W0702(bare-except), NotificationEventsUsers.event_content] No exception type(s) specified
sol_notifications/models.py:154: [C0111(missing-docstring), NotificationEventsUsers.Meta] Missing class docstring
sol_notifications/models.py:154: [R0903(too-few-public-methods), NotificationEventsUsers.Meta] Too few public methods (0/2)
sol_notifications/models.py:178: [C0111(missing-docstring), NotificationSubscription.Meta] Missing class docstring
sol_notifications/models.py:178: [R0903(too-few-public-methods), NotificationSubscription.Meta] Too few public methods (0/2)
sol_notifications/models.py:164: [R0903(too-few-public-methods), NotificationSubscription] Too few public methods (0/2)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol.api.lib -> sol.api.mixins)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol.api.mixins -> sol.async_jobs -> sol.utils.export)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol_users.models -> sol_users.permissions -> sol_users.permissions.userssolapplication -> sol_users.permissions.solapplication)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol_users.permissions -> sol_users.permissions.userssolapplication -> sol_users.permissions.solapplication)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.notifications)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.permissions -> projects.permissions.delegations)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models_api -> projects.permissions.tasksolorders)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.orderingdelegations -> projects.permissions -> projects.permissions.tasksolorders -> projects.models_api -> workflows.models -> workflows.permissions)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.fields.json_dynamic.mixins -> projects.models_api)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.permissions -> projects.permissions.orderingdelegations)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.data_exchange.outbound.excel_job -> projects.serializers)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.views)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_job_import -> workflows.serializers -> workflows.models -> workflows.permissions -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol.api.mixins -> sol.utils.export)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol.api.mixins -> sol_users.authentication -> sol_users.models -> sol_users.models_api -> sol.utils.history.models_api)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol.api.mixins -> sol_users.authentication -> sol_users.models -> sol_users.models_api)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.permissions -> projects.permissions.projects)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.taskoffer)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.views -> projects.permissions.delegations -> projects.permissions -> projects.permissions.taskoffer -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.outbound.excel_job -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.orderingdelegations -> projects.permissions -> projects.permissions.taskoffer)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.orderingdelegations -> projects.permissions -> projects.permissions.tasksolorders -> projects.models_api -> projects.validators)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.utils -> projects.models_api -> projects.validators)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.utils -> projects.models_api -> projects.validators -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_economicvalue_import -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_delegations_import -> projects.data_exchange.outbound.excel_delegations -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.outbound.excel_delegations -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_economichypothesiscode_import -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_jobslinks_import -> projects.serializers -> projects.notifications -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_job_import -> projects.data_exchange.outbound.excel_job -> projects.serializers -> projects.notifications -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_jobslinks_import -> projects.serializers -> projects.data_exchange.outbound.excel_job -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_taskslinks_import -> projects.serializers -> projects.data_exchange.outbound.excel_job -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.async_jobs -> projects.data_exchange.inbound.excel_orderingdelegations_import -> projects.serializers -> projects.data_exchange.outbound.excel_job -> projects.models)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.tasksdependency)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.orderingdelegations -> projects.permissions -> projects.permissions.job)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.orderingdelegations -> projects.permissions -> projects.permissions.tasksolorders)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.jobtype -> projects.permissions -> projects.permissions.taskoffer)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.joblink)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.taskblock -> projects.permissions -> projects.permissions.taskoffer)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (projects.models -> projects.permissions.orderingdelegations -> projects.permissions -> projects.permissions.task)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol_users.async_jobs -> sol_users.views)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol_users.permissions -> sol_users.permissions.user)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol_users.models -> sol_users.permissions -> sol_users.permissions.groupssolapplication -> sol_users.permissions.solapplication)
sol_notifications/models.py:1: [R0401(cyclic-import), ] Cyclic import (sol_users.models -> sol_users.models_api -> sol_users.permissions.user -> sol_users.permissions -> sol_users.permissions.userssolapplication -> sol_users.permissions.solapplication)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:212
==sol.api.lib:261
    @staticmethod
    def getattr_from_iterable(iterable_or_obj, attr_name, default='___raise___'):
        """Get an attribute from an iterable containing objects (returning the first found) or a simple object,
        useful to get an attribute from, say, tuples or lists of objects.

        Args:
            iterable_or_obj: An iterable or simple object from where to get attribute.
            attr_name: A string indicating the attribute name to get.
            default: A string to set a default value if attribute is not found, optional.
                If the value is '___raise___' (default), raise an AttributeError exception.

        Returns:
            A mixed type: the attribute found, if not found returns None.
        Raises:
            AttributeError: an attribute named as attr_name is not found ONLY when a default value is not provided.
        """
        attr = None

        try:
            _iterable = iter(iterable_or_obj)
        except TypeError:
            _iterable = (iterable_or_obj,)

        for obj in _iterable:
            attr = getattr(obj, attr_name, None)
            if attr is not None:
                break

        if attr is None and default == '___raise___':
            raise AttributeError('Attribute {0} not found in: {1}'.format(attr_name, str(iterable_or_obj)))
        else:
            attr = default

        return attr

    @classmethod
    def _normalize_field_names(cls, model, fields):
        """Given a django model and a list of fields' names, this returns a list of existing-only fields,
            also normalizing '_set' auto naming cases (eg. model.get_fields() returns field names without '_set' suffix).

        TODO: maybe improve this, finding a way more precise than simple checking if field's name without '_set' exists!

        Args:
            model: A django model class.
            fields: A list of django model fields.

        Returns:
            norm_field_names: A list of normalized django model fields' names.
        """
        # serializer fields could not exist in the model, eg. 'url'
        model_field_names = [field.name for field in model._meta.get_fields()]

        # also normalize reverse relation fields with django "auto naming", eg. rel_model_name.lower() + '_set'
        norm_field_names = []
        for orig_field_name in fields:
            field_name = orig_field_name
            if field_name not in model_field_names:
                without_set = field_name[:-4] if field_name[-4:] == '_set' else None
                if without_set in model_field_names:
                    field_name = without_set
                else:
                    continue

            norm_field_names.append(field_name)

        return norm_field_names

    @staticmethod
    def parse_field(field_def):
        """Parse field definition: a string or a dictionary for related (nested) fields.
        The dict for related should be a valid serializer config,
        plus the field name of the parent model as value of a key 'name'.

        Args:
            field_def: A string for 'simple' field or a dictionary for related (nested) fields.

        Returns:
            A tuple of 2:
                (
                    None (if a related and 'name' is missing) or a string: field name in 'current' model,
                    A (empty, if not a related) dictionary containing a drf Serializer definition for related field,
                )
        """
        field_name = None
        rel_serializer_opts = {}

        if isinstance(field_def, six.string_types):
            field_name = field_def
        elif isinstance(field_def, dict):
            field_name = field_def.get('_name', None)
            if field_name:
                rel_serializer_opts = field_def.copy()
                rel_serializer_opts.pop('_name')

        return field_name, rel_serializer_opts

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==settings.dev_template:28
==settings.dev_template_noredis:28
]

# DEBUG_TOOLBAR_PANELS = [
#     'debug_toolbar.panels.versions.VersionsPanel',
#     'debug_toolbar.panels.timer.TimerPanel',
#     'debug_toolbar.panels.settings.SettingsPanel',
#     'debug_toolbar.panels.headers.HeadersPanel',
#     'debug_toolbar.panels.request.RequestPanel',
#     'debug_toolbar.panels.sql.SQLPanel',
#     'debug_toolbar.panels.staticfiles.StaticFilesPanel',
#     'debug_toolbar.panels.templates.TemplatesPanel',
#     'debug_toolbar.panels.cache.CachePanel',
#     'debug_toolbar.panels.signals.SignalsPanel',
#     'debug_toolbar.panels.logging.LoggingPanel',
#     'debug_toolbar.panels.redirects.RedirectsPanel',
# ]

# DEBUG_TOOLBAR_CONFIG = {
#     'DISABLE_PANELS': [
#         'debug_toolbar.panels.redirects.RedirectsPanel',
#     ],
#     'JQUERY_URL': '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',
#     'RESULTS_CACHE_SIZE': 10,
#     'SHOW_TEMPLATE_CONTEXT': True,
#     'SQL_WARNING_THRESHOLD': 500,
# }


MEDIA_ROOT = os.path.join(BASE_DIR, 'static_private')


# (set and) needed by debug_toolbar
INTERNAL_IPS = [
    '127.0.0.1',
    '::1',
    # vagrant tunnelling result setting request.META['REMOTE_ADDR'] to this
    '10.0.2.2',
]


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'sol',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []


# Log to file all db queries
LOGGING['handlers']['db'] = {
    'level': 'DEBUG',
    'class': 'logging.FileHandler',
    'filename': '/var/log/django/sol_db.log',
    'formatter': 'simple',
}
LOGGING['loggers']['django.db.backends'] = {
    'handlers': ['db'],
    'level': 'DEBUG',
    'propagate': True,
}


# Settings for error logging
ADMINS = (
    ('Errors Divitel', 's.pellizzari@divigroup.com'),
)
MANAGERS = (
    ('HelpDesk Divitel', 'j.celadon@divigroup.com'),
)

# django-rq
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.inbound.excel_economichypothesiscode_import:55
==projects.data_exchange.inbound.excel_economicvalue_import:70
    def validate_header(self, row):
        """
        Check the validity of the excel file header

        Args:
            row: the header row to be checked

        Returns: True if the header respect the defined sheet structure, False elsewhere.
        The progress 'messages' list will be updated with info on errors encountered.
        """
        if len(self.sheet_structure) > len(row):
            self.progress['messages']['validation'].append({
                'message': 'Header has less columns than expected (found: {0} - expected: {1})'.format(
                    len(row),
                    len(self.sheet_structure),
                ),
                'level': 'error',
            })
            return False

        for index, column in enumerate(self.sheet_structure):
            error_found = False
            if not row[index].value == column.label:
                error_found = True
                self.progress['messages']['validation'].append({
                    'message': 'Header \'{0}\' expected in column {1}'.format(
                        column.label,
                        index + 1,
                    ),
                    'level': 'error',
                })

        return not error_found

    def validate_row(self, row, row_count):
        """
        Check if the row passed as input respect the defined sheet structure

        Args:
            row: the excel sheet row to be validated
            row_count: the position of the validating row in the input sheet

        Returns: list with the same format as sheet_structure but with normalized values, None elsewhere.
        The progress 'messages' list will be updated with info on errors encountered.
        """
        # check mandatory fields
        error_found = False
        for index, column in enumerate(self.sheet_structure):
            if column.mandatory and row[index].value is None:
                error_found = True
                self.progress['messages'][row_count].append({
                    'message': 'Value for column \'{0}\' is mandatory'.format(
                        column.label,
                    ),
                    'level': 'error',
                })

        if error_found:
            return None

        # budget, group3, group2, group1, hypothesis must be already present
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:584
==sol.api.lib:607
            except KeyError as e:
                raise ImportError(
                    "{} class is not defined, maybe 'serializers' module was not imported in 'views', module: {}".format(
                        str(e),
                        module.get('__name__')
                    )
                )

            # required defaults
            default_opts = {
                '__module__': module.get('__name__'),
                'serializer_class': serializer_class,
            }

            # get configured opts for viewsets and override defaults
            viewset_opts = opts['viewset'] if 'viewset' in opts and isinstance(opts['viewset'], dict) else {}

            default_opts.update(copy.deepcopy(viewset_opts))

            # add a default queryset here to avoid evaluating results if a configured one is passed
            if 'queryset' not in default_opts:
                default_opts['queryset'] = model.objects.all()

            # manage configured filter class
            filter_fields = default_opts.get('filter_fields', [])
            # explicitly setting it to None disables filtering
            if filter_fields is not None:
                # if empty, build a list of normalized fields' names: eg. reduce a related field dict to its name string
                if not filter_fields and 'serializer' in opts:
                    for field in opts['serializer'].get('fields', []):
                        field_name, __ = cls.parse_field(field)
                        if field_name:
                            filter_fields.append(field_name)

                norm_filter_fields = cls._normalize_field_names(model, filter_fields)

                # djangorestframework-filters [rest_framework_filters]: eventual support
                # uncomment these lines and comment the following if
                # filter_class = cls.get_filter_class(model, norm_filter_fields)
                #
                # new_classes[filter_class.__name__] = filter_class
                #
                # default_opts['filter_class'] = filter_class
                #
                # if 'filter_fields' in default_opts:
                #     del default_opts['filter_fields']

                if norm_filter_fields:
                    default_opts['filter_fields'] = norm_filter_fields

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:152
==sol.api.lib:170
        'filter': (
            # djangorestframework-filters [rest_framework_filters]: eventual support
            ModelFilterSet if DjangoFilterBackend in api_settings.DEFAULT_FILTER_BACKENDS else drf_filters.FilterSet,
        ),
    }

    _class_name_patterns = {
        'serializer': '{0}Serializer',
        'viewset': '{0}ViewSet',
        'filter': '{0}Filter',
    }

    # class attributes declarable in the proper section of the model,
    # no longer used but left temporarily here for reference
    """
    _overridable_props = {
        'serializer_meta': [
            'fields',
            'exclude',
            'extra_kwargs',
            'read_only_fields',
            'depth',
            'validators',
            # 'list_serializer_class',
        ],
        'viewset': [
            'queryset',
            'serializer_class',
            'pagination_class',
            'paginate_by_param',
            'max_paginate_by',
            'filter_backends',
            'filter_fields',
            'search_fields',
            'ordering_param',
            'ordering_fields',
            'permission_classes',
            'authentication_classes',
            'lookup_field',
            'lookup_value_regex',
        ],
    }
    """

    _cache = {}

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_users.permissions.groupssolapplication:1
==sol_users.permissions.groupssolapplications:1
from collections import defaultdict

from sol.utils.permissions import GetUserPermissionsMixin
from sol_users.permissions.solapplication import SolApplicationTroughPermissionsMixin


class GroupsSolApplicationsPermissionsMixin(SolApplicationTroughPermissionsMixin, GetUserPermissionsMixin):
    # permission_class_info = {
    #     'key': 'groupssolapplications_permissions',
    #     'description': 'Applications assignment to Groups Permissions',
    #     'index': 50,
    # }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    # methods_info['has_read_permission'] = {
    #     'hidden': True,
    # }

    @classmethod
    def has_create_permission(cls, request):
        return True
    # methods_info['has_create_permission'] = {
    #     'hidden': True,
    # }

    @classmethod
    def has_write_permission(cls, request):
        return True
    # methods_info['has_write_permission'] = {
    #     'hidden': True,
    # }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    # methods_info['has_object_read_permission'] = {
    #     'hidden': True,
    # }

    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    # methods_info['has_object_write_permission'] = {
    #     'hidden': True,
    # }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_users.permissions.userssolapplication:1
==sol_users.permissions.userssolapplications:1
from collections import defaultdict

from sol.utils.permissions import GetUserPermissionsMixin
from sol_users.permissions.solapplication import SolApplicationTroughPermissionsMixin


class UsersSolApplicationsPermissionsMixin(SolApplicationTroughPermissionsMixin, GetUserPermissionsMixin):
    # permission_class_info = {
    #     'key': 'userssolapplications_permissions',
    #     'description': 'Applications assignment to Users Permissions',
    #     'index': 40,
    # }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    # methods_info['has_read_permission'] = {
    #     'hidden': True,
    # }

    @classmethod
    def has_create_permission(cls, request):
        return True
    # methods_info['has_create_permission'] = {
    #     'hidden': True,
    # }

    @classmethod
    def has_write_permission(cls, request):
        return True
    # methods_info['has_write_permission'] = {
    #     'hidden': True,
    # }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    # methods_info['has_object_read_permission'] = {
    #     'hidden': True,
    # }

    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    # methods_info['has_object_write_permission'] = {
    #     'hidden': True,
    # }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.inbound.excel_economichypothesiscode_import:177
==projects.data_exchange.inbound.excel_economicvalue_import:259
    @transaction.atomic
    def process(self):
        """
        Process the input file and import data where possibile.
        """
        header_rows_number = 1

        # get sheet dimensions
        self.progress['state'] = 'length_calculation'
        self.ws.calculate_dimension(force=True)
        if self.ws.max_row:
            last_row = self.ws.max_row
        else:
            for row_count, __ in enumerate(self.ws.rows, start=1):
                last_row = row_count

        # init progress dict
        self.progress.update({
            'length': last_row - header_rows_number,
            'state': 'processing',
            'messages': defaultdict(list),
        })

        # main cycle on all the sheet rows
        for row_count, row in enumerate(self.ws.iter_rows()):
            # file header... check consistency
            if row_count == 0:
                if not self.validate_header(row):
                    self.progress['state'] = 'fail'
                    return {'state': 'processed'}
                continue

            # update progress
            self.progress['progress'] = row_count - header_rows_number

            # make row_count as shown in the excel file
            row_count += 1

            # validate current row and extract all required informations
            validated_row = self.validate_row(row, row_count)
            if not validated_row:
                continue

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.validators:127
==sol.validators:128
                else:
                    raise ValidationError(errors)


class WriteOnceValidator(object):
    message = _("This field can be set only during creation.")

    def __init__(self, initial_value=None, message=None):
        self._drf = False
        self.drf_field_name = None

        self.initial_value = initial_value

        self.message = message or self.message

    def set_context(self, field):
        """
        This hook is called by the serializer instance,
        prior to the validation call being made.
        """
        self._drf = True

        # TODO: check this. Code taken from this same method of UniqueValidator, file rest_framework/validation.py
        # Determine the underlying model field name. This may not be the
        # same as the serializer field name if `source=<>` is set.
        # self.drf_field_name = serializer.field_name.source_attrs[-1]
        self.drf_field_name = field.field_name

        serializer = getattr(field, 'parent', None)
        instance = getattr(serializer, 'instance', None)
        if instance:
            self.initial_value = getattr(instance, self.drf_field_name, None)

    def __call__(self, value):
        if self.initial_value and value != self.initial_value:
            if self._drf:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:371
==sol.api.lib:410
    @classmethod
    def inject(cls, module, what):
        """Dynamically declare all drf objects needed from django models custom options (if any),
        for passed python module, usually a django app.

        Args:
            module: A valid python module object.
            what: A string used as a suffix for string 'get_', to compose a valid method name of this class, eg:
                'serializers' for get_serializers() usually in serializers.py
                'viewsets' for get_viewsets() usually in views.py

        Returns:
            Void as this set dynamically declared objects in the passed module scope.

        Raises:
            AttributeError: if a method for passed what param (eg. 'get_' + what.lower()) is not defined
        """
        method = getattr(cls, 'get_{0}'.format(what.lower()))

        objects = method(module)

        module.update(objects)

    @classmethod
    def get_serializers(cls, module):
        """Return all dynamically generated drf Serializer classes needed.

        Args:
            module: A valid python module object.

        Returns:
            A dictionary containing all dynamic generated serializers.
        """
        _serializers = {}

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==sol_users.permissions.groupssolapplication:13
==sol_users.permissions.groupssolapplications:13
==sol_users.permissions.userssolapplication:13
==sol_users.permissions.userssolapplications:13
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    # methods_info['has_read_permission'] = {
    #     'hidden': True,
    # }

    @classmethod
    def has_create_permission(cls, request):
        return True
    # methods_info['has_create_permission'] = {
    #     'hidden': True,
    # }

    @classmethod
    def has_write_permission(cls, request):
        return True
    # methods_info['has_write_permission'] = {
    #     'hidden': True,
    # }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    # methods_info['has_object_read_permission'] = {
    #     'hidden': True,
    # }

    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    # methods_info['has_object_write_permission'] = {
    #     'hidden': True,
    # }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.outbound.excel_delegations:389
==projects.data_exchange.outbound.excel_delegations_sol_ordering:174
    def get_as_byteio(self):
        self.compose_workbook()

        file_data = BytesIO()
        self.wb.save(file_data)

        out = file_data.getvalue()
        return out

    def get_as_tempfile(self):
        self.compose_workbook()

        wb_memory_file = tempfile.NamedTemporaryFile()

        self.wb.save(wb_memory_file)

        return wb_memory_file

    def get_as_zipfile(self, filename):
        """This differs from using BytesIO only in lower memory usage, not in execution time.
        """
        wb_memory_file = self.get_as_tempfile()

        zip_container_file = tempfile.TemporaryFile()

        zf = zipfile.ZipFile(zip_container_file, mode='w', compression=zipfile.ZIP_DEFLATED)
        zf.write(wb_memory_file.name, filename)
        zf.close()

        # schedule files to be closed on instance destruction
        self._files.append(wb_memory_file)
        self._files.append(zip_container_file)

        return zip_container_file
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.notifications.overrides:32
==sol_notifications.utils:270
            })
    except ImportError:
        pass

    return events


def get_notifications_views(app_name):
    from rest_framework.decorators import api_view

    results = get_app_notificationeventtypes(app_name)

    @set_throttle_scope('hard')
    @api_view()
    def get_notificationeventtypes(request, *args, **kwargs):
        """Return a list of all available notification event types.
        """
        return Response({
            'results': results,
        })

    notifications_views = [
        (r'notificationeventtypes/', get_notificationeventtypes, 'get_notification_event_types'),
    ]
    return notifications_views
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.inbound.excel_economichypothesiscode_import:18
==projects.data_exchange.inbound.excel_economicvalue_import:25
    ]

    def __init__(self, file_path, progress, request):
        self.file_path = file_path
        self.progress = progress
        self.request = request

        self.progress['state'] = 'init'

        # open workbook
        wb = load_workbook(self.file_path, read_only=True, data_only=True)
        self.ws = wb.active

        # load lookup dictionaries
        self.lookups = {}
        self.load_dicts()

    def load_dicts(self):
        """
        Load lookup dictionaries to quick translate excel human values into models
        """
        budgets_qs = EconomicBudget.objects.all()
        self.lookups['budget'] = {e.name: e for e in budgets_qs}

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:537
==sol.api.lib:521
    @classmethod
    def get_filter_class(cls, model, filter_fields):
        """Return a dynamically generated FilterSet class for passed django model.

        Args:
            model: A django model class.
            filter_fields: A list of fields, usually specified in the model API configuration.

        Returns:
            FilterSet class for passed django model.
        """
        #  add AllLookupsFilter for each field
        class_props = {field_name: drf_filters.AllLookupsFilter(name=field_name) for field_name in filter_fields}

        parent = cls.parent['filter']

        parent_meta = cls.getattr_from_iterable(parent, 'Meta', object)

        class_props['Meta'] = type(str('Meta'), (parent_meta,), {
            'model': model,
            'fields': filter_fields,
        })

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.data_exchange.outbound.excel_delegations:401
==projects.data_exchange.outbound.excel_delegations_sol_ordering:186
==projects.data_exchange.outbound.excel_job:878
        wb_memory_file = tempfile.NamedTemporaryFile()

        self.wb.save(wb_memory_file)

        return wb_memory_file

    def get_as_zipfile(self, filename):
        """This differs from using BytesIO only in lower memory usage, not in execution time.
        """
        wb_memory_file = self.get_as_tempfile()

        zip_container_file = tempfile.TemporaryFile()

        zf = zipfile.ZipFile(zip_container_file, mode='w', compression=zipfile.ZIP_DEFLATED)
        zf.write(wb_memory_file.name, filename)
        zf.close()

        # schedule files to be closed on instance destruction
        self._files.append(wb_memory_file)
        self._files.append(zip_container_file)

        return zip_container_file
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:642
==sol.api.lib:666
            viewset_class = type(str(viewset_class_name), parent, default_opts)

            new_classes[viewset_class_name] = viewset_class

        return new_classes

    @classmethod
    def register_urls(cls, module, router):
        """Register all dynamically generated routes (with corresponding ViewSets) in the passed drf Router,
        for passed python module, usually a django app (eg. urls.py).

        Args:
            module: A valid python module object.
            router: drf Router, usually rest_framework.routers.DefaultRouter

        Returns:
            Void as this only register routes in the passed drf Router.

        Raises:
            ImportError: An error occurred importing the passed module object.
        """
        try:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:11
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:13
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('idazienda', models.IntegerField(primary_key=True, serialize=False)),
                ('nome_az', models.CharField(blank=True, max_length=256, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=256, null=True)),
                ('cap', models.CharField(blank=True, max_length=256, null=True)),
                ('comune', models.CharField(blank=True, max_length=256, null=True)),
                ('prov', models.CharField(blank=True, max_length=256, null=True)),
                ('vat', models.CharField(blank=True, max_length=256, null=True)),
                ('nome_azs', models.CharField(blank=True, max_length=10, null=True)),
                ('gc', models.NullBooleanField()),
                ('azsup', models.NullBooleanField()),
                ('active', models.NullBooleanField()),
                ('azemail', models.CharField(blank=True, max_length=256, null=True)),
                ('ab_apparato_old', models.NullBooleanField()),
                ('ab_contratto_old', models.NullBooleanField()),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models_api:62
==orange_sites.models_api:32
                {
                    '_name': 'town',
                    'fields': [
                        'id',
                        'town_name',
                        {
                            '_name': 'city',
                            'fields': [
                                'id',
                                'city_name',
                                {
                                    '_name': 'region',
                                    'fields': [
                                        'id',
                                        'region_name',
                                    ]
                                },
                            ]
                        },
                    ]
                },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==settings.dev_template:6
==settings.dev_template_noredis:6
from .prod import *


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEMPLATES[0]['OPTIONS']['debug'] = True

SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False

# Application definition

INSTALLED_APPS += [
    # 'debug_toolbar',
]

MIDDLEWARE += [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.tests.test_task_views:22
==projects.tests.test_taskoffer_views:18
==projects.tests.test_tasksolorders_views:19
        self.user = get_user_model().objects.filter(
                is_active=True,
                is_superuser=False,
                job_rel__isnull=False,
            ) \
            .order_by('?') \
            .first()

        self.role = self.user.projects_roles.create(name='test_{}'.format(get_random_string()))
        self.role_actions = [
            self.role.actions.create(action='app_permissions.activate_zone_permissions_filter',
                                     value=False),
            self.role.actions.create(action='task_permissions.filter_other_companies_tasks',
                                     value=False),
            self.role.actions.create(action='task_permissions.filter_jobs_created',
                                     value=False),
            self.role.actions.create(action='task_permissions.write',
                                     value=True),
            self.role.actions.create(action='task_permissions.can_edit_owner',
                                     value=True),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.models:43
==orange_ordering.models:393
==orange_sharing.models:66
@python_2_unicode_compatible
class Company(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idazienda')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='nome_az')
    address = models.CharField(max_length=256, blank=True, null=True, db_column='indirizzo')
    zip = models.CharField(max_length=256, blank=True, null=True, db_column='cap')
    town = models.CharField(max_length=256, blank=True, null=True, db_column='comune')
    city = models.CharField(max_length=256, blank=True, null=True, db_column='prov')
    vat = models.CharField(max_length=256, blank=True, null=True)
    short_name = models.CharField(max_length=10, blank=True, null=True, db_column='nome_azs')
    is_gc = models.NullBooleanField(db_column='gc')
    is_azsup = models.NullBooleanField(db_column='azsup')
    active = models.NullBooleanField()
    email = models.CharField(max_length=256, blank=True, null=True, db_column='azemail')

    def __str__(self):
        return '{0}'.format(self.name)

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.bqa:52
==projects.permissions.hunting:52
==projects.permissions.legal:52
==projects.permissions.ordering:50
                    then=True
                ),
                default=False,
                output_field=BooleanField(),
            )

        return annotations, exclude_apply

    @classmethod
    def permissions_filter(cls, queryset, request, *args, **kwargs):
        annotations, exclude_apply = cls.get_permissions_filter_annotations(request, *args, **kwargs)
        if annotations:
            queryset = queryset.annotate(**annotations)
            queryset = queryset.filter(**{k: True for k in annotations if k not in exclude_apply})
            # Using annotation on filter only, does not lead to huge performance improvements.
            # queryset = queryset.annotate(permission_annotation_true=Value(True, output_field=BooleanField()))
            # queryset = queryset.filter(**{'permission_annotation_true': v for k, v in annotations.items()})

        return queryset
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models:69
==orange_ordering.models:40
@python_2_unicode_compatible
class Person(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idpersona')
    username = models.CharField(_('First Name'), max_length=256, null=False, db_column='zope_user')
    first_name = models.CharField(_('First Name'), max_length=256, null=False, db_column='nome')
    last_name = models.CharField(_('Last Name'), max_length=256, null=False, db_column='cognome')
    email = models.CharField(_('Email'), max_length=256, null=False, db_column='persone_email')

    full_name = CharVirtualField(
        sql_expression="COALESCE({alias}.cognome) ||" \
                       " CASE WHEN {alias}.cognome IS NOT NULL THEN ' ' ELSE '' END ||" \
                       " COALESCE({alias}.nome)"
    )

    def __str__(self):
        return '{0}'.format(self.full_name)

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sharing.models:42
==orange_sites.models:69
    @classmethod
    def get_external_url(cls, id):
        return cls.get_external_url_template().format(id=id)

    @property
    def external_url(self):
        return self.get_external_url(self.pk)

    @classmethod
    def get_new_external_instance_url(cls):
        # return 'https://orange.diviteldatacenter.com/sharing/solicitud/solicitud_mng_edit?idatt=-1'
        return None

    @property
    def new_external_instance_url(self):
        return self.get_new_external_instance_url()

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.joblink:11
==sol_docs.permissions.document:17
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return True
    methods_info['has_write_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_users.migrations.0029_auto_20181106_1421:8
==sol_users.migrations.0029_auto_20181113_0942:8
class Migration(migrations.Migration):

    dependencies = [
        ('sol_users', '0028_auto_20181030_1559'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='soluser',
            options={'ordering': ['full_name'], 'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['full_name'], 'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AlterField(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:28
==projects.permissions.task:24
            if not AppPermissions.has_show_planned_info_permission(request):
                blacklist += [
                    'planned_date_start',
                    'planned_date_end',
                    'planned_cost',
                    'planned_units',
                    'cost',
                    'units',
                ]

        return whitelist, blacklist

    def permissions_writable_fields(self, writable_fields, validated_data, whitelist, blacklist):
        request = self.context.get('request')
        user = getattr(request, 'user', None)
        if user:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.async_jobs:1315
==sol_users.async_jobs:74
    store_private_file(ContentFile(file_content), filename=filename, path=file_path)

    progress.update({
        'state': 'done',
        'total': 1,
        'progress': 1,
    })

    file_info = JobMetaDict(key='file')
    file_info['path'] = file_path
    file_info['name'] = filename
    file_info['delete'] = delete_file

    return True


sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.async_jobs:478
==projects.async_jobs:688
==projects.async_jobs:840
==sol_users.async_jobs:76
    progress.update({
        'state': 'done',
        'total': 1,
        'progress': 1,
    })

    file_info = JobMetaDict(key='file')
    file_info['path'] = file_path
    file_info['name'] = filename
    file_info['delete'] = delete_file

    return True


@job('default')
@close_db_connection
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0010_auto_20180510_1542:12
==projects.migrations.0087_auto_20180510_1542:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='description',
            field=models.TextField(blank=True, default='', help_text='A brief description of what this role means', verbose_name='Description'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.TextField(default='', help_text='The name of this role', unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
            preserve_default=False,
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.validators:367
==sol.validators:173
        self._drf = False
        self.instance = instance
        self.field_names=field_names

    def set_context(self, serializer):
        self._drf = True
        self.instance = getattr(serializer,'instance',None)

    def __call__(self, data):
        if self.instance:
            missing_fields = set(self.field_names) - set(data.keys())
            if len(missing_fields) > 0:
                human_readable_missing_fields = ",".join(list(missing_fields))
                error_message = self.message.format(human_readable_missing_fields)

                if self._drf:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.migrations.0005_auto_20181115_1201:13
==sol_users.migrations.0034_auto_20181227_1023:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='description',
            field=models.TextField(blank=True, default='', help_text='A brief description of what this role means', verbose_name='Description'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.CharField(default='', help_text='The name of this role', max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
            preserve_default=False,
        ),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.permissions.document:18
==orange_sites.permissions.document_tag:18
==projects.permissions.economics:18
==projects.permissions.joborderingfilter:18
        'index': 1,
        'default': True,
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_write_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==workflows.migrations.0008_auto_20170216_1605:2
==workflows.migrations.0008_auto_20170220_0921:2
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('workflows', '0007_auto_20170213_1500'),
    ]

    operations = [
        migrations.AlterField(
            model_name='workflowhistory',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0003_auto_20160729_1225:15
==orange_sharing.migrations.0001_initial:15
                                (
                                  idazienda integer NOT NULL,
                                  nome_az character varying,
                                  indirizzo character varying,
                                  cap character varying,
                                  comune character varying,
                                  prov character varying,
                                  vat character varying,
                                  nome_azs character varying(10),
                                  gc boolean,
                                  azsup boolean DEFAULT false,
                                  active boolean DEFAULT true,
                                  azemail character varying,
                                  ab_apparato_old boolean,
                                  ab_contratto_old boolean,
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_users.permissions.company:38
==sol_users.permissions.user:53
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    methods_info['has_object_write_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_users.permissions.company:11
==sol_users.permissions.group:11
==sol_users.permissions.user:26
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_create_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_create_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:127
==projects.permissions.task:139
    @classmethod
    def has_destroy_permission(cls, request):
        # Actually not allowed to any user.
        return request.user and request.user.is_superuser
    methods_info['has_destroy_permission'] = {
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.migrations.0001_initial:2
==orange_legal.migrations.0001_initial:2
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.migrations.0004_auto_20180604_1538:12
==sol_users.migrations.0017_auto_20180604_1538:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='description',
            field=models.TextField(blank=True, help_text='A brief description of what this role means', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.TextField(blank=True, help_text='The name of this role', null=True, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0013_merge_20181127_1512:2
==orange_sites.migrations.0013_merge_20181207_1841:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('orange_sites', '0012_auto_20181127_1009'),
        ('orange_sites', '0012_auto_20181106_1421'),
    ]

    operations = [
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_dynamicreports.permissions.report:44
==sol_users.permissions.group:36
        'index': 5,
        'default': True,
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
        ret = self.has_write_permission(request)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.notifications.overrides:5
==sol_notifications.utils:252
@memoize
def get_app_notificationeventtypes(app_name):
    events = []
    try:
        app_event_classes = get_notificationevent_classes(app_name)

        for event_class_name, event_class in app_event_classes:
            event_class.app_name = app_name

            event_default_method = event_class.default_subscription_method
            event_technical_name = event_class.technical_name
            event_name = event_class.event_info['name']
            event_description = event_class.event_info['description']
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0102_auto_20180704_1713:24
==projects.migrations.0147_auto_20190419_1708:9
    }
]


def insert_data(apps, schema_editor):
    TaskLinkProperty = apps.get_model('projects', 'TaskLinkProperty')
    for item in DATA:
        TaskLinkProperty.objects.get_or_create(**item)


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0096_auto_20180620_1554:2
==projects.migrations.0096_auto_20180628_1513:2
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0095_taskoffer_provider_name'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0122_auto_20181012_1537:2
==projects.migrations.0122_historyitem_created_by_admin_app:2
==projects.migrations.0122_taskblockhistory_block_job:2
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0121_auto_20180917_0959'),
    ]

    operations = [
        migrations.AddField(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.task:109
==sol_users.permissions.solapplication:58
                output_field=BooleanField(),
            )

        return annotations, exclude_apply

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.joblink:14
==projects.permissions.taskoffer:42
==sol_docs.permissions.document:20
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return True
    methods_info['has_write_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.tasksolorders:59
==sol_notes.permissions.note:27
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.joblink:10
==projects.permissions.tasksdependency:10
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return True
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.models:2219
==projects.models:788
==sol_users.models:146
    @classmethod
    def from_string(cls, name, **kwargs):
        use_cache = False

        if hasattr(cls, 'name_cache'):
            if name in cls.name_cache:
                return cls.name_cache[name]
        else:
            if use_cache:
                cls.__class__.name_cache = {}
            else:
                cls.name_cache = {}

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.outbound.excel_job:45
==projects.models:1850
            'planned_date_start',
            'planned_date_end',
            'planned_cost',
            'planned_units',
            'forecast_date_start',
            'forecast_date_end',
            'forecast_cost',
            'forecast_units',
            'real_date_start',
            'real_date_end',
            'real_cost',
            'real_units',
            'owner',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:41
==orange_ordering.migrations.0005_orderlastvisit_ordertask_ordervisit:16
            fields=[
                ('idvisita', models.IntegerField(primary_key=True, serialize=False)),
                ('commento', models.TextField(blank=True, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ordering_last_visite_view',
                'verbose_name': 'Orderingv Last Visit',
                'verbose_name_plural': 'Ordering Last Visits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange.migrations.0001_initial:2
==portal.migrations.0001_initial:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==sol_docs.models_api:198
==sol_docs.models_api:332
==sol_docs.models_api:494
==sol_docs.models_api:546
==sol_notifications.models_api:91
                        'created_by',
                        {
                            '_name': 'created_by_ids',
                            '_source': 'created_by',
                            'fields': [
                                'id',
                                'username',
                                'first_name',
                                'last_name',
                                'full_name',
                            ],
                        },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_dynamicreports.permissions.report:44
==sol_users.permissions.group:36
==sol_users.permissions.user:51
        'index': 5,
        'default': True,
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0034_historyitem:2
==sol_users.migrations.0020_historyitem:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0106_auto_20180717_1542:2
==projects.migrations.0106_auto_20180718_1830:2
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0105_remove_tasks_links_summary_view'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.tasksdependency:11
==sol_docs.permissions.document:17
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return True
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.joblink:43
==projects.permissions.tasksdependency:47
                return False

        return True

    @classmethod
    def has_create_permission(cls, request):
        return cls.check_has_create_or_update_permission(request, request.data)
    methods_info['has_create_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.data_exchange.outbound.excel_job:45
==projects.models:1850
==projects.permissions.projects:16
            'planned_date_start',
            'planned_date_end',
            'planned_cost',
            'planned_units',
            'forecast_date_start',
            'forecast_date_end',
            'forecast_cost',
            'forecast_units',
            'real_date_start',
            'real_date_end',
            'real_cost',
            'real_units',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:132
==orange_ordering.migrations.0005_orderlastvisit_ordertask_ordervisit:45
            fields=[
                ('idvisita', models.IntegerField(primary_key=True, serialize=False)),
                ('commento', models.TextField(blank=True, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ordering_visite',
                'verbose_name': 'Ordering Visit',
                'verbose_name_plural': 'Ordering Visits',
                'managed': False,
            },
        ),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==orange_sites.migrations.0010_auto_20180510_1542:12
==portal.migrations.0005_auto_20181115_1201:13
==projects.migrations.0087_auto_20180510_1542:12
==sol_users.migrations.0015_auto_20170928_1805:11
==sol_users.migrations.0034_auto_20181227_1023:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='description',
            field=models.TextField(blank=True, default='', help_text='A brief description of what this role means', verbose_name='Description'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 8 files
==orange_sites.permissions.document:18
==orange_sites.permissions.document_tag:18
==projects.permissions.bqa:22
==projects.permissions.economics:18
==projects.permissions.hunting:22
==projects.permissions.joborderingfilter:18
==projects.permissions.legal:22
==projects.permissions.ordering:20
        'index': 1,
        'default': True,
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.utils.request_tracking.__init__:40
==sol_dynamicreports.__init__:22
}


class Settings(object):
    """Represent specific settings for this app that can be overridden in django standard settings.
    """
    def __init__(self, defaults=None, django_settings_ns=None):
        self.defaults = defaults or DEFAULTS
        self.django_settings_ns = django_settings_ns or DJANGO_SETTINGS_NAMESPACE

    def __getattr__(self, attr):
        if attr not in self.defaults:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange.migrations.0001_initial:2
==portal.migrations.0001_initial:2
==projects.migrations.0002_auto_20160905_1415:2
==workflows.migrations.0001_initial:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.models:315
==orange_hunting.models:161
==orange_ordering.models:435
@python_2_unicode_compatible
class WorkType(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idtipo_opera')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='tipo_opera')
    code = models.CharField(max_length=5, blank=True, null=True, db_column='codice_opera')
    reference = models.CharField(max_length=256, blank=True, null=True, db_column='riferimento')

    def __str__(self):
        return '{0}'.format(self.name)

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sharing.migrations.0001_initial:2
==orange_sites.migrations.0001_initial:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('orange_public', '0001_initial'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.models:246
==orange_ordering.models:418
==orange_sharing.models:110
@python_2_unicode_compatible
class SupervisionContract(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idconsup')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='desc_contr')
    contract_date = models.DateField(blank=True, null=True, db_column='data_contr')
    company = models.ForeignKey(Company, models.DO_NOTHING, db_column='idazsup', blank=True, null=True)

    def __str__(self):
        return '{0}'.format(self.name)

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.models_api:60
==orange_sharing.models_api:51
                    ]
                },
                {
                    '_name': 'device',
                    'fields': [
                        'id',
                        'device_code',
                        {
                            '_name': 'site',
                            'fields': [
                                'id',
                                'site_code',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==sol_dynamicreports.permissions.report:22
==sol_users.permissions.company:14
==sol_users.permissions.group:14
==sol_users.permissions.user:29
    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_create_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_create_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0046_auto_20170210_1732:4
==projects.migrations.0046_auto_20170217_1522:5
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0045_merge_20170130_1515'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0062_ordering_matrix_views:10
==projects.migrations.0097_ordering_matrix_views:10
    ]

    operations = [
        migrations.RunSQL("""
            CREATE OR REPLACE VIEW ordering_hypotheses_matrix_view AS
            SELECT
                ipotesi.idipotesi AS id
                , projects_econ_hypotheses.id AS economic_hypothesis_id
                , ordering_zones_matrix_view.zone_id
                , ipotesi.idipotesi
            FROM projects_econ_hypotheses
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0140_auto_20190424_1537:12
==projects.migrations.0146_auto_20190403_1534:10
    ]

    operations = [
        migrations.AlterField(
            model_name='document',
            name='active_revision',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_active_revision', to='projects.DocumentRevision'),
        ),
        migrations.AlterField(
            model_name='document',
            name='category',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.taskoffer:51
==sol_users.permissions.solapplication:80
    methods_info['has_write_permission'] = {
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.projects:32
==projects.permissions.tasksolorders:18
==projects.permissions.tasksolorders:39
                ]

        return whitelist, blacklist

    def permissions_writable_fields(self, writable_fields, validated_data, whitelist, blacklist):
        return self.permissions_fields(writable_fields, whitelist, blacklist)

    def permissions_readable_fields(self, readable_fields, whitelist, blacklist):
        return self.permissions_fields(readable_fields, whitelist, blacklist)


sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.job:135
==sol_users.permissions.company:41
==sol_users.permissions.user:56
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    methods_info['has_object_write_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:100
==sol_dynamicreports.permissions.report:20
        return queryset

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_create_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:215
==projects.permissions.task:172
        'hidden': True,
    }

    def has_object_show_planned_info_permission(self, request):
        from projects.permissions import AppPermissions

        return AppPermissions.has_show_planned_info_permission(request)
    methods_info['has_object_show_planned_info_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.permissions.joblink:10
==projects.permissions.tasksdependency:10
==sol_users.permissions.company:11
==sol_users.permissions.group:11
==sol_users.permissions.user:26
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.inbound.excel_economichypothesiscode_import:42
==projects.data_exchange.inbound.excel_economicvalue_import:58
        group3_qs = EconomicGroup.objects.all()
        self.lookups['group3'] = {(e.name, e.economic_budget.pk,): e for e in group3_qs}

        group2_qs = EconomicProject.objects.all()
        self.lookups['group2'] = {(e.name, e.economic_group.pk,): e for e in group2_qs}

        group1_qs = EconomicSubproject.objects.all()
        self.lookups['group1'] = {(e.name, e.economic_project.pk,): e for e in group1_qs}

        hypothesis_qs = EconomicHypothesis.objects.all()
        self.lookups['hypothesis'] = {(e.name, e.economic_subproject.pk,): e for e in hypothesis_qs}
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.models:859
==sol_users.models:148
        use_cache = False

        if hasattr(cls, 'name_cache'):
            if name in cls.name_cache:
                return cls.name_cache[name]
        else:
            if use_cache:
                cls.__class__.name_cache = {}
            else:
                cls.name_cache = {}

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0003_ordersapzw01p:21
==orange_ordering.migrations.0012_auto_20160908_1514:21
                ('proveedor', models.TextField(verbose_name='Proveedor')),
                ('prc_neto', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prc. Neto')),
                ('cond_pago', models.CharField(max_length=4, verbose_name='Cond. Pago')),
                ('contrato', models.TextField(verbose_name='Contrato')),
                ('iea', models.TextField(verbose_name='IEA')),
                ('resp_sap', models.TextField(verbose_name='Resp. SAP')),
                ('nombre', models.TextField(verbose_name='Nombre')),
                ('estado', models.TextField(verbose_name='Estado')),
                ('fecha_modif', models.DateField(verbose_name='Fecha modif.')),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.migrations.0001_initial:9
==projects.migrations.0001_initial:11
class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 14 files
==orange_sites.migrations.0008_auto_20171207_1730:2
==projects.migrations.0015_usergridcolumns:2
==projects.migrations.0019_auto_20161103_1128:2
==projects.migrations.0023_report_reportcolumns:2
==projects.migrations.0025_auto_20161128_1439:2
==projects.migrations.0039_auto_20170111_1619:2
==projects.migrations.0086_taskoffer:2
==projects.migrations.0088_orderingdelegation:2
==projects.migrations.0096_changelog:2
==projects.migrations.0101_auto_20180704_1526:2
==projects.migrations.0110_auto_20180831_1738:2
==projects.migrations.0126_FAKE_linked_jobs:2
==projects.migrations.0127_linked_jobs_add_base_sol_fields:2
==projects.migrations.0135_auto_20190110_1506:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_ordering.migrations.0001_initial:2
==orange_public.migrations.0001_initial:2
==sol.migrations.0001_unaccent:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:17
==sol.api.lib:25
try:
    from sol.api.url_filter import DjangoFilterBackend
    from sol.api.url_filter import ModelFilterSet
except ImportError:
    from url_filter.integrations.drf import DjangoFilterBackend
    from url_filter.filtersets import ModelFilterSet
# djangorestframework-filters [rest_framework_filters]: eventual support
# import rest_framework_filters as drf_filters
drf_filters = None


sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:250
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:156
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:296
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('idtipo_opera', models.IntegerField(primary_key=True, serialize=False)),
                ('tipo_opera', models.CharField(blank=True, max_length=256, null=True)),
                ('codice_opera', models.CharField(blank=True, max_length=5, null=True)),
                ('riferimento', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_ordering.models:509
==orange_sharing.models:42
==orange_sites.models:69
    @classmethod
    def get_external_url(cls, id):
        return cls.get_external_url_template().format(id=id)

    @property
    def external_url(self):
        return self.get_external_url(self.pk)

    @classmethod
    def get_new_external_instance_url(cls):
        # return 'https://orange.diviteldatacenter.com/sharing/solicitud/solicitud_mng_edit?idatt=-1'
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==orange_bqa.urls:1
==orange_brise.urls:1
==orange_hunting.urls:1
==orange_legal.urls:1
==orange_ordering.urls:1
==orange_public.urls:1
==orange_sharing.urls:1
from django.conf.urls import include, url
from rest_framework import routers

from sol.api.lib import RestifyModels


router = routers.DefaultRouter()

RestifyModels.register_urls(globals(), router)

# Wire up our API using automatic URL routing.
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_users.migrations.0025_remove_super_user_flag:2
==sol_users.migrations.0026_add_orange_super_users:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
from django.db.models import Q


def forward_remove_super_user_flag(apps, schema_editor):
    user_model = apps.get_model(settings.AUTH_USER_MODEL)
    # user_model.objects.filter(email__endswith='@divigroup.com', is_superuser=True).update(is_superuser=False)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==sol_docs.permissions.document:17
==sol_users.permissions.company:12
==sol_users.permissions.group:12
==sol_users.permissions.user:27
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_docs.models_api:512
==sol_notifications.models_api:95
                            'fields': [
                                'id',
                                'username',
                                'first_name',
                                'last_name',
                                'full_name',
                            ],
                        },
                    ],
                },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_dynamicreports.permissions.report:46
==sol_users.permissions.company:38
==sol_users.permissions.group:38
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0127_merge_20181030_1540:2
==projects.migrations.0130_merge_20181207_1841:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0126_auto_20181023_0923'),
        ('projects', '0122_taskblockhistory_block_job'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0083_orangebqatask:2
==projects.migrations.0089_auto_20180522_1135:2
from __future__ import unicode_literals

from django.db import migrations
import projects.permissions.bqa


class Migration(migrations.Migration):

    dependencies = [
        ('orange_bqa', '0004_auto_20160901_1549'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0028_auto_20161214_1446:2
==projects.migrations.0126_documentfield:2
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.task:144
==sol_docs.permissions.document:37
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_retrieve_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:8
==projects.permissions.projects:6
    def permissions_fields(self, fields, whitelist, blacklist):
        request = self.context.get('request')
        user = getattr(request, 'user', None)
        if user:
            from projects.permissions import AppPermissions

            if not AppPermissions.has_show_economics_info_permission(request):
                # Forecast core fields are now readonly for everyone (see serializer in models_api, not in admin tough),
                # leave them here cause vendor cannot even read them.
                blacklist += [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.job:132
==projects.permissions.taskoffer:52
==sol_users.permissions.solapplication:81
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.taskoffer:41
==projects.permissions.tasksdependency:13
    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return True
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==projects.permissions.joblink:10
==projects.permissions.tasksdependency:10
==projects.permissions.tasksolorders:55
==sol_users.permissions.company:11
==sol_users.permissions.group:11
==sol_users.permissions.user:26
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.bqa:11
==projects.permissions.hunting:11
==projects.permissions.legal:11
        'index': 10,
    }
    methods_info = defaultdict(dict)

    # filter_company_lookup = 'sharing_coverage__company'

    @classmethod
    def has_read_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_read_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.bqa:38
==projects.permissions.hunting:38
==projects.permissions.legal:38
==projects.permissions.ordering:36
        'index': 2,
        'default': False,
        'on_conflict': False,
    }

    @classmethod
    def get_permissions_filter_annotations(cls, request, *args, **kwargs):
        annotations = {}
        exclude_apply = []

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_sites.migrations.0008_auto_20171207_1730:49
==portal.migrations.0001_initial:50
==sol_users.migrations.0001_initial:152
            },
        ),
        migrations.CreateModel(
            name='RoleAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp', verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Last modification timestamp', verbose_name='modified')),
                ('action', models.CharField(help_text='The Sol action that this role can or cannot do', max_length=500, verbose_name='Action')),
                ('value', models.BooleanField(help_text='Flag indicating if the role can (True) or cannot (False) do this action', verbose_name='Action')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0008_auto_20171207_1730:15
==portal.migrations.0001_initial:16
    ]

    operations = [
        migrations.CreateModel(
            name='Revoke',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.CharField(help_text='This is the resource that this revoke represents', max_length=500, verbose_name='Resource')),
                ('controller_model_id', models.PositiveIntegerField(help_text='Generic foreign key to a record of another table: here we find the id of the referenced object (User or Group)')),
                ('revoked_model_id', models.PositiveIntegerField(help_text='Generic foreign key to a record of another table: here we find the id of the referenced object')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 11 files
==orange_sites.permissions.document:18
==orange_sites.permissions.document_tag:18
==projects.permissions.bqa:22
==projects.permissions.brise:18
==projects.permissions.economics:18
==projects.permissions.hunting:22
==projects.permissions.joborderingfilter:18
==projects.permissions.legal:22
==projects.permissions.ordering:20
==projects.permissions.sharing:18
==projects.permissions.sites:18
        'index': 1,
        'default': True,
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.permissions.document:34
==orange_sites.permissions.document_tag:34
==projects.permissions.economics:34
==projects.permissions.joborderingfilter:34
        'index': 2,
        'default': True,
        'on_conflict': False,
    }

    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    methods_info['has_object_write_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.utils.request_tracking.__init__:55
==sol_docs.__init__:82
        django_settings_sol_docs = getattr(django_settings, self.django_settings_ns, {})

        val = django_settings_sol_docs.get(attr, self.defaults[attr])

        # Cache the result
        setattr(self, attr, val)
        return val


settings = Settings()
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0023_auto_20161121_1409:2
==workflows.migrations.0006_auto_20170127_1712:2
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('workflows', '0005_auto_20161110_1019'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0009_auto_20160927_1247:2
==workflows.migrations.0005_auto_20161110_1019:2
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('workflows', '0004_auto_20160926_0749'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 24 files
==orange_sites.migrations.0008_auto_20171207_1730:2
==projects.migrations.0015_usergridcolumns:2
==projects.migrations.0019_auto_20161103_1128:2
==projects.migrations.0023_report_reportcolumns:2
==projects.migrations.0025_auto_20161128_1439:2
==projects.migrations.0034_historyitem:2
==projects.migrations.0039_auto_20170111_1619:2
==projects.migrations.0046_auto_20170217_1522:2
==projects.migrations.0048_auto_20170307_1642:2
==projects.migrations.0051_auto_20170307_1804:2
==projects.migrations.0059_auto_20170328_1437:2
==projects.migrations.0086_auto_20180510_1535:2
==projects.migrations.0086_taskoffer:2
==projects.migrations.0088_orderingdelegation:2
==projects.migrations.0096_changelog:2
==projects.migrations.0101_auto_20180704_1526:2
==projects.migrations.0110_auto_20180831_1738:2
==projects.migrations.0110_auto_20180910_1451:2
==projects.migrations.0126_FAKE_linked_jobs:2
==projects.migrations.0127_linked_jobs_add_base_sol_fields:2
==projects.migrations.0135_auto_20190110_1506:2
==sol_users.migrations.0020_historyitem:2
==workflows.migrations.0011_auto_20170328_1437:2
==workflows.migrations.0012_auto_20170629_1018:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:234
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:278
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('idopera', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('opera', models.CharField(max_length=256)),
                ('sucontrex', models.NullBooleanField()),
                ('desc_task', models.CharField(blank=True, max_length=256, null=True)),
                ('newapp', models.NullBooleanField()),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:220
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:98
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:227
            },
        ),
        migrations.CreateModel(
            name='SupervisionContract',
            fields=[
                ('idconsup', models.IntegerField(primary_key=True, serialize=False)),
                ('desc_contr', models.CharField(blank=True, max_length=256, null=True)),
                ('data_contr', models.DateField(blank=True, null=True)),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:2
==orange_hunting.migrations.0001_initial:2
==orange_legal.migrations.0001_initial:2
==orange_ordering.migrations.0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z:2
==orange_public.migrations.0002_city_operator_region_town_zone:2
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:2
==orange_sites.migrations.0002_device_devicetype_legalizationcompany_legalizationstate_legalizationyear_sharingtype_site_sitestate:2
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==orange_bqa.models:172
==orange_hunting.models:250
==orange_ordering.models:509
==orange_sharing.models:42
==orange_sites.models:355
==orange_sites.models:69
    @classmethod
    def get_external_url(cls, id):
        return cls.get_external_url_template().format(id=id)

    @property
    def external_url(self):
        return self.get_external_url(self.pk)

    @classmethod
    def get_new_external_instance_url(cls):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_docs.models_api:216
==sol_notifications.models_api:95
                            'fields': [
                                'id',
                                'username',
                                'first_name',
                                'last_name',
                                'full_name',
                            ],
                        },
                    ],
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==sol_dynamicreports.permissions.report:47
==sol_users.permissions.company:39
==sol_users.permissions.group:39
==sol_users.permissions.solapplication:82
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_dynamicreports.permissions.report:34
==sol_users.permissions.group:26
==sol_users.permissions.user:41
        'index': 1,
        'default': True,
        'on_conflict': False,
    }

    @classmethod
    def has_write_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_write_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0124_merge_20181022_1102:2
==projects.migrations.0125_merge_20181113_0942:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0122_historyitem_created_by_admin_app'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0127_merge_20181206_1204:2
==projects.migrations.0130_merge_20181127_1512:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0125_auto_20181127_1009'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0122_merge_20181001_1859:2
==projects.migrations.0123_merge_20181012_1630:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0110_auto_20180910_1451'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0131_merge_20181214_1619:2
==projects.migrations.0133_merge_20181207_2210:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0130_merge_20181207_1841'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0083_orangebqatask:18
==projects.migrations.0089_auto_20180522_1135:21
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=(projects.permissions.bqa.BqaSelfAcceptancePermissionsMixin, 'orange_bqa.selfacceptance'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0128_merge_20181106_1522:2
==projects.migrations.0128_merge_20181113_1645:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0126_auto_20181106_1421'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0135_merge_20181224_1057:2
==projects.migrations.0135_merge_20190118_1411:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0134_merge_20181219_1735'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0127_historyitem_object_repr:11
==sol_users.migrations.0030_historyitem_object_repr:11
    ]

    operations = [
        migrations.AddField(
            model_name='historyitem',
            name='object_repr',
            field=models.TextField(blank=True, null=True, verbose_name='String representation of object'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0112_notificationevent_context:2
==projects.migrations.0114_notificationeventsusers_context:2
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0106_auto_20180717_1542:7
==projects.migrations.0106_taskoffer_tasksolorder:8
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0105_remove_tasks_links_summary_view'),
    ]

    operations = [
        migrations.AddField(
            model_name='taskoffer',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0091_auto_20180523_1627:2
==projects.migrations.0091_merge_20180524_0846:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0090_merge_20180522_1205'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.task:144
==projects.permissions.taskoffer:52
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.company:0
==sol_users.permissions.company:1
from collections import defaultdict

from sol.utils.permissions import GetUserPermissionsMixin


class CompanyPermissionsMixin(GetUserPermissionsMixin):
    permission_class_info = {
        'key': 'company_permissions',
        'description': 'Companies Permissions',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.tasksolorders:56
==sol_docs.permissions.document:17
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==projects.permissions.job:102
==sol_dynamicreports.permissions.report:22
==sol_users.permissions.company:14
==sol_users.permissions.group:14
==sol_users.permissions.solapplication:63
==sol_users.permissions.user:29
    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_create_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:236
==projects.permissions.task:263
        'default': True,
        'on_conflict': False,
    }

    @classmethod
    def has_can_edit_owner_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_can_edit_owner_permission'] = {
        'description': 'Can edit owner',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==projects.permissions.job:132
==projects.permissions.task:144
==projects.permissions.taskoffer:52
==projects.permissions.tasksolorders:62
==sol_docs.permissions.document:37
==sol_notes.permissions.note:30
==sol_users.permissions.solapplication:81
        'hidden': True,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.joblink:13
==projects.permissions.task:114
==projects.permissions.tasksdependency:13
==sol_docs.permissions.document:19
    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.data_exchange.outbound.excel_delegations:392
==projects.data_exchange.outbound.excel_delegations_sol_ordering:177
==projects.data_exchange.outbound.excel_job:867
        file_data = BytesIO()
        self.wb.save(file_data)

        out = file_data.getvalue()
        return out

    def get_as_tempfile(self):
        self.compose_workbook()

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.outbound.excel_delegations:337
==projects.data_exchange.outbound.excel_job:755
            'messages': defaultdict(list),
        })

    def __del__(self):
        for file in self._files:
            if hasattr(file, 'close') and callable(file.close):
                file.close()

    def compose_workbook(self):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.async_jobs:291
==sol_users.async_jobs:83
    file_info['path'] = file_path
    file_info['name'] = filename
    file_info['delete'] = delete_file

    return True


@job('default')
@close_db_connection
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_brise.migrations.0001_initial:8
==orange_hunting.migrations.0001_initial:7
==orange_legal.migrations.0001_initial:7
class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models_api:32
==orange_legal.models_api:12
        ).order_by('-id')


def get_queryset_task_viewset(self):
    return get_queryset_task(self.queryset)


config = [
    {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0012_auto_20181106_1421:12
==projects.migrations.0126_auto_20181106_1421:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.CharField(help_text='The name of this role', max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0008_auto_20171207_1730:66
==portal.migrations.0001_initial:67
                'abstract': False,
                'verbose_name': 'Role Action',
            },
        ),
        migrations.AlterUniqueTogether(
            name='roleaction',
            unique_together=set([('action', 'role')]),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 13 files
==orange_sites.migrations.0009_auto_20180312_0928:2
==orange_sites.migrations.0010_auto_20180510_1542:2
==orange_sites.migrations.0012_auto_20181106_1421:2
==portal.migrations.0004_auto_20180604_1538:2
==portal.migrations.0005_auto_20181115_1201:2
==projects.migrations.0074_auto_20180312_0928:2
==projects.migrations.0077_job_project_year:2
==projects.migrations.0087_auto_20180510_1542:2
==projects.migrations.0126_auto_20181106_1421:2
==sol_users.migrations.0017_auto_20180312_0928:2
==sol_users.migrations.0017_auto_20180604_1538:2
==sol_users.migrations.0029_auto_20181106_1421:2
==sol_users.migrations.0034_auto_20181227_1023:2
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==orange_sites.migrations.0011_auto_20181012_1651:2
==orange_sites.migrations.0012_auto_20181127_1009:2
==projects.migrations.0124_auto_20181012_1651:2
==projects.migrations.0125_auto_20181127_1009:2
==sol_users.migrations.0022_auto_20181012_1651:2
==sol_users.migrations.0023_auto_20181127_1009:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.permissions.__init__:4
==portal.permissions.__init__:2
from sol.utils.permissions import BaseAppPermissions


class AppPermissions(BaseAppPermissions):
    permission_class_info = {
        'key': 'app_permissions',
        'description': 'General App Permissions',
        'index': 1,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 9 files
==orange_sites.permissions.document:20
==orange_sites.permissions.document_tag:20
==projects.permissions.bqa:24
==projects.permissions.economics:20
==projects.permissions.hunting:24
==projects.permissions.joborderingfilter:20
==projects.permissions.legal:24
==projects.permissions.ordering:22
==sol_users.permissions.company:38
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.permissions.document:21
==orange_sites.permissions.document_tag:21
==projects.permissions.legal:25
==projects.permissions.tasksolorders:63
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange.migrations.0001_initial:9
==sol.utils.request_tracking.migrations.0001_initial:27
class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==orange.migrations.0001_initial:5
==orange_brise.migrations.0001_initial:4
==portal.migrations.0001_initial:5
==projects.migrations.0002_auto_20160905_1415:5
==workflows.migrations.0001_initial:5
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 47 files
==projects.migrations.0007_auto_20160926_1401:2
==projects.migrations.0009_auto_20160927_1247:2
==projects.migrations.0010_auto_20160929_0942:2
==projects.migrations.0011_auto_20161006_1339:2
==projects.migrations.0012_auto_20161006_1526:2
==projects.migrations.0016_auto_20161013_1048:2
==projects.migrations.0023_auto_20161121_1409:2
==projects.migrations.0028_auto_20161214_1446:2
==projects.migrations.0030_auto_20161215_1426:2
==projects.migrations.0032_auto_20161216_1432:2
==projects.migrations.0033_auto_20161219_1604:2
==projects.migrations.0046_auto_20170210_1732:2
==projects.migrations.0047_auto_20170220_0921:2
==projects.migrations.0050_auto_20170303_1036:2
==projects.migrations.0053_auto_20170310_1647:2
==projects.migrations.0056_auto_20170314_1527:2
==projects.migrations.0058_tasksolorders:2
==projects.migrations.0059_auto_20170322_0921:2
==projects.migrations.0069_auto_20170511_1139:2
==projects.migrations.0083_auto_20180419_1805:2
==projects.migrations.0094_auto_20180606_1753:2
==projects.migrations.0096_auto_20180620_1554:2
==projects.migrations.0096_auto_20180628_1513:2
==projects.migrations.0098_auto_20180626_0910:2
==projects.migrations.0106_taskoffer_tasksolorder:2
==projects.migrations.0111_auto_20180831_1743:2
==projects.migrations.0112_auto_20180904_0927:2
==projects.migrations.0113_auto_20180907_0953:2
==projects.migrations.0126_auto_20181023_0923:2
==projects.migrations.0126_auto_20181113_0942:2
==projects.migrations.0126_documentfield:2
==projects.migrations.0128_auto_20181205_1231:2
==projects.migrations.0129_auto_20181207_0922:2
==projects.migrations.0129_auto_20181212_1144:2
==projects.migrations.0132_auto_20181206_1720:2
==projects.migrations.0138_auto_20190111_1644:2
==projects.migrations.0140_auto_20190424_1537:2
==sol_users.migrations.0029_auto_20181113_0942:2
==workflows.migrations.0003_auto_20160920_1657:2
==workflows.migrations.0004_auto_20160926_0749:2
==workflows.migrations.0005_auto_20161110_1019:2
==workflows.migrations.0006_auto_20170127_1712:2
==workflows.migrations.0007_auto_20170213_1500:2
==workflows.migrations.0008_auto_20170216_1605:2
==workflows.migrations.0008_auto_20170220_0921:2
==workflows.migrations.0010_auto_20170223_1417:2
==workflows.migrations.0014_auto_20181112_1213:2
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 28 files
==orange.migrations.0001_initial:2
==orange_sites.migrations.0008_auto_20171207_1730:2
==portal.migrations.0001_initial:2
==projects.migrations.0002_auto_20160905_1415:2
==projects.migrations.0015_usergridcolumns:2
==projects.migrations.0019_auto_20161103_1128:2
==projects.migrations.0023_report_reportcolumns:2
==projects.migrations.0025_auto_20161128_1439:2
==projects.migrations.0034_historyitem:2
==projects.migrations.0039_auto_20170111_1619:2
==projects.migrations.0046_auto_20170217_1522:2
==projects.migrations.0048_auto_20170307_1642:2
==projects.migrations.0051_auto_20170307_1804:2
==projects.migrations.0059_auto_20170328_1437:2
==projects.migrations.0086_auto_20180510_1535:2
==projects.migrations.0086_taskoffer:2
==projects.migrations.0088_orderingdelegation:2
==projects.migrations.0096_changelog:2
==projects.migrations.0101_auto_20180704_1526:2
==projects.migrations.0110_auto_20180831_1738:2
==projects.migrations.0110_auto_20180910_1451:2
==projects.migrations.0126_FAKE_linked_jobs:2
==projects.migrations.0127_linked_jobs_add_base_sol_fields:2
==projects.migrations.0135_auto_20190110_1506:2
==sol_users.migrations.0020_historyitem:2
==workflows.migrations.0001_initial:2
==workflows.migrations.0011_auto_20170328_1437:2
==workflows.migrations.0012_auto_20170629_1018:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.models:301
==orange_hunting.models:207
    on_existing_contract = models.NullBooleanField(db_column='sucontrex')
    description = models.CharField(max_length=256, blank=True, null=True, db_column='desc_task')
    new_device = models.NullBooleanField(db_column='newapp')

    def __str__(self):
        return '{0}'.format(self.name)

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.migrations.0001_initial:2
==orange_sharing.migrations.0001_initial:2
==orange_sites.migrations.0001_initial:2
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('orange_public', '0001_initial'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:50
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:69
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('idstato', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('val_perc', models.FloatField()),
                ('val_stato', models.IntegerField(blank=True, null=True)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:51
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:15
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:17
            name='Company',
            fields=[
                ('idazienda', models.IntegerField(primary_key=True, serialize=False)),
                ('nome_az', models.CharField(blank=True, max_length=256, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=256, null=True)),
                ('cap', models.CharField(blank=True, max_length=256, null=True)),
                ('comune', models.CharField(blank=True, max_length=256, null=True)),
                ('prov', models.CharField(blank=True, max_length=256, null=True)),
                ('vat', models.CharField(blank=True, max_length=256, null=True)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.models:199
==orange_hunting.models:43
==orange_ordering.models:393
==orange_sharing.models:66
@python_2_unicode_compatible
class Company(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idazienda')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='nome_az')
    address = models.CharField(max_length=256, blank=True, null=True, db_column='indirizzo')
    zip = models.CharField(max_length=256, blank=True, null=True, db_column='cap')
    town = models.CharField(max_length=256, blank=True, null=True, db_column='comune')
    city = models.CharField(max_length=256, blank=True, null=True, db_column='prov')
    vat = models.CharField(max_length=256, blank=True, null=True)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.models:161
==orange_hunting.models:239
==orange_sharing.models:31
    def __str__(self):
        return '{0}'.format(self.id)

    @classmethod
    def from_string(cls, instance_id, **kwargs):
        return cls.objects.filter(id=instance_id)

    @classmethod
    def get_external_url_template(cls):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models_api:39
==orange_sharing.models_api:6
config = [
    {
        'model': 'Task',
        'route': r'tasks',
        'serializer': {
            'fields': [
                'external_url',
                'new_external_instance_url',
                'id',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==settings.dev_template:132
==settings.dev_template_noredis:115
SOL_APPS_SETTINGS = {
    'projects': {
        'base_url': 'http://localhost:8000/static/extjs/projects/index.html',
        'routes': {
            'task': 'taskbrowser',
            'job': 'jobbrowser',
        }
    }
}
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_users.migrations.0016_auto_20180207_1416:11
==sol_users.migrations.0021_auto_20180912_1507:11
    ]

    operations = [
        migrations.AlterField(
            model_name='solapplication',
            name='django_app_name',
            field=models.TextField(help_text='The name of this Sol system application as django module', unique=True, verbose_name='Django App Name'),
        ),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_users.permissions.company:15
==sol_users.permissions.group:15
==sol_users.permissions.solapplication:64
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_create_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 8 files
==orange.models_api:41
==sol_docs.models_api:202
==sol_docs.models_api:216
==sol_docs.models_api:336
==sol_docs.models_api:498
==sol_docs.models_api:512
==sol_docs.models_api:550
==sol_notifications.models_api:95
                    'fields': [
                        'id',
                        'username',
                        'first_name',
                        'last_name',
                        'full_name',
                    ],
                },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0034_historyitem:15
==sol_users.migrations.0020_historyitem:15
    ]

    operations = [
        migrations.CreateModel(
            name='HistoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0001_initial:5
==projects.migrations.0072_auto_20170629_1018:6
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0129_auto_20181207_0922:12
==projects.migrations.0132_auto_20181206_1720:12
    ]

    operations = [
        migrations.AlterField(
            model_name='joblink',
            name='from_job',
            field=models.ForeignKey(help_text='Relation to the target job of the link.', on_delete=django.db.models.deletion.CASCADE, related_name='source_linked_jobs', to='projects.Job'),
        ),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0072_auto_20170629_1018:7
==projects.migrations.0136_auto_20190110_1542:4
==projects.migrations.0141_auto_20190208_1205:3
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.migrations.0028_auto_20161214_1446:4
==projects.migrations.0034_historyitem:5
==projects.migrations.0110_auto_20180829_1047:6
==projects.migrations.0126_documentfield:4
==sol_users.migrations.0020_historyitem:5
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.economics:9
==projects.permissions.joborderingfilter:9
        'index': 5,
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_read_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.task:115
==projects.permissions.taskoffer:42
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.jobtype:5
==sol_docs.permissions.documentcategory:11
    @classmethod
    def has_read_permission(cls, request):
        return True

    @classmethod
    def has_write_permission(cls, request):
        return True

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.brise:20
==projects.permissions.sharing:20
==projects.permissions.sites:20
==sol_users.permissions.company:38
        'on_conflict': False,
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.brise:9
==projects.permissions.ordering:11
==projects.permissions.sharing:9
==projects.permissions.sites:9
        'index': 10,
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_read_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.joblink:20
==projects.permissions.tasksolorders:97
==sol_docs.permissions.document:26
    @classmethod
    def has_write_permission(cls, request):
        return True
    methods_info['has_write_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:110
==projects.permissions.task:132
    def has_create_permission(cls, request):
        # At the moment, only scenario allowed for task creation is adding one to a job.
        return request.user and request.user.is_superuser
    methods_info['has_create_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 9 files
==projects.permissions.job:102
==projects.permissions.joblink:13
==projects.permissions.task:114
==projects.permissions.tasksdependency:13
==sol_docs.permissions.document:19
==sol_dynamicreports.permissions.report:22
==sol_users.permissions.company:14
==sol_users.permissions.group:14
==sol_users.permissions.user:29
    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.tests.test_task_views:43
==projects.tests.test_taskoffer_views:47
                                     value=True),
        ]
        self.role.actions.set(self.role_actions)
        self.user.projects_roles.set([self.role])

        self.client.force_authenticate(self.user)

    def test_list(self):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.tests.test_job_views:40
==projects.tests.test_tasksolorders_views:44
                                     value=False),
        ]
        self.role.actions.set(self.role_actions)
        self.user.projects_roles.set([self.role])

        self.client.force_authenticate(self.user)

    def test_list(self):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.tests.test_job_views:144
==projects.tests.test_task_views:147
            .values_list('pk', flat=True) \
            .distinct() \
            .count()

        filtered_path = path + '?dynamic_fields_instances__value_icontains={}'.format(sliced_field_value)
        response = self.client.get(filtered_path)

        self.assertEqual(response.status_code, status.HTTP_200_OK, msg=str(response.data))
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.outbound.excel_delegations:74
==projects.data_exchange.outbound.excel_job:777
id_field_fill = PatternFill(start_color='FFC000',
                            end_color='FFC000',
                            fill_type='solid')

readonly_field_fill = PatternFill(start_color='C5D9F1',
                                  end_color='C5D9F1',
                                  fill_type='solid')

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.data_exchange.inbound.excel_delegations_import:330
==projects.data_exchange.inbound.excel_economichypothesiscode_import:187
==projects.data_exchange.inbound.excel_economicvalue_import:269
        if self.ws.max_row:
            last_row = self.ws.max_row
        else:
            for row_count, __ in enumerate(self.ws.rows, start=1):
                last_row = row_count

        # init progress dict
        self.progress.update({
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.async_jobs:174
==projects.async_jobs:284
==sol_dynamicreports.async_jobs:59
    progress.update({
        'state': 'done',
        'total': 1,
        'progress': 1,
    })

    file_info = JobMetaDict(key=file_key)
    file_info['path'] = file_path
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_brise.models:0
==orange_public.models:0
from __future__ import unicode_literals

from django.db import models
from django.utils.encoding import python_2_unicode_compatible
from django.utils.translation import ugettext_lazy as _


@python_2_unicode_compatible
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_sites.migrations.0011_auto_20181012_1651:12
==projects.migrations.0124_auto_20181012_1651:12
==sol_users.migrations.0022_auto_20181012_1651:12
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='revoke',
            unique_together=set([('controller_model_ct', 'controller_model_id', 'revoked_model_ct', 'revoked_model_id')]),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0008_auto_20171207_1730:33
==sol_users.migrations.0001_initial:136
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, help_text='The name of this role', null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='A brief description of what this role means', null=True, verbose_name='Description')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0008_auto_20171207_1730:31
==portal.migrations.0001_initial:32
                'verbose_name': 'Revoke',
                'verbose_name_plural': 'Revokes',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_sites.migrations.0012_auto_20181127_1009:12
==projects.migrations.0125_auto_20181127_1009:12
==sol_users.migrations.0023_auto_20181127_1009:12
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='revoke',
            unique_together=set([('resource', 'controller_model_ct', 'controller_model_id', 'revoked_model_ct', 'revoked_model_id')]),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 9 files
==orange_sites.permissions.document:21
==orange_sites.permissions.document_tag:21
==projects.permissions.bqa:25
==projects.permissions.economics:21
==projects.permissions.hunting:25
==projects.permissions.joborderingfilter:21
==projects.permissions.legal:25
==projects.permissions.ordering:23
==sol_users.permissions.solapplication:82
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==orange_sites.permissions.document:23
==orange_sites.permissions.document_tag:23
==projects.permissions.economics:23
==projects.permissions.joborderingfilter:23
==sol_notes.permissions.note:33
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.utils.history.models_api:71
==sol_dynamicreports.models_api:57
                    'fields': [
                        'id',
                        'username',
                        'first_name',
                        'last_name',
                        'full_name',
                    ]
                },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==projects.async_jobs:1317
==projects.async_jobs:478
==projects.async_jobs:688
==projects.async_jobs:840
==sol.async_jobs:54
==sol_users.async_jobs:76
    progress.update({
        'state': 'done',
        'total': 1,
        'progress': 1,
    })

    file_info = JobMetaDict(key='file')
    file_info['path'] = file_path
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 26 files
==orange_sites.migrations.0008_auto_20171207_1730:4
==projects.migrations.0015_usergridcolumns:4
==projects.migrations.0019_auto_20161103_1128:4
==projects.migrations.0023_report_reportcolumns:4
==projects.migrations.0025_auto_20161128_1439:4
==projects.migrations.0034_historyitem:4
==projects.migrations.0039_auto_20170111_1619:4
==projects.migrations.0046_auto_20170217_1522:4
==projects.migrations.0048_auto_20170307_1642:4
==projects.migrations.0051_auto_20170307_1804:4
==projects.migrations.0059_auto_20170328_1437:4
==projects.migrations.0086_auto_20180510_1535:4
==projects.migrations.0086_taskoffer:4
==projects.migrations.0088_orderingdelegation:4
==projects.migrations.0096_changelog:4
==projects.migrations.0101_auto_20180704_1526:4
==projects.migrations.0110_auto_20180831_1738:4
==projects.migrations.0110_auto_20180910_1451:4
==projects.migrations.0126_FAKE_linked_jobs:4
==projects.migrations.0127_linked_jobs_add_base_sol_fields:4
==projects.migrations.0135_auto_20190110_1506:4
==projects.migrations.0147_auto_20190502_1434:2
==projects.migrations.0148_auto_20190502_1636:2
==sol_users.migrations.0020_historyitem:4
==workflows.migrations.0011_auto_20170328_1437:4
==workflows.migrations.0012_auto_20170629_1018:4
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.migrations.0001_initial:16
==orange_ordering.migrations.0003_auto_20160729_1225:15
==orange_sharing.migrations.0001_initial:15
                                (
                                  idazienda integer NOT NULL,
                                  nome_az character varying,
                                  indirizzo character varying,
                                  cap character varying,
                                  comune character varying,
                                  prov character varying,
                                  vat character varying,
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:141
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:277
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('idopera', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('opera', models.CharField(max_length=256)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:70
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:89
            },
        ),
        migrations.CreateModel(
            name='StateCondition',
            fields=[
                ('idcond', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('desccond', models.CharField(blank=True, max_length=256, null=True)),
                ('descagg', models.CharField(blank=True, max_length=256, null=True)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_ordering.models:604
==orange_sharing.models:335
==orange_sharing.models:356
    date = models.DateTimeField(blank=True, null=True, db_column='data')
    state_condition = models.ForeignKey(StateCondition, models.DO_NOTHING, db_column='idcond', blank=True, null=True)

    def __str__(self):
        return '{0}'.format(self.id)

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_ordering.models:525
==orange_sharing.models:53
==orange_sites.models:80
        return None

    @property
    def new_external_instance_url(self):
        return self.get_new_external_instance_url()

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.models:296
==orange_sharing.models:145
@python_2_unicode_compatible
class Work(models.Model):
    id = models.SmallIntegerField(primary_key=True, db_column='idopera')
    name = models.CharField(max_length=256, db_column='opera')
    work_type = models.ForeignKey('WorkType', models.DO_NOTHING, db_column='idtipo_opera', blank=True, null=True)
    on_existing_contract = models.NullBooleanField(db_column='sucontrex')
    description = models.CharField(max_length=256, blank=True, null=True, db_column='desc_task')
    new_device = models.NullBooleanField(db_column='newapp')
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models_api:153
==orange_sharing.models_api:83
                    'fields': [
                        'id',
                        'date',
                        {
                            '_name': 'state',
                            'fields': [
                                'id',
                                'description',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==settings.dev_template:113
==settings.tests:32
REDIS_HOST = 'localhost'
REDIS_PORT = '6379'
REDIS_PASSWORD = None

for queue_name, queue_config in RQ_QUEUES.items():
    queue_config.update({
        'HOST': REDIS_HOST,
        'PORT': REDIS_PORT,
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_users.models:126
==sol_users.models:209
==sol_users.models_api:443
                    'first_name',
                    'last_name',
                    'full_name',
                    'email',
                    'is_superuser',
                    'is_staff',
                    'is_owner',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_docs.models_api:583
==sol_notes.models_api:174
            'filter_backends': [
                ContentTypeDjangoFilterBackend if backend is DjangoFilterBackend else backend
                for backend in api_settings.DEFAULT_FILTER_BACKENDS
            ],
            'throttle_scope': 'default',
            'ordering_fields': [
                'id',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==sol_dynamicreports.permissions.report:36
==sol_users.permissions.company:28
==sol_users.permissions.group:28
==sol_users.permissions.user:43
        'on_conflict': False,
    }

    @classmethod
    def has_write_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_write_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.notifications.__init__:40
==sol_notes.notifications.__init__:21
                          '<br />' \
                          '{{ created_by }} created a new Note' \
                          ' {% if wait_answer %}waiting for your answer {% endif %}' \
                          'in <a href="{% abs_url link_url %}">{{ content_type_str }}</a><br />' \
                          '<br />' \
                          'Subject: {{ subject }}<br />' \
                          '{{ body }}<br />' \
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0072_auto_20170629_1018:533
==projects.migrations.0104_auto_20180710_1120:18
        ),
        migrations.AlterField(
            model_name='ganttstasktypesdependency',
            name='type',
            field=models.CharField(choices=[('finish-to-start', 'Finish to Start')], default='finish-to-start', help_text='Type of the dependency: actually always "Finish-to-Start"', max_length=254, verbose_name='Type'),
        ),
        migrations.AlterField(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0048_auto_20170307_1642:45
==projects.migrations.0086_auto_20180510_1535:31
        ),
        migrations.AlterField(
            model_name='historyitem',
            name='edit_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='history_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0126_auto_20181113_0942:19
==sol_users.migrations.0029_auto_20181113_0942:27
        ),
        migrations.AlterField(
            model_name='historyitem',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0147_auto_20190419_1708:19
==projects.migrations.0147_auto_20190502_1434:7
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0146_auto_20190403_1534'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0086_auto_20180510_1535:9
==projects.migrations.0086_auto_20180517_1230:7
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0085_auto_20180507_1401'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0094_auto_20180531_0944:7
==projects.migrations.0094_auto_20180606_1753:8
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0093_merge_20180530_1814'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0102_auto_20180704_1713:24
==projects.migrations.0147_auto_20190419_1708:9
==projects.migrations.0148_auto_20190516_1423:24
    }
]


def insert_data(apps, schema_editor):
    TaskLinkProperty = apps.get_model('projects', 'TaskLinkProperty')
    for item in DATA:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.migrations.0122_auto_20181012_1537:7
==projects.migrations.0122_historyitem_created_by_admin_app:7
==projects.migrations.0122_migrate_subscription_method:61
==projects.migrations.0122_taskblockhistory_block_job:7
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0121_auto_20180917_0959'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0054_ordering_matrix_views:20
==projects.migrations.0062_ordering_matrix_views:14
==projects.migrations.0097_ordering_matrix_views:14
            CREATE OR REPLACE VIEW ordering_hypotheses_matrix_view AS
            SELECT
                ipotesi.idipotesi AS id
                , projects_econ_hypotheses.id AS economic_hypothesis_id
                , ordering_zones_matrix_view.zone_id
                , ipotesi.idipotesi
            FROM projects_econ_hypotheses
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0056_auto_20170314_1527:8
==projects.migrations.0056_auto_20170321_1530:7
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0055_orderinghypothesesmatrix_orderingprovidersmatrix_orderingzonesmatrix'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0106_auto_20180718_1830:7
==projects.migrations.0106_taskoffer_tasksolorder:8
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0105_remove_tasks_links_summary_view'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0140_auto_20190424_1537:24
==projects.migrations.0146_auto_20190403_1534:22
        ),
        migrations.AlterField(
            model_name='documentrevision',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='projects.Document'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0096_auto_20180620_1554:8
==projects.migrations.0096_auto_20180628_1513:8
==projects.migrations.0096_tasks_links_summary_view:4
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0095_taskoffer_provider_name'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0018_auto_20161026_1227:7
==projects.migrations.0018_field_technical_name:7
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0017_auto_20161013_1742'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0125_auto_20181122_1731:2
==projects.migrations.0128_auto_20181212_1049:2
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sol.fields.mime_type_and_size_restricted
import sol_docs.models
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.orderingdelegations:18
==sol_dynamicreports.permissions.report:34
==sol_users.permissions.group:26
==sol_users.permissions.user:41
        'index': 1,
        'default': True,
        'on_conflict': False,
    }

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.brise:21
==projects.permissions.sharing:21
==projects.permissions.sites:21
==sol_users.permissions.solapplication:82
    }

    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==projects.permissions.bqa:27
==projects.permissions.economics:23
==projects.permissions.hunting:27
==projects.permissions.joborderingfilter:23
==projects.permissions.ordering:25
==projects.permissions.tasksolorders:65
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==projects.permissions.job:135
==projects.permissions.taskoffer:55
==sol_dynamicreports.permissions.report:49
==sol_users.permissions.company:41
==sol_users.permissions.group:41
==sol_users.permissions.solapplication:84
==sol_users.permissions.user:56
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    def has_object_write_permission(self, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.job:8
==projects.permissions.projects:6
==projects.permissions.task:10
    def permissions_fields(self, fields, whitelist, blacklist):
        request = self.context.get('request')
        user = getattr(request, 'user', None)
        if user:
            from projects.permissions import AppPermissions

            if not AppPermissions.has_show_economics_info_permission(request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.job:34
==projects.permissions.projects:30
==projects.permissions.task:30
                    'cost',
                    'units',
                ]

        return whitelist, blacklist

    def permissions_writable_fields(self, writable_fields, validated_data, whitelist, blacklist):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.economics:26
==projects.permissions.job:114
==projects.permissions.joborderingfilter:26
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_write_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:103
==projects.permissions.taskoffer:42
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 10 files
==projects.permissions.job:102
==projects.permissions.task:114
==projects.permissions.taskoffer:41
==projects.permissions.tasksolorders:58
==sol_dynamicreports.permissions.report:22
==sol_notes.permissions.note:26
==sol_users.permissions.company:14
==sol_users.permissions.group:14
==sol_users.permissions.solapplication:63
==sol_users.permissions.user:29
    @classmethod
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 9 files
==projects.permissions.joblink:14
==projects.permissions.taskoffer:42
==projects.permissions.tasksdependency:14
==sol_docs.permissions.document:20
==sol_dynamicreports.permissions.report:23
==sol_users.permissions.company:15
==sol_users.permissions.group:15
==sol_users.permissions.solapplication:64
==sol_users.permissions.user:30
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.tasksdependency:51
==projects.permissions.tasksolorders:104
    @classmethod
    def has_create_permission(cls, request):
        return cls.check_has_create_or_update_permission(request, request.data)
    methods_info['has_create_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.permissions.bqa:27
==projects.permissions.hunting:27
==projects.permissions.legal:27
==projects.permissions.ordering:25
==sol_notes.permissions.note:33
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.permissions.bqa:54
==projects.permissions.hunting:54
==projects.permissions.legal:54
==projects.permissions.ordering:52
==projects.permissions.task:108
                default=False,
                output_field=BooleanField(),
            )

        return annotations, exclude_apply

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.tests.test_job_views:41
==projects.tests.test_task_views:44
==projects.tests.test_taskoffer_views:48
==projects.tests.test_tasksolorders_views:45
        ]
        self.role.actions.set(self.role_actions)
        self.user.projects_roles.set([self.role])

        self.client.force_authenticate(self.user)

    def test_list(self):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.outbound.excel_delegations_sol_ordering:109
==projects.data_exchange.outbound.excel_job:758
    def __del__(self):
        for file in self._files:
            if hasattr(file, 'close') and callable(file.close):
                file.close()

    def compose_workbook(self):
        # clear any existing worksheet
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.inbound.excel_economichypothesiscode_import:227
==projects.data_exchange.inbound.excel_economicvalue_import:351
                    self.progress['messages'][row_count].append({
                        'message': 'Record UPDATED',
                        'level': 'info'
                    })

        self.progress['state'] = 'done'
        return {'state': 'processed'}
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.async_jobs:1180
==projects.async_jobs:1207
==projects.async_jobs:1234
==sol_users.async_jobs:121
    if importer.validate():
        importer.process()

    if delete_file and os.path.exists(file_path) and os.path.isfile(file_path):
        os.remove(file_path)

    return True
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.async_jobs:67
==sol_dynamicreports.async_jobs:38
    if not report.is_valid_for_get_file():
        progress.update({
            'state': 'fail',
            'messages': {
                'validation': [_('At least one filter criteria is required.')],
            },
        })
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.views:1357
==sol_users.views:91
                                              request.user.pk,
                                              queryset.query,
                                              progress_key='progress',
                                              delete_file=False)

        return Response({'transaction_key': _job.get_id()})

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0003_auto_20160729_1225:7
==orange_ordering.migrations.0003_ordersapzw01p:7
class Migration(migrations.Migration):

    dependencies = [
        ('orange_ordering', '0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z'),
    ]

    operations = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.migrations.0004_auto_20180604_1538:16
==projects.migrations.0072_auto_20170629_1018:1190
            model_name='role',
            name='description',
            field=models.TextField(blank=True, help_text='A brief description of what this role means', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==portal.migrations.0004_auto_20180604_1538:19
==projects.migrations.0074_auto_20180312_0928:19
==sol_users.migrations.0017_auto_20180604_1538:19
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.TextField(blank=True, help_text='The name of this role', null=True, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_sites.migrations.0008_auto_20171207_1730:68
==portal.migrations.0001_initial:69
==projects.migrations.0025_auto_20161128_1439:33
            },
        ),
        migrations.AlterUniqueTogether(
            name='roleaction',
            unique_together=set([('action', 'role')]),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.permissions.__init__:7
==sol_users.permissions.__init__:30
class AppPermissions(BaseAppPermissions):
    permission_class_info = {
        'key': 'app_permissions',
        'description': 'General App Permissions',
        'index': 1,
    }
    methods_info = defaultdict(dict)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 8 files
==orange_sites.permissions.document:10
==orange_sites.permissions.document_tag:10
==projects.permissions.brise:10
==projects.permissions.economics:10
==projects.permissions.joborderingfilter:10
==projects.permissions.ordering:12
==projects.permissions.sharing:10
==projects.permissions.sites:10
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_read_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:3
==sol.api.lib:3
import copy
import inspect
from collections import namedtuple
from importlib import import_module

from django.apps import apps as django_apps
from django.utils import six
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0001_initial:447
==workflows.migrations.0001_initial:57
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(default='', max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('index', models.IntegerField(default=0, verbose_name='Index')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.task:127
==workflows.permissions:20
        'default': True,
        'on_conflict': False,
    }

    @classmethod
    def has_create_permission(cls, request):
        # TODO: useless since now the API ViewSet is ReadOnly.
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:234
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:142
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('idopera', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('opera', models.CharField(max_length=256)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:128
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:263
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('idvisita', models.IntegerField(primary_key=True, serialize=False)),
                ('commento', models.TextField(blank=True, null=True)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:37
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:55
            },
        ),
        migrations.CreateModel(
            name='LastVisit',
            fields=[
                ('idvisita', models.IntegerField(primary_key=True, serialize=False)),
                ('commento', models.TextField(blank=True, null=True)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.models:161
==orange_hunting.models:239
==orange_ordering.models:479
==orange_sharing.models:31
    def __str__(self):
        return '{0}'.format(self.id)

    @classmethod
    def from_string(cls, instance_id, **kwargs):
        return cls.objects.filter(id=instance_id)

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.models_api:113
==orange_sharing.models_api:91
                            ]
                        },
                    ]
                },
            ],
        },
        'viewset': {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_docs.permissions.document:46
==sol_notes.permissions.note:66
    def has_object_retrieve_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_retrieve_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==projects.migrations.0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice:26
==projects.migrations.0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice:36
==projects.migrations.0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice:46
==projects.migrations.0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice:56
==projects.migrations.0082_orangebrisedata_orangehuntingtask_orangeorderingordertask_orangesharingtask_orangesitedevice:66
==sol_users.migrations.0023_soluser:52
            fields=[
            ],
            options={
                'indexes': [],
                'proxy': True,
            },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0001_initial:340
==sol_users.migrations.0001_initial:119
            },
        ),
        migrations.CreateModel(
            name='Revoke',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0072_auto_20170629_1018:1191
==sol_users.migrations.0017_auto_20180604_1538:17
            name='description',
            field=models.TextField(blank=True, help_text='A brief description of what this role means', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0048_auto_20170307_1642:42
==projects.migrations.0086_auto_20180510_1535:17
            model_name='historyitem',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='historyitem',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0003_auto_20160908_1456:11
==projects.migrations.0076_auto_20180320_1128:11
    ]

    operations = [
        migrations.AlterField(
            model_name='job',
            name='projects',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0083_orangebqatask:18
==projects.migrations.0089_auto_20180522_1135:21
==projects.migrations.0121_auto_20180917_0959:18
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0006_auto_20160926_0755:12
==projects.migrations.0010_auto_20160929_0942:13
    ]

    operations = [
        migrations.AlterModelManagers(
            name='job',
            managers=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0046_auto_20170217_1522:13
==projects.migrations.0051_auto_20170307_1804:13
    ]

    operations = [
        migrations.AlterField(
            model_name='job',
            name='owner',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0001_initial:2
==projects.migrations.0110_auto_20180829_1047:2
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0072_auto_20170629_1018:1133
==projects.migrations.0110_auto_20180829_1047:38
        ),
        migrations.AlterField(
            model_name='report',
            name='owner',
            field=models.ForeignKey(help_text='Repference to the user who created this report', on_delete=django.db.models.deletion.PROTECT, related_name='projects_report_rel', to=settings.AUTH_USER_MODEL),
        ),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.migrations.0086_auto_20180510_1535:13
==projects.migrations.0110_auto_20180910_1451:13
==projects.migrations.0126_auto_20181113_0942:12
    ]

    operations = [
        migrations.AlterField(
            model_name='historyitem',
            name='content_type',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0056_auto_20170314_1527:25
==projects.migrations.0058_auto_20170324_0927:30
        ),
        migrations.AlterField(
            model_name='economichypothesis',
            name='code',
            field=models.TextField(null=True, unique=True, verbose_name='Code'),
        ),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange.migrations.0001_initial:30
==projects.migrations.0086_taskoffer:29
            ],
            options={
                'abstract': False,
            },
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0011_auto_20161006_1339:12
==projects.migrations.0012_auto_20161006_1526:12
    ]

    operations = [
        migrations.AlterField(
            model_name='task',
            name='company',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0097_auto_20180619_1340:11
==projects.migrations.0106_auto_20180718_1830:11
    ]

    operations = [
        migrations.AlterField(
            model_name='ganttstasktypesdependency',
            name='type',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 10 files
==projects.migrations.0008_auto_20160927_0743:11
==projects.migrations.0013_auto_20161007_1715:11
==projects.migrations.0019_auto_20161028_1601:11
==projects.migrations.0028_auto_20161213_1431:11
==projects.migrations.0038_auto_20170110_1724:11
==projects.migrations.0073_auto_20180215_0858:11
==projects.migrations.0074_auto_20180312_0928:12
==projects.migrations.0075_auto_20180315_1503:11
==projects.migrations.0104_auto_20180710_1120:11
==projects.migrations.0134_auto_20181227_1023:11
    ]

    operations = [
        migrations.AlterField(
            model_name='field',
            name='type',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0032_auto_20161216_1432:12
==projects.migrations.0033_auto_20161219_1604:12
    ]

    operations = [
        migrations.AlterField(
            model_name='revoke',
            name='controller_model_ct',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0125_auto_20181122_1731:24
==projects.migrations.0128_auto_20181212_1049:22
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp', verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Last modification timestamp', verbose_name='modified')),
                ('deleted', models.DateTimeField(editable=False, null=True, verbose_name='deleted')),
                ('filename', models.CharField(editable=False, max_length=254)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.permissions.brise:9
==projects.permissions.ordering:11
==projects.permissions.sharing:9
==projects.permissions.sites:9
==sol_users.permissions.user:25
        'index': 10,
    }
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.tasksolorders:59
==sol_dynamicreports.permissions.report:23
==sol_users.permissions.solapplication:64
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.joblink:48
==projects.permissions.tasksolorders:105
    def has_create_permission(cls, request):
        return cls.check_has_create_or_update_permission(request, request.data)
    methods_info['has_create_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.taskoffer:49
==projects.permissions.tasksolorders:98
    def has_write_permission(cls, request):
        return True
    methods_info['has_write_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:113
==sol_users.permissions.solapplication:73
    methods_info['has_create_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.job:63
==projects.permissions.task:72
    }
    methods_info = {
        **ProjectsDocumentContainerPermissionsMixin.methods_info,
        **NoteContainerPermissionsMixin.methods_info,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.permissions.company:18
==projects.permissions.job:74
==projects.permissions.task:88
==projects.permissions.taskoffer:36
        'index': 1,
        'default': False,
        'on_conflict': True,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.permissions.joblink:14
==projects.permissions.taskoffer:42
==projects.permissions.tasksdependency:14
==sol_docs.permissions.document:20
==sol_notes.permissions.note:27
    def has_read_permission(cls, request):
        return True
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.permissions.joblink:23
==projects.permissions.tasksdependency:24
    methods_info['has_write_permission'] = {
        'hidden': True,
    }

    @classmethod
    def check_has_create_or_update_permission(cls, request, data):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.tests.settings.preprod:12
==projects.tests.settings.prod:11
for queue_name, queue_config in RQ_QUEUES.items():
    queue_config.update({
        'PORT': REDIS_PORT,
    })

CACHES["default"]["LOCATION"] = "redis://{}:{}/1".format(REDIS_HOST, REDIS_PORT)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==projects.tests.test_job_views:25
==projects.tests.test_task_views:26
==projects.tests.test_taskoffer_views:22
==projects.tests.test_tasksolorders_views:23
            ) \
            .order_by('?') \
            .first()

        self.role = self.user.projects_roles.create(name='test_{}'.format(get_random_string()))
        self.role_actions = [
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.data_exchange.outbound.excel_delegations:340
==projects.data_exchange.outbound.excel_delegations_sol_ordering:109
    def __del__(self):
        for file in self._files:
            if hasattr(file, 'close') and callable(file.close):
                file.close()

    def compose_workbook(self):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.models:765
==sol_docs.models:468
                            null=True,
                            blank=True,
                            related_name='children',
                            db_index=True,
                            help_text='Reference to the parent project for this project')

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.views:2595
==sol_users.views:99
    @parser_classes((MultiPartParser, FormParser,))
    def import_excel(self, request, *args, **kwargs):
        datafile = request.data.get('file')
        if not datafile:
            raise ParseError(_('Data file is missing.'))

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.migrations.0001_initial:112
==orange_ordering.migrations.0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z:153
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.IntegerField(db_column='idpersona', primary_key=True, serialize=False)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:132
==orange_ordering.migrations.0005_orderlastvisit_ordertask_ordervisit:16
            fields=[
                ('idvisita', models.IntegerField(primary_key=True, serialize=False)),
                ('commento', models.TextField(blank=True, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:41
==orange_ordering.migrations.0005_orderlastvisit_ordertask_ordervisit:45
            fields=[
                ('idvisita', models.IntegerField(primary_key=True, serialize=False)),
                ('commento', models.TextField(blank=True, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.permissions.__init__:5
==sol_users.permissions.__init__:30
class AppPermissions(BaseAppPermissions):
    permission_class_info = {
        'key': 'app_permissions',
        'description': 'General App Permissions',
        'index': 1,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.permissions.__init__:28
==projects.permissions.taskoffer:245
        'index': 20,
        'default': False,
        'on_conflict': False,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==portal.permissions.__init__:18
==projects.permissions.taskoffer:170
        'index': 10,
        'default': False,
        'on_conflict': False,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_sites.migrations.0012_auto_20181106_1421:15
==projects.migrations.0126_auto_20181106_1421:15
==sol_users.migrations.0029_auto_20181106_1421:28
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.CharField(help_text='The name of this role', max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_sites.migrations.0008_auto_20171207_1730:19
==portal.migrations.0001_initial:20
==sol_users.migrations.0001_initial:122
            name='Revoke',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.CharField(help_text='This is the resource that this revoke represents', max_length=500, verbose_name='Resource')),
                ('controller_model_id', models.PositiveIntegerField(help_text='Generic foreign key to a record of another table: here we find the id of the referenced object (User or Group)')),
                ('revoked_model_id', models.PositiveIntegerField(help_text='Generic foreign key to a record of another table: here we find the id of the referenced object')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.migrations.0008_auto_20171207_1730:33
==portal.migrations.0001_initial:34
==projects.migrations.0001_initial:356
==sol_users.migrations.0001_initial:136
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==orange_sites.migrations.0010_auto_20180510_1542:12
==portal.migrations.0004_auto_20180604_1538:12
==portal.migrations.0005_auto_20181115_1201:13
==projects.migrations.0087_auto_20180510_1542:12
==sol_users.migrations.0015_auto_20170928_1805:11
==sol_users.migrations.0017_auto_20180604_1538:12
==sol_users.migrations.0034_auto_20181227_1023:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='description',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.migrations.0009_auto_20180312_0928:12
==orange_sites.migrations.0012_auto_20181106_1421:12
==projects.migrations.0126_auto_20181106_1421:12
==sol_users.migrations.0017_auto_20180312_0928:12
    ]

    operations = [
        migrations.AlterField(
            model_name='role',
            name='name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 9 files
==orange_sites.permissions.document:11
==orange_sites.permissions.document_tag:11
==projects.permissions.brise:11
==projects.permissions.economics:11
==projects.permissions.joborderingfilter:11
==projects.permissions.ordering:13
==projects.permissions.orderingdelegations:11
==projects.permissions.sharing:11
==projects.permissions.sites:11
    methods_info = defaultdict(dict)

    @classmethod
    def has_read_permission(cls, request):
        return cls.get_user_permission_for_method(request)
    methods_info['has_read_permission'] = {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 19 files
==orange_sites.permissions.document:23
==orange_sites.permissions.document_tag:23
==projects.permissions.bqa:27
==projects.permissions.economics:23
==projects.permissions.hunting:27
==projects.permissions.job:135
==projects.permissions.joborderingfilter:23
==projects.permissions.legal:27
==projects.permissions.ordering:25
==projects.permissions.task:147
==projects.permissions.taskoffer:55
==projects.permissions.tasksolorders:65
==sol_docs.permissions.document:40
==sol_dynamicreports.permissions.report:49
==sol_notes.permissions.note:33
==sol_users.permissions.company:41
==sol_users.permissions.group:41
==sol_users.permissions.solapplication:84
==sol_users.permissions.user:56
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.models:386
==orange_sites.models:492
==projects.permissions.jobtype:5
==sol_docs.permissions.documentcategory:11
    @classmethod
    def has_read_permission(cls, request):
        return True

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 11 files
==orange.models_api:41
==sol.utils.history.models_api:71
==sol_docs.models_api:202
==sol_docs.models_api:216
==sol_docs.models_api:336
==sol_docs.models_api:498
==sol_docs.models_api:512
==sol_docs.models_api:550
==sol_dynamicreports.models_api:57
==sol_notifications.models_api:95
==sol_users.models_api:362
                    'fields': [
                        'id',
                        'username',
                        'first_name',
                        'last_name',
                        'full_name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol.utils.request_tracking.__init__:46
==sol_docs.__init__:73
==sol_dynamicreports.__init__:28
    def __init__(self, defaults=None, django_settings_ns=None):
        self.defaults = defaults or DEFAULTS
        self.django_settings_ns = django_settings_ns or DJANGO_SETTINGS_NAMESPACE

    def __getattr__(self, attr):
        if attr not in self.defaults:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==projects.permissions.joblink:16
==projects.permissions.task:117
==projects.permissions.taskoffer:44
==projects.permissions.tasksdependency:16
==sol.utils.permissions:426
==sol_docs.permissions.document:22
    methods_info['has_read_permission'] = {
        'hidden': True,
    }

    @classmethod
    def has_write_permission(cls, request):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.views:2855
==sol.api.mixins:489
        return response

    @action(detail=False,
            methods=['GET'],
            authentication_classes=[QueryStringTokenAuthentication] + api_settings.DEFAULT_AUTHENTICATION_CLASSES)
    def export_async(self, request, *args, **kwargs):
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.api.lib.no-related-mixin:47
==sol.api.mixins:152
            field_name,
            model_class
        )

        view_name = field_kwargs.get('view_name', None)
        if view_name:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 9 files
==projects.async_jobs:1317
==projects.async_jobs:174
==projects.async_jobs:284
==projects.async_jobs:478
==projects.async_jobs:688
==projects.async_jobs:840
==sol.async_jobs:54
==sol_dynamicreports.async_jobs:59
==sol_users.async_jobs:76
    progress.update({
        'state': 'done',
        'total': 1,
        'progress': 1,
    })

sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==projects.migrations.0001_initial:117
==projects.migrations.0001_initial:219
==projects.migrations.0001_initial:23
==projects.migrations.0001_initial:424
==projects.migrations.0001_initial:447
==workflows.migrations.0001_initial:21
==workflows.migrations.0001_initial:57
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(default='', max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==workflows.migrations.0008_auto_20170220_0921:12
==workflows.migrations.0010_auto_20170223_1417:12
    ]

    operations = [
        migrations.AlterField(
            model_name='workflowhistory',
            name='workflow_milestone',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==workflows.migrations.0003_auto_20160920_1657:12
==workflows.migrations.0004_auto_20160926_0749:12
==workflows.migrations.0005_auto_20161110_1019:12
==workflows.migrations.0014_auto_20181112_1213:12
    ]

    operations = [
        migrations.AlterField(
            model_name='workflowhistory',
            name='job_current_history',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==projects.permissions.orderingdelegations:18
==sol_dynamicreports.permissions.report:34
==sol_users.permissions.group:26
==sol_users.permissions.user:41
==workflows.permissions:19
        'index': 1,
        'default': True,
        'on_conflict': False,
    }

    @classmethod
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.migrations.0001_initial:127
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:50
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:69
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_hunting.migrations.0001_initial:12
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:11
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:13
==sol_users.migrations.0001_initial:31
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:112
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:241
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('idattivita', models.IntegerField(primary_key=True, serialize=False)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_hunting.models:262
==orange_ordering.models:527
==orange_sharing.models:55
==orange_sites.models:82
    @property
    def new_external_instance_url(self):
        return self.get_new_external_instance_url()

    class Meta:
        managed = False
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.models:315
==orange_hunting.models:161
==orange_ordering.models:435
==orange_sharing.models:310
@python_2_unicode_compatible
class WorkType(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idtipo_opera')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='tipo_opera')
    code = models.CharField(max_length=5, blank=True, null=True, db_column='codice_opera')
    reference = models.CharField(max_length=256, blank=True, null=True, db_column='riferimento')
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.models_api:57
==orange_bqa.models_api:79
==orange_sharing.models_api:76
                    'fields': [
                        'id',
                        'name',
                    ]
                },
                {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.models_api:48
==orange_sharing.models_api:63
                                {
                                    '_name': 'zone',
                                    'fields': [
                                        'id',
                                        'zone_code',
                                    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_notifications.models_api:96
==sol_users.models_api:389
==sol_users.models_api:403
                'id',
                'username',
                'first_name',
                'last_name',
                'full_name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol_notes.models_api:155
==sol_users.models_api:507
                        'read_only': False,
                        'write_only': False,
                        'allow_empty': True,
                        'required': False,
                    },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==sol_docs.models_api:252
==sol_docs.models_api:373
==sol_notes.models_api:173
        'permission_classes': api_settings.DEFAULT_PERMISSION_CLASSES + [DRYPermissions, ],
        'filter_backends': [
            ContentTypeDjangoFilterBackend if backend is DjangoFilterBackend else backend
            for backend in api_settings.DEFAULT_FILTER_BACKENDS
        ],
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.notifications.overrides:26
==sol_notifications.utils:265
            events.append({
                'technical_name': event_technical_name,
                'default_subscription_method': event_default_method,
                'name': event_name,
                'description': event_description,
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0050_auto_20170303_1036:17
==projects.migrations.0053_auto_20170310_1647:17
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0006_auto_20160926_0755:19
==projects.migrations.0010_auto_20160929_0942:19
            ],
        ),
        migrations.AlterModelManagers(
            name='task',
            managers=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==projects.migrations.0125_auto_20181122_1731:33
==projects.migrations.0128_auto_20181212_1049:29
                ('approval_status', models.CharField(blank=True, choices=[('approved', 'Approved'), ('rejected', 'Rejected')], default='', max_length=54, verbose_name='Approval Status')),
                ('approval', models.DateTimeField(editable=False, null=True, verbose_name='Approval Date Time')),
                ('file', sol.fields.mime_type_and_size_restricted.MimeTypeAndSizeRestrictedFileField(max_length=254, upload_to=sol_docs.models.get_file_path)),
                ('size', models.PositiveIntegerField(default=0, editable=False)),
                ('thumbnail_file', models.ImageField(editable=False, max_length=254, upload_to=sol_docs.models.get_thumbnail_path)),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.permissions.job:29
==projects.permissions.projects:15
==projects.permissions.task:25
                blacklist += [
                    'planned_date_start',
                    'planned_date_end',
                    'planned_cost',
                    'planned_units',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 12 files
==projects.permissions.brise:23
==projects.permissions.job:135
==projects.permissions.sharing:23
==projects.permissions.sites:23
==projects.permissions.task:147
==projects.permissions.taskoffer:55
==projects.permissions.tasksolorders:65
==sol_docs.permissions.document:40
==sol_dynamicreports.permissions.report:49
==sol_notes.permissions.note:33
==sol_users.permissions.group:41
==sol_users.permissions.user:56
    def has_object_read_permission(self, request):
        return self.has_read_permission(request)
    methods_info['has_object_read_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.data_exchange.inbound.excel_economichypothesiscode_import:185
==projects.data_exchange.inbound.excel_economicvalue_import:267
==projects.data_exchange.inbound.excel_job_import:673
        self.progress['state'] = 'length_calculation'
        self.ws.calculate_dimension(force=True)
        if self.ws.max_row:
            last_row = self.ws.max_row
        else:
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==projects.async_jobs:1202
==projects.async_jobs:1229
==sol_users.async_jobs:115
                                      serializer_kwargs={
                                          'context': {
                                               'request': request,
                                          }
                                      })
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models_api:196
==sol_notifications.models_api:103
                    ],
                },
            ],
        },
        'viewset': {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_hunting.models_api:109
==orange_hunting.models_api:89
==orange_hunting.models_api:96
==projects.models_api:188
        'fields': [
            'id',
            'name',
        ],
    },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.migrations.0001_initial:119
==orange_ordering.migrations.0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z:159
                ('first_name', models.CharField(db_column='nome', max_length=256, verbose_name='First Name')),
                ('last_name', models.CharField(db_column='cognome', max_length=256, verbose_name='Last Name')),
                ('email', models.CharField(db_column='persone_email', max_length=256, verbose_name='Email')),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_ordering.migrations.0002_budget_ccdnf_contract_delegation_hypothesys_hypothesyspoints_order_ordertype_person_point_provider_z:194
==orange_public.migrations.0002_city_operator_region_town_zone:69
==projects.migrations.0001_initial:443
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:119
==orange_ordering.migrations.0005_orderlastvisit_ordertask_ordervisit:32
                ('riferimento', models.CharField(blank=True, max_length=256, null=True)),
                ('data_att', models.DateTimeField(blank=True, null=True)),
                ('val_std', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models:221
==orange_ordering.models:469
@python_2_unicode_compatible
class Task(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idattivita')
    reference = models.CharField(max_length=256, blank=True, null=True, db_column='riferimento')
    task_date = models.DateTimeField(blank=True, null=True, db_column='data_att')
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==orange_hunting.models_api:109
==orange_hunting.models_api:89
==orange_hunting.models_api:96
==orange_ordering.models_api:56
==projects.models_api:188
==sol_users.models_api:456
                        'fields': [
                            'id',
                            'name',
                        ],
                    },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.models_api:55
==sol_docs.models_api:423
        'serializer': {
            'fields': [
                'id',
                'name',
            ],
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_ordering.migrations.0001_initial:255
==orange_public.migrations.0001_initial:73
==orange_sites.migrations.0001_initial:166
                                )
                                WITH (
                                  OIDS=FALSE
                                );"""),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.migrations.0011_auto_20181012_1651:15
==portal.migrations.0005_auto_20181115_1201:28
==projects.migrations.0124_auto_20181012_1651:15
==sol_users.migrations.0022_auto_20181012_1651:15
        migrations.AlterUniqueTogether(
            name='revoke',
            unique_together=set([('controller_model_ct', 'controller_model_id', 'revoked_model_ct', 'revoked_model_id')]),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_sites.migrations.0009_auto_20180312_0928:16
==projects.migrations.0074_auto_20180312_0928:21
            model_name='role',
            name='name',
            field=models.TextField(blank=True, help_text='The name of this role', null=True, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9_]+$', message='Valid characters are lowercase alphanumeric and underscore ("_") only.')], verbose_name='Name'),
        ),
    ]
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_sites.permissions.__init__:8
==portal.permissions.__init__:6
==projects.permissions.__init__:30
==sol_users.permissions.__init__:31
    permission_class_info = {
        'key': 'app_permissions',
        'description': 'General App Permissions',
        'index': 1,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 7 files
==orange_sites.permissions.document:39
==orange_sites.permissions.document_tag:39
==projects.permissions.economics:39
==projects.permissions.job:141
==projects.permissions.joborderingfilter:39
==sol_users.permissions.company:47
==sol_users.permissions.user:62
    def has_object_write_permission(self, request):
        return self.has_write_permission(request)
    methods_info['has_object_write_permission'] = {
        'hidden': True,
    }
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 14 files
==orange.models_api:41
==sol.utils.history.models_api:71
==sol_docs.models_api:202
==sol_docs.models_api:216
==sol_docs.models_api:336
==sol_docs.models_api:498
==sol_docs.models_api:512
==sol_docs.models_api:550
==sol_dynamicreports.models_api:57
==sol_notes.models_api:119
==sol_notes.models_api:71
==sol_notes.models_api:98
==sol_notifications.models_api:95
==sol_users.models_api:362
                    'fields': [
                        'id',
                        'username',
                        'first_name',
                        'last_name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==sol.utils.export:64
==sol_users.async_jobs:49
        export_serializer_mixin=ExportModelViewSetMixin.export_accepted_media_types[media_type].get(
            'export_serializer_mixin'
        ),
        context=export_renderer_context
    )
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:234
==orange_hunting.migrations.0001_initial:233
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_bqa.models_api:55
==orange_hunting.models_api:141
                {
                    '_name': 'work_type',
                    'fields': [
                        'id',
                        'name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_ordering.migrations.0003_auto_20160729_1225:50
==orange_sharing.migrations.0001_initial:65
                                (
                                  idtipo_opera integer NOT NULL,
                                  tipo_opera character varying,
                                  codice_opera character varying(5),
                                  riferimento character varying,
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 6 files
==orange_bqa.migrations.0001_initial:48
==orange_ordering.migrations.0003_auto_20160729_1225:44
==orange_public.migrations.0001_initial:48
==orange_public.migrations.0001_initial:62
==orange_sharing.migrations.0001_initial:44
==orange_sites.migrations.0001_initial:165
                                      ON UPDATE NO ACTION ON DELETE NO ACTION
                                )
                                WITH (
                                  OIDS=FALSE
                                );"""),
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.migrations.0001_initial:40
==orange_ordering.migrations.0003_auto_20160729_1225:36
==orange_sharing.migrations.0001_initial:36
                                (
                                  idconsup integer NOT NULL,
                                  desc_contr character varying,
                                  data_contr date,
                                  idazsup integer,
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:250
==orange_hunting.migrations.0001_initial:249
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:156
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:296
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.migrations.0001_initial:219
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:128
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:263
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_hunting.migrations.0001_initial:203
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:112
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:241
==projects.migrations.0001_initial:371
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.migrations.0002_audittask_checklist_company_deploymenttype_deploymenttypegroup_equipmenttype_equipmenttypegroup_proj:220
==orange_hunting.migrations.0001_initial:188
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:98
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:227
            },
        ),
        migrations.CreateModel(
            name='SupervisionContract',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.migrations.0001_initial:164
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:106
            },
        ),
        migrations.CreateModel(
            name='Supervision',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.migrations.0001_initial:148
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:70
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:89
            },
        ),
        migrations.CreateModel(
            name='StateCondition',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.migrations.0001_initial:98
==orange_ordering.migrations.0004_company_lastvisit_state_statecondition_stategroup_supervisioncontract_task_visit_work_worktype:37
==orange_sharing.migrations.0002_company_counterpart_lastvisit_state_statecondition_supervision_supervisioncontract_task_visit_work_w:55
            },
        ),
        migrations.CreateModel(
            name='LastVisit',
            fields=[
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.models:246
==orange_hunting.models:142
==orange_ordering.models:418
==orange_sharing.models:110
@python_2_unicode_compatible
class SupervisionContract(models.Model):
    id = models.IntegerField(primary_key=True, db_column='idconsup')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='desc_contr')
    contract_date = models.DateField(blank=True, null=True, db_column='data_contr')
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.models:178
==orange_ordering.models:553
==orange_sharing.models:289
@python_2_unicode_compatible
class State(models.Model):
    id = models.SmallIntegerField(primary_key=True, db_column='idstato')
    percentual_value = models.FloatField(db_column='val_perc')
    state_value = models.IntegerField(blank=True, null=True, db_column='val_stato')
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.models:296
==orange_ordering.models:452
==orange_sharing.models:145
@python_2_unicode_compatible
class Work(models.Model):
    id = models.SmallIntegerField(primary_key=True, db_column='idopera')
    name = models.CharField(max_length=256, db_column='opera')
    work_type = models.ForeignKey('WorkType', models.DO_NOTHING, db_column='idtipo_opera', blank=True, null=True)
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_hunting.models:273
==orange_ordering.models:576
==orange_sharing.models:91
@python_2_unicode_compatible
class StateCondition(models.Model):
    id = models.SmallIntegerField(primary_key=True, db_column='idcond')
    name = models.CharField(max_length=256, blank=True, null=True, db_column='desccond')
    description = models.CharField(max_length=256, blank=True, null=True, db_column='descagg')
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.models_api:57
==orange_bqa.models_api:79
==orange_sharing.models_api:76
==projects.models_api:226
                    'fields': [
                        'id',
                        'name',
                    ]
                },
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==orange_hunting.models_api:135
==orange_sharing.models_api:74
                {
                    '_name': 'work',
                    'fields': [
                        'id',
                        'name',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 4 files
==orange_bqa.models_api:48
==orange_hunting.models_api:55
==orange_sharing.models_api:63
==orange_sites.models_api:67
                                {
                                    '_name': 'zone',
                                    'fields': [
                                        'id',
                                        'zone_code',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 5 files
==orange_bqa.models_api:102
==orange_bqa.models_api:73
==orange_bqa.models_api:91
==orange_sharing.models_api:70
==orange_sites.models_api:49
                            ]
                        },
                    ]
                },
                {
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 3 files
==orange_bqa.models_api:34
==orange_hunting.models_api:43
==orange_sharing.models_api:10
        'serializer': {
            'fields': [
                'external_url',
                'new_external_instance_url',
                'id',
sol_notifications/models.py:1: [R0801(duplicate-code), ] Similar lines in 2 files
==settings.prod:141
==settings.tests:36
for queue_name, queue_config in RQ_QUEUES.items():
    queue_config.update({
        'HOST': REDIS_HOST,
        'PORT': REDIS_PORT,
        'PASSWORD': REDIS_PASSWORD,

-----------------------------------
Your code has been rated at 1.01/10

